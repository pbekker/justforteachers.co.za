<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="btnInstall.Text" xml:space="preserve">
    <value>Download &amp; Install in one Step</value>
  </data>
  <data name="btnRemoveInstaller.Text" xml:space="preserve">
    <value>Remove this Installer</value>
  </data>
  <data name="DNNVersionCompatible.Text" xml:space="preserve">
    <value>Your DotNetNuke version ({0}) is compatible.</value>
  </data>
  <data name="DNNVersionNotCompatible.Text" xml:space="preserve">
    <value>Your DotNetNuke version ({0}) is not compatible. You need DotNetNuke 6 or newer.</value>
  </data>
  <data name="DotNetVersionCompatible.Text" xml:space="preserve">
    <value>Your .NET version ({0}) is compatible.</value>
  </data>
  <data name="DotNetVersionNotCompatible.Text" xml:space="preserve">
    <value>Your .NET version ({0}) is not compatible. You need .NET framework 4 or higher. &lt;a href='http://swisschecklist.com/en/wx37zaqa/Change-.NET-Framework-version-in-a-web-site' target='_blank'&gt;Here are some instructions to fix this&lt;/a&gt;.</value>
  </data>
  <data name="lblAlreadyInstalled.Text" xml:space="preserve">
    <value>Tips on Getting Started</value>
  </data>
  <data name="lblAlreadyInstalledTitle.Text" xml:space="preserve">
    <value>2SexyContent is installed. You can insert it now like any other DotNetNuke module. </value>
  </data>
  <data name="lblCheckRequirements.Text" xml:space="preserve">
    <value>Requirements</value>
  </data>
  <data name="SQLVersionCompatible.Text" xml:space="preserve">
    <value>Your SQL Server version ({0}) is compatible.</value>
  </data>
  <data name="SQLVersionNotCompatible.Text" xml:space="preserve">
    <value>Your SQL Server version ({0}) is not compatible. You need SQL Server 2008 (10.00) or later. &lt;a href='http://swisschecklist.com/en/00fiktgq/Upgrade-a-DotNetNuke-Database-from-SQL-Server-2005-to-2008-(optionally-2008-R2)' target='_blank'&gt;Here are some instructions to fix this&lt;/a&gt;.</value>
  </data>
  <data name="btnAddToCommonModules.Text" xml:space="preserve">
    <value>Add to Common Modules</value>
  </data>
  <data name="btnInstallDemoPackage.Text" xml:space="preserve">
    <value>Install Demo Package</value>
  </data>
  <data name="PleaseUpdateInstaller.Text" xml:space="preserve">
    <value>Please update the 2SexyContent installer to version {0} to continue.</value>
  </data>
  <data name="hlkInstallManually.Text" xml:space="preserve">
    <value>Instructions to install manually</value>
  </data>
  <data name="PleaseLogin.Text" xml:space="preserve">
    <value>Please login as host user to continue.</value>
  </data>
  <data name="lblAddToCommonModulesTitle.Text" xml:space="preserve">
    <value>2. Add 2SexyContent to Common Modules</value>
  </data>
  <data name="lblAlreadyAddedToCommonModules.Text" xml:space="preserve">
    <value>&lt;br /&gt;&lt;br /&gt;You have already added 2SexyContent to the common modules category.</value>
  </data>
  <data name="lblChooseVersion.Text" xml:space="preserve">
    <value>Choose version:</value>
  </data>
  <data name="lblDiscover.Text" xml:space="preserve">
    <value>1. Discover 2SexyContent</value>
  </data>
  <data name="lblDiscoverText.Text" xml:space="preserve">
    <value>Watch the videos on &lt;a href="http://2sexycontent.org" target="_blank"&gt;2SexyContent.org&lt;/a&gt;</value>
  </data>
  <data name="lblDownload.Text" xml:space="preserve">
    <value>Download</value>
  </data>
  <data name="lblNotInstalledIntro.Text" xml:space="preserve">
    <value>2SexyContent helps create attractive, designed and animated content. See &lt;a target="_blank" href="http://2sexycontent.org"&gt;2sexycontent.org&lt;/a&gt; for videos and more infos. This installer will help you prepare DotNetNuke and install this great module.</value>
  </data>
  <data name="lblNotInstalledText.Text" xml:space="preserve">
    <value>The automatic installation ran into a problem. Very likely the automatic download failed. You could download and install it manually like any other DotNetNuke module (&lt;a href="{0}" target=_blank&gt;download the package here&lt;/a&gt;) or follow the &lt;a href="{1}" target="_blank"&gt;step-by-step instructions here&lt;/a&gt;. This error should never occur, so if it does, we would appreciate a quick info to &lt;a href="mailto:info@2sexycontent.org"&gt;info@2sexycontent.org&lt;/a&gt;.</value>
  </data>
  <data name="lblNotInstalledTitle.Text" xml:space="preserve">
    <value>2SexyContent is &lt;b&gt;not&lt;/b&gt; installed</value>
  </data>
  <data name="lblRecommendedPackagesTitle.Text" xml:space="preserve">
    <value>3. Install Demo Templates / Apps</value>
  </data>
  <data name="lblReleaseTitleComments.Text" xml:space="preserve">
    <value>Comments</value>
  </data>
  <data name="lblReleaseTitleHeader.Text" xml:space="preserve">
    <value>Title</value>
  </data>
  <data name="lblReleaseTitleStatus.Text" xml:space="preserve">
    <value>Status</value>
  </data>
  <data name="lblReleaseTitleVersion.Text" xml:space="preserve">
    <value>Version</value>
  </data>
  <data name="lblStayTunedText.Text" xml:space="preserve">
    <value>Stay tuned on updates, exciting new apps and more - register &lt;a href="http://2sexycontent.org/register.aspx?returnurl=http%3a%2f%2f2sexycontent.org%2fintroduction.aspx" target="_blank"&gt;here&lt;/a&gt;.</value>
  </data>
  <data name="lblStayTunedTitle.Text" xml:space="preserve">
    <value>4. Stay tuned</value>
  </data>
  <data name="Recommended.Text" xml:space="preserve">
    <value>(recommended)</value>
  </data>
  <data name="lblAddToCommonModulesNotes.Text" xml:space="preserve">
    <value>Modules Pressing the following buttons moves the module from the &lt;i&gt;All Categories&lt;/i&gt;-list to the common list (the default), making it easier to use.</value>
  </data>
  <data name="lblLicenseNotes.Text" xml:space="preserve">
    <value>Pressing the &lt;em&gt;Download &amp; Install&lt;/em&gt; will automatically install the module without asking you to accept the license agreement, as it's the same license agreement as the one you confirmed installing this installer.</value>
  </data>
</root>