/****** Object:  Table {databaseOwner}[{objectQualifier}EasyDNNNewsPortalCategoryItems]    Script Date: 01/02/2013 14:40:59 ******/
/****** Object:  ForeignKey [FK_{objectQualifier}EasyDNNNewsPortalCategoryItems_EasyDNNNewsCategoryList]    Script Date: 01/02/2013 14:40:59 ******/
/****** Object:  ForeignKey [FK_{objectQualifier}EasyDNNNewsPortalCategoryItems_Portals]    Script Date: 01/02/2013 14:40:59 ******/
/****** EasyDNNNewsRolePremissionSettings column RoleId alter NULL *******/
/****** Object:  Table {databaseOwner}[{objectQualifier}EasyDNNNewsPortalAuthorsItems]    Script Date: 01/04/2013 10:24:45 ******/
/****** New system social Sharing tokens *****/

if '{objectQualifier}' <> ''
BEGIN TRY
	IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'{databaseOwner}[{objectQualifier}EasyDNNNewsSystemTokens]') AND type in (N'U'))
	BEGIN
		IF EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'{databaseOwner}[EasyDNNNewsSystemTokens]') AND type in (N'U'))
		BEGIN
			EXECUTE sp_rename N'{databaseOwner}[EasyDNNNewsSystemTokens]', N'{objectQualifier}EasyDNNNewsSystemTokens', 'OBJECT'
			BEGIN TRY
			EXECUTE sp_rename N'PK_EasyDNNSystemTokens', N'PK_{objectQualifier}EasyDNNSystemTokens', 'OBJECT'
			END TRY
			BEGIN CATCH
			END CATCH
		END
	END
END TRY
BEGIN CATCH
END CATCH
GO

IF NOT EXISTS (SELECT TokenTitle FROM {databaseOwner}[{objectQualifier}EasyDNNNewsSystemTokens] WHERE TokenTitle=N'SysLinkedIn')
BEGIN
	INSERT {databaseOwner}[{objectQualifier}EasyDNNNewsSystemTokens] ([TokenTitle], [Description], [TokenContent]) VALUES (N'SysLinkedIn', N'LinkedIn Share Button', N'<script src="//platform.linkedin.com/in.js" type="text/javascript"></script><script type="IN/Share" data-url="[EasyDNNnews:CurrentPageURL]" data-counter="right"></script>')
END
IF NOT EXISTS (SELECT TokenTitle FROM {databaseOwner}[{objectQualifier}EasyDNNNewsSystemTokens] WHERE TokenTitle=N'SysAddThisFbTwGoLi')
BEGIN
	INSERT {databaseOwner}[{objectQualifier}EasyDNNNewsSystemTokens] ([TokenTitle], [Description], [TokenContent]) VALUES (N'SysAddThisFbTwGoLi', N'AddThis service button with Facebook, Twitter, Google and LinkedIn buttons', N'<!-- AddThis Button BEGIN --><div class="addthis_toolbox addthis_default_style "><a class="addthis_button_facebook_like" fb:like:layout="button_count"></a><a class="addthis_button_tweet"></a><a class="addthis_button_google_plusone" g:plusone:size="medium"></a><a class="addthis_button_linkedin_counter"></a><a class="addthis_counter addthis_pill_style"></a></div><script type="text/javascript" src="http://s7.addthis.com/js/250/addthis_widget.js#pubid=xa-4e83374938ea2808"></script>')
END

SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'{databaseOwner}[{objectQualifier}EasyDNNNewsPortalAuthorsItems]') AND type in (N'U'))
BEGIN
CREATE TABLE {databaseOwner}[{objectQualifier}EasyDNNNewsPortalAuthorsItems](
	[PortalID] [int] NOT NULL,
	[UserID] [int] NOT NULL,
	CONSTRAINT [PK_{objectQualifier}EasyDNNNewsPortalAuthorsItems] PRIMARY KEY CLUSTERED  ([PortalID] ASC, [UserID] ASC )WITH (STATISTICS_NORECOMPUTE  = OFF, IGNORE_DUP_KEY = OFF)
)
END
GO
IF NOT EXISTS (SELECT * FROM sys.foreign_keys WHERE object_id = OBJECT_ID(N'[FK_{objectQualifier}EasyDNNNewsPortalAuthorsItems_Portals]') AND parent_object_id = OBJECT_ID(N'{databaseOwner}[{objectQualifier}EasyDNNNewsPortalAuthorsItems]'))
ALTER TABLE {databaseOwner}[{objectQualifier}EasyDNNNewsPortalAuthorsItems]  WITH CHECK ADD  CONSTRAINT [FK_{objectQualifier}EasyDNNNewsPortalAuthorsItems_Portals] FOREIGN KEY([PortalID])
REFERENCES {databaseOwner}[{objectQualifier}Portals] ([PortalID]) ON DELETE CASCADE
GO
IF  EXISTS (SELECT * FROM sys.foreign_keys WHERE object_id = OBJECT_ID(N'[FK_{objectQualifier}EasyDNNNewsPortalAuthorsItems_Portals]') AND parent_object_id = OBJECT_ID(N'{databaseOwner}[{objectQualifier}EasyDNNNewsPortalAuthorsItems]'))
ALTER TABLE {databaseOwner}[{objectQualifier}EasyDNNNewsPortalAuthorsItems] CHECK CONSTRAINT [FK_{objectQualifier}EasyDNNNewsPortalAuthorsItems_Portals]
GO
IF NOT EXISTS (SELECT * FROM sys.foreign_keys WHERE object_id = OBJECT_ID(N'[FK_{objectQualifier}EasyDNNNewsPortalAuthorsItems_Users]') AND parent_object_id = OBJECT_ID(N'{databaseOwner}[{objectQualifier}EasyDNNNewsPortalAuthorsItems]'))
ALTER TABLE {databaseOwner}[{objectQualifier}EasyDNNNewsPortalAuthorsItems]  WITH CHECK ADD  CONSTRAINT [FK_{objectQualifier}EasyDNNNewsPortalAuthorsItems_Users] FOREIGN KEY([UserID])
REFERENCES {databaseOwner}{objectQualifier}Users ([UserID]) ON DELETE CASCADE
GO
IF  EXISTS (SELECT * FROM sys.foreign_keys WHERE object_id = OBJECT_ID(N'[FK_{objectQualifier}EasyDNNNewsPortalAuthorsItems_Users]') AND parent_object_id = OBJECT_ID(N'{databaseOwner}[{objectQualifier}EasyDNNNewsPortalAuthorsItems]'))
ALTER TABLE {databaseOwner}[{objectQualifier}EasyDNNNewsPortalAuthorsItems] CHECK CONSTRAINT [FK_{objectQualifier}EasyDNNNewsPortalAuthorsItems_Users]
GO

/** nema PK na PortalID zbog krugova, DB ne dopusta */
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'{databaseOwner}[{objectQualifier}EasyDNNNewsPortalGroupItems]') AND type in (N'U'))
BEGIN
CREATE TABLE {databaseOwner}[{objectQualifier}EasyDNNNewsPortalGroupItems](
	[PortalID] [int] NOT NULL,
	[GroupID] [int] NOT NULL,
	CONSTRAINT [PK_{objectQualifier}EasyDNNNewsPortalGroupItems] PRIMARY KEY CLUSTERED  ( [PortalID] ASC, [GroupID] ASC)WITH (STATISTICS_NORECOMPUTE  = OFF, IGNORE_DUP_KEY = OFF)
)
END
GO

if '{objectQualifier}' <> ''
BEGIN TRY
	IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'{databaseOwner}[{objectQualifier}EasyDNNNewsAuthorGroups]') AND type in (N'U'))
	BEGIN
		IF EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'{databaseOwner}[EasyDNNNewsAuthorGroups]') AND type in (N'U'))
		BEGIN
			EXECUTE sp_rename N'{databaseOwner}[EasyDNNNewsAuthorGroups]', N'{objectQualifier}EasyDNNNewsAuthorGroups', 'OBJECT'
			BEGIN TRY
			EXECUTE sp_rename N'PK_EasyDNNNewsProfileGroups', N'PK_{objectQualifier}EasyDNNNewsProfileGroups', 'OBJECT'
			EXECUTE sp_rename N'FK_EasyDNNNewsAuthorGroups_Portals', N'FK_{objectQualifier}EasyDNNNewsAuthorGroups_Portals', 'OBJECT'
			END TRY
			BEGIN CATCH
			END CATCH
		END
	END
END TRY
BEGIN CATCH
END CATCH
GO

IF NOT EXISTS (SELECT * FROM sys.foreign_keys WHERE object_id = OBJECT_ID(N'[FK_{objectQualifier}EasyDNNNewsPortalGroupItems_EasyDNNNewsAuthorGroups]') AND parent_object_id = OBJECT_ID(N'{databaseOwner}[{objectQualifier}EasyDNNNewsPortalGroupItems]'))
ALTER TABLE {databaseOwner}[{objectQualifier}EasyDNNNewsPortalGroupItems]  WITH CHECK ADD CONSTRAINT [FK_{objectQualifier}EasyDNNNewsPortalGroupItems_EasyDNNNewsAuthorGroups] FOREIGN KEY([GroupID])
REFERENCES {databaseOwner}[{objectQualifier}EasyDNNNewsAuthorGroups] ([GroupID]) ON DELETE CASCADE
GO
IF  EXISTS (SELECT * FROM sys.foreign_keys WHERE object_id = OBJECT_ID(N'[FK_{objectQualifier}EasyDNNNewsPortalGroupItems_EasyDNNNewsAuthorGroups]') AND parent_object_id = OBJECT_ID(N'{databaseOwner}[{objectQualifier}EasyDNNNewsPortalGroupItems]'))
ALTER TABLE {databaseOwner}[{objectQualifier}EasyDNNNewsPortalGroupItems] CHECK CONSTRAINT [FK_{objectQualifier}EasyDNNNewsPortalGroupItems_EasyDNNNewsAuthorGroups]
GO


/****** Skripta koja ispravlja Author, Group moduleID 10 MEGA BUG *******/

if '{objectQualifier}' <> ''
BEGIN TRY
	IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'{databaseOwner}[{objectQualifier}EasyDNNNewsModuleAuthorsItems]') AND type in (N'U'))
	BEGIN
		IF EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'{databaseOwner}[EasyDNNNewsModuleAuthorsItems]') AND type in (N'U'))
		BEGIN
			EXECUTE sp_rename N'{databaseOwner}[EasyDNNNewsModuleAuthorsItems]', N'{objectQualifier}EasyDNNNewsModuleAuthorsItems', 'OBJECT'
			BEGIN TRY
			EXECUTE sp_rename N'PK_EasyDNNNewsModuleAuthorsItems', N'PK_{objectQualifier}EasyDNNNewsModuleAuthorsItems', 'OBJECT'
			EXECUTE sp_rename N'FK_EasyDNNNewsModuleAuthorsItems_Users', N'FK_{objectQualifier}EasyDNNNewsModuleAuthorsItems_Users', 'OBJECT'
			END TRY
			BEGIN CATCH
			END CATCH
		END
	END
END TRY
BEGIN CATCH
END CATCH
GO



/* delete duplicates if exist in authors items table*/
BEGIN TRY
;WITH cte AS
	(SELECT ROW_NUMBER() OVER (PARTITION BY ModuleID, UserID ORDER BY ( SELECT 0)) AS RN FROM {databaseOwner}[{objectQualifier}EasyDNNNewsModuleAuthorsItems])
DELETE FROM cte WHERE  RN > 1
END TRY
BEGIN CATCH
END CATCH
/** treba prije prebaciti PortalID tj ModuleID 10 u novu tablicu EasyDNNNewsPortalAuthorsItems **/
BEGIN TRY
INSERT INTO {databaseOwner}[{objectQualifier}EasyDNNNewsPortalAuthorsItems] ([PortalID],[UserID])
	SELECT (SELECT TOP(1) [PortalId] FROM {databaseOwner}[{objectQualifier}UserPortals] WHERE UserId = tempInner.UserID) AS PortalID, UserID
		FROM (
			SELECT ModuleID AS PortalID, [UserID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsModuleAuthorsItems] WHERE ModuleID = 10
		) as tempInner
END TRY
BEGIN CATCH
END CATCH
GO


if '{objectQualifier}' <> ''
BEGIN TRY
	IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'{databaseOwner}[{objectQualifier}EasyDNNNewsModuleGroupItems]') AND type in (N'U'))
	BEGIN
		IF EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'{databaseOwner}[EasyDNNNewsModuleGroupItems]') AND type in (N'U'))
		BEGIN
			EXECUTE sp_rename N'{databaseOwner}[EasyDNNNewsModuleGroupItems]', N'{objectQualifier}EasyDNNNewsModuleGroupItems', 'OBJECT'
			BEGIN TRY
			EXECUTE sp_rename N'PK_EasyDNNNewsModuleGroupItems', N'PK_{objectQualifier}EasyDNNNewsModuleGroupItems', 'OBJECT'
			EXECUTE sp_rename N'FK_EasyDNNNewsModuleGroupItems_EasyDNNNewsAuthorGroups', N'FK_{objectQualifier}EasyDNNNewsModuleGroupItems_EasyDNNNewsAuthorGroups', 'OBJECT'
			END TRY
			BEGIN CATCH
			END CATCH
		END
	END
END TRY
BEGIN CATCH
END CATCH
GO

/* delete duplicates if exist in groups items table*/
BEGIN TRY
;WITH cte AS
	(SELECT ROW_NUMBER() OVER (PARTITION BY ModuleID, GroupID ORDER BY ( SELECT 0)) AS RN FROM {databaseOwner}[{objectQualifier}EasyDNNNewsModuleGroupItems])
DELETE FROM cte WHERE  RN > 1
END TRY
BEGIN CATCH
END CATCH
/** treba prije prebaciti PortalID tj ModuleID 10 u novu tablicu EasyDNNNewsPortalGroupItems **/
BEGIN TRY
INSERT INTO {databaseOwner}[{objectQualifier}EasyDNNNewsPortalGroupItems] ([PortalID],[GroupID])
	SELECT (SELECT [PortalId] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsAuthorGroups] WHERE GroupID = tempInner.GroupID) AS PortalID, GroupID
		FROM (
			SELECT ModuleID AS PortalID, [GroupID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsModuleGroupItems] WHERE ModuleID = 10
		) as tempInner
END TRY
BEGIN CATCH
END CATCH
GO

/* ovo je ciscenje tabele prije stavljanja kljuceva */
BEGIN TRY
DELETE FROM {databaseOwner}[{objectQualifier}EasyDNNNewsModuleAuthorsItems] WHERE ModuleID NOT IN (SELECT ModuleID From {databaseOwner}{objectQualifier}Modules);
DELETE FROM {databaseOwner}[{objectQualifier}EasyDNNNewsModuleGroupItems] WHERE ModuleID NOT IN (SELECT ModuleID From {databaseOwner}{objectQualifier}Modules);
END TRY
BEGIN CATCH
END CATCH
GO

/** dodavanje FK na authoritems - module **/
BEGIN TRY
	IF NOT EXISTS (SELECT * FROM sys.foreign_keys WHERE object_id = OBJECT_ID(N'[FK_{objectQualifier}EasyDNNNewsModuleAuthorsItems_Modules]') AND parent_object_id = OBJECT_ID(N'{databaseOwner}[{objectQualifier}EasyDNNNewsModuleAuthorsItems]'))
	ALTER TABLE {databaseOwner}[{objectQualifier}EasyDNNNewsModuleAuthorsItems]  WITH CHECK ADD CONSTRAINT [FK_{objectQualifier}EasyDNNNewsModuleAuthorsItems_Modules] FOREIGN KEY([ModuleID])
	REFERENCES {databaseOwner}[{objectQualifier}Modules] ([ModuleID]) ON DELETE CASCADE
	IF  EXISTS (SELECT * FROM sys.foreign_keys WHERE object_id = OBJECT_ID(N'[FK_{objectQualifier}EasyDNNNewsModuleAuthorsItems_Modules]') AND parent_object_id = OBJECT_ID(N'{databaseOwner}[{objectQualifier}EasyDNNNewsModuleAuthorsItems]'))
	ALTER TABLE {databaseOwner}[{objectQualifier}EasyDNNNewsModuleAuthorsItems] CHECK CONSTRAINT [FK_{objectQualifier}EasyDNNNewsModuleAuthorsItems_Modules]
END TRY
BEGIN CATCH
END CATCH
GO

/** dodavanje PK na authoritems - module, nova instalacija ima vec to, ali postojeca nema !!!**/
BEGIN TRY
IF NOT EXISTS (SELECT * FROM INFORMATION_SCHEMA.TABLE_CONSTRAINTS WHERE CONSTRAINT_TYPE = 'PRIMARY KEY' AND TABLE_NAME = '{objectQualifier}EasyDNNNewsModuleAuthorsItems' )
BEGIN
	ALTER TABLE {databaseOwner}[{objectQualifier}EasyDNNNewsModuleAuthorsItems] ADD CONSTRAINT [PK_{objectQualifier}EasyDNNNewsModuleAuthorsItems] PRIMARY KEY CLUSTERED ([ModuleID] ASC, [UserID] ASC) WITH (STATISTICS_NORECOMPUTE  = OFF, IGNORE_DUP_KEY = OFF)
	--PRINT N'Creating primary key [PK_{objectQualifier}EasyDNNNewsModuleAuthorsItems] on {databaseOwner}[{objectQualifier}EasyDNNNewsModuleAuthorsItems]'
END
END TRY
BEGIN CATCH
END CATCH
GO
/** dodavanje FK na authorgroupitems - module **/
BEGIN TRY
	IF NOT EXISTS (SELECT * FROM sys.foreign_keys WHERE object_id = OBJECT_ID(N'[FK_{objectQualifier}EasyDNNNewsModuleGroupItems_Modules]') AND parent_object_id = OBJECT_ID(N'{databaseOwner}[{objectQualifier}EasyDNNNewsModuleGroupItems]'))
	ALTER TABLE {databaseOwner}[{objectQualifier}EasyDNNNewsModuleGroupItems]  WITH CHECK ADD CONSTRAINT [FK_{objectQualifier}EasyDNNNewsModuleGroupItems_Modules] FOREIGN KEY([ModuleID])
	REFERENCES {databaseOwner}[{objectQualifier}Modules] ([ModuleID]) ON DELETE CASCADE
	IF EXISTS (SELECT * FROM sys.foreign_keys WHERE object_id = OBJECT_ID(N'[FK_{objectQualifier}EasyDNNNewsModuleGroupItems_Modules]') AND parent_object_id = OBJECT_ID(N'{databaseOwner}[{objectQualifier}EasyDNNNewsModuleGroupItems]'))
	ALTER TABLE {databaseOwner}[{objectQualifier}EasyDNNNewsModuleGroupItems] CHECK CONSTRAINT [FK_{objectQualifier}EasyDNNNewsModuleGroupItems_Modules]
END TRY
BEGIN CATCH
END CATCH
GO
/** dodavanje PK na authorgroupitems - module, nova instalacija ima vec to, ali postojeca nema !!!**/
BEGIN TRY
IF NOT EXISTS (SELECT * FROM INFORMATION_SCHEMA.TABLE_CONSTRAINTS WHERE CONSTRAINT_TYPE = 'PRIMARY KEY' AND TABLE_NAME = '{objectQualifier}EasyDNNNewsModuleGroupItems' )
BEGIN
	ALTER TABLE {databaseOwner}[{objectQualifier}EasyDNNNewsModuleGroupItems] ADD CONSTRAINT [PK_{objectQualifier}EasyDNNNewsModuleGroupItems] PRIMARY KEY CLUSTERED ([ModuleID] ASC, [GroupID] ASC) WITH (STATISTICS_NORECOMPUTE  = OFF, IGNORE_DUP_KEY = OFF)
	--PRINT N'Creating primary key [PK_{objectQualifier}EasyDNNNewsModuleGroupItems] on {databaseOwner}[{objectQualifier}EasyDNNNewsModuleGroupItems]'
END
END TRY
BEGIN CATCH
END CATCH
GO

SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'{databaseOwner}[{objectQualifier}EasyDNNNewsPortalCategoryItems]') AND type in (N'U'))
BEGIN
CREATE TABLE {databaseOwner}[{objectQualifier}EasyDNNNewsPortalCategoryItems](
	[PortalID] [int] NOT NULL,
	[CategoryID] [int] NOT NULL,
	CONSTRAINT [PK_{objectQualifier}EasyDNNNewsPortalCategoryItems] PRIMARY KEY CLUSTERED ( [PortalID] ASC, [CategoryID] ASC) WITH (STATISTICS_NORECOMPUTE  = OFF, IGNORE_DUP_KEY = OFF)
)
END
GO

if '{objectQualifier}' <> ''
BEGIN TRY
	IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'{databaseOwner}[{objectQualifier}EasyDNNNewsCategoryList]') AND type in (N'U'))
	BEGIN
		IF EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'{databaseOwner}[EasyDNNNewsCategoryList]') AND type in (N'U'))
		BEGIN
			EXECUTE sp_rename N'{databaseOwner}[EasyDNNNewsCategoryList]', N'{objectQualifier}EasyDNNNewsCategoryList', 'OBJECT'
			BEGIN TRY
			EXECUTE sp_rename N'PK_EasyDNNNewsCategoryList', N'PK_{objectQualifier}EasyDNNNewsCategoryList', 'OBJECT'
			END TRY
			BEGIN CATCH
			END CATCH
		END
	END
END TRY
BEGIN CATCH
END CATCH
GO

IF NOT EXISTS (SELECT * FROM sys.foreign_keys WHERE object_id = OBJECT_ID(N'[FK_{objectQualifier}EasyDNNNewsPortalCategoryItems_EasyDNNNewsCategoryList]') AND parent_object_id = OBJECT_ID(N'{databaseOwner}[{objectQualifier}EasyDNNNewsPortalCategoryItems]'))
ALTER TABLE {databaseOwner}[{objectQualifier}EasyDNNNewsPortalCategoryItems]  WITH CHECK ADD  CONSTRAINT [FK_{objectQualifier}EasyDNNNewsPortalCategoryItems_EasyDNNNewsCategoryList] FOREIGN KEY([CategoryID])
REFERENCES {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryList] ([CategoryID]) ON DELETE CASCADE
GO
IF  EXISTS (SELECT * FROM sys.foreign_keys WHERE object_id = OBJECT_ID(N'[FK_{objectQualifier}EasyDNNNewsPortalCategoryItems_EasyDNNNewsCategoryList]') AND parent_object_id = OBJECT_ID(N'{databaseOwner}[{objectQualifier}EasyDNNNewsPortalCategoryItems]'))
ALTER TABLE {databaseOwner}[{objectQualifier}EasyDNNNewsPortalCategoryItems] CHECK CONSTRAINT [FK_{objectQualifier}EasyDNNNewsPortalCategoryItems_EasyDNNNewsCategoryList]
GO
IF NOT EXISTS (SELECT * FROM sys.foreign_keys WHERE object_id = OBJECT_ID(N'[FK_{objectQualifier}EasyDNNNewsPortalCategoryItems_Portals]') AND parent_object_id = OBJECT_ID(N'{databaseOwner}[{objectQualifier}EasyDNNNewsPortalCategoryItems]'))
ALTER TABLE {databaseOwner}[{objectQualifier}EasyDNNNewsPortalCategoryItems]  WITH CHECK ADD  CONSTRAINT [FK_{objectQualifier}EasyDNNNewsPortalCategoryItems_Portals] FOREIGN KEY([PortalID])
REFERENCES {databaseOwner}[{objectQualifier}Portals] ([PortalID]) ON DELETE CASCADE
GO
IF  EXISTS (SELECT * FROM sys.foreign_keys WHERE object_id = OBJECT_ID(N'[FK_{objectQualifier}EasyDNNNewsPortalCategoryItems_Portals]') AND parent_object_id = OBJECT_ID(N'{databaseOwner}[{objectQualifier}EasyDNNNewsPortalCategoryItems]'))
ALTER TABLE {databaseOwner}[{objectQualifier}EasyDNNNewsPortalCategoryItems] CHECK CONSTRAINT [FK_{objectQualifier}EasyDNNNewsPortalCategoryItems_Portals]
GO

/* delete duplicates if exist in categories items table*/

if '{objectQualifier}' <> ''
BEGIN TRY
	IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'{databaseOwner}[{objectQualifier}EasyDNNNewsModuleCategoryItems]') AND type in (N'U'))
	BEGIN
		IF EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'{databaseOwner}[EasyDNNNewsModuleCategoryItems]') AND type in (N'U'))
		BEGIN
			EXECUTE sp_rename N'{databaseOwner}[EasyDNNNewsModuleCategoryItems]', N'{objectQualifier}EasyDNNNewsModuleCategoryItems', 'OBJECT'
			BEGIN TRY
			EXECUTE sp_rename N'PK_EasyDNNNewsModuleCategoryItems', N'PK_{objectQualifier}EasyDNNNewsModuleCategoryItems', 'OBJECT'
			EXECUTE sp_rename N'FK_EasyDNNNewsModuleCategory_EasyDNNNewsCategoryList', N'FK_{objectQualifier}EasyDNNNewsModuleCategory_EasyDNNNewsCategoryList', 'OBJECT'
			END TRY
			BEGIN CATCH
			END CATCH
		END
	END
END TRY
BEGIN CATCH
END CATCH
GO

BEGIN TRY
;WITH cte AS
	(SELECT ROW_NUMBER() OVER (PARTITION BY ModuleID, CategoryID ORDER BY ( SELECT 0)) AS RN FROM {databaseOwner}[{objectQualifier}EasyDNNNewsModuleCategoryItems])
DELETE FROM cte WHERE  RN > 1
END TRY
BEGIN CATCH
END CATCH
/** treba prije prebaciti PortalID tj ModuleID 10 u novu tablicu EasyDNNNewsPortalCategoryItems **/
BEGIN TRY
INSERT INTO {databaseOwner}[{objectQualifier}EasyDNNNewsPortalCategoryItems] ([PortalID],[CategoryID])
	SELECT (SELECT [PortalId] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryList] WHERE CategoryID = tempInner.CategoryID) AS PortalID, CategoryID
		FROM (
			SELECT ModuleID AS PortalID, [CategoryID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsModuleCategoryItems] WHERE ModuleID = 10
		) as tempInner
END TRY
BEGIN CATCH
END CATCH
GO

/* ovo je ciscenje tabele prije stavljanja kljuceva */
BEGIN TRY
	DELETE FROM {databaseOwner}[{objectQualifier}EasyDNNNewsModuleCategoryItems] WHERE ModuleID NOT IN (SELECT ModuleID From {databaseOwner}[{objectQualifier}Modules]);
END TRY
BEGIN CATCH
END CATCH
GO
/** dodavanje PK na EasyDNNNewsModuleCategoryItems - module, nova instalacija ima vec to, ali postojeca nema !!!**/
BEGIN TRY
IF NOT EXISTS (SELECT * FROM INFORMATION_SCHEMA.TABLE_CONSTRAINTS WHERE CONSTRAINT_TYPE = 'PRIMARY KEY' AND TABLE_NAME = '{objectQualifier}EasyDNNNewsModuleCategoryItems' )
BEGIN
	ALTER TABLE {databaseOwner}[{objectQualifier}EasyDNNNewsModuleCategoryItems] ADD CONSTRAINT [PK_{objectQualifier}EasyDNNNewsModuleCategoryItems] PRIMARY KEY CLUSTERED ([ModuleID] ASC, [CategoryID] ASC) WITH (STATISTICS_NORECOMPUTE  = OFF, IGNORE_DUP_KEY = OFF)
END
END TRY
BEGIN CATCH
END CATCH
GO

/** dodavanje FK na EasyDNNNewsModuleCategoryItems - module **/

IF NOT EXISTS (SELECT * FROM sys.foreign_keys WHERE object_id = OBJECT_ID(N'[FK_{objectQualifier}EasyDNNNewsModuleCategory_EasyDNNNewsCategoryList]') AND parent_object_id = OBJECT_ID(N'{databaseOwner}[{objectQualifier}EasyDNNNewsModuleCategoryItems]'))
ALTER TABLE {databaseOwner}[{objectQualifier}EasyDNNNewsModuleCategoryItems]  WITH CHECK ADD  CONSTRAINT [FK_{objectQualifier}EasyDNNNewsModuleCategory_EasyDNNNewsCategoryList] FOREIGN KEY([CategoryID])
REFERENCES {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryList] ([CategoryID]) ON DELETE CASCADE
GO
IF  EXISTS (SELECT * FROM sys.foreign_keys WHERE object_id = OBJECT_ID(N'[FK_{objectQualifier}EasyDNNNewsModuleCategory_EasyDNNNewsCategoryList]') AND parent_object_id = OBJECT_ID(N'{databaseOwner}[{objectQualifier}EasyDNNNewsModuleCategoryItems]'))
ALTER TABLE {databaseOwner}[{objectQualifier}EasyDNNNewsModuleCategoryItems] CHECK CONSTRAINT [FK_{objectQualifier}EasyDNNNewsModuleCategory_EasyDNNNewsCategoryList]
GO

if '{objectQualifier}' <> ''
BEGIN TRY
	IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'{databaseOwner}[{objectQualifier}EasyDNNNewsRolePremissionSettings]') AND type in (N'U'))
	BEGIN
		IF EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'{databaseOwner}[EasyDNNNewsRolePremissionSettings]') AND type in (N'U'))
		BEGIN
			EXECUTE sp_rename N'{databaseOwner}[EasyDNNNewsRolePremissionSettings]', N'{objectQualifier}EasyDNNNewsRolePremissionSettings', 'OBJECT'
			BEGIN TRY
			EXECUTE sp_rename N'PK_EasyDNNNewsRolePremissionSettings', N'PK_{objectQualifier}EasyDNNNewsRolePremissionSettings', 'OBJECT'
			EXECUTE sp_rename N'FK_EasyDNNNewsRolePremissionSettings_Roles', N'FK_{objectQualifier}EasyDNNNewsRolePremissionSettings_Roles', 'OBJECT'
			END TRY
			BEGIN CATCH
			END CATCH
		END
	END
END TRY
BEGIN CATCH
END CATCH
GO


ALTER TABLE {databaseOwner}[{objectQualifier}EasyDNNNewsRolePremissionSettings] ALTER COLUMN RoleID int NULL;
BEGIN TRY
	IF NOT EXISTS (SELECT * FROM sys.key_constraints WHERE parent_object_id = OBJECT_ID(N'{databaseOwner}[{objectQualifier}EasyDNNNewsRolePremissionSettings]') AND name = N'IX_{objectQualifier}EasyDNNNewsRolePremissionSettings')
	BEGIN
		ALTER TABLE {databaseOwner}[{objectQualifier}EasyDNNNewsRolePremissionSettings] ADD CONSTRAINT IX_{objectQualifier}EasyDNNNewsRolePremissionSettings UNIQUE (PortalID, ModuleID,RoleID);
	END
END TRY
BEGIN CATCH
END CATCH

if '{objectQualifier}' <> ''
BEGIN TRY
	IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'{databaseOwner}[{objectQualifier}EasyDNNNewsUserPremissionSettings]') AND type in (N'U'))
	BEGIN
		IF EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'{databaseOwner}[EasyDNNNewsUserPremissionSettings]') AND type in (N'U'))
		BEGIN
			EXECUTE sp_rename N'{databaseOwner}[EasyDNNNewsUserPremissionSettings]', N'{objectQualifier}EasyDNNNewsUserPremissionSettings', 'OBJECT'
			BEGIN TRY
			EXECUTE sp_rename N'PK_EasyDNNNewsUserPremissionSettings', N'PK_{objectQualifier}EasyDNNNewsUserPremissionSettings', 'OBJECT'
			EXECUTE sp_rename N'FK_EasyDNNNewsUserPremissionSettings_Users', N'FK_{objectQualifier}EasyDNNNewsUserPremissionSettings_Users', 'OBJECT'
			END TRY
			BEGIN CATCH
			END CATCH
		END
	END
END TRY
BEGIN CATCH
END CATCH
GO

BEGIN TRY
	IF NOT EXISTS (SELECT * FROM sys.key_constraints WHERE parent_object_id = OBJECT_ID(N'{databaseOwner}[{objectQualifier}EasyDNNNewsUserPremissionSettings]') AND name = N'IX_{objectQualifier}EasyDNNNewsUserPremissionSettings')
	BEGIN
		ALTER TABLE {databaseOwner}[{objectQualifier}EasyDNNNewsUserPremissionSettings] ADD CONSTRAINT IX_{objectQualifier}EasyDNNNewsUserPremissionSettings UNIQUE (PortalID, ModuleID,UserID);
	END
END TRY
BEGIN CATCH
END CATCH