IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[EDS_StringListToTable]') AND type in (N'FN', N'IF', N'TF', N'FS', N'FT'))
	DROP FUNCTION [dbo].[EDS_StringListToTable]
GO

/****** Delete all stored procedures because they dont have object qualifier *******/

if '{objectQualifier}' <> ''
BEGIN
	IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[EasyDNNNewsAddEditCategoriesByPermissions]') AND type in (N'P', N'PC'))
		DROP PROCEDURE [dbo].[EasyDNNNewsAddEditCategoriesByPermissions]
	IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[EasyDNNNewsGetItemByPermission]') AND type in (N'P', N'PC'))
		DROP PROCEDURE [dbo].[EasyDNNNewsGetItemByPermission]
	IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[EasyDNNNewsGetItemsByMonthlyArchive]') AND type in (N'P', N'PC'))
		DROP PROCEDURE [dbo].[EasyDNNNewsGetItemsByMonthlyArchive]
	IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[EasyDNNNewsGetItemsByTagID]') AND type in (N'P', N'PC'))
		DROP PROCEDURE [dbo].[EasyDNNNewsGetItemsByTagID]
	IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[EasyDNNNewsGetItemsByTagIDCountForPageing]') AND type in (N'P', N'PC'))
		DROP PROCEDURE [dbo].[EasyDNNNewsGetItemsByTagIDCountForPageing]
	IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[EasyDNNNewsGetItemsCalendarEventsArchive]') AND type in (N'P', N'PC'))
		DROP PROCEDURE [dbo].[EasyDNNNewsGetItemsCalendarEventsArchive]
	IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[EasyDNNNewsGetItemsCountForArticleEditor]') AND type in (N'P', N'PC'))
		DROP PROCEDURE [dbo].[EasyDNNNewsGetItemsCountForArticleEditor]
	IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[EasyDNNNewsGetItemsCountForPageing]') AND type in (N'P', N'PC'))
		DROP PROCEDURE [dbo].[EasyDNNNewsGetItemsCountForPageing]
	IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[EasyDNNNewsGetItemsCountForPageingDateWithEventsRange]') AND type in (N'P', N'PC'))
		DROP PROCEDURE [dbo].[EasyDNNNewsGetItemsCountForPageingDateWithEventsRange]
	IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[EasyDNNNewsGetItemsCountForPageingOnlyEvents]') AND type in (N'P', N'PC'))
		DROP PROCEDURE [dbo].[EasyDNNNewsGetItemsCountForPageingOnlyEvents]
	IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[EasyDNNNewsGetItemsCountItemsFromSearch]') AND type in (N'P', N'PC'))
		DROP PROCEDURE [dbo].[EasyDNNNewsGetItemsCountItemsFromSearch]
	IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[EasyDNNNewsGetItemsEventsOnlyInRange]') AND type in (N'P', N'PC'))
		DROP PROCEDURE [dbo].[EasyDNNNewsGetItemsEventsOnlyInRange]
	IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[EasyDNNNewsGetItemsForListDisplay]') AND type in (N'P', N'PC'))
		DROP PROCEDURE [dbo].[EasyDNNNewsGetItemsForListDisplay]
	IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[EasyDNNNewsGetItemsForListDisplayByDateWithEventsRange]') AND type in (N'P', N'PC'))
		DROP PROCEDURE [dbo].[EasyDNNNewsGetItemsForListDisplayByDateWithEventsRange]
	IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[EasyDNNNewsGetItemsForListDisplayOnlyEvents]') AND type in (N'P', N'PC'))
		DROP PROCEDURE [dbo].[EasyDNNNewsGetItemsForListDisplayOnlyEvents]
	IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[EasyDNNNewsGetItemsForTagCloud]') AND type in (N'P', N'PC'))
		DROP PROCEDURE [dbo].[EasyDNNNewsGetItemsForTagCloud]
	IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[EasyDNNNewsGetItemsForTreeView]') AND type in (N'P', N'PC'))
		DROP PROCEDURE [dbo].[EasyDNNNewsGetItemsForTreeView]
	IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[EasyDNNNewsGetItemsFromSearch]') AND type in (N'P', N'PC'))
		DROP PROCEDURE [dbo].[EasyDNNNewsGetItemsFromSearch]
	IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[EasyDNNNewsGetItemsPerCategory]') AND type in (N'P', N'PC'))
		DROP PROCEDURE [dbo].[EasyDNNNewsGetItemsPerCategory]
	IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[EasyDNNNewsGetItemsForArticleEditor]') AND type in (N'P', N'PC'))
		DROP PROCEDURE [dbo].[EasyDNNNewsGetItemsForArticleEditor]
	IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[EasyDNNNewsGetItemsForCalendarAll]') AND type in (N'P', N'PC'))
		DROP PROCEDURE [dbo].[EasyDNNNewsGetItemsForCalendarAll]
	IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[EasyDNNNewsGetItemsForCalendarOnlyEvents]') AND type in (N'P', N'PC'))
		DROP PROCEDURE [dbo].[EasyDNNNewsGetItemsForCalendarOnlyEvents]
	IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[EasyDNNNewsGetItemsForCalendarOnlyNews]') AND type in (N'P', N'PC'))
		DROP PROCEDURE [dbo].[EasyDNNNewsGetItemsForCalendarOnlyNews]
	IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[EasyDNNNewsGetItemsForCategoryMenu]') AND type in (N'P', N'PC'))
		DROP PROCEDURE [dbo].[EasyDNNNewsGetItemsForCategoryMenu]
	IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[EasyDNNNewsShowCategoriesByPermissions]') AND type in (N'P', N'PC'))
		DROP PROCEDURE [dbo].[EasyDNNNewsShowCategoriesByPermissions]
	IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[EasyDNNNewsGetChildeCategories]') AND type in (N'P', N'PC'))
		DROP PROCEDURE [dbo].[EasyDNNNewsGetChildeCategories]
	IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[EasyDNNNewsGetCountAllNewsEventsOnlyInRange]') AND type in (N'P', N'PC'))
		DROP PROCEDURE [dbo].[EasyDNNNewsGetCountAllNewsEventsOnlyInRange]
	IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[EasyDNNNewsGetItemsForChalendarMonthly]') AND type in (N'P', N'PC'))
		DROP PROCEDURE [dbo].[EasyDNNNewsGetItemsForChalendarMonthly]
	IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[EasyDNNNewsGetItemsEventsToShowInCalendar]') AND type in (N'P', N'PC'))
		DROP PROCEDURE [dbo].[EasyDNNNewsGetItemsEventsToShowInCalendar]
	IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[EasyDNNNewsPermissions]') AND type in (N'P', N'PC'))
		DROP PROCEDURE [dbo].[EasyDNNNewsPermissions]
	IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[EasyDNNnewsGroupsAndAuthors]') AND type in (N'P', N'PC'))
		DROP PROCEDURE [dbo].[EasyDNNnewsGroupsAndAuthors]
	IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[EasyDNNnewsArticleArchive]') AND type in (N'P', N'PC'))
		DROP PROCEDURE [dbo].[EasyDNNnewsArticleArchive]
	IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[EasyDNNNewsGetCategoryAutoAdd]') AND type in (N'P', N'PC'))
		DROP PROCEDURE [dbo].[EasyDNNNewsGetCategoryAutoAdd]
	IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[EasyDNNNewsCategoryPositioning]') AND type in (N'P', N'PC'))
		DROP PROCEDURE [dbo].[EasyDNNNewsCategoryPositioning]
END
GO

/****** Object:  StoredProcedure {databaseOwner}[{objectQualifier}EasyDNNNewsAddEditCategoriesByPermissions]    Script Date: 06/24/2013 16:39:06 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'{databaseOwner}[{objectQualifier}EasyDNNNewsAddEditCategoriesByPermissions]') AND type in (N'P', N'PC'))
DROP PROCEDURE {databaseOwner}[{objectQualifier}EasyDNNNewsAddEditCategoriesByPermissions]
GO
/****** Object:  StoredProcedure {databaseOwner}[{objectQualifier}EasyDNNNewsGetItemByPermission]    Script Date: 06/24/2013 16:39:06 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'{databaseOwner}[{objectQualifier}EasyDNNNewsGetItemByPermission]') AND type in (N'P', N'PC'))
DROP PROCEDURE {databaseOwner}[{objectQualifier}EasyDNNNewsGetItemByPermission]
GO
/****** Object:  StoredProcedure {databaseOwner}[{objectQualifier}EasyDNNNewsGetItemsByMonthlyArchive]    Script Date: 06/24/2013 16:39:06 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'{databaseOwner}[{objectQualifier}EasyDNNNewsGetItemsByMonthlyArchive]') AND type in (N'P', N'PC'))
DROP PROCEDURE {databaseOwner}[{objectQualifier}EasyDNNNewsGetItemsByMonthlyArchive]
GO
/****** Object:  StoredProcedure {databaseOwner}[{objectQualifier}EasyDNNNewsGetItemsByTagID]    Script Date: 06/24/2013 16:39:06 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'{databaseOwner}[{objectQualifier}EasyDNNNewsGetItemsByTagID]') AND type in (N'P', N'PC'))
DROP PROCEDURE {databaseOwner}[{objectQualifier}EasyDNNNewsGetItemsByTagID]
GO
/****** Object:  StoredProcedure {databaseOwner}[{objectQualifier}EasyDNNNewsGetItemsByTagIDCountForPageing]    Script Date: 06/24/2013 16:39:07 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'{databaseOwner}[{objectQualifier}EasyDNNNewsGetItemsByTagIDCountForPageing]') AND type in (N'P', N'PC'))
DROP PROCEDURE {databaseOwner}[{objectQualifier}EasyDNNNewsGetItemsByTagIDCountForPageing]
GO
/****** Object:  StoredProcedure {databaseOwner}[{objectQualifier}EasyDNNNewsGetItemsCalendarEventsArchive]    Script Date: 06/24/2013 16:39:07 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'{databaseOwner}[{objectQualifier}EasyDNNNewsGetItemsCalendarEventsArchive]') AND type in (N'P', N'PC'))
DROP PROCEDURE {databaseOwner}[{objectQualifier}EasyDNNNewsGetItemsCalendarEventsArchive]
GO
/****** Object:  StoredProcedure {databaseOwner}[{objectQualifier}EasyDNNNewsGetItemsCountForArticleEditor]    Script Date: 06/24/2013 16:39:07 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'{databaseOwner}[{objectQualifier}EasyDNNNewsGetItemsCountForArticleEditor]') AND type in (N'P', N'PC'))
DROP PROCEDURE {databaseOwner}[{objectQualifier}EasyDNNNewsGetItemsCountForArticleEditor]
GO
/****** Object:  StoredProcedure {databaseOwner}[{objectQualifier}EasyDNNNewsGetItemsCountForPageing]    Script Date: 06/24/2013 16:39:07 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'{databaseOwner}[{objectQualifier}EasyDNNNewsGetItemsCountForPageing]') AND type in (N'P', N'PC'))
DROP PROCEDURE {databaseOwner}[{objectQualifier}EasyDNNNewsGetItemsCountForPageing]
GO
/****** Object:  StoredProcedure {databaseOwner}[{objectQualifier}EasyDNNNewsGetItemsCountForPageingDateWithEventsRange]    Script Date: 06/24/2013 16:39:07 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'{databaseOwner}[{objectQualifier}EasyDNNNewsGetItemsCountForPageingDateWithEventsRange]') AND type in (N'P', N'PC'))
DROP PROCEDURE {databaseOwner}[{objectQualifier}EasyDNNNewsGetItemsCountForPageingDateWithEventsRange]
GO
/****** Object:  StoredProcedure {databaseOwner}[{objectQualifier}EasyDNNNewsGetItemsCountForPageingOnlyEvents]    Script Date: 06/24/2013 16:39:07 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'{databaseOwner}[{objectQualifier}EasyDNNNewsGetItemsCountForPageingOnlyEvents]') AND type in (N'P', N'PC'))
DROP PROCEDURE {databaseOwner}[{objectQualifier}EasyDNNNewsGetItemsCountForPageingOnlyEvents]
GO
/****** Object:  StoredProcedure {databaseOwner}[{objectQualifier}EasyDNNNewsGetItemsCountItemsFromSearch]    Script Date: 06/24/2013 16:39:07 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'{databaseOwner}[{objectQualifier}EasyDNNNewsGetItemsCountItemsFromSearch]') AND type in (N'P', N'PC'))
DROP PROCEDURE {databaseOwner}[{objectQualifier}EasyDNNNewsGetItemsCountItemsFromSearch]
GO
/****** Object:  StoredProcedure {databaseOwner}[{objectQualifier}EasyDNNNewsGetItemsForArticleEditor]    Script Date: 06/24/2013 16:39:07 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'{databaseOwner}[{objectQualifier}EasyDNNNewsGetItemsForArticleEditor]') AND type in (N'P', N'PC'))
DROP PROCEDURE {databaseOwner}[{objectQualifier}EasyDNNNewsGetItemsForArticleEditor]
GO
/****** Object:  StoredProcedure {databaseOwner}[{objectQualifier}EasyDNNNewsGetItemsForCalendarAll]    Script Date: 06/24/2013 16:39:07 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'{databaseOwner}[{objectQualifier}EasyDNNNewsGetItemsForCalendarAll]') AND type in (N'P', N'PC'))
DROP PROCEDURE {databaseOwner}[{objectQualifier}EasyDNNNewsGetItemsForCalendarAll]
GO
/****** Object:  StoredProcedure {databaseOwner}[{objectQualifier}EasyDNNNewsGetItemsForCalendarOnlyEvents]    Script Date: 06/24/2013 16:39:07 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'{databaseOwner}[{objectQualifier}EasyDNNNewsGetItemsForCalendarOnlyEvents]') AND type in (N'P', N'PC'))
DROP PROCEDURE {databaseOwner}[{objectQualifier}EasyDNNNewsGetItemsForCalendarOnlyEvents]
GO
/****** Object:  StoredProcedure {databaseOwner}[{objectQualifier}EasyDNNNewsGetItemsForCalendarOnlyNews]    Script Date: 06/24/2013 16:39:07 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'{databaseOwner}[{objectQualifier}EasyDNNNewsGetItemsForCalendarOnlyNews]') AND type in (N'P', N'PC'))
DROP PROCEDURE {databaseOwner}[{objectQualifier}EasyDNNNewsGetItemsForCalendarOnlyNews]
GO
/****** Object:  StoredProcedure {databaseOwner}[{objectQualifier}EasyDNNNewsGetItemsForCategoryMenu]    Script Date: 06/24/2013 16:39:07 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'{databaseOwner}[{objectQualifier}EasyDNNNewsGetItemsForCategoryMenu]') AND type in (N'P', N'PC'))
DROP PROCEDURE {databaseOwner}[{objectQualifier}EasyDNNNewsGetItemsForCategoryMenu]
GO
/****** Object:  StoredProcedure {databaseOwner}[{objectQualifier}EasyDNNNewsGetItemsForListDisplay]    Script Date: 06/24/2013 16:39:07 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'{databaseOwner}[{objectQualifier}EasyDNNNewsGetItemsForListDisplay]') AND type in (N'P', N'PC'))
DROP PROCEDURE {databaseOwner}[{objectQualifier}EasyDNNNewsGetItemsForListDisplay]
GO
/****** Object:  StoredProcedure {databaseOwner}[{objectQualifier}EasyDNNNewsGetItemsForListDisplayByDateWithEventsRange]    Script Date: 06/24/2013 16:39:07 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'{databaseOwner}[{objectQualifier}EasyDNNNewsGetItemsForListDisplayByDateWithEventsRange]') AND type in (N'P', N'PC'))
DROP PROCEDURE {databaseOwner}[{objectQualifier}EasyDNNNewsGetItemsForListDisplayByDateWithEventsRange]
GO
/****** Object:  StoredProcedure {databaseOwner}[{objectQualifier}EasyDNNNewsGetItemsForListDisplayOnlyEvents]    Script Date: 06/24/2013 16:39:07 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'{databaseOwner}[{objectQualifier}EasyDNNNewsGetItemsForListDisplayOnlyEvents]') AND type in (N'P', N'PC'))
DROP PROCEDURE {databaseOwner}[{objectQualifier}EasyDNNNewsGetItemsForListDisplayOnlyEvents]
GO
/****** Object:  StoredProcedure {databaseOwner}[{objectQualifier}EasyDNNNewsGetItemsForTagCloud]    Script Date: 06/24/2013 16:39:07 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'{databaseOwner}[{objectQualifier}EasyDNNNewsGetItemsForTagCloud]') AND type in (N'P', N'PC'))
DROP PROCEDURE {databaseOwner}[{objectQualifier}EasyDNNNewsGetItemsForTagCloud]
GO
/****** Object:  StoredProcedure {databaseOwner}[{objectQualifier}EasyDNNNewsGetItemsForTreeView]    Script Date: 06/24/2013 16:39:07 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'{databaseOwner}[{objectQualifier}EasyDNNNewsGetItemsForTreeView]') AND type in (N'P', N'PC'))
DROP PROCEDURE {databaseOwner}[{objectQualifier}EasyDNNNewsGetItemsForTreeView]
GO
/****** Object:  StoredProcedure {databaseOwner}[{objectQualifier}EasyDNNNewsGetItemsFromSearch]    Script Date: 06/24/2013 16:39:07 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'{databaseOwner}[{objectQualifier}EasyDNNNewsGetItemsFromSearch]') AND type in (N'P', N'PC'))
DROP PROCEDURE {databaseOwner}[{objectQualifier}EasyDNNNewsGetItemsFromSearch]
GO
/****** Object:  StoredProcedure {databaseOwner}[{objectQualifier}EasyDNNNewsGetItemsPerCategory]    Script Date: 06/24/2013 16:39:07 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'{databaseOwner}[{objectQualifier}EasyDNNNewsGetItemsPerCategory]') AND type in (N'P', N'PC'))
DROP PROCEDURE {databaseOwner}[{objectQualifier}EasyDNNNewsGetItemsPerCategory]
GO
/****** Object:  StoredProcedure {databaseOwner}[{objectQualifier}EasyDNNNewsShowCategoriesByPermissions]    Script Date: 06/24/2013 16:39:07 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'{databaseOwner}[{objectQualifier}EasyDNNNewsShowCategoriesByPermissions]') AND type in (N'P', N'PC'))
DROP PROCEDURE {databaseOwner}[{objectQualifier}EasyDNNNewsShowCategoriesByPermissions]
GO
/****** Object:  StoredProcedure {databaseOwner}[{objectQualifier}EasyDNNNewsPermissions]    Script Date: 06/24/2013 16:39:07 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'{databaseOwner}[{objectQualifier}EasyDNNNewsPermissions]') AND type in (N'P', N'PC'))
DROP PROCEDURE {databaseOwner}[{objectQualifier}EasyDNNNewsPermissions]
GO
/****** Object:  StoredProcedure {databaseOwner}[{objectQualifier}EasyDNNnewsGroupsAndAuthors]    Script Date: 06/26/2013 11:03:32 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'{databaseOwner}[{objectQualifier}EasyDNNnewsGroupsAndAuthors]') AND type in (N'P', N'PC'))
DROP PROCEDURE {databaseOwner}[{objectQualifier}EasyDNNnewsGroupsAndAuthors]
GO
/****** Object:  StoredProcedure {databaseOwner}[{objectQualifier}EasyDNNnewsArticleArchive]    Script Date: 06/24/2013 16:39:06 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'{databaseOwner}[{objectQualifier}EasyDNNnewsArticleArchive]') AND type in (N'P', N'PC'))
DROP PROCEDURE {databaseOwner}[{objectQualifier}EasyDNNnewsArticleArchive]
GO
/****** Object:  StoredProcedure {databaseOwner}[{objectQualifier}EasyDNNNewsGetCategoryAutoAdd]    Script Date: 06/26/2013 10:32:09 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'{databaseOwner}[{objectQualifier}EasyDNNNewsGetCategoryAutoAdd]') AND type in (N'P', N'PC'))
DROP PROCEDURE {databaseOwner}[{objectQualifier}EasyDNNNewsGetCategoryAutoAdd]
GO
/****** Object:  StoredProcedure {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryPositioning]    Script Date: 06/26/2013 10:15:43 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'{databaseOwner}[{objectQualifier}EasyDNNNewsCategoryPositioning]') AND type in (N'P', N'PC'))
DROP PROCEDURE {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryPositioning]
GO
/****** Object:  StoredProcedure {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryPositioning]    Script Date: 07/12/2013 15:59:10 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'{databaseOwner}[{objectQualifier}EasyDNNNewsCategoryPositioning]') AND type in (N'P', N'PC'))
BEGIN
EXEC dbo.sp_executesql @statement = N'CREATE PROCEDURE {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryPositioning]
	@PortalID int,
	@CategoryID int,
	@Operation nvarchar(20)
AS
SET NOCOUNT ON;

BEGIN TRANSACTION;

BEGIN TRY
DECLARE @Position int;
DECLARE @Parent int;
DECLARE @NewParent int;
DECLARE @Level int;
DECLARE @UpRootCategoryID int;
DECLARE @DownRootCategoryID int;
DECLARE @UpNewPosition int;
DECLARE @DownNewPosition int;

SELECT @Position = [Position] ,@Parent = [ParentCategory], @Level = [Level] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryList] WHERE CategoryID = @CategoryID;
IF @Position IS NOT NULL
BEGIN
	IF @Operation = ''Left''
	BEGIN	
		IF @Level > 0 AND @Parent <> 0
		BEGIN	
			DECLARE @DownCount int;
			;WITH sibblings AS(
				SELECT [CategoryID],[Position],[Level] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryList] AS cl
				WHERE cl.ParentCategory = @Parent AND cl.Position > @Position AND PortalID = @PortalID
				UNION ALL
				SELECT c.[CategoryID],c.[Position],c.[Level]
				FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryList] AS c INNER JOIN sibblings AS s ON c.ParentCategory = s.CategoryID WHERE c.PortalID = @PortalID
			)
			SELECT @DownCount = Count([CategoryID]) FROM sibblings
			-- change position of all down inner elements
			IF @DownCount > 0
			BEGIN
				;WITH sibblings AS(
					SELECT [CategoryID],[Position]
					FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryList] AS cl
					WHERE cl.ParentCategory = @Parent AND cl.Position > @Position AND PortalID = @PortalID
					UNION ALL
					SELECT c.[CategoryID], c.[Position]
					FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryList] AS c INNER JOIN sibblings AS p ON c.ParentCategory = p.CategoryID WHERE c.PortalID = @PortalID
				),
				OrderAll AS(
					SELECT [CategoryID], ROW_NUMBER() OVER (ORDER BY Position ASC) AS PositionsOrder FROM sibblings
				)
				UPDATE cl SET cl.Position = (@Position - 1 + cpm.PositionsOrder) FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryList] as cl INNER JOIN OrderAll as cpm ON cl.CategoryID = cpm.CategoryID;
			END		
			-- change parent and postion of mooving category		
			SELECT @NewParent = cl.ParentCategory FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryList] AS cl WHERE cl.CategoryID = @Parent AND cl.PortalID = @PortalID;	
			UPDATE {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryList] SET [ParentCategory] = @NewParent, [Position] = (@Position + @DownCount), [Level] = [Level] - 1 WHERE CategoryID = @CategoryID;
			-- find all childe categories and set level - 1
			;WITH Childes AS(
				SELECT [CategoryID],[Position]
				FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryList] AS cl
				WHERE cl.ParentCategory = @CategoryID AND PortalID = @PortalID
				UNION ALL
				SELECT c.[CategoryID],c.[Position]
				FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryList] AS c INNER JOIN Childes AS p ON c.ParentCategory = p.CategoryID WHERE c.PortalID = @PortalID
			),
			OrderAll AS(
				SELECT [CategoryID], ROW_NUMBER() OVER (ORDER BY Position ASC) AS Offset FROM Childes
			)
			UPDATE cl SET cl.Position = (@Position + @DownCount + Offset), cl.[Level] = cl.[Level] - 1 FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryList] as cl INNER JOIN OrderAll as cpm ON cl.CategoryID = cpm.CategoryID;
		END
	END
	ELSE IF @Operation = ''Right''
	BEGIN
		SELECT @NewParent = CategoryID FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryList] AS cl WHERE cl.Position = @Position - 1 AND cl.[Level] = @Level AND cl.PortalID = @PortalID;
		IF @NewParent IS NOT NULL -- then are same level 
		BEGIN
			UPDATE {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryList] SET [ParentCategory] = @NewParent, [Level] = [Level] + 1 WHERE CategoryID = @CategoryID;
				-- find all childe categories and set level + 1
			;WITH Childes AS(
				SELECT [CategoryID]
				FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryList] AS cl
				WHERE cl.ParentCategory = @CategoryID AND PortalID = @PortalID
				UNION ALL
				SELECT c.[CategoryID]
				FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryList] AS c INNER JOIN Childes AS p ON c.ParentCategory = p.CategoryID WHERE c.PortalID = @PortalID
			)
			UPDATE {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryList] SET [Level] = [Level] + 1 WHERE [CategoryID] IN (SELECT [CategoryID] FROM Childes);	
		END
		ELSE
		BEGIN
			SELECT TOP (1) @NewParent = cl.CategoryID, @UpNewPosition = cl.Position FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryList] AS cl
				WHERE cl.ParentCategory = @Parent AND cl.PortalID = @PortalID AND cl.Position < @Position ORDER BY cl.Position DESC			
			
			IF @NewParent IS NOT NULL
			BEGIN		
				UPDATE {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryList] SET [ParentCategory] = @NewParent, [Level] = [Level] + 1 WHERE CategoryID = @CategoryID;			
				-- find all childe categories and set level + 1
				;WITH Childes AS(
					SELECT [CategoryID]
					FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryList] AS cl
					WHERE cl.ParentCategory = @CategoryID AND PortalID = @PortalID
					UNION ALL
					SELECT c.[CategoryID]
					FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryList] AS c INNER JOIN Childes AS p ON c.ParentCategory = p.CategoryID WHERE c.PortalID = @PortalID
				)
				UPDATE {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryList] SET [Level] = [Level] + 1 WHERE [CategoryID] IN (SELECT [CategoryID] FROM Childes);	
			END
		END
	END
	ELSE IF @Operation = ''UP''
	BEGIN
		-- parentCategory is the same
		-- level is the same
		-- positions order is changeing	
		-- main two exchange nodes (inner root nodes)
		SELECT TOP (1) @DownRootCategoryID = cl.CategoryID, @UpNewPosition = cl.Position FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryList] AS cl
			WHERE cl.ParentCategory = @Parent AND cl.Position < @Position AND cl.PortalID = @PortalID ORDER BY cl.Position DESC
			
		IF @DownRootCategoryID IS NOT NULL -- if null then this is first sibbling and cannot move up
		BEGIN
			-- up root node
			UPDATE {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryList] SET Position = @UpNewPosition WHERE CategoryID = @CategoryID;
			-- Exchange childes positions
			-- up node childe''''s		
			;WITH Childes AS(
				SELECT [CategoryID],[Position]
				FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryList] AS cl
				WHERE cl.ParentCategory = @CategoryID AND PortalID = @PortalID
				UNION ALL
				SELECT c.[CategoryID],c.[Position]
				FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryList] AS c INNER JOIN Childes AS p ON c.ParentCategory = p.CategoryID WHERE c.PortalID = @PortalID
			),
			ChildesPositionsMath AS(
				SELECT [CategoryID], ROW_NUMBER() OVER (ORDER BY Position ASC) AS offset FROM Childes
			)
			UPDATE cl SET cl.Position = (@UpNewPosition + cpm.offset) FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryList] as cl INNER JOIN ChildesPositionsMath as cpm ON cl.CategoryID = cpm.CategoryID;
			-- down node
			;WITH Childes AS(
				SELECT [CategoryID],[Position]
				FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryList] AS cl
				WHERE cl.ParentCategory = @CategoryID AND PortalID = @PortalID
				UNION ALL
				SELECT c.[CategoryID],c.[Position]
				FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryList] AS c INNER JOIN Childes AS p ON c.ParentCategory = p.CategoryID WHERE c.PortalID = @PortalID
			)
			SELECT @DownNewPosition = ( COUNT([Position]) + @UpNewPosition + 1) FROM Childes;		
			UPDATE {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryList] SET Position = @DownNewPosition WHERE CategoryID = @DownRootCategoryID;		
			-- down node childe''''s	
			;WITH Childes AS(
				SELECT [CategoryID],[Position]
				FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryList] AS cl
				WHERE cl.ParentCategory = @DownRootCategoryID AND PortalID = @PortalID
				UNION ALL
				SELECT c.[CategoryID],c.[Position]
				FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryList] AS c INNER JOIN Childes AS p ON c.ParentCategory = p.CategoryID WHERE c.PortalID = @PortalID
			),
			ChildesPositionsMath AS(
				SELECT [CategoryID], ROW_NUMBER() OVER (ORDER BY Position ASC) AS offset FROM Childes
			)
			UPDATE cl SET cl.Position = (@DownNewPosition + cpm.offset) FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryList] as cl INNER JOIN ChildesPositionsMath as cpm ON cl.CategoryID = cpm.CategoryID;
			-- all other Categories on portal position won''''t change
		END
	END	
	ELSE IF @Operation = ''DOWN''
	BEGIN
		-- main two exchange nodes (inner root nodes)		
		SELECT TOP (1) @UpRootCategoryID = cl.CategoryID, @DownNewPosition = cl.Position FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryList] AS cl
			WHERE cl.ParentCategory = @Parent AND cl.Position > @Position AND cl.PortalID = @PortalID ORDER BY cl.Position ASC
			
		IF @UpRootCategoryID IS NOT NULL -- if null then this is last sibbling and cannot move down
		BEGIN
			-- up root node
			UPDATE {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryList] SET Position = @Position WHERE CategoryID = @UpRootCategoryID;
			-- Exchange childes positions
			-- up node childe''''s		
			;WITH Childes AS(
				SELECT [CategoryID],[Position]
				FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryList] AS cl
				WHERE cl.ParentCategory = @UpRootCategoryID AND PortalID = @PortalID
				UNION ALL
				SELECT c.[CategoryID],c.[Position]
				FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryList] AS c INNER JOIN Childes AS p ON c.ParentCategory = p.CategoryID WHERE c.PortalID = @PortalID
			),
			ChildesPositionsMath AS(
				SELECT [CategoryID], ROW_NUMBER() OVER (ORDER BY Position ASC) AS offset FROM Childes
			)
			UPDATE cl SET cl.Position = (@Position + cpm.offset) FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryList] as cl INNER JOIN ChildesPositionsMath as cpm ON cl.CategoryID = cpm.CategoryID;
			-- down node
			;WITH Childes AS(
				SELECT [CategoryID],[Position]
				FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryList] AS cl
				WHERE cl.ParentCategory = @UpRootCategoryID AND PortalID = @PortalID
				UNION ALL
				SELECT c.[CategoryID],c.[Position]
				FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryList] AS c INNER JOIN Childes AS p ON c.ParentCategory = p.CategoryID WHERE c.PortalID = @PortalID
			)
			SELECT @UpNewPosition = ( COUNT([Position]) + @Position + 1 ) FROM Childes;		
			UPDATE {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryList] SET Position = @UpNewPosition WHERE CategoryID = @CategoryID;
			
			-- down node childe''''s
			
			;WITH Childes AS(
				SELECT [CategoryID],[Position]
				FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryList] AS cl
				WHERE cl.ParentCategory = @CategoryID AND PortalID = @PortalID
				UNION ALL
				SELECT c.[CategoryID],c.[Position]
				FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryList] AS c INNER JOIN Childes AS p ON c.ParentCategory = p.CategoryID WHERE c.PortalID = @PortalID
			),
			ChildesPositionsMath AS(
				SELECT [CategoryID], ROW_NUMBER() OVER (ORDER BY Position ASC) AS offset FROM Childes
			)
			UPDATE cl SET cl.Position = (@UpNewPosition + cpm.offset) FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryList] as cl INNER JOIN ChildesPositionsMath as cpm ON cl.CategoryID = cpm.CategoryID;		
			-- all other Categories on portal position won''''t change
		END
	END
END
END TRY
BEGIN CATCH
    IF @@TRANCOUNT > 0
        ROLLBACK TRANSACTION;
END CATCH;
IF @@TRANCOUNT > 0
    COMMIT TRANSACTION;' 
END
GO

/****** Object:  StoredProcedure {databaseOwner}[{objectQualifier}EasyDNNNewsGetCategoryAutoAdd]    Script Date: 06/26/2013 10:32:09 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'{databaseOwner}[{objectQualifier}EasyDNNNewsGetCategoryAutoAdd]') AND type in (N'P', N'PC'))
DROP PROCEDURE {databaseOwner}[{objectQualifier}EasyDNNNewsGetCategoryAutoAdd]
GO
/****** Object:  StoredProcedure {databaseOwner}[{objectQualifier}EasyDNNNewsGetCategoryAutoAdd]    Script Date: 06/26/2013 10:32:09 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'{databaseOwner}[{objectQualifier}EasyDNNNewsGetCategoryAutoAdd]') AND type in (N'P', N'PC'))
BEGIN
EXEC dbo.sp_executesql @statement = N'CREATE PROCEDURE {databaseOwner}[{objectQualifier}EasyDNNNewsGetCategoryAutoAdd]
	@PortalID int,
    @ModuleID int
AS 
;WITH hierarchy AS (
	SELECT CategoryID, ParentCategory, CategoryName
	FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryList] AS cl
	WHERE (cl.ParentCategory IN (
		SELECT [CategoryID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsModuleCategoryItems] WHERE ModuleID = @ModuleID
		) OR cl.CategoryID IN (
		SELECT [CategoryID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsModuleCategoryItems] WHERE ModuleID = @ModuleID)
	) AND PortalID = @PortalID

	UNION ALL

	SELECT c.CategoryID, c.ParentCategory, c.[CategoryName]
	FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryList] AS c INNER JOIN hierarchy AS p ON c.ParentCategory = p.CategoryID
	WHERE c.PortalID = @PortalID
)
SELECT DISTINCT CategoryID FROM hierarchy;' 
END
GO
/****** Object:  StoredProcedure {databaseOwner}[{objectQualifier}EasyDNNnewsArticleArchive]    Script Date: 06/24/2013 16:39:06 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'{databaseOwner}[{objectQualifier}EasyDNNnewsArticleArchive]') AND type in (N'P', N'PC'))
BEGIN
EXEC dbo.sp_executesql @statement = N'CREATE PROCEDURE {databaseOwner}[{objectQualifier}EasyDNNnewsArticleArchive]
(
@ArticleID int,
@numOfHistory int   
)
AS
	DECLARE @latestValue int;
	SET @latestValue = 0;
	DECLARE @numOfHistoryDB int;
	SET @numOfHistoryDB = 0;
BEGIN TRANSACTION;
BEGIN TRY
        SET NOCOUNT ON;      
        BEGIN
		IF @numOfHistory = 0
			BEGIN
				DELETE FROM {databaseOwner}[{objectQualifier}EasyDNNNewsArchive] WHERE ArticleID = @ArticleID;
			END
        ELSE
			BEGIN
				SELECT @numOfHistoryDB = CASE WHEN Count(HistoryVersion) IS NULL THEN 0 ELSE Count(HistoryVersion) END FROM {databaseOwner}[{objectQualifier}EasyDNNNewsArchive] WHERE ArticleID=@ArticleID;
				IF @numOfHistoryDB <> 0 AND @numOfHistoryDB >= @numOfHistory -- if contains history items and if need to delete overflow items
				BEGIN
					DELETE FROM {databaseOwner}[{objectQualifier}EasyDNNNewsArchive] WHERE ArticleID = @ArticleID AND HistoryEntryID IN
						 (SELECT TOP(@numOfHistoryDB - @numOfHistory + 1) HistoryEntryID FROM {databaseOwner}[{objectQualifier}EasyDNNNewsArchive]
						  WHERE ArticleID = @ArticleID ORDER BY HistoryVersion ASC);
					With cte As
						(
						SELECT ArticleID, HistoryVersion, ROW_NUMBER() OVER (ORDER BY HistoryVersion ASC) AS RN FROM {databaseOwner}[{objectQualifier}EasyDNNNewsArchive] WHERE ArticleID=@ArticleID
						)
						UPDATE cte SET HistoryVersion=RN  WHERE ArticleID=@ArticleID;
				END
			END
				
		IF @numOfHistory <> 0
		BEGIN
			SELECT @latestValue = CASE WHEN max(HistoryVersion) IS NULL THEN 1 ELSE max(HistoryVersion) + 1 END FROM {databaseOwner}[{objectQualifier}EasyDNNNewsArchive] WHERE ArticleID = @ArticleID;	

			INSERT INTO {databaseOwner}[{objectQualifier}EasyDNNNewsArchive] SELECT
				   n.[PortalID]
				  ,n.[UserID]
				  ,n.[Title]
				  ,n.[SubTitle]
				  ,n.[Summary]
				  ,n.[Article]
				  ,n.[ArticleImage]
				  ,n.[LastModified]
				  ,n.[PublishDate]
				  ,n.[ExpireDate]
				  ,n.[Featured]
				  ,n.[AllowComments]
				  ,n.[TitleLink]
				  ,n.[DetailType]
				  ,n.[DetailTypeData]
				  ,n.[DetailsTemplate]
				  ,n.[DetailsTheme]
				  ,n.[GalleryPosition]
				  ,n.[GalleryDisplayType]
				  ,n.[ShowMainImage]
				  ,n.[ShowMainImageFront]
				  ,n.[CommentsTheme]
				  ,n.[ArticleImageFolder]
				  ,[HistoryVersion] = @latestValue
				  ,n.[ArticleID]
			FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS n WHERE ArticleID = @ArticleID;
		 END
        END
END TRY
BEGIN CATCH
    SELECT 
         ERROR_NUMBER() AS ErrorNumber
        ,ERROR_SEVERITY() AS ErrorSeverity
        ,ERROR_STATE() AS ErrorState
        ,ERROR_PROCEDURE() AS ErrorProcedure
        ,ERROR_LINE() AS ErrorLine
        ,ERROR_MESSAGE() AS ErrorMessage;
    IF @@TRANCOUNT > 0
        ROLLBACK TRANSACTION;
END CATCH;

IF @@TRANCOUNT > 0
    COMMIT TRANSACTION;
' 
END
GO
/****** Object:  StoredProcedure {databaseOwner}[{objectQualifier}EasyDNNnewsGroupsAndAuthors]    Script Date: 06/26/2013 11:08:45 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'{databaseOwner}[{objectQualifier}EasyDNNnewsGroupsAndAuthors]') AND type in (N'P', N'PC'))
BEGIN
EXEC dbo.sp_executesql @statement = N'CREATE PROCEDURE {databaseOwner}[{objectQualifier}EasyDNNnewsGroupsAndAuthors]
	@PortalID int,
	@ModuleID int,
	@NotInGroupPosition bit, -- 0 gore, 1 dolje
	@DisplayAll bit = 1,
	@RoleID int = -1
AS 
DECLARE @i Int, @MaxI Int, @GroupID Int;
DECLARE @TableGroups Table ([PortalID] int not null
	,[GroupID] int not null
	,[GroupName] nvarchar(250) not null
	,[GroupInfo] nvarchar(4000) null
	,[GroupImage] nvarchar(1000) null
	,[FacebookURL] nvarchar(1000) null
	,[TwitterURL] nvarchar(1000) null
	,[GooglePlusURL] nvarchar(1000) null
	,[LinkedInURL] nvarchar(1000) null
	,[Parent] int null
	,[Level] int not null
	,[Position] int not null
	,[GroupLinkType] tinyint not null
	,[GroupURL] nvarchar(1000) null
	,[MyRowCount] Int Identity(1,1))
DECLARE @resultTable Table ([OrderBy] Int Identity(1,1), [UserID] int null
	,[Username] nvarchar(100) null
	,[FirstName] nvarchar(50) null
	,[LastName] nvarchar(50) null
	,[Email] nvarchar(256) null
	,[DisplayName] nvarchar(128) null
	,[AuthorProfileID] int null
	,[ShortInfo] nvarchar(350) null
	,[ProfileImage] nvarchar(1000) null
	,[FacebookURL] nvarchar(1000) null
	,[TwitterURL] nvarchar(1000) null
	,[GooglePlusURL] nvarchar(1000) null
	,[LinkedInURL] nvarchar(1000) null
	,[DateAdded] datetime null
	,[Active] bit null
	,[ArticleCount] int null
	,[AuthorLinkType] tinyint null
	,[AuthorURL] nvarchar(1000) null
	,[GroupID] int null
	,[GroupName] nvarchar(250) null
	,[GroupInfo] nvarchar(4000) null
	,[GroupImage] nvarchar(1000) null
	,[GFacebookURL] nvarchar(1000) null
	,[GTwitterURL] nvarchar(1000) null
	,[GGooglePlusURL] nvarchar(1000) null
	,[GLinkedInURL] nvarchar(1000) null
	,[Parent] int null
	,[Level] int null
	,[Position] int null
	,[GroupLinkType] tinyint null
	,[GroupURL] nvarchar(1000) null)     
SET NOCOUNT ON;
 IF @RoleID <> -1
BEGIN
	INSERT INTO @resultTable SELECT u.[UserID]
		,u.[Username]
		,u.[FirstName]
		,u.[LastName]
		,u.[Email]
		,u.[DisplayName]
		,ap.[AuthorProfileID]
		,ap.[ShortInfo]
		,ap.[ProfileImage]
		,ap.[FacebookURL]
		,ap.[TwitterURL]
		,ap.[GooglePlusURL]
		,ap.[LinkedInURL]
		,ap.[DateAdded]
		,ap.[Active]
		,ap.[ArticleCount]
		,ap.[LinkType] AS AuthorLinkType
		,ap.[AuthorURL]
		,null,null,null,null,null,null,null,null,null,null,null,null,null
	FROM {databaseOwner}[{objectQualifier}Users] AS u INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsAuthorProfile] AS ap ON u.UserID = ap.UserID INNER JOIN {databaseOwner}[{objectQualifier}UserRoles] AS ur ON ur.UserID = ap.UserID
	WHERE ap.PortalID = @PortalID AND ur.RoleID = @RoleID ORDER BY Username
END
ELSE
BEGIN
	IF @NotInGroupPosition = 0
	BEGIN
		IF @DisplayAll = 1
		BEGIN
			INSERT INTO @resultTable SELECT u.[UserID]
			  ,u.[Username]
			  ,u.[FirstName]
			  ,u.[LastName]
			  ,u.[Email]
			  ,u.[DisplayName]
			  ,ap.[AuthorProfileID]
			  ,ap.[ShortInfo]
			  ,ap.[ProfileImage]
			  ,ap.[FacebookURL]
			  ,ap.[TwitterURL]
			  ,ap.[GooglePlusURL]
			  ,ap.[LinkedInURL]
			  ,ap.[DateAdded]
			  ,ap.[Active]
			  ,ap.[ArticleCount]
			  ,ap.[LinkType] AS AuthorLinkType
              ,ap.[AuthorURL]
			  ,null,null,null,null,null,null,null,null,null,null,null,null,null
		  FROM {databaseOwner}[{objectQualifier}Users] AS u INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsAuthorProfile] AS ap ON u.UserID = ap.UserID WHERE ap.PortalID = @PortalID AND ap.AuthorProfileID NOT IN (SELECT AuthorProfileID FROM {databaseOwner}[{objectQualifier}EasyDNNNewsAutorGroupItems]) ORDER BY Username
		END
		ELSE
		BEGIN
			INSERT INTO @resultTable SELECT u.[UserID]
			  ,u.[Username]
			  ,u.[FirstName]
			  ,u.[LastName]
			  ,u.[Email]
			  ,u.[DisplayName]
			  ,ap.[AuthorProfileID]
			  ,ap.[ShortInfo]
			  ,ap.[ProfileImage]
			  ,ap.[FacebookURL]
			  ,ap.[TwitterURL]
			  ,ap.[GooglePlusURL]
			  ,ap.[LinkedInURL]
			  ,ap.[DateAdded]
			  ,ap.[Active]
			  ,ap.[ArticleCount]
			  ,ap.[LinkType] AS AuthorLinkType
              ,ap.[AuthorURL]
			  ,null,null,null,null,null,null,null,null,null,null,null,null,null
		  FROM {databaseOwner}[{objectQualifier}Users] AS u INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsAuthorProfile] AS ap ON u.UserID = ap.UserID INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsModuleAuthorsItems] as mai ON mai.UserID = ap.UserID AND mai.ModuleID = @ModuleID WHERE ap.PortalID = @PortalID AND ap.AuthorProfileID NOT IN (SELECT AuthorProfileID FROM {databaseOwner}[{objectQualifier}EasyDNNNewsAutorGroupItems] as agi INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsModuleGroupItems] as mgi ON agi.GroupId = mgi.GroupID WHERE mgi.ModuleID = @ModuleID) ORDER BY Username
		END
	END
	IF @DisplayAll = 1
	BEGIN
		INSERT INTO @TableGroups SELECT nag.[PortalID]
			,nag.[GroupID]
			,nag.[GroupName]
			,nag.[GroupInfo]
			,nag.[GroupImage]
			,nag.[FacebookURL]
			,nag.[TwitterURL]
			,nag.[GooglePlusURL]
			,nag.[LinkedInURL]
			,nag.[Parent]
			,nag.[Level]
			,nag.[Position]
			,nag.[LinkType] as GroupLinkType
			,nag.[GroupURL]
		FROM {databaseOwner}[{objectQualifier}EasyDNNNewsAuthorGroups] AS nag WHERE nag.[GroupID] IN (SELECT DISTINCT nag.GroupID FROM {databaseOwner}[{objectQualifier}EasyDNNNewsAuthorGroups] as nag INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsAutorGroupItems] AS agi ON agi.GroupID = nag.GroupID WHERE nag.PortalID = @PortalID) ORDER BY Position;
	END
	ELSE
	BEGIN
		INSERT INTO @TableGroups SELECT DISTINCT nag.[PortalID]
			,nag.[GroupID]
			,nag.[GroupName]
			,nag.[GroupInfo]
			,nag.[GroupImage]
			,nag.[FacebookURL]
			,nag.[TwitterURL]
			,nag.[GooglePlusURL]
			,nag.[LinkedInURL]
			,nag.[Parent]
			,nag.[Level]
			,nag.[Position]
			,nag.[LinkType] as GroupLinkType
			,nag.[GroupURL]
		FROM {databaseOwner}[{objectQualifier}EasyDNNNewsAuthorGroups] AS nag WHERE nag.[GroupID] IN (SELECT DISTINCT nag.GroupID FROM {databaseOwner}[{objectQualifier}EasyDNNNewsAuthorGroups] as nag INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsAutorGroupItems] AS agi
		ON agi.GroupID = nag.GroupID INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsModuleGroupItems] AS mgi ON nag.GroupID = mgi.GroupID
		WHERE mgi.ModuleID = @ModuleID AND nag.PortalID = @PortalID) ORDER BY Position;
	END
	
	SELECT @MaxI = @@RowCount;
	SELECT @i = 0;
    WHILE @i < @MaxI
	BEGIN
		SET @i = @i + 1;
		SELECT @GroupID = GroupID FROM @TableGroups Where MyRowCount = @i
		INSERT INTO @resultTable SELECT
			null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null
			,[GroupID]
			,[GroupName]
			,[GroupInfo]
			,[GroupImage]
			,[FacebookURL]
			,[TwitterURL]
			,[GooglePlusURL]
			,[LinkedInURL]
			,[Parent]
			,[Level]
			,[Position]
			,[GroupLinkType]
			,[GroupURL]
		FROM @TableGroups WHERE MyRowCount = @i
		INSERT INTO @resultTable SELECT u.[UserID]
			,u.[Username]
			,u.[FirstName]
			,u.[LastName]
			,u.[Email]
			,u.[DisplayName]
			,ap.[AuthorProfileID]
			,ap.[ShortInfo]
			,ap.[ProfileImage]
			,ap.[FacebookURL]
			,ap.[TwitterURL]
			,ap.[GooglePlusURL]
			,ap.[LinkedInURL]
			,ap.[DateAdded]
			,ap.[Active]
			,ap.[ArticleCount]
			,ap.[LinkType] AS AuthorLinkType
			,ap.[AuthorURL]
			,null,null,null,null,null,null,null,null,null,null,null,null,null
		FROM {databaseOwner}[{objectQualifier}Users] AS u INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsAuthorProfile] AS ap ON u.UserID = ap.UserID INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsAutorGroupItems] AS agi ON agi.AuthorProfileID = ap.AuthorProfileID
		WHERE agi.GroupID = @GroupID
	END
	IF @NotInGroupPosition = 1
	BEGIN
		IF @DisplayAll = 1
		BEGIN
			INSERT INTO @resultTable SELECT u.[UserID]
				,u.[Username]
				,u.[FirstName]
				,u.[LastName]
				,u.[Email]
				,u.[DisplayName]
				,ap.[AuthorProfileID]
				,ap.[ShortInfo]
				,ap.[ProfileImage]
				,ap.[FacebookURL]
				,ap.[TwitterURL]
				,ap.[GooglePlusURL]
				,ap.[LinkedInURL]
				,ap.[DateAdded]
				,ap.[Active]
				,ap.[ArticleCount]
				,ap.[LinkType] AS AuthorLinkType
				,ap.[AuthorURL]
				,null,null,null,null,null,null,null,null,null,null,null,null,null
			FROM {databaseOwner}[{objectQualifier}Users] AS u INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsAuthorProfile] AS ap ON u.UserID = ap.UserID WHERE ap.PortalID = @PortalID AND ap.AuthorProfileID NOT IN (SELECT AuthorProfileID FROM {databaseOwner}[{objectQualifier}EasyDNNNewsAutorGroupItems]) ORDER BY Username
		END
		ELSE
		BEGIN
			INSERT INTO @resultTable SELECT u.[UserID]
				,u.[Username]
				,u.[FirstName]
				,u.[LastName]
				,u.[Email]
				,u.[DisplayName]
				,ap.[AuthorProfileID]
				,ap.[ShortInfo]
				,ap.[ProfileImage]
				,ap.[FacebookURL]
				,ap.[TwitterURL]
				,ap.[GooglePlusURL]
				,ap.[LinkedInURL]
				,ap.[DateAdded]
				,ap.[Active]
				,ap.[ArticleCount]
				,ap.[LinkType] AS AuthorLinkType
				,ap.[AuthorURL]
				,null,null,null,null,null,null,null,null,null,null,null,null,null
			FROM {databaseOwner}[{objectQualifier}Users] AS u INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsAuthorProfile] AS ap ON u.UserID = ap.UserID INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsModuleAuthorsItems] as mai ON mai.UserID = ap.UserID AND mai.ModuleID = @ModuleID WHERE ap.PortalID = @PortalID AND ap.AuthorProfileID NOT IN (SELECT AuthorProfileID FROM {databaseOwner}[{objectQualifier}EasyDNNNewsAutorGroupItems] as agi INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsModuleGroupItems] as mgi ON agi.GroupId = mgi.GroupID WHERE mgi.ModuleID = @ModuleID) ORDER BY Username
	  END
	END
 END 
 
 SELECT * FROM @resultTable ORDER BY OrderBy;' 
END
GO

/****** Object:  StoredProcedure {databaseOwner}[{objectQualifier}EasyDNNNewsPermissions]    Script Date: 06/24/2013 16:39:07 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'{databaseOwner}[{objectQualifier}EasyDNNNewsPermissions]') AND type in (N'P', N'PC'))
BEGIN
EXEC dbo.sp_executesql @statement = N'CREATE PROCEDURE {databaseOwner}[{objectQualifier}EasyDNNNewsPermissions]
    @UserID int,
    @PortalID int,
    @ModuleID int
AS 
SET NOCOUNT ON;
DECLARE @CheckModuleID bit;
IF @ModuleID IS NULL
BEGIN
	SET @CheckModuleID = 1;
END
ELSE
BEGIN
	SET @CheckModuleID = 0;
END

IF @UserID = -1
BEGIN
	SELECT [ApproveArticles],[DocumentUpload],[DocumentDownload],[AddEditCategories],[AllowToComment],[ApproveComments],[ViewPaidContent],[ShowSharedGallery],[ShowCustomGallery],[AddArticleToAll],[ShowAllCategories],[AddPerArticle],[PostToSocialNetwork],
	      [SubTitle],[SEO],[Summary],[Text],[Page],[File],[Link],[None],[Tags],[ArticleGallery],[GoogleMap],[ChangeTemplate],[Events],[AllowComments],[Featured],[PublishExpire]
		FROM {databaseOwner}[{objectQualifier}EasyDNNNewsRolePremissionSettings] AS rps WHERE rps.RoleID IS NULL AND ((@CheckModuleID = 1 AND (rps.ModuleID IS NULL)) OR (@CheckModuleID = 0 AND (rps.ModuleID = @ModuleID))) AND rps.PortalID = @PortalID
END
ELSE
BEGIN
	WITH RoleAndUserRights as
	(
		SELECT DISTINCT [ApproveArticles],[DocumentUpload],[DocumentDownload],[AddEditCategories],[AllowToComment],[ApproveComments],[ViewPaidContent],[ShowSharedGallery],[ShowCustomGallery],[AddArticleToAll],[ShowAllCategories],[AddPerArticle],[PostToSocialNetwork],
	        [SubTitle],[SEO],[Summary],[Text],[Page],[File],[Link],[None],[Tags],[ArticleGallery],[GoogleMap],[ChangeTemplate],[Events],[AllowComments],[Featured],[PublishExpire]
			FROM {databaseOwner}[{objectQualifier}EasyDNNNewsRolePremissionSettings] AS rps INNER JOIN {databaseOwner}[{objectQualifier}UserRoles] AS ur ON ur.RoleID = rps.RoleID
		WHERE ur.UserID = @UserID AND (ur.ExpiryDate IS NULL OR ur.ExpiryDate > GETUTCDATE()) AND (ur.EffectiveDate IS NULL OR ur.EffectiveDate < GETUTCDATE()) AND ((@CheckModuleID = 1 AND (rps.ModuleID IS NULL)) OR (@CheckModuleID = 0 AND (rps.ModuleID = @ModuleID))) AND rps.PortalID = @PortalID
		UNION
		SELECT [ApproveArticles],[DocumentUpload],[DocumentDownload],[AddEditCategories],[AllowToComment],[ApproveComments],[ViewPaidContent],[ShowSharedGallery],[ShowCustomGallery],[AddArticleToAll],[ShowAllCategories],[AddPerArticle],[PostToSocialNetwork],
	        [SubTitle],[SEO],[Summary],[Text],[Page],[File],[Link],[None],[Tags],[ArticleGallery],[GoogleMap],[ChangeTemplate],[Events],[AllowComments],[Featured],[PublishExpire]
			FROM {databaseOwner}[{objectQualifier}EasyDNNNewsUserPremissionSettings] AS ups
		WHERE ups.UserID = @UserID AND ((@CheckModuleID = 1 AND (ups.ModuleID IS NULL)) OR (@CheckModuleID = 0 AND (ups.ModuleID = @ModuleID))) AND ups.PortalID = @PortalID
	)
	SELECT TOP(1)
		CASE WHEN EXISTS (SELECT ApproveArticles FROM RoleAndUserRights WHERE ApproveArticles = 1) THEN CAST(1 AS bit) ELSE CAST(0 AS bit) END AS ApproveArticles,
		CASE WHEN EXISTS (SELECT DocumentUpload FROM RoleAndUserRights WHERE DocumentUpload = 1) THEN CAST(1 AS bit) ELSE CAST(0 AS bit) END AS DocumentUpload,
		CASE WHEN EXISTS (SELECT DocumentDownload FROM RoleAndUserRights WHERE DocumentDownload = 1) THEN CAST(1 AS bit) ELSE CAST(0 AS bit) END AS DocumentDownload,
		CASE WHEN EXISTS (SELECT AddEditCategories FROM RoleAndUserRights WHERE AddEditCategories = 1) THEN CAST(1 AS bit) ELSE CAST(0 AS bit) END AS AddEditCategories,
		CASE WHEN EXISTS (SELECT AllowToComment FROM RoleAndUserRights WHERE AllowToComment = 1) THEN CAST(1 AS bit) ELSE CAST(0 AS bit) END AS AllowToComment,
		CASE WHEN EXISTS (SELECT ApproveComments FROM RoleAndUserRights WHERE ApproveComments = 1) THEN CAST(1 AS bit) ELSE CAST(0 AS bit) END AS ApproveComments,
		CASE WHEN EXISTS (SELECT ViewPaidContent FROM RoleAndUserRights WHERE ViewPaidContent = 1) THEN CAST(1 AS bit) ELSE CAST(0 AS bit) END AS ViewPaidContent,
		CASE WHEN EXISTS (SELECT ShowSharedGallery FROM RoleAndUserRights WHERE ShowSharedGallery = 1) THEN CAST(1 AS bit) ELSE CAST(0 AS bit) END AS ShowSharedGallery,
		CASE WHEN EXISTS (SELECT ShowCustomGallery FROM RoleAndUserRights WHERE ShowCustomGallery = 1) THEN CAST(1 AS bit) ELSE CAST(0 AS bit) END AS ShowCustomGallery,
		CASE WHEN EXISTS (SELECT AddArticleToAll FROM RoleAndUserRights WHERE AddArticleToAll = 1) THEN CAST(1 AS bit) ELSE CAST(0 AS bit) END AS AddArticleToAll,
		CASE WHEN EXISTS (SELECT ShowAllCategories FROM RoleAndUserRights WHERE ShowAllCategories = 1) THEN CAST(1 AS bit) ELSE CAST(0 AS bit) END AS ShowAllCategories,
		CASE WHEN EXISTS (SELECT AddPerArticle FROM RoleAndUserRights WHERE AddPerArticle = 1) THEN CAST(1 AS bit) ELSE CAST(0 AS bit) END AS AddPerArticle,
		CASE WHEN EXISTS (SELECT PostToSocialNetwork FROM RoleAndUserRights WHERE PostToSocialNetwork = 1) THEN CAST(1 AS bit) ELSE CAST(0 AS bit) END AS PostToSocialNetwork,
	    CASE WHEN EXISTS (SELECT SubTitle FROM RoleAndUserRights WHERE SubTitle = 1) THEN CAST(1 AS bit) ELSE CAST(0 AS bit) END AS SubTitle,
	    CASE WHEN EXISTS (SELECT SEO FROM RoleAndUserRights WHERE SEO = 1) THEN CAST(1 AS bit) ELSE CAST(0 AS bit) END AS SEO, 
	    CASE WHEN EXISTS (SELECT Summary FROM RoleAndUserRights WHERE Summary = 1) THEN CAST(1 AS bit) ELSE CAST(0 AS bit) END AS Summary, 
	    CASE WHEN EXISTS (SELECT [Text] FROM RoleAndUserRights WHERE [Text] = 1) THEN CAST(1 AS bit) ELSE CAST(0 AS bit) END AS [Text], 
	    CASE WHEN EXISTS (SELECT [Page] FROM RoleAndUserRights WHERE [Page] = 1) THEN CAST(1 AS bit) ELSE CAST(0 AS bit) END AS [Page], 
	    CASE WHEN EXISTS (SELECT [File] FROM RoleAndUserRights WHERE [File] = 1) THEN CAST(1 AS bit) ELSE CAST(0 AS bit) END AS [File], 
	    CASE WHEN EXISTS (SELECT [Link] FROM RoleAndUserRights WHERE [Link] = 1) THEN CAST(1 AS bit) ELSE CAST(0 AS bit) END AS [Link], 
	    CASE WHEN EXISTS (SELECT [None] FROM RoleAndUserRights WHERE [None] = 1) THEN CAST(1 AS bit) ELSE CAST(0 AS bit) END AS [None], 
	    CASE WHEN EXISTS (SELECT [Tags] FROM RoleAndUserRights WHERE [Tags] = 1) THEN CAST(1 AS bit) ELSE CAST(0 AS bit) END AS [Tags], 
	    CASE WHEN EXISTS (SELECT [ArticleGallery] FROM RoleAndUserRights WHERE [ArticleGallery] = 1) THEN CAST(1 AS bit) ELSE CAST(0 AS bit) END AS [ArticleGallery], 
	    CASE WHEN EXISTS (SELECT [GoogleMap] FROM RoleAndUserRights WHERE [GoogleMap] = 1) THEN CAST(1 AS bit) ELSE CAST(0 AS bit) END AS [GoogleMap], 
	    CASE WHEN EXISTS (SELECT [ChangeTemplate] FROM RoleAndUserRights WHERE [ChangeTemplate] = 1) THEN CAST(1 AS bit) ELSE CAST(0 AS bit) END AS [ChangeTemplate], 
	    CASE WHEN EXISTS (SELECT [Events] FROM RoleAndUserRights WHERE [Events] = 1) THEN CAST(1 AS bit) ELSE CAST(0 AS bit) END AS [Events], 
	    CASE WHEN EXISTS (SELECT [Featured] FROM RoleAndUserRights WHERE [Featured] = 1) THEN CAST(1 AS bit) ELSE CAST(0 AS bit) END AS [Featured], 
	    CASE WHEN EXISTS (SELECT [AllowComments] FROM RoleAndUserRights WHERE [AllowComments] = 1) THEN CAST(1 AS bit) ELSE CAST(0 AS bit) END AS [AllowComments], 
	    CASE WHEN EXISTS (SELECT [PublishExpire] FROM RoleAndUserRights WHERE [PublishExpire] = 1) THEN CAST(1 AS bit) ELSE CAST(0 AS bit) END AS [PublishExpire]
	FROM RoleAndUserRights
END' 
END
GO
/****** Object:  StoredProcedure {databaseOwner}[{objectQualifier}EasyDNNNewsShowCategoriesByPermissions]    Script Date: 06/24/2013 16:39:07 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'{databaseOwner}[{objectQualifier}EasyDNNNewsShowCategoriesByPermissions]') AND type in (N'P', N'PC'))
BEGIN
EXEC dbo.sp_executesql @statement = N'CREATE PROCEDURE {databaseOwner}[{objectQualifier}EasyDNNNewsShowCategoriesByPermissions]
    @UserID int,
    @PortalID int,
    @ModuleID int
AS 
SET NOCOUNT ON;
DECLARE @CheckModuleID bit;
IF @ModuleID IS NULL
BEGIN
	SET @CheckModuleID = 1;
END
ELSE
BEGIN
	SET @CheckModuleID = 0;
END
IF @UserID = -1
BEGIN
	SELECT DISTINCT CategoryID
	 FROM {databaseOwner}[{objectQualifier}EasyDNNNewsRolePremissionsShowCategories] AS rpsc
	  INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsRolePremissionSettings] AS rps ON rps.PremissionSettingsID = rpsc.PremissionSettingsID
		WHERE rps.RoleID IS NULL AND ((@CheckModuleID = 1 AND (rps.ModuleID IS NULL)) OR (@CheckModuleID = 0 AND (rps.ModuleID = @ModuleID))) AND rps.PortalID = @PortalID
END
ELSE
BEGIN
	SELECT DISTINCT CategoryID
	 FROM {databaseOwner}[{objectQualifier}EasyDNNNewsRolePremissionsShowCategories] AS rpsc
	  INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsRolePremissionSettings] AS rps ON rps.PremissionSettingsID = rpsc.PremissionSettingsID
	   INNER JOIN {databaseOwner}[{objectQualifier}UserRoles] AS ur ON ur.RoleID = rps.RoleID
		WHERE ur.UserID = @UserID AND (ur.ExpiryDate IS NULL OR ur.ExpiryDate > GETUTCDATE()) AND (ur.EffectiveDate IS NULL OR ur.EffectiveDate < GETUTCDATE()) AND ((@CheckModuleID = 1 AND (rps.ModuleID IS NULL)) OR (@CheckModuleID = 0 AND (rps.ModuleID = @ModuleID))) AND rps.PortalID = @PortalID
	UNION
	SELECT CategoryID
	 FROM {databaseOwner}[{objectQualifier}EasyDNNNewsUserPremissionsShowCategories] AS upsc
	  INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsUserPremissionSettings] AS ups ON upsc.PremissionSettingsID = ups.PremissionSettingsID
	   WHERE ups.UserID = @UserID AND ((@CheckModuleID = 1 AND (ups.ModuleID IS NULL)) OR (@CheckModuleID = 0 AND (ups.ModuleID = @ModuleID))) AND ups.PortalID = @PortalID
END' 
END
GO
/****** Object:  StoredProcedure {databaseOwner}[{objectQualifier}EasyDNNNewsGetItemsPerCategory]    Script Date: 06/24/2013 16:39:07 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'{databaseOwner}[{objectQualifier}EasyDNNNewsGetItemsPerCategory]') AND type in (N'P', N'PC'))
BEGIN
EXEC dbo.sp_executesql @statement = N'CREATE PROCEDURE {databaseOwner}[{objectQualifier}EasyDNNNewsGetItemsPerCategory]
	@PortalID int,
	@UserID int,
	@MenuModuleID int,
	@DefaultTabID int,
    @DefaultModuleID int,
	@CurrentDate DateTime,
	@AdminOrSuperUser bit  = 0,
	@CountItems bit = 0,
	@IsSocialInstance bit = 0,
	@FilterByDNNUserID int = 0, -- filter by some UserID / not current user ID
	@FilterByDNNGroupID int = 0, -- filter by DNNGroup/RoleID / not profile GroupID
	@LocaleCode nvarchar(20) = '''',	
	@Perm_ViewAllCategores bit = 1, -- ako je permsource 0 onda je ovo default 1
	@ShowAllAuthors bit = 1, -- filter postavka menija
	@CategoryFilterType tinyint = 0, --0 All categories, 1 - Selection, 2 - AutoAdd
	@HideUnlocalizedItems bit = 0,
	@OrderBy nvarchar(20) = ''PublishDate DESC'',
	@EditOnlyAsOwner bit = 0, -- news settings
	@PermissionSettingsSource tinyint = 0, -- None, 1 - portal, 2 - module
	@PermissionsModuleID int = 0 -- NewsModuleID
AS
SET NOCOUNT ON;
DECLARE @UserCanApprove bit;
SET @UserCanApprove = 0;
DECLARE @Perm_EditAllCategores bit;
SET @Perm_EditAllCategores = 0;
DECLARE @ModuleID int;
SET @ModuleID = @MenuModuleID;
DECLARE @EditPermission tinyint;
SET @EditPermission = 0;
DECLARE @UserInRoles table (RoleID int NOT NULL PRIMARY KEY);
INSERT INTO @UserInRoles SELECT DISTINCT ur.[RoleID] FROM {databaseOwner}[{objectQualifier}UserRoles] AS ur INNER JOIN {databaseOwner}[{objectQualifier}Roles] AS r ON ur.RoleID = r.RoleID WHERE ur.UserID = @UserID AND r.PortalID = @PortalID AND (ur.ExpiryDate IS NULL OR ur.ExpiryDate > GETUTCDATE()) AND (ur.EffectiveDate IS NULL OR ur.EffectiveDate < GETUTCDATE());
DECLARE @UserViewCategories table (CategoryID int NOT NULL PRIMARY KEY); -- all categories which user can see based on permissions
DECLARE @UserEditCategories TABLE (CategoryID INT NOT NULL PRIMARY KEY); -- all categories which user can edit based on permissions
DECLARE @UserViewCategoriesWithFilter table (CategoryID int NOT NULL PRIMARY KEY); -- all categories which user can see based on permissions and Module filter

DECLARE @SettingsSource bit; SET @SettingsSource = 1;
IF @AdminOrSuperUser = 1 OR @PermissionSettingsSource = 0
BEGIN
	INSERT INTO @UserViewCategories SELECT [CategoryID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryList] WHERE PortalID = @PortalID;
END
ELSE IF @UserID = -1
BEGIN	
	IF @PermissionSettingsSource = 1 -- by portal
	BEGIN
		IF EXISTS (SELECT ShowAllCategories FROM {databaseOwner}[{objectQualifier}EasyDNNNewsRolePremissionSettings] as rps WHERE rps.PortalID = @PortalID  AND rps.ModuleID IS NULL AND rps.RoleID IS NULL AND rps.ShowAllCategories = 1)
		BEGIN
			INSERT INTO @UserViewCategories SELECT [CategoryID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryList] WHERE PortalID = @PortalID;
		END
		ELSE
		BEGIN
			INSERT INTO @UserViewCategories
			SELECT rpsc.[CategoryID] FROM  {databaseOwner}[{objectQualifier}EasyDNNNewsRolePremissionsShowCategories] as rpsc 
			INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsRolePremissionSettings] as rps ON rps.PremissionSettingsID = rpsc.PremissionSettingsID
			WHERE rps.PortalID = @PortalID  AND rps.ModuleID IS NULL AND rps.RoleID IS NULL;
		END
	END
	ELSE -- by module
	BEGIN
		SELECT @SettingsSource = PermissionsPMSource FROM {databaseOwner}[{objectQualifier}EasyDNNNewsModuleSettings] WHERE ModuleID = @PermissionsModuleID;
		IF @SettingsSource = 1
		BEGIN
			IF EXISTS (SELECT ShowAllCategories FROM {databaseOwner}[{objectQualifier}EasyDNNNewsRolePremissionSettings] as rps WHERE rps.PortalID = @PortalID  AND rps.ModuleID IS NULL AND rps.RoleID IS NULL AND rps.ShowAllCategories = 1)
			BEGIN
				INSERT INTO @UserViewCategories SELECT [CategoryID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryList] WHERE PortalID = @PortalID;
			END
			ELSE
			BEGIN
				INSERT INTO @UserViewCategories
				SELECT rpsc.[CategoryID] FROM  {databaseOwner}[{objectQualifier}EasyDNNNewsRolePremissionsShowCategories] as rpsc 
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsRolePremissionSettings] as rps ON rps.PremissionSettingsID = rpsc.PremissionSettingsID
				WHERE rps.PortalID = @PortalID  AND rps.ModuleID IS NULL AND rps.RoleID IS NULL;
			END
		END
		ELSE
		BEGIN
			IF EXISTS (SELECT ShowAllCategories FROM {databaseOwner}[{objectQualifier}EasyDNNNewsRolePremissionSettings] as rps WHERE rps.PortalID = @PortalID AND rps.ModuleID = @PermissionsModuleID AND rps.RoleID IS NULL AND rps.ShowAllCategories = 1)
			BEGIN
				INSERT INTO @UserViewCategories SELECT [CategoryID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryList] WHERE PortalID = @PortalID;
			END
			ELSE
			BEGIN
				INSERT INTO @UserViewCategories
				SELECT rpsc.[CategoryID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsRolePremissionsShowCategories] as rpsc
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsRolePremissionSettings] as rps ON rps.PremissionSettingsID = rpsc.PremissionSettingsID
				WHERE rps.PortalID = @PortalID AND rps.ModuleID = @PermissionsModuleID AND rps.RoleID IS NULL;
			END
		END
	END
END
ELSE -- registrirani korisnik
BEGIN
	IF @PermissionSettingsSource = 1 -- by portal
	BEGIN
		IF EXISTS (
				SELECT TOP (1) ShowAllCategories FROM {databaseOwner}[{objectQualifier}EasyDNNNewsRolePremissionSettings] as rps
					INNER JOIN @UserInRoles as uir ON rps.RoleID = uir.RoleID
					WHERE rps.PortalID = @PortalID AND rps.ModuleID IS NULL AND rps.ShowAllCategories = 1
				UNION
				SELECT ShowAllCategories FROM {databaseOwner}[{objectQualifier}EasyDNNNewsUserPremissionSettings] as ups
				WHERE ups.UserID = @UserID AND ups.PortalID = @PortalID AND ups.ModuleID IS NULL AND ups.ShowAllCategories = 1
		)
		BEGIN
			INSERT INTO @UserViewCategories SELECT [CategoryID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryList] WHERE PortalID = @PortalID;
		END
		ELSE
		BEGIN
			INSERT INTO @UserViewCategories
			SELECT rpsc.[CategoryID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsRolePremissionsShowCategories] as rpsc
			INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsRolePremissionSettings] as rps ON rps.PremissionSettingsID = rpsc.PremissionSettingsID
			INNER JOIN @UserInRoles as uir ON rps.RoleID = uir.RoleID
			WHERE rps.PortalID = @PortalID AND rps.ModuleID IS NULL GROUP BY rpsc.[CategoryID]
			UNION
			SELECT upsc.[CategoryID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsUserPremissionsShowCategories] as upsc
			INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsUserPremissionSettings] as ups ON ups.PremissionSettingsID = upsc.PremissionSettingsID
			WHERE ups.UserID = @UserID AND ups.PortalID = @PortalID AND ups.ModuleID IS NULL GROUP BY upsc.[CategoryID];
		END
	END
	ELSE -- by module
	BEGIN
		SELECT @SettingsSource = PermissionsPMSource FROM {databaseOwner}[{objectQualifier}EasyDNNNewsModuleSettings] WHERE ModuleID = @PermissionsModuleID;
		IF @SettingsSource = 1
		BEGIN
			IF EXISTS (
				SELECT TOP (1) ShowAllCategories FROM {databaseOwner}[{objectQualifier}EasyDNNNewsRolePremissionSettings] as rps
					INNER JOIN @UserInRoles as uir ON rps.RoleID = uir.RoleID
					WHERE rps.PortalID = @PortalID AND rps.ModuleID IS NULL AND rps.ShowAllCategories = 1
				UNION
				SELECT ShowAllCategories FROM {databaseOwner}[{objectQualifier}EasyDNNNewsUserPremissionSettings] as ups
				WHERE ups.UserID = @UserID AND ups.PortalID = @PortalID AND ups.ModuleID IS NULL AND ups.ShowAllCategories = 1
			)
			BEGIN
				INSERT INTO @UserViewCategories SELECT [CategoryID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryList] WHERE PortalID = @PortalID;
			END
			ELSE
			BEGIN
				INSERT INTO @UserViewCategories
				SELECT rpsc.[CategoryID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsRolePremissionsShowCategories] as rpsc
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsRolePremissionSettings] as rps ON rps.PremissionSettingsID = rpsc.PremissionSettingsID
				INNER JOIN @UserInRoles as uir ON rps.RoleID = uir.RoleID
				WHERE rps.PortalID = @PortalID AND rps.ModuleID IS NULL GROUP BY rpsc.[CategoryID]
				UNION
				SELECT upsc.[CategoryID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsUserPremissionsShowCategories] as upsc
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsUserPremissionSettings] as ups ON ups.PremissionSettingsID = upsc.PremissionSettingsID
				WHERE ups.UserID = @UserID AND ups.PortalID = @PortalID AND ups.ModuleID IS NULL GROUP BY upsc.[CategoryID];
			END
		END
		ELSE
		BEGIN
			IF EXISTS (
				SELECT TOP (1) ShowAllCategories FROM {databaseOwner}[{objectQualifier}EasyDNNNewsRolePremissionSettings] as rps
					INNER JOIN @UserInRoles as uir ON rps.RoleID = uir.RoleID
					WHERE rps.PortalID = @PortalID AND rps.ModuleID = @PermissionsModuleID AND rps.ShowAllCategories = 1
				UNION
				SELECT ShowAllCategories FROM {databaseOwner}[{objectQualifier}EasyDNNNewsUserPremissionSettings] as ups
				WHERE ups.UserID = @UserID AND ups.PortalID = @PortalID AND ups.ModuleID = @PermissionsModuleID AND ups.ShowAllCategories = 1
			)
			BEGIN
				INSERT INTO @UserViewCategories SELECT [CategoryID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryList] WHERE PortalID = @PortalID;
			END
			ELSE
			BEGIN
				INSERT INTO @UserViewCategories
				SELECT rpsc.[CategoryID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsRolePremissionsShowCategories] as rpsc
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsRolePremissionSettings] as rps ON rps.PremissionSettingsID = rpsc.PremissionSettingsID
				INNER JOIN @UserInRoles as uir ON rps.RoleID = uir.RoleID
				WHERE rps.PortalID = @PortalID AND rps.ModuleID = @PermissionsModuleID GROUP BY rpsc.[CategoryID]
				UNION
				SELECT upsc.[CategoryID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsUserPremissionsShowCategories] as upsc
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsUserPremissionSettings] as ups ON ups.PremissionSettingsID = upsc.PremissionSettingsID
				WHERE ups.UserID = @UserID AND ups.PortalID = @PortalID AND ups.ModuleID = @PermissionsModuleID GROUP BY upsc.[CategoryID];
			END
		END
	END
END

IF @CategoryFilterType = 0 -- 0 All categories
BEGIN
	INSERT INTO @UserViewCategoriesWithFilter SELECT [CategoryID] FROM @UserViewCategories;
END
ELSE IF @CategoryFilterType = 1 -- 1 - Selection
BEGIN
		INSERT INTO @UserViewCategoriesWithFilter 
		SELECT cl.[CategoryID] FROM @UserViewCategories as cl
		INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsModuleCategoryItems] AS mci ON mci.CategoryID = cl.CategoryID AND mci.ModuleID = @MenuModuleID
END
ELSE IF @CategoryFilterType = 2 -- 2 - AutoAdd
BEGIN
	WITH hierarchy AS(
		SELECT [CategoryID], [ParentCategory]
		FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryList] AS cl
		WHERE (cl.ParentCategory IN (SELECT [CategoryID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsModuleCategoryItems] WHERE ModuleID = @MenuModuleID) OR cl.CategoryID IN (SELECT [CategoryID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsModuleCategoryItems] WHERE ModuleID = @MenuModuleID)) AND PortalID = @PortalID
		UNION ALL
		SELECT c.[CategoryID], c.[ParentCategory]
		FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryList] AS c INNER JOIN hierarchy AS p ON c.ParentCategory = p.CategoryID WHERE c.PortalID = @PortalID
		)
	INSERT INTO @UserViewCategoriesWithFilter SELECT DISTINCT uvc.CategoryID FROM hierarchy as nfc INNER JOIN @UserViewCategories as uvc ON uvc.CategoryID = nfc.CategoryID;
END
IF @AdminOrSuperUser = 1 OR @Perm_EditAllCategores = 1
BEGIN	
	INSERT INTO @UserEditCategories SELECT CategoryID FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryList] WHERE PortalID = @PortalID;
	SET @EditPermission = 1;
END
ELSE
BEGIN
	IF @UserID = -1
	BEGIN
		IF @PermissionSettingsSource = 1 -- by portal
		BEGIN
			INSERT INTO @UserEditCategories
			SELECT rpatc.[CategoryID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsRolePremissionsAddToCategories] as rpatc
			INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsRolePremissionSettings] as rps ON rps.PremissionSettingsID = rpatc.PremissionSettingsID
			WHERE rps.PortalID = @PortalID AND rps.ModuleID IS NULL AND rps.RoleID IS NULL;
		END
		ELSE -- by module
		BEGIN
		INSERT INTO @UserEditCategories
			SELECT rpatc.[CategoryID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsRolePremissionsAddToCategories] as rpatc
			INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsRolePremissionSettings] as rps ON rps.PremissionSettingsID = rpatc.PremissionSettingsID
			WHERE rps.RoleID IS NULL AND rps.PortalID = @PortalID AND rps.ModuleID = @ModuleID;
		END
	END
	ELSE -- registrirani korisnik
	BEGIN
		IF @PermissionSettingsSource = 1 -- by portal
		BEGIN
			INSERT INTO @UserEditCategories
			SELECT rpatc.[CategoryID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsRolePremissionsAddToCategories] as rpatc
			INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsRolePremissionSettings] as rps ON rps.PremissionSettingsID = rpatc.PremissionSettingsID
			INNER JOIN @UserInRoles as uir ON rps.RoleID = uir.RoleID
			WHERE rps.PortalID = @PortalID AND rps.ModuleID IS NULL GROUP BY rpatc.[CategoryID]
			UNION
			SELECT upatc.[CategoryID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsUserPremissionsAddToCategories] as upatc
			INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsUserPremissionSettings] as ups ON ups.PremissionSettingsID = upatc.PremissionSettingsID
			WHERE ups.UserID = @UserID AND ups.PortalID = @PortalID AND ups.ModuleID IS NULL GROUP BY upatc.[CategoryID];
		END
		ELSE -- by module
		BEGIN
			INSERT INTO @UserEditCategories
			SELECT rpatc.[CategoryID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsRolePremissionsAddToCategories] as rpatc
			INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsRolePremissionSettings] as rps ON rps.PremissionSettingsID = rpatc.PremissionSettingsID
			INNER JOIN @UserInRoles as uir ON rps.RoleID = uir.RoleID
			WHERE rps.PortalID = @PortalID AND rps.ModuleID = @ModuleID GROUP BY rpatc.[CategoryID]
			UNION
			SELECT upatc.[CategoryID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsUserPremissionsAddToCategories] as upatc
			INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsUserPremissionSettings] as ups ON ups.PremissionSettingsID = upatc.PremissionSettingsID
			WHERE ups.UserID = @UserID AND ups.PortalID = @PortalID AND ups.ModuleID = @ModuleID GROUP BY upatc.[CategoryID];
		END	
	END
	IF EXISTS(SELECT * FROM @UserEditCategories) BEGIN SET @EditPermission = 2; END
END
DECLARE @FilterBySocialGroup bit;
SET @FilterBySocialGroup = 0;
DECLARE @FilterAuthorOrAuthors bit;
SET @FilterAuthorOrAuthors = 0;

DECLARE @TempAuthorsIDList table (UserID int NOT NULL PRIMARY KEY);
IF @IsSocialInstance = 1
	BEGIN
		IF @FilterByDNNGroupID <> 0
		BEGIN	
			SET @FilterBySocialGroup = 1;
		END
	END
ELSE
BEGIN
	IF @ShowAllAuthors = 0
	BEGIN
		SET @FilterAuthorOrAuthors = 1;
		INSERT INTO @TempAuthorsIDList
		SELECT [UserID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsModuleAuthorsItems] AS mai WHERE mai.ModuleID = @MenuModuleID
		UNION 
		SELECT [UserID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsAuthorProfile] AS ap 
			INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsAutorGroupItems] AS agi ON ap.AuthorProfileID = agi.AuthorProfileID
			INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsModuleGroupItems] AS mgi ON mgi.GroupID = agi.GroupID
			WHERE mgi.ModuleID = @MenuModuleID
	END
END

DECLARE @tempMenuCats TABLE(
	[CategoryID] int NOT NULL PRIMARY KEY,
	[PortalID] int,
	[CategoryName] nvarchar(200),
	[Position] int,
	[ParentCategory] int,
	[Level] int,
	[CategoryURL] nvarchar(1500),
	[CategoryImage] nvarchar(1500),
	[CategoryText] ntext,[Show] bit)

IF @LocaleCode <> ''''
BEGIN
	WITH LocCategories([CategoryID],[PortalID],[CategoryName],[Position],[ParentCategory],[Level],[CategoryURL],[CategoryImage],[CategoryText]) AS 
	(
		SELECT Cat.[CategoryID],Cat.[PortalID],cl.[Title] AS CategoryName,Cat.[Position],Cat.[ParentCategory],Cat.[Level],Cat.[CategoryURL],Cat.[CategoryImage],cl.[CategoryText] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryList] AS Cat INNER JOIN @UserViewCategoriesWithFilter AS uvc ON uvc.CategoryID = Cat.CategoryID INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryLocalization] AS cl ON uvc.CategoryID = cl.CategoryID WHERE Cat.PortalID = @PortalID AND cl.LocaleCode = @LocaleCode
	),
	NotLocCategories([CategoryID],[PortalID],[CategoryName],[Position],[ParentCategory],[Level],[CategoryURL],[CategoryImage],[CategoryText]) AS 
	(
		SELECT Cat.* FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryList] AS Cat INNER JOIN @UserViewCategoriesWithFilter AS uvc ON uvc.CategoryID = Cat.CategoryID WHERE Cat.PortalID = @PortalID AND Cat.CategoryID NOT IN (SELECT lctemp.CategoryID FROM LocCategories as lctemp)
	)
	INSERT INTO @tempMenuCats SELECT [CategoryID],[PortalID],[CategoryName],[Position],[ParentCategory],[Level],[CategoryURL],[CategoryImage],[CategoryText],''1'' AS Show FROM (SELECT * FROM LocCategories UNION ALL SELECT * FROM NotLocCategories) as result
END
ELSE
BEGIN
	
INSERT @tempMenuCats SELECT
 [CategoryID],[PortalID],[CategoryName],[Position],[ParentCategory],[Level],[CategoryURL],[CategoryImage],[CategoryText],''1'' AS Show
 FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryList] AS cat WHERE cat.CategoryID in (SELECT CategoryID FROM @UserViewCategoriesWithFilter) AND PortalID = @PortalID;

END

--INSERT @tempMenuCats SELECT
-- [CategoryID],[PortalID],[CategoryName],[Position],[ParentCategory],[Level],[CategoryURL],[CategoryImage],[CategoryText],''0'' AS Show
--  FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryList] WHERE PortalID = @PortalID AND CategoryID not in (SELECT CategoryID FROM @UserViewCategoriesWithFilter);
  
SELECT TOP 1 @DefaultTabID = TabID FROM {databaseOwner}[{objectQualifier}TabModules] WHERE ModuleID = @DefaultModuleID;
DECLARE @TempCategoryIDAndCount table (CategoryID int NOT NULL PRIMARY KEY, Position int, ParentCategory int, Count int not null, NewsModuleID int ,TabID int);


IF @HideUnlocalizedItems = 0

BEGIN
IF @IsSocialInstance = 0
BEGIN
INSERT INTO @TempCategoryIDAndCount
SELECT CategoryID, Position, ParentCategory,
	CASE Show
	 WHEN 0 THEN 0
	 WHEN 1 THEN	
		CASE @AdminOrSuperUser
		WHEN 1 THEN
		(
		 SELECT count(n.[ArticleID]) as cnt FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS n
			 INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS c ON n.ArticleID = c.ArticleID AND c.CategoryID = Result.CategoryID
			 WHERE n.PublishDate <= @CurrentDate
			 AND n.ExpireDate >= @CurrentDate
			 AND n.PortalID = @PortalID
			 AND((@FilterAuthorOrAuthors = 1 AND n.UserID IN (SELECT UserID FROM @TempAuthorsIDList)) OR (@FilterAuthorOrAuthors = 0))			 
		)
		WHEN 0 THEN
		(
		SELECT (
					(
						SELECT count(n.[ArticleID]) as cnt FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS n
						 INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS c ON n.ArticleID = c.ArticleID AND c.CategoryID = Result.CategoryID
						 WHERE n.PublishDate <= @CurrentDate
							 AND n.ExpireDate >= @CurrentDate
							 AND ((@UserCanApprove = 1) OR (n.Approved = 1))
							 AND ((@AdminOrSuperUser = 1) OR (n.Active = 1 OR n.UserID=@UserID))
							 AND n.HasPermissions = 0
							 AND n.PortalID = @PortalID
							 AND((@FilterAuthorOrAuthors = 1 AND n.UserID IN (SELECT UserID FROM @TempAuthorsIDList)) OR (@FilterAuthorOrAuthors = 0))
					 )
					 +
					(
						SELECT count(aup.[ArticleID]) FROM {databaseOwner}[{objectQualifier}EasyDNNNewsArticleUserPermissions] AS aup
						 INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS c ON c.ArticleID = aup.ArticleID AND c.CategoryID = Result.CategoryID
						 INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNews] AS n ON n.ArticleID = aup.ArticleID
						 WHERE ((@UserID = -1 AND aup.UserID IS NULL) OR (aup.UserID = @UserID))
					 		AND n.PublishDate <= @CurrentDate
							AND n.ExpireDate >= @CurrentDate
							AND ((@UserCanApprove = 1) OR (n.Approved = 1))
							AND ((@AdminOrSuperUser = 1) OR (n.Active = 1 OR n.UserID=@UserID))
							AND n.HasPermissions = 1
							AND n.PortalID = @PortalID
							AND((@FilterAuthorOrAuthors = 1 AND n.UserID IN (SELECT UserID FROM @TempAuthorsIDList)) OR (@FilterAuthorOrAuthors = 0))
					 )	 
					+ 
					(
						CASE @UserID
						WHEN -1 THEN 0
						ELSE			
					(
						SELECT count(PerRoles.[ArticleID]) FROM 
						
						(SELECT DISTINCT arp.[ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsArticleRolePermissions] as arp
						 INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS c ON c.ArticleID = arp.ArticleID AND c.CategoryID = Result.CategoryID
						 WHERE arp.RoleID IN (SELECT RoleID FROM @UserInRoles)
						  AND arp.ArticleID NOT IN (
							SELECT aup.[ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsArticleUserPermissions] AS aup
							INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS c ON c.ArticleID = aup.ArticleID AND c.CategoryID = Result.CategoryID
							INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNews] AS n ON n.ArticleID = aup.ArticleID
								WHERE aup.UserID = @UserID
					 				AND n.PublishDate <= @CurrentDate
									AND n.ExpireDate >= @CurrentDate
									AND ((@UserCanApprove = 1) OR (n.Approved = 1))
									AND ((@AdminOrSuperUser = 1) OR (n.Active = 1 OR n.UserID=@UserID))
									AND n.HasPermissions = 1
									AND n.PortalID = @PortalID
									AND((@FilterAuthorOrAuthors = 1 AND n.UserID IN (SELECT UserID FROM @TempAuthorsIDList)) OR (@FilterAuthorOrAuthors = 0))
							)
						 ) as PerRoles 
						 INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNews] AS n ON n.ArticleID = PerRoles.ArticleID
						 WHERE n.PublishDate <= @CurrentDate
						 AND n.ExpireDate >= @CurrentDate
						 AND ((@UserCanApprove = 1) OR (n.Approved = 1))
						 AND ((@AdminOrSuperUser = 1) OR (n.Active = 1 OR n.UserID=@UserID))
						 AND n.HasPermissions = 1
						 AND n.PortalID = @PortalID
						 AND((@FilterAuthorOrAuthors = 1 AND n.UserID IN (SELECT UserID FROM @TempAuthorsIDList)) OR (@FilterAuthorOrAuthors = 0))
						 )
			END
					)
				)
		)
		END		
	 END AS ''Count'',NewsModuleID,TabID
	FROM 
	(SELECT 
	ncl.[CategoryID],
	ncl.[Position],
	ncl.[ParentCategory],
	ncl.Show,
		CASE WHEN cl.[NewsModuleID] IS NULL THEN @DefaultModuleID ELSE cl.[NewsModuleID] END AS NewsModuleID,
		CASE WHEN tm.[TabID] IS NULL THEN @DefaultTabID ELSE tm.[TabID] END AS TabID
	FROM @tempMenuCats as ncl LEFT OUTER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryLink] as cl
	ON ncl.CategoryID = cl.CategoryID AND cl.[SourceModuleID] = @MenuModuleID
	LEFT OUTER JOIN {databaseOwner}[{objectQualifier}TabModules] AS tm ON cl.NewsModuleID = tm.ModuleID) as Result
	
	SELECT n.ArticleID,n.Title,n.TitleLink,n.PublishDate,n.NumberOfViews,n.RatingValue,n.DateAdded,n.ExpireDate,n.LastModified,
	 n.HasPermissions, n.Active, n.Approved, n.NumberOfComments,n.UserID, c.[CategoryID], ncl.[Position], ncl.Count, ncl.NewsModuleID,ncl.TabID
	 FROM {databaseOwner}[{objectQualifier}EasyDNNNews] as n
	  INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] c ON n.ArticleID = c.ArticleID 
	  INNER JOIN @TempCategoryIDAndCount as ncl ON ncl.CategoryID = c.CategoryID
	  INNER JOIN @tempMenuCats AS cidl ON cidl.CategoryID = c.CategoryID AND cidl.Show = 1 WHERE n.ArticleID IN(
		Select DISTINCT na.[ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNews] as na
		INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] as cat ON na.ArticleID = cat.ArticleID
		INNER JOIN @tempMenuCats AS cidl ON cidl.CategoryID = cat.CategoryID AND cidl.Show = 1
		   WHERE na.PortalID=@PortalID
		   AND ((@EditPermission = 1) OR (
				(@UserCanApprove = 1 OR na.Approved = 1)
				 AND (na.Active = 1 OR na.UserID=@UserID)
				 ))
		   AND na.HasPermissions = 0
		   AND na.PublishDate <= @CurrentDate
		   AND na.ExpireDate >= @CurrentDate
		   AND((@FilterAuthorOrAuthors = 1 AND na.UserID IN (SELECT UserID FROM @TempAuthorsIDList)) OR (@FilterAuthorOrAuthors = 0))
		UNION ALL
		Select DISTINCT na.[ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNews] as na
			 INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsArticleUserPermissions] as aup ON na.ArticleID = aup.ArticleID
			 INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] as cat ON na.ArticleID = cat.ArticleID
			 INNER JOIN @tempMenuCats AS cidl ON cidl.CategoryID = cat.CategoryID AND cidl.Show = 1
			 WHERE na.PortalID=@PortalID
			 AND ((@EditPermission = 1) OR (
				 ((@UserID = -1 AND aup.UserID IS NULL) OR (aup.UserID = @UserID))
				 AND aup.Show = 1
				 AND ((@UserCanApprove = 1) OR (na.Approved = 1))
				 AND (na.Active = 1 OR na.UserID=@UserID)
			 ))
			 AND na.HasPermissions = 1
		     AND na.PublishDate <= @CurrentDate
		     AND na.ExpireDate >= @CurrentDate
		   	 AND((@FilterAuthorOrAuthors = 1 AND na.UserID IN (SELECT UserID FROM @TempAuthorsIDList)) OR (@FilterAuthorOrAuthors = 0))
		UNION
		Select DISTINCT na.[ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNews] as na
			  INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsArticleRolePermissions] as arp ON na.ArticleID = arp.ArticleID
			  INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] as cat ON na.ArticleID = cat.ArticleID
			  INNER JOIN @tempMenuCats AS cidl ON cidl.CategoryID = cat.CategoryID AND cidl.Show = 1
			  WHERE na.PortalID=@PortalID
			  AND ((@EditPermission = 1) OR (
					((@UserCanApprove = 1) OR (na.Approved = 1))
					AND (na.Active = 1 OR na.UserID=@UserID)
					AND arp.Show = 1
					AND arp.RoleID IN (SELECT [RoleID] FROM @UserInRoles)
					))
			  AND na.HasPermissions = 1
			  AND na.PublishDate <= @CurrentDate
		      AND na.ExpireDate >= @CurrentDate
			  AND((@FilterAuthorOrAuthors = 1 AND na.UserID IN (SELECT UserID FROM @TempAuthorsIDList)) OR (@FilterAuthorOrAuthors = 0))	 
		) 
		ORDER BY ncl.Position, n.PublishDate;
	
END
ELSE IF @FilterBySocialGroup = 1
BEGIN
INSERT INTO @TempCategoryIDAndCount
SELECT CategoryID, Position, ParentCategory,
	CASE Show
	 WHEN 0 THEN 0
	 WHEN 1 THEN	
		CASE @AdminOrSuperUser
		WHEN 1 THEN
		(
		 SELECT count(n.[ArticleID]) as cnt FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS n
			 INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS c ON n.ArticleID = c.ArticleID AND c.CategoryID = Result.CategoryID
			 INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = n.ArticleID
			 INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialGroupItems] AS sgi ON sgi.ArticleID = n.ArticleID AND sgi.RoleID = @FilterByDNNGroupID
			 INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserID, @FilterByDNNGroupID) as t ON t.seckey = nss.SecurityKey
			 WHERE  n.PublishDate <= @CurrentDate
				AND n.ExpireDate >= @CurrentDate
				AND n.PortalID = @PortalID
		)
		WHEN 0 THEN
		(
		SELECT (
					(
						SELECT count(n.[ArticleID]) as cnt FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS n
						INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS c ON n.ArticleID = c.ArticleID AND c.CategoryID = Result.CategoryID
						INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = n.ArticleID
						INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialGroupItems] AS sgi ON sgi.ArticleID = n.ArticleID AND sgi.RoleID = @FilterByDNNGroupID
						INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserID, @FilterByDNNGroupID) as t ON t.seckey = nss.SecurityKey
						 WHERE n.PublishDate <= @CurrentDate
							 AND n.ExpireDate >= @CurrentDate
							 AND ((@UserCanApprove = 1) OR (n.Approved = 1))
							 AND ((@AdminOrSuperUser = 1) OR (n.Active = 1 OR n.UserID=@UserID))
							 AND n.HasPermissions = 0
							 AND n.PortalID = @PortalID
					 )
					 +
					(
						SELECT count(aup.[ArticleID]) FROM {databaseOwner}[{objectQualifier}EasyDNNNewsArticleUserPermissions] AS aup
						 INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS c ON c.ArticleID = aup.ArticleID AND c.CategoryID = Result.CategoryID
						 INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNews] AS n ON n.ArticleID = aup.ArticleID
						 INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = n.ArticleID
						 INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialGroupItems] AS sgi ON sgi.ArticleID = n.ArticleID AND sgi.RoleID = @FilterByDNNGroupID
						 INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserID, @FilterByDNNGroupID) as t ON t.seckey = nss.SecurityKey
						 WHERE ((@UserID = -1 AND aup.UserID IS NULL) OR (aup.UserID = @UserID))
					 		AND n.PublishDate <= @CurrentDate
							AND n.ExpireDate >= @CurrentDate
							AND ((@UserCanApprove = 1) OR (n.Approved = 1))
							AND ((@AdminOrSuperUser = 1) OR (n.Active = 1 OR n.UserID=@UserID))
							AND n.HasPermissions = 1
							AND n.PortalID = @PortalID
					 )	 
					+ 
					(
						CASE @UserID
						WHEN -1 THEN 0
						ELSE			
					(
						SELECT count(PerRoles.[ArticleID]) FROM 
						
						(SELECT DISTINCT arp.[ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsArticleRolePermissions] as arp
						 INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS c ON c.ArticleID = arp.ArticleID AND c.CategoryID = Result.CategoryID
						 WHERE arp.RoleID IN (SELECT RoleID FROM @UserInRoles)
						  AND arp.ArticleID NOT IN (
							SELECT aup.[ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsArticleUserPermissions] AS aup
							INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS c ON c.ArticleID = aup.ArticleID AND c.CategoryID = Result.CategoryID
							INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNews] AS n ON n.ArticleID = aup.ArticleID
							INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = n.ArticleID
							INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialGroupItems] AS sgi ON sgi.ArticleID = n.ArticleID AND sgi.RoleID = @FilterByDNNGroupID
							INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserID, @FilterByDNNGroupID) as t ON t.seckey = nss.SecurityKey
								WHERE aup.UserID = @UserID
					 				AND n.PublishDate <= @CurrentDate
									AND n.ExpireDate >= @CurrentDate
									AND ((@UserCanApprove = 1) OR (n.Approved = 1))
									AND ((@AdminOrSuperUser = 1) OR (n.Active = 1 OR n.UserID=@UserID))
									AND n.HasPermissions = 1
									AND n.PortalID = @PortalID
							)
						 ) as PerRoles 
						 INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNews] AS n ON n.ArticleID = PerRoles.ArticleID
						 WHERE n.PublishDate <= @CurrentDate
						 AND n.ExpireDate >= @CurrentDate
						 AND ((@UserCanApprove = 1) OR (n.Approved = 1))
						 AND ((@AdminOrSuperUser = 1) OR (n.Active = 1 OR n.UserID=@UserID))
						 AND n.HasPermissions = 1
						 AND n.PortalID = @PortalID
						 )
			END
					)
				)
		)
		END		
	 END AS ''Count'',NewsModuleID,TabID
	FROM 
	(SELECT 
	ncl.[CategoryID],
	ncl.[Position],
	ncl.[ParentCategory],
	ncl.Show,
		CASE WHEN cl.[NewsModuleID] IS NULL THEN @DefaultModuleID ELSE cl.[NewsModuleID] END AS NewsModuleID,
		CASE WHEN tm.[TabID] IS NULL THEN @DefaultTabID ELSE tm.[TabID] END AS TabID
	FROM @tempMenuCats as ncl LEFT OUTER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryLink] as cl
	ON ncl.CategoryID = cl.CategoryID AND cl.[SourceModuleID] = @MenuModuleID
	LEFT OUTER JOIN {databaseOwner}[{objectQualifier}TabModules] AS tm ON cl.NewsModuleID = tm.ModuleID) as Result
	
	SELECT n.ArticleID,n.Title,n.TitleLink,n.PublishDate,n.NumberOfViews,n.RatingValue,n.DateAdded,n.ExpireDate,n.LastModified,
	 n.HasPermissions, n.Active, n.Approved, n.NumberOfComments,n.UserID, c.[CategoryID], ncl.[Position], ncl.Count, ncl.NewsModuleID,ncl.TabID
	 FROM {databaseOwner}[{objectQualifier}EasyDNNNews] as n
	  INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] c ON n.ArticleID = c.ArticleID 
	  INNER JOIN @TempCategoryIDAndCount as ncl ON ncl.CategoryID = c.CategoryID
	  INNER JOIN @tempMenuCats AS cidl ON cidl.CategoryID = c.CategoryID AND cidl.Show = 1 WHERE n.ArticleID IN(
		Select DISTINCT na.[ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNews] as na
		INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] as cat ON na.ArticleID = cat.ArticleID
		INNER JOIN @tempMenuCats AS cidl ON cidl.CategoryID = cat.CategoryID AND cidl.Show = 1
		INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = na.ArticleID
		INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialGroupItems] AS sgi ON sgi.ArticleID = na.ArticleID AND sgi.RoleID = @FilterByDNNGroupID
		INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId, @UserID, @FilterByDNNGroupID) as t ON t.seckey = nss.SecurityKey
		   WHERE na.PortalID=@PortalID
		   AND ((@EditPermission = 1) OR (
				(@UserCanApprove = 1 OR na.Approved = 1)
				 AND (na.Active = 1 OR na.UserID=@UserID)
				 ))
		   AND na.HasPermissions = 0
		   AND na.PublishDate <= @CurrentDate
		   AND na.ExpireDate >= @CurrentDate
		   AND((@FilterAuthorOrAuthors = 1 AND na.UserID IN (SELECT UserID FROM @TempAuthorsIDList)) OR (@FilterAuthorOrAuthors = 0))
		UNION ALL
		Select DISTINCT na.[ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNews] as na
			 INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsArticleUserPermissions] as aup ON na.ArticleID = aup.ArticleID
			 INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] as cat ON na.ArticleID = cat.ArticleID
			 INNER JOIN @tempMenuCats AS cidl ON cidl.CategoryID = cat.CategoryID AND cidl.Show = 1
			 INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = na.ArticleID
			 INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialGroupItems] AS sgi ON sgi.ArticleID = na.ArticleID AND sgi.RoleID = @FilterByDNNGroupID
			 INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserID, @FilterByDNNGroupID) as t ON t.seckey = nss.SecurityKey
			 WHERE na.PortalID=@PortalID
			 AND ((@EditPermission = 1) OR (
				 ((@UserID = -1 AND aup.UserID IS NULL) OR (aup.UserID = @UserID))
				 AND aup.Show = 1
				 AND ((@UserCanApprove = 1) OR (na.Approved = 1))
				 AND (na.Active = 1 OR na.UserID=@UserID)
			 ))
			 AND na.HasPermissions = 1
		     AND na.PublishDate <= @CurrentDate
		     AND na.ExpireDate >= @CurrentDate
		   	 AND((@FilterAuthorOrAuthors = 1 AND na.UserID IN (SELECT UserID FROM @TempAuthorsIDList)) OR (@FilterAuthorOrAuthors = 0))
		UNION
		Select DISTINCT na.[ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNews] as na
			  INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsArticleRolePermissions] as arp ON na.ArticleID = arp.ArticleID
			  INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] as cat ON na.ArticleID = cat.ArticleID
			  INNER JOIN @tempMenuCats AS cidl ON cidl.CategoryID = cat.CategoryID AND cidl.Show = 1
			  INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = na.ArticleID
			  INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialGroupItems] AS sgi ON sgi.ArticleID = na.ArticleID AND sgi.RoleID = @FilterByDNNGroupID
			  INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserID, @FilterByDNNGroupID) as t ON t.seckey = nss.SecurityKey
			  WHERE na.PortalID=@PortalID
			  AND ((@EditPermission = 1) OR (
					((@UserCanApprove = 1) OR (na.Approved = 1))
					AND (na.Active = 1 OR na.UserID=@UserID)
					AND arp.Show = 1
					AND arp.RoleID IN (SELECT [RoleID] FROM @UserInRoles)
					))
			  AND na.HasPermissions = 1
			  AND na.PublishDate <= @CurrentDate
		      AND na.ExpireDate >= @CurrentDate
			  AND((@FilterAuthorOrAuthors = 1 AND na.UserID IN (SELECT UserID FROM @TempAuthorsIDList)) OR (@FilterAuthorOrAuthors = 0))	 
		) 
		ORDER BY ncl.Position, n.PublishDate;
	
END
ELSE IF @FilterByDNNUserID <> 0
BEGIN
INSERT INTO @TempCategoryIDAndCount
SELECT CategoryID, Position, ParentCategory,
	CASE Show
	 WHEN 0 THEN 0
	 WHEN 1 THEN	
		CASE @AdminOrSuperUser
		WHEN 1 THEN
		(
		 SELECT count(n.[ArticleID]) as cnt FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS n
		 
			 INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS c ON n.ArticleID = c.ArticleID
			 INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = n.ArticleID AND c.CategoryID = Result.CategoryID
			 INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserID, @FilterByDNNGroupID) as t ON t.seckey = nss.SecurityKey
			 WHERE  n.PublishDate <= @CurrentDate
				AND n.ExpireDate >= @CurrentDate
				AND n.PortalID = @PortalID
				AND n.UserID = @FilterByDNNUserID 
		)
		WHEN 0 THEN
		(
		SELECT (
					(
						SELECT count(n.[ArticleID]) as cnt FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS n
						 INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS c ON n.ArticleID = c.ArticleID AND c.CategoryID = Result.CategoryID
						 INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = n.ArticleID
						 INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserID, @FilterByDNNGroupID) as t ON t.seckey = nss.SecurityKey
						 WHERE n.PublishDate <= @CurrentDate
							 AND n.ExpireDate >= @CurrentDate
							 AND ((@UserCanApprove = 1) OR (n.Approved = 1))
							 AND ((@AdminOrSuperUser = 1) OR (n.Active = 1 OR n.UserID=@UserID))
							 AND n.HasPermissions = 0
							 AND n.PortalID = @PortalID
							 AND n.UserID = @FilterByDNNUserID
					)
					 +
					(
						SELECT count(aup.[ArticleID]) FROM {databaseOwner}[{objectQualifier}EasyDNNNewsArticleUserPermissions] AS aup
						 INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS c ON c.ArticleID = aup.ArticleID AND c.CategoryID = Result.CategoryID
						 INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNews] AS n ON n.ArticleID = aup.ArticleID
						 INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = n.ArticleID
						 INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserID, @FilterByDNNGroupID) as t ON t.seckey = nss.SecurityKey
						 WHERE ((@UserID = -1 AND aup.UserID IS NULL) OR (aup.UserID = @UserID))
					 		AND n.PublishDate <= @CurrentDate
							AND n.ExpireDate >= @CurrentDate
							AND ((@UserCanApprove = 1) OR (n.Approved = 1))
							AND ((@AdminOrSuperUser = 1) OR (n.Active = 1 OR n.UserID=@UserID))
							AND n.HasPermissions = 1
							AND n.PortalID = @PortalID
							AND n.UserID = @FilterByDNNUserID 					 )	 
					+ 
					(
						CASE @UserID
						WHEN -1 THEN 0
						ELSE			
					(
						SELECT count(PerRoles.[ArticleID]) FROM 
						
						(SELECT DISTINCT arp.[ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsArticleRolePermissions] as arp
						 INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS c ON c.ArticleID = arp.ArticleID AND c.CategoryID = Result.CategoryID
						 WHERE arp.RoleID IN (SELECT RoleID FROM @UserInRoles)
						  AND arp.ArticleID NOT IN (
							SELECT aup.[ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsArticleUserPermissions] AS aup
							INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS c ON c.ArticleID = aup.ArticleID AND c.CategoryID = Result.CategoryID
							INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNews] AS n ON n.ArticleID = aup.ArticleID
							INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = n.ArticleID
							INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserID, @FilterByDNNGroupID) as t ON t.seckey = nss.SecurityKey
								WHERE aup.UserID = @UserID
					 				AND n.PublishDate <= @CurrentDate
									AND n.ExpireDate >= @CurrentDate
									AND ((@UserCanApprove = 1) OR (n.Approved = 1))
									AND ((@AdminOrSuperUser = 1) OR (n.Active = 1 OR n.UserID=@UserID))
									AND n.HasPermissions = 1
									AND n.PortalID = @PortalID
									AND n.UserID = @FilterByDNNUserID 
			  				)
						 ) as PerRoles 
						 INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNews] AS n ON n.ArticleID = PerRoles.ArticleID
						 WHERE n.PublishDate <= @CurrentDate
						 AND n.ExpireDate >= @CurrentDate
						 AND ((@UserCanApprove = 1) OR (n.Approved = 1))
						 AND ((@AdminOrSuperUser = 1) OR (n.Active = 1 OR n.UserID=@UserID))
						 AND n.HasPermissions = 1
						 AND n.PortalID = @PortalID
						 AND n.UserID = @FilterByDNNUserID 						 )
			END
					)
				)
		)
		END		
	 END AS ''Count'',NewsModuleID,TabID
	FROM 
	(SELECT 
	ncl.[CategoryID],
	ncl.[Position],
	ncl.[ParentCategory],
	ncl.Show,
		CASE WHEN cl.[NewsModuleID] IS NULL THEN @DefaultModuleID ELSE cl.[NewsModuleID] END AS NewsModuleID,
		CASE WHEN tm.[TabID] IS NULL THEN @DefaultTabID ELSE tm.[TabID] END AS TabID
	FROM @tempMenuCats as ncl LEFT OUTER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryLink] as cl
	ON ncl.CategoryID = cl.CategoryID AND cl.[SourceModuleID] = @MenuModuleID
	LEFT OUTER JOIN {databaseOwner}[{objectQualifier}TabModules] AS tm ON cl.NewsModuleID = tm.ModuleID) as Result
	
	SELECT n.ArticleID,n.Title,n.TitleLink,n.PublishDate,n.NumberOfViews,n.RatingValue,n.DateAdded,n.ExpireDate,n.LastModified,
	 n.HasPermissions, n.Active, n.Approved, n.NumberOfComments,n.UserID, c.[CategoryID], ncl.[Position], ncl.Count, ncl.NewsModuleID,ncl.TabID
	 FROM {databaseOwner}[{objectQualifier}EasyDNNNews] as n
	  INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] c ON n.ArticleID = c.ArticleID 
	  INNER JOIN @TempCategoryIDAndCount as ncl ON ncl.CategoryID = c.CategoryID
	  INNER JOIN @tempMenuCats AS cidl ON cidl.CategoryID = c.CategoryID AND cidl.Show = 1 WHERE n.ArticleID IN(
		Select DISTINCT na.[ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNews] as na
		INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] as cat ON na.ArticleID = cat.ArticleID
		INNER JOIN @tempMenuCats AS cidl ON cidl.CategoryID = cat.CategoryID AND cidl.Show = 1
		INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = na.ArticleID
		INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserID, @FilterByDNNGroupID) as t ON t.seckey = nss.SecurityKey
		   WHERE na.PortalID=@PortalID
		   AND ((@EditPermission = 1) OR (
				(@UserCanApprove = 1 OR na.Approved = 1)
				 AND (na.Active = 1 OR na.UserID=@UserID)
				 ))
		   AND na.HasPermissions = 0
		   AND na.PublishDate <= @CurrentDate
		   AND na.ExpireDate >= @CurrentDate
		   AND((@FilterAuthorOrAuthors = 1 AND na.UserID IN (SELECT UserID FROM @TempAuthorsIDList)) OR (@FilterAuthorOrAuthors = 0))
		UNION ALL
		Select DISTINCT na.[ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNews] as na
			 INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsArticleUserPermissions] as aup ON na.ArticleID = aup.ArticleID
			 INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] as cat ON na.ArticleID = cat.ArticleID
			 INNER JOIN @tempMenuCats AS cidl ON cidl.CategoryID = cat.CategoryID AND cidl.Show = 1
			 INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = na.ArticleID
			 INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserID, @FilterByDNNGroupID) as t ON t.seckey = nss.SecurityKey
			 WHERE na.PortalID=@PortalID
			 AND ((@EditPermission = 1) OR (
				 ((@UserID = -1 AND aup.UserID IS NULL) OR (aup.UserID = @UserID))
				 AND aup.Show = 1
				 AND ((@UserCanApprove = 1) OR (na.Approved = 1))
				 AND (na.Active = 1 OR na.UserID=@UserID)
			 ))
			 AND na.HasPermissions = 1
		     AND na.PublishDate <= @CurrentDate
		     AND na.ExpireDate >= @CurrentDate
		   	 AND((@FilterAuthorOrAuthors = 1 AND na.UserID IN (SELECT UserID FROM @TempAuthorsIDList)) OR (@FilterAuthorOrAuthors = 0))
		UNION
		Select DISTINCT na.[ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNews] as na
			  INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsArticleRolePermissions] as arp ON na.ArticleID = arp.ArticleID
			  INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] as cat ON na.ArticleID = cat.ArticleID
			  INNER JOIN @tempMenuCats AS cidl ON cidl.CategoryID = cat.CategoryID AND cidl.Show = 1
			  INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = na.ArticleID
			  INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserID, @FilterByDNNGroupID) as t ON t.seckey = nss.SecurityKey
			  WHERE na.PortalID=@PortalID
			  AND ((@EditPermission = 1) OR (
					((@UserCanApprove = 1) OR (na.Approved = 1))
					AND (na.Active = 1 OR na.UserID=@UserID)
					AND arp.Show = 1
					AND arp.RoleID IN (SELECT [RoleID] FROM @UserInRoles)
					))
			  AND na.HasPermissions = 1
			  AND na.PublishDate <= @CurrentDate
		      AND na.ExpireDate >= @CurrentDate
			  AND((@FilterAuthorOrAuthors = 1 AND na.UserID IN (SELECT UserID FROM @TempAuthorsIDList)) OR (@FilterAuthorOrAuthors = 0))	 
		) 
		ORDER BY ncl.Position, n.PublishDate;
	
END
END

ELSE

BEGIN
IF @IsSocialInstance = 0
BEGIN
INSERT INTO @TempCategoryIDAndCount
SELECT CategoryID, Position, ParentCategory,
	CASE Show
	 WHEN 0 THEN 0
	 WHEN 1 THEN	
		CASE @AdminOrSuperUser
		WHEN 1 THEN
		(
		 SELECT count(c.[ArticleID]) as cnt FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS n
			 INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS c ON n.ArticleID = c.ArticleID AND c.CategoryID = Result.CategoryID
			 INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsContentLocalization] AS ncl ON ncl.ArticleID = n.ArticleID AND ncl.LocaleCode = @LocaleCode
			 WHERE n.PublishDate <= @CurrentDate
				AND n.ExpireDate >= @CurrentDate
				AND n.PortalID = @PortalID
				AND((@FilterAuthorOrAuthors = 1 AND n.UserID IN (SELECT UserID FROM @TempAuthorsIDList)) OR (@FilterAuthorOrAuthors = 0))		 
		)
		WHEN 0 THEN
		(
		SELECT (
					(
						SELECT count(n.[ArticleID]) as cnt FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS n
						 INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS c ON n.ArticleID = c.ArticleID AND c.CategoryID = Result.CategoryID
						 INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsContentLocalization] AS ncl ON ncl.ArticleID = n.ArticleID AND ncl.LocaleCode = @LocaleCode
						 WHERE n.PublishDate <= @CurrentDate
							 AND n.ExpireDate >= @CurrentDate
							 AND ((@UserCanApprove = 1) OR (n.Approved = 1))
							 AND ((@AdminOrSuperUser = 1) OR (n.Active = 1 OR n.UserID=@UserID))
							 AND n.HasPermissions = 0
							 AND n.PortalID = @PortalID
							 AND((@FilterAuthorOrAuthors = 1 AND n.UserID IN (SELECT UserID FROM @TempAuthorsIDList)) OR (@FilterAuthorOrAuthors = 0))
					 )
					 +
					(
						SELECT count(aup.[ArticleID]) FROM {databaseOwner}[{objectQualifier}EasyDNNNewsArticleUserPermissions] AS aup
						 INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS c ON c.ArticleID = aup.ArticleID AND c.CategoryID = Result.CategoryID
						 INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNews] AS n ON n.ArticleID = aup.ArticleID
						 INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsContentLocalization] AS ncl ON ncl.ArticleID = n.ArticleID AND ncl.LocaleCode = @LocaleCode
						 WHERE ((@UserID = -1 AND aup.UserID IS NULL) OR (aup.UserID = @UserID))
					 		AND n.PublishDate <= @CurrentDate
							AND n.ExpireDate >= @CurrentDate
							AND ((@UserCanApprove = 1) OR (n.Approved = 1))
							AND ((@AdminOrSuperUser = 1) OR (n.Active = 1 OR n.UserID=@UserID))
							AND n.HasPermissions = 1
							AND n.PortalID = @PortalID
							AND((@FilterAuthorOrAuthors = 1 AND n.UserID IN (SELECT UserID FROM @TempAuthorsIDList)) OR (@FilterAuthorOrAuthors = 0))
					 )	 
					+ 
					(
						CASE @UserID
						WHEN -1 THEN 0
						ELSE			
					(
						SELECT count(PerRoles.[ArticleID]) FROM 
						
						(SELECT DISTINCT arp.[ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsArticleRolePermissions] as arp
						 INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS c ON c.ArticleID = arp.ArticleID AND c.CategoryID = Result.CategoryID
						 INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsContentLocalization] AS ncl ON ncl.ArticleID = arp.ArticleID AND ncl.LocaleCode = @LocaleCode
						 WHERE arp.RoleID IN (SELECT RoleID FROM @UserInRoles)
						  AND arp.ArticleID NOT IN (
							SELECT aup.[ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsArticleUserPermissions] AS aup
							INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS c ON c.ArticleID = aup.ArticleID AND c.CategoryID = Result.CategoryID
							INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNews] AS n ON n.ArticleID = aup.ArticleID
							INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsContentLocalization] AS ncl ON ncl.ArticleID = n.ArticleID AND ncl.LocaleCode = @LocaleCode
								WHERE aup.UserID = @UserID
					 				AND n.PublishDate <= @CurrentDate
									AND n.ExpireDate >= @CurrentDate
									AND ((@UserCanApprove = 1) OR (n.Approved = 1))
									AND ((@AdminOrSuperUser = 1) OR (n.Active = 1 OR n.UserID=@UserID))
									AND n.HasPermissions = 1
									AND n.PortalID = @PortalID
									AND((@FilterAuthorOrAuthors = 1 AND n.UserID IN (SELECT UserID FROM @TempAuthorsIDList)) OR (@FilterAuthorOrAuthors = 0))
							)
						 ) as PerRoles 
						 INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNews] AS n ON n.ArticleID = PerRoles.ArticleID
						 WHERE n.PublishDate <= @CurrentDate
							AND n.ExpireDate >= @CurrentDate
							AND ((@UserCanApprove = 1) OR (n.Approved = 1))
							AND ((@AdminOrSuperUser = 1) OR (n.Active = 1 OR n.UserID=@UserID))
							AND n.HasPermissions = 1
							AND n.PortalID = @PortalID
							AND((@FilterAuthorOrAuthors = 1 AND n.UserID IN (SELECT UserID FROM @TempAuthorsIDList)) OR (@FilterAuthorOrAuthors = 0))
						 )
			END
					)
				)
		)
		END		
	 END AS ''Count'',NewsModuleID,TabID
	FROM 
	(SELECT 
	ncl.[CategoryID],
	ncl.[Position],
	ncl.[ParentCategory],
	ncl.Show,
		CASE WHEN cl.[NewsModuleID] IS NULL THEN @DefaultModuleID ELSE cl.[NewsModuleID] END AS NewsModuleID,
		CASE WHEN tm.[TabID] IS NULL THEN @DefaultTabID ELSE tm.[TabID] END AS TabID
	FROM @tempMenuCats as ncl LEFT OUTER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryLink] as cl
	ON ncl.CategoryID = cl.CategoryID AND cl.[SourceModuleID] = @MenuModuleID
	LEFT OUTER JOIN {databaseOwner}[{objectQualifier}TabModules] AS tm ON cl.NewsModuleID = tm.ModuleID) as Result

	SELECT n.ArticleID,n.Title,n.TitleLink,n.PublishDate,n.NumberOfViews,n.RatingValue,n.DateAdded,n.ExpireDate,n.LastModified,
	 n.HasPermissions, n.Active, n.Approved, n.NumberOfComments,n.UserID, c.[CategoryID], tempc.[Position], tempc.Count, tempc.NewsModuleID,tempc.TabID
	 FROM {databaseOwner}[{objectQualifier}EasyDNNNews] as n
	  INNER JOIN  {databaseOwner}[{objectQualifier}EasyDNNNewsCategories]  c ON n.ArticleID = c.ArticleID 
	  INNER JOIN @TempCategoryIDAndCount as tempc ON tempc.CategoryID = c.CategoryID
	  INNER JOIN @tempMenuCats AS cidl ON cidl.CategoryID = c.CategoryID AND cidl.Show = 1
	   WHERE n.ArticleID IN(
		Select DISTINCT na.[ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNews] as na
		INNER JOIN  {databaseOwner}[{objectQualifier}EasyDNNNewsCategories]  as cat ON na.ArticleID = cat.ArticleID
		INNER JOIN @tempMenuCats AS cidl ON cidl.CategoryID = cat.CategoryID AND cidl.Show = 1
		INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsContentLocalization] AS ncl ON ncl.ArticleID = na.ArticleID AND ncl.LocaleCode = @LocaleCode
		   WHERE na.PortalID=@PortalID
		   AND ((@EditPermission = 1) OR (
				(@UserCanApprove = 1 OR na.Approved = 1)
				 AND (na.Active = 1 OR na.UserID=@UserID)
				 ))
		   AND na.HasPermissions = 0
		   AND na.PublishDate <= @CurrentDate
		   AND na.ExpireDate >= @CurrentDate
		   AND((@FilterAuthorOrAuthors = 1 AND na.UserID IN (SELECT UserID FROM @TempAuthorsIDList)) OR (@FilterAuthorOrAuthors = 0))
		UNION ALL
		Select DISTINCT na.[ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNews] as na
			 INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsArticleUserPermissions] as aup ON na.ArticleID = aup.ArticleID
			 INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] as cat ON na.ArticleID = cat.ArticleID
			 INNER JOIN @tempMenuCats AS cidl ON cidl.CategoryID = cat.CategoryID AND cidl.Show = 1
			 INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsContentLocalization] AS ncl ON ncl.ArticleID = na.ArticleID AND ncl.LocaleCode = @LocaleCode
			 WHERE na.PortalID=@PortalID
			 AND ((@EditPermission = 1) OR (
				 ((@UserID = -1 AND aup.UserID IS NULL) OR (aup.UserID = @UserID))
				 AND aup.Show = 1
				 AND ((@UserCanApprove = 1) OR (na.Approved = 1))
				 AND (na.Active = 1 OR na.UserID=@UserID)
			 ))
			 AND na.HasPermissions = 1
		     AND na.PublishDate <= @CurrentDate
		     AND na.ExpireDate >= @CurrentDate
		   	 AND((@FilterAuthorOrAuthors = 1 AND na.UserID IN (SELECT UserID FROM @TempAuthorsIDList)) OR (@FilterAuthorOrAuthors = 0))
		UNION
		Select DISTINCT na.[ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNews] as na
			  INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsArticleRolePermissions] as arp ON na.ArticleID = arp.ArticleID
			  INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] as cat ON na.ArticleID = cat.ArticleID
			  INNER JOIN @tempMenuCats AS cidl ON cidl.CategoryID = cat.CategoryID AND cidl.Show = 1
			  INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsContentLocalization] AS ncl ON ncl.ArticleID = na.ArticleID AND ncl.LocaleCode = @LocaleCode
			  WHERE na.PortalID=@PortalID
			  AND ((@EditPermission = 1) OR (
					((@UserCanApprove = 1) OR (na.Approved = 1))
					AND (na.Active = 1 OR na.UserID=@UserID)
					AND arp.Show = 1
					AND arp.RoleID IN (SELECT [RoleID] FROM @UserInRoles)
					))
			  AND na.HasPermissions = 1
			  AND na.PublishDate <= @CurrentDate
		      AND na.ExpireDate >= @CurrentDate
			  AND((@FilterAuthorOrAuthors = 1 AND na.UserID IN (SELECT UserID FROM @TempAuthorsIDList)) OR (@FilterAuthorOrAuthors = 0))	 
		) 
		ORDER BY tempc.Position, n.PublishDate;
	
END
ELSE IF @FilterBySocialGroup = 1
BEGIN
INSERT INTO @TempCategoryIDAndCount
SELECT CategoryID, Position, ParentCategory,
	CASE Show
	 WHEN 0 THEN 0
	 WHEN 1 THEN	
		CASE @AdminOrSuperUser
		WHEN 1 THEN
		(
		 SELECT count(n.[ArticleID]) as cnt FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS n
			 INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS c ON n.ArticleID = c.ArticleID AND c.CategoryID = Result.CategoryID
			 INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = n.ArticleID
			 INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialGroupItems] AS sgi ON sgi.ArticleID = n.ArticleID AND sgi.RoleID = @FilterByDNNGroupID
			 INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserID, @FilterByDNNGroupID) as t ON t.seckey = nss.SecurityKey
			 INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsContentLocalization] AS ncl ON ncl.ArticleID = n.ArticleID AND ncl.LocaleCode = @LocaleCode
			 WHERE n.PublishDate <= @CurrentDate
				AND n.ExpireDate >= @CurrentDate
				AND n.PortalID = @PortalID
		)
		WHEN 0 THEN
		(
		SELECT (
					(
						SELECT count(n.[ArticleID]) as cnt FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS n
						INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories]  AS c ON n.ArticleID = c.ArticleID AND c.CategoryID = Result.CategoryID
						INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = n.ArticleID
						INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialGroupItems] AS sgi ON sgi.ArticleID = n.ArticleID AND sgi.RoleID = @FilterByDNNGroupID
						INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserID, @FilterByDNNGroupID) as t ON t.seckey = nss.SecurityKey
						INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsContentLocalization] AS ncl ON ncl.ArticleID = n.ArticleID AND ncl.LocaleCode = @LocaleCode
						 WHERE n.PublishDate <= @CurrentDate
							 AND n.ExpireDate >= @CurrentDate
							 AND ((@UserCanApprove = 1) OR (n.Approved = 1))
							 AND ((@AdminOrSuperUser = 1) OR (n.Active = 1 OR n.UserID=@UserID))
							 AND n.HasPermissions = 0
							 AND n.PortalID = @PortalID
					 )
					 +
					(
						SELECT count(aup.[ArticleID]) FROM {databaseOwner}[{objectQualifier}EasyDNNNewsArticleUserPermissions] AS aup
						 INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories]  AS c ON c.ArticleID = aup.ArticleID AND c.CategoryID = Result.CategoryID
						 INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNews] AS n ON n.ArticleID = aup.ArticleID
						 INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = n.ArticleID
						 INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialGroupItems] AS sgi ON sgi.ArticleID = n.ArticleID AND sgi.RoleID = @FilterByDNNGroupID
						 INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserID, @FilterByDNNGroupID) as t ON t.seckey = nss.SecurityKey
						 INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsContentLocalization] AS ncl ON ncl.ArticleID = n.ArticleID AND ncl.LocaleCode = @LocaleCode
						 WHERE ((@UserID = -1 AND aup.UserID IS NULL) OR (aup.UserID = @UserID))
					 		AND n.PublishDate <= @CurrentDate
							AND n.ExpireDate >= @CurrentDate
							AND ((@UserCanApprove = 1) OR (n.Approved = 1))
							AND ((@AdminOrSuperUser = 1) OR (n.Active = 1 OR n.UserID=@UserID))
							AND n.HasPermissions = 1
							AND n.PortalID = @PortalID
					 )	 
					+ 
					(
						CASE @UserID
						WHEN -1 THEN 0
						ELSE			
					(
						SELECT count(PerRoles.[ArticleID]) FROM 
						
						(SELECT DISTINCT arp.[ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsArticleRolePermissions] as arp
						 INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories]  AS c ON c.ArticleID = arp.ArticleID AND c.CategoryID = Result.CategoryID
						 INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsContentLocalization] AS ncl ON ncl.ArticleID = arp.ArticleID AND ncl.LocaleCode = @LocaleCode
						 WHERE arp.RoleID IN (SELECT RoleID FROM @UserInRoles)
						  AND arp.ArticleID NOT IN (
							SELECT aup.[ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsArticleUserPermissions] AS aup
							INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories]  AS c ON c.ArticleID = aup.ArticleID AND c.CategoryID = Result.CategoryID
							INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNews] AS n ON n.ArticleID = aup.ArticleID
							INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = n.ArticleID
							INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialGroupItems] AS sgi ON sgi.ArticleID = n.ArticleID AND sgi.RoleID = @FilterByDNNGroupID
							INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserID, @FilterByDNNGroupID) as t ON t.seckey = nss.SecurityKey
							INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsContentLocalization] AS ncl ON ncl.ArticleID = n.ArticleID AND ncl.LocaleCode = @LocaleCode
								WHERE aup.UserID = @UserID
					 				AND n.PublishDate <= @CurrentDate
									AND n.ExpireDate >= @CurrentDate
									AND ((@UserCanApprove = 1) OR (n.Approved = 1))
									AND ((@AdminOrSuperUser = 1) OR (n.Active = 1 OR n.UserID=@UserID))
									AND n.HasPermissions = 1
									AND n.PortalID = @PortalID
							)
						 ) as PerRoles 
						 INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNews] AS n ON n.ArticleID = PerRoles.ArticleID
						 WHERE n.PublishDate <= @CurrentDate
						 AND n.ExpireDate >= @CurrentDate
						 AND ((@UserCanApprove = 1) OR (n.Approved = 1))
						 AND ((@AdminOrSuperUser = 1) OR (n.Active = 1 OR n.UserID=@UserID))
						 AND n.HasPermissions = 1
						 AND n.PortalID = @PortalID
						 )
			END
					)
				)
		)
		END		
	 END AS ''Count'',NewsModuleID,TabID
	FROM 
	(SELECT 
	ncl.[CategoryID],
	ncl.[Position],
	ncl.[ParentCategory],
	ncl.Show,
		CASE WHEN cl.[NewsModuleID] IS NULL THEN @DefaultModuleID ELSE cl.[NewsModuleID] END AS NewsModuleID,
		CASE WHEN tm.[TabID] IS NULL THEN @DefaultTabID ELSE tm.[TabID] END AS TabID
	FROM @tempMenuCats as ncl LEFT OUTER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryLink] as cl
	ON ncl.CategoryID = cl.CategoryID AND cl.[SourceModuleID] = @MenuModuleID
	LEFT OUTER JOIN {databaseOwner}[{objectQualifier}TabModules] AS tm ON cl.NewsModuleID = tm.ModuleID) as Result

	SELECT n.ArticleID,n.Title,n.TitleLink,n.PublishDate,n.NumberOfViews,n.RatingValue,n.DateAdded,n.ExpireDate,n.LastModified,
	 n.HasPermissions, n.Active, n.Approved, n.NumberOfComments,n.UserID, c.[CategoryID], tempc.[Position], tempc.Count, tempc.NewsModuleID,tempc.TabID
	 FROM {databaseOwner}[{objectQualifier}EasyDNNNews] as n
	  INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] c ON n.ArticleID = c.ArticleID 
	  INNER JOIN @TempCategoryIDAndCount as tempc ON tempc.CategoryID = c.CategoryID
	  INNER JOIN @tempMenuCats AS cidl ON cidl.CategoryID = c.CategoryID AND cidl.Show = 1
		WHERE n.ArticleID IN(
		Select DISTINCT na.[ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNews] as na
		INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] as cat ON na.ArticleID = cat.ArticleID
		INNER JOIN @tempMenuCats AS cidl ON cidl.CategoryID = cat.CategoryID AND cidl.Show = 1
		INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = na.ArticleID
		INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialGroupItems] AS sgi ON sgi.ArticleID = na.ArticleID AND sgi.RoleID = @FilterByDNNGroupID
		INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId, @UserID, @FilterByDNNGroupID) as t ON t.seckey = nss.SecurityKey
		INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsContentLocalization] AS ncl ON ncl.ArticleID = na.ArticleID AND ncl.LocaleCode = @LocaleCode
		   WHERE na.PortalID=@PortalID
		   AND ((@EditPermission = 1) OR (
				(@UserCanApprove = 1 OR na.Approved = 1)
				 AND (na.Active = 1 OR na.UserID=@UserID)
				 ))
		   AND na.HasPermissions = 0
		   AND na.PublishDate <= @CurrentDate
		   AND na.ExpireDate >= @CurrentDate
		   AND((@FilterAuthorOrAuthors = 1 AND na.UserID IN (SELECT UserID FROM @TempAuthorsIDList)) OR (@FilterAuthorOrAuthors = 0))
		UNION ALL
		Select DISTINCT na.[ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNews] as na
			 INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsArticleUserPermissions] as aup ON na.ArticleID = aup.ArticleID
			 INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] as cat ON na.ArticleID = cat.ArticleID
			 INNER JOIN @tempMenuCats AS cidl ON cidl.CategoryID = cat.CategoryID AND cidl.Show = 1
			 INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = na.ArticleID
			 INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialGroupItems] AS sgi ON sgi.ArticleID = na.ArticleID AND sgi.RoleID = @FilterByDNNGroupID
			 INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserID, @FilterByDNNGroupID) as t ON t.seckey = nss.SecurityKey
			 INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsContentLocalization] AS ncl ON ncl.ArticleID = na.ArticleID AND ncl.LocaleCode = @LocaleCode
			 WHERE na.PortalID=@PortalID
			 AND ((@EditPermission = 1) OR (
				 ((@UserID = -1 AND aup.UserID IS NULL) OR (aup.UserID = @UserID))
				 AND aup.Show = 1
				 AND ((@UserCanApprove = 1) OR (na.Approved = 1))
				 AND (na.Active = 1 OR na.UserID=@UserID)
			 ))
			 AND na.HasPermissions = 1
		     AND na.PublishDate <= @CurrentDate
		     AND na.ExpireDate >= @CurrentDate
		   	 AND((@FilterAuthorOrAuthors = 1 AND na.UserID IN (SELECT UserID FROM @TempAuthorsIDList)) OR (@FilterAuthorOrAuthors = 0))
		UNION
		Select DISTINCT na.[ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNews] as na
			  INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsArticleRolePermissions] as arp ON na.ArticleID = arp.ArticleID
			  INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] as cat ON na.ArticleID = cat.ArticleID
			  INNER JOIN @tempMenuCats AS cidl ON cidl.CategoryID = cat.CategoryID AND cidl.Show = 1
			  INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = na.ArticleID
			  INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialGroupItems] AS sgi ON sgi.ArticleID = na.ArticleID AND sgi.RoleID = @FilterByDNNGroupID
			  INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserID, @FilterByDNNGroupID) as t ON t.seckey = nss.SecurityKey
			  INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsContentLocalization] AS ncl ON ncl.ArticleID = na.ArticleID AND ncl.LocaleCode = @LocaleCode
			  WHERE na.PortalID=@PortalID
			  AND ((@EditPermission = 1) OR (
					((@UserCanApprove = 1) OR (na.Approved = 1))
					AND (na.Active = 1 OR na.UserID=@UserID)
					AND arp.Show = 1
					AND arp.RoleID IN (SELECT [RoleID] FROM @UserInRoles)
					))
			  AND na.HasPermissions = 1
			  AND na.PublishDate <= @CurrentDate
		      AND na.ExpireDate >= @CurrentDate
			  AND((@FilterAuthorOrAuthors = 1 AND na.UserID IN (SELECT UserID FROM @TempAuthorsIDList)) OR (@FilterAuthorOrAuthors = 0))	 
		) 
		ORDER BY tempc.Position, n.PublishDate;
	
END
ELSE IF @FilterByDNNUserID <> 0
BEGIN
INSERT INTO @TempCategoryIDAndCount
SELECT CategoryID, Position, ParentCategory,
	CASE Show
	 WHEN 0 THEN 0
	 WHEN 1 THEN	
		CASE @AdminOrSuperUser
		WHEN 1 THEN
		(
		 SELECT count(n.[ArticleID]) as cnt FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS n	 
			 INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories]  AS c ON n.ArticleID = c.ArticleID AND c.CategoryID = Result.CategoryID
			 INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = n.ArticleID
			 INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserID, @FilterByDNNGroupID) as t ON t.seckey = nss.SecurityKey
			 INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsContentLocalization] AS ncl ON ncl.ArticleID = n.ArticleID AND ncl.LocaleCode = @LocaleCode
			 WHERE n.PublishDate <= @CurrentDate
			 AND n.ExpireDate >= @CurrentDate
			 AND n.PortalID = @PortalID
			 AND n.UserID = @FilterByDNNUserID 
		)
		WHEN 0 THEN
		(
		SELECT (
					(
						SELECT count(n.[ArticleID]) as cnt FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS n
						 INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories]  AS c ON n.ArticleID = c.ArticleID AND c.CategoryID = Result.CategoryID
						 INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = n.ArticleID
						 INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserID, @FilterByDNNGroupID) as t ON t.seckey = nss.SecurityKey
						 INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsContentLocalization] AS ncl ON ncl.ArticleID = n.ArticleID AND ncl.LocaleCode = @LocaleCode
						 WHERE n.PublishDate <= @CurrentDate
							 AND n.ExpireDate >= @CurrentDate
							 AND ((@UserCanApprove = 1) OR (n.Approved = 1))
							 AND ((@AdminOrSuperUser = 1) OR (n.Active = 1 OR n.UserID=@UserID))
							 AND n.HasPermissions = 0
							 AND n.PortalID = @PortalID
							 AND n.UserID = @FilterByDNNUserID
					)
					 +
					(
						SELECT count(aup.[ArticleID]) FROM {databaseOwner}[{objectQualifier}EasyDNNNewsArticleUserPermissions] AS aup
						 INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories]  AS c ON c.ArticleID = aup.ArticleID AND c.CategoryID = Result.CategoryID
						 INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNews] AS n ON n.ArticleID = aup.ArticleID
						 INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = n.ArticleID
						 INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserID, @FilterByDNNGroupID) as t ON t.seckey = nss.SecurityKey
						 INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsContentLocalization] AS ncl ON ncl.ArticleID = n.ArticleID AND ncl.LocaleCode = @LocaleCode
						 WHERE ((@UserID = -1 AND aup.UserID IS NULL) OR (aup.UserID = @UserID))
					 		AND n.PublishDate <= @CurrentDate
							AND n.ExpireDate >= @CurrentDate
							AND ((@UserCanApprove = 1) OR (n.Approved = 1))
							AND ((@AdminOrSuperUser = 1) OR (n.Active = 1 OR n.UserID=@UserID))
							AND n.HasPermissions = 1
							AND n.PortalID = @PortalID
							AND n.UserID = @FilterByDNNUserID 					 )	 
					+ 
					(
						CASE @UserID
						WHEN -1 THEN 0
						ELSE			
					(
						SELECT count(PerRoles.[ArticleID]) FROM 
						
						(SELECT DISTINCT arp.[ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsArticleRolePermissions] as arp
						 INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories]  AS c ON c.ArticleID = arp.ArticleID AND c.CategoryID = Result.CategoryID
						 INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsContentLocalization] AS ncl ON ncl.ArticleID = arp.ArticleID AND ncl.LocaleCode = @LocaleCode
						 WHERE arp.RoleID IN (SELECT RoleID FROM @UserInRoles)
						  AND arp.ArticleID NOT IN (
							SELECT aup.[ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsArticleUserPermissions] AS aup
							INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories]  AS c ON c.ArticleID = aup.ArticleID AND c.CategoryID = Result.CategoryID
							INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNews] AS n ON n.ArticleID = aup.ArticleID
							INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = n.ArticleID
							INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserID, @FilterByDNNGroupID) as t ON t.seckey = nss.SecurityKey
							INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsContentLocalization] AS ncl ON ncl.ArticleID = n.ArticleID AND ncl.LocaleCode = @LocaleCode
								WHERE aup.UserID = @UserID
					 				AND n.PublishDate <= @CurrentDate
									AND n.ExpireDate >= @CurrentDate
									AND ((@UserCanApprove = 1) OR (n.Approved = 1))
									AND ((@AdminOrSuperUser = 1) OR (n.Active = 1 OR n.UserID=@UserID))
									AND n.HasPermissions = 1
									AND n.PortalID = @PortalID
									AND n.UserID = @FilterByDNNUserID 
			  				)
						 ) as PerRoles 
						 INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNews] AS n ON n.ArticleID = PerRoles.ArticleID
						 WHERE n.PublishDate <= @CurrentDate
						 AND n.ExpireDate >= @CurrentDate
						 AND ((@UserCanApprove = 1) OR (n.Approved = 1))
						 AND ((@AdminOrSuperUser = 1) OR (n.Active = 1 OR n.UserID=@UserID))
						 AND n.HasPermissions = 1
						 AND n.PortalID = @PortalID
						 AND n.UserID = @FilterByDNNUserID 						 )
			END
					)
				)
		)
		END		
	 END AS ''Count'',NewsModuleID,TabID
	FROM 
	(SELECT 
		ncl.[CategoryID],
		ncl.[Position],
		ncl.[ParentCategory],
		ncl.Show,
		CASE WHEN cl.[NewsModuleID] IS NULL THEN @DefaultModuleID ELSE cl.[NewsModuleID] END AS NewsModuleID,
		CASE WHEN tm.[TabID] IS NULL THEN @DefaultTabID ELSE tm.[TabID] END AS TabID
	FROM @tempMenuCats as ncl LEFT OUTER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryLink] as cl
	ON ncl.CategoryID = cl.CategoryID AND cl.[SourceModuleID] = @MenuModuleID
	LEFT OUTER JOIN {databaseOwner}[{objectQualifier}TabModules] AS tm ON cl.NewsModuleID = tm.ModuleID) as Result

	SELECT n.ArticleID,n.Title,n.TitleLink,n.PublishDate,n.NumberOfViews,n.RatingValue,n.DateAdded,n.ExpireDate,n.LastModified,
	 n.HasPermissions, n.Active, n.Approved, n.NumberOfComments,n.UserID, c.[CategoryID], ncl.[Position], ncl.Count, ncl.NewsModuleID,ncl.TabID
	 FROM {databaseOwner}[{objectQualifier}EasyDNNNews] as n
	  INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] c ON n.ArticleID = c.ArticleID 
	  INNER JOIN @TempCategoryIDAndCount as ncl ON ncl.CategoryID = c.CategoryID
	  INNER JOIN @tempMenuCats AS cidl ON cidl.CategoryID = c.CategoryID AND cidl.Show = 1 WHERE n.ArticleID IN(
		Select DISTINCT na.[ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNews] as na
		INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] as cat ON na.ArticleID = cat.ArticleID
		INNER JOIN @tempMenuCats AS cidl ON cidl.CategoryID = cat.CategoryID AND cidl.Show = 1
		INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = na.ArticleID
		INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserID, @FilterByDNNGroupID) as t ON t.seckey = nss.SecurityKey
		INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsContentLocalization] AS ncl ON ncl.ArticleID = na.ArticleID AND ncl.LocaleCode = @LocaleCode
		   WHERE na.PortalID=@PortalID
		   AND ((@EditPermission = 1) OR (
				(@UserCanApprove = 1 OR na.Approved = 1)
				 AND (na.Active = 1 OR na.UserID=@UserID)
				 ))
		   AND na.HasPermissions = 0
		   AND na.PublishDate <= @CurrentDate
		   AND na.ExpireDate >= @CurrentDate
		   AND((@FilterAuthorOrAuthors = 1 AND na.UserID IN (SELECT UserID FROM @TempAuthorsIDList)) OR (@FilterAuthorOrAuthors = 0))
		UNION ALL
		Select DISTINCT na.[ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNews] as na
			 INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsArticleUserPermissions] as aup ON na.ArticleID = aup.ArticleID
			 INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] as cat ON na.ArticleID = cat.ArticleID
			 INNER JOIN @tempMenuCats AS cidl ON cidl.CategoryID = cat.CategoryID AND cidl.Show = 1
			 INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = na.ArticleID
			 INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserID, @FilterByDNNGroupID) as t ON t.seckey = nss.SecurityKey
			 INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsContentLocalization] AS ncl ON ncl.ArticleID = na.ArticleID AND ncl.LocaleCode = @LocaleCode
			 WHERE na.PortalID=@PortalID
			 AND ((@EditPermission = 1) OR (
				 ((@UserID = -1 AND aup.UserID IS NULL) OR (aup.UserID = @UserID))
				 AND aup.Show = 1
				 AND ((@UserCanApprove = 1) OR (na.Approved = 1))
				 AND (na.Active = 1 OR na.UserID=@UserID)
			 ))
			 AND na.HasPermissions = 1
		     AND na.PublishDate <= @CurrentDate
		     AND na.ExpireDate >= @CurrentDate
		   	 AND((@FilterAuthorOrAuthors = 1 AND na.UserID IN (SELECT UserID FROM @TempAuthorsIDList)) OR (@FilterAuthorOrAuthors = 0))
		UNION
		Select DISTINCT na.[ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNews] as na
			  INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsArticleRolePermissions] as arp ON na.ArticleID = arp.ArticleID
			  INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] as cat ON na.ArticleID = cat.ArticleID
			  INNER JOIN @tempMenuCats AS cidl ON cidl.CategoryID = cat.CategoryID AND cidl.Show = 1
			  INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = na.ArticleID
			  INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserID, @FilterByDNNGroupID) as t ON t.seckey = nss.SecurityKey
			  INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsContentLocalization] AS ncl ON ncl.ArticleID = na.ArticleID AND ncl.LocaleCode = @LocaleCode
			  WHERE na.PortalID=@PortalID
			  AND ((@EditPermission = 1) OR (
					((@UserCanApprove = 1) OR (na.Approved = 1))
					AND (na.Active = 1 OR na.UserID=@UserID)
					AND arp.Show = 1
					AND arp.RoleID IN (SELECT [RoleID] FROM @UserInRoles)
					))
			  AND na.HasPermissions = 1
			  AND na.PublishDate <= @CurrentDate
		      AND na.ExpireDate >= @CurrentDate
			  AND((@FilterAuthorOrAuthors = 1 AND na.UserID IN (SELECT UserID FROM @TempAuthorsIDList)) OR (@FilterAuthorOrAuthors = 0))	 
		) 
		ORDER BY ncl.Position, n.PublishDate;
	
END

END' 
END
GO
/****** Object:  StoredProcedure {databaseOwner}[{objectQualifier}EasyDNNNewsGetItemsFromSearch]    Script Date: 06/24/2013 16:39:07 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'{databaseOwner}[{objectQualifier}EasyDNNNewsGetItemsFromSearch]') AND type in (N'P', N'PC'))
BEGIN
EXEC dbo.sp_executesql @statement = N'CREATE PROCEDURE {databaseOwner}[{objectQualifier}EasyDNNNewsGetItemsFromSearch]
	@ViewType tinyint = 0, -- 0 - View, 1 - Editor
	@PortalID int, -- current Portal
	@ModuleID int, -- current Module, portal sharing isto sadrzi dobre kategorije, auto add i setingsi su snimljeni kod tog modula
	@UserID int,
	@CurrentDate Datetime, -- = GetUTCDate,
	@OrderBy nvarchar(20) = ''PublishDate DESC'',
	@ItemsFrom int = 1,
	@ItemsTo int = 5,
	@ShowAllAuthors bit = 1, -- gleda se filtriranje autora po modulu ili portalu
	@FilterByAuthor int = 0, -- ako se selektiran jedan autor
	@FilterByGroupID int = 0, -- ako je selektirana grupa
	@FilterByDNNUserID int = 0, -- filter by some UserID / not current user ID
	@FilterByDNNGroupID int = 0, -- filter by DNNGroup/RoleID / not profile GroupID
	@EditOnlyAsOwner bit = 0, -- news settings
	@UserCanApprove bit = 0, -- news settings
	@LocaleCode nvarchar(20) = '''',
	@IsSocialInstance bit = 0,	
	--@FirstOrderBy nvarchar(20) = '''',--''Featured DESC'', -- featured articles on top	
	@Perm_ViewAllCategores bit = 0, -- permission settings View all categories
	@Perm_EditAllCategores bit = 0, -- permission settings Edit all categories
	@AdminOrSuperUser bit = 0,
	@CategoryFilterType tinyint = 1, -- 0 All categories, 1 - SELECTion, 2 - AutoAdd
	@PermissionSettingsSource bit = 1, -- 1 portal, 0 module
	@FillterSettingsSource bit = 1, -- 1 portal, 0 module
	
	-- ODNOSI SE NA SEARCH UNUTAR SEARCH MODULA
	@OuterPermissionSource tinyint= 0, -- 0 none, 1 portal, 2 module
	@OuterPermissionID int = 0,
	@OuterModuleID int = 0,
	
	@SearchType tinyint = 3,
	@SearchCondition nvarchar(300),
	@SearchModulePermissions bit = 0,
	@HideUnlocalizedItems bit = 0
AS
SET NOCOUNT ON;
DECLARE @SearchTable TABLE (Words nvarchar(100) NOT NULL);
BEGIN
	DECLARE @word nvarchar(100), @PosWord int
	SET @SearchCondition = LTRIM(RTRIM(@SearchCondition))+ '':''
	SET @PosWord = CHARINDEX('':'', @SearchCondition, 1)
	IF REPLACE(@SearchCondition, '':'', '''') <> ''''
	BEGIN
		WHILE @PosWord > 0
		BEGIN
			SET @word = LTRIM(RTRIM(LEFT(@SearchCondition, @PosWord - 1)))
			IF @word <> ''''
			BEGIN
				INSERT INTO @SearchTable (Words) VALUES (''%''+@word+''%'') --Use Appropriate conversion
			END
			SET @SearchCondition = RIGHT(@SearchCondition, LEN(@SearchCondition) - @PosWord)
			SET @PosWord = CHARINDEX('':'', @SearchCondition, 1)
		END
	END
END

DECLARE @EditPermission tinyint;
SET @EditPermission = 0;
DECLARE @UserInRoles TABLE (RoleID int NOT NULL PRIMARY KEY);
INSERT INTO @UserInRoles SELECT DISTINCT ur.[RoleID] FROM {databaseOwner}[{objectQualifier}UserRoles] AS ur INNER JOIN {databaseOwner}[{objectQualifier}Roles] AS r ON ur.RoleID = r.RoleID WHERE ur.UserID = @UserID AND r.PortalID = @PortalID AND (ur.ExpiryDate IS NULL OR ur.ExpiryDate > GETUTCDATE()) AND (ur.EffectiveDate IS NULL OR ur.EffectiveDate < GETUTCDATE());
DECLARE @UserViewCategories TABLE (CategoryID int NOT NULL PRIMARY KEY); -- all categories which user can see based on permissions
DECLARE @UserEditCategories TABLE (CategoryID int NOT NULL PRIMARY KEY); -- all categories which user can edit based on permissions
DECLARE @UserViewCategoriesWithFilter TABLE (CategoryID int NOT NULL PRIMARY KEY); -- all categories which user can see based on permissions and Module filter
DECLARE @FiltredByCategories TABLE (CategoryID int NOT NULL PRIMARY KEY); -- all categories that are filtred by module or portal

IF @AdminOrSuperUser = 1 OR @Perm_ViewAllCategores = 1
BEGIN
	INSERT INTO @UserViewCategories SELECT [CategoryID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryList] WHERE PortalID = @PortalID;
END
ELSE IF @SearchModulePermissions = 1 -- ovaj dio se odnosi na dozvole ako se pristupa iz satelitskog modula
BEGIN
	IF @OuterPermissionSource = 0
	BEGIN
		INSERT INTO @UserViewCategories SELECT [CategoryID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryList] WHERE PortalID = @PortalID;
	END
	ELSE IF @UserID = -1
	BEGIN
		IF @OuterPermissionSource = 1 -- portal
		BEGIN
		INSERT INTO @UserViewCategories
			SELECT rpsc.[CategoryID] FROM  {databaseOwner}[{objectQualifier}EasyDNNNewsRolePremissionsShowCategories] AS rpsc 
			INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsRolePremissionSettings] AS rps ON rps.PremissionSettingsID = rpsc.PremissionSettingsID
			WHERE rps.PortalID = @PortalID  AND rps.ModuleID IS NULL AND rps.RoleID IS NULL;
		END
		ELSE IF @OuterPermissionSource = 2 -- module
		BEGIN
			INSERT INTO @UserViewCategories
			SELECT rpsc.[CategoryID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsRolePremissionsShowCategories] AS rpsc
			INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsRolePremissionSettings] AS rps ON rps.PremissionSettingsID = rpsc.PremissionSettingsID
			WHERE rps.PortalID = @PortalID AND rps.ModuleID = @OuterPermissionID AND rps.RoleID IS NULL;
		END
	END
	ELSE -- registrirani korisnik
	BEGIN
		IF @PermissionSettingsSource = 1 -- by portal
		BEGIN
			INSERT INTO @UserViewCategories
			SELECT rpsc.[CategoryID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsRolePremissionsShowCategories] AS rpsc
			INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsRolePremissionSettings] AS rps ON rps.PremissionSettingsID = rpsc.PremissionSettingsID
			INNER JOIN @UserInRoles AS uir ON rps.RoleID = uir.RoleID
			WHERE rps.PortalID = @PortalID AND rps.ModuleID IS NULL GROUP BY rpsc.[CategoryID]
			UNION
			SELECT upsc.[CategoryID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsUserPremissionsShowCategories] AS upsc
			INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsUserPremissionSettings] AS ups ON ups.PremissionSettingsID = upsc.PremissionSettingsID
			WHERE ups.UserID = @UserID AND ups.PortalID = @PortalID AND ups.ModuleID IS NULL GROUP BY upsc.[CategoryID];
		END
		ELSE -- by module
		BEGIN
			INSERT INTO @UserViewCategories
			SELECT rpsc.[CategoryID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsRolePremissionsShowCategories] AS rpsc
			INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsRolePremissionSettings] AS rps ON rps.PremissionSettingsID = rpsc.PremissionSettingsID
			INNER JOIN @UserInRoles AS uir ON rps.RoleID = uir.RoleID
			WHERE rps.PortalID = @PortalID AND rps.ModuleID = @OuterModuleID GROUP BY rpsc.[CategoryID]
			UNION
			SELECT upsc.[CategoryID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsUserPremissionsShowCategories] AS upsc
			INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsUserPremissionSettings] AS ups ON ups.PremissionSettingsID = upsc.PremissionSettingsID
			WHERE ups.UserID = @UserID AND ups.PortalID = @PortalID AND ups.ModuleID = @OuterPermissionID GROUP BY upsc.[CategoryID];
		END
	END 
END
ELSE IF @UserID = -1
BEGIN	
	IF @PermissionSettingsSource = 1 -- by portal
	BEGIN
		INSERT INTO @UserViewCategories
		SELECT rpsc.[CategoryID] FROM  {databaseOwner}[{objectQualifier}EasyDNNNewsRolePremissionsShowCategories] AS rpsc 
		INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsRolePremissionSettings] AS rps ON rps.PremissionSettingsID = rpsc.PremissionSettingsID
		WHERE rps.PortalID = @PortalID  AND rps.ModuleID IS NULL AND rps.RoleID IS NULL;
	END
	ELSE -- by module
	BEGIN
	INSERT INTO @UserViewCategories
		SELECT rpsc.[CategoryID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsRolePremissionsShowCategories] AS rpsc
		INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsRolePremissionSettings] AS rps ON rps.PremissionSettingsID = rpsc.PremissionSettingsID
		WHERE rps.PortalID = @PortalID AND rps.ModuleID = @ModuleID AND rps.RoleID IS NULL;
	END
END
ELSE -- registrirani korisnik
BEGIN
	IF @PermissionSettingsSource = 1 -- by portal
	BEGIN
		INSERT INTO @UserViewCategories
		SELECT rpsc.[CategoryID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsRolePremissionsShowCategories] AS rpsc
		INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsRolePremissionSettings] AS rps ON rps.PremissionSettingsID = rpsc.PremissionSettingsID
		INNER JOIN @UserInRoles AS uir ON rps.RoleID = uir.RoleID
		WHERE rps.PortalID = @PortalID AND rps.ModuleID IS NULL GROUP BY rpsc.[CategoryID]
		UNION
		SELECT upsc.[CategoryID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsUserPremissionsShowCategories] AS upsc
		INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsUserPremissionSettings] AS ups ON ups.PremissionSettingsID = upsc.PremissionSettingsID
		WHERE ups.UserID = @UserID AND ups.PortalID = @PortalID AND ups.ModuleID IS NULL GROUP BY upsc.[CategoryID];
	END
	ELSE -- by module
	BEGIN
		INSERT INTO @UserViewCategories
		SELECT rpsc.[CategoryID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsRolePremissionsShowCategories] AS rpsc
		INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsRolePremissionSettings] AS rps ON rps.PremissionSettingsID = rpsc.PremissionSettingsID
		INNER JOIN @UserInRoles AS uir ON rps.RoleID = uir.RoleID
		WHERE rps.PortalID = @PortalID AND rps.ModuleID = @ModuleID GROUP BY rpsc.[CategoryID]
		UNION
		SELECT upsc.[CategoryID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsUserPremissionsShowCategories] AS upsc
		INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsUserPremissionSettings] AS ups ON ups.PremissionSettingsID = upsc.PremissionSettingsID
		WHERE ups.UserID = @UserID AND ups.PortalID = @PortalID AND ups.ModuleID = @ModuleID GROUP BY upsc.[CategoryID];
	END
END

IF @OuterModuleID <> 0 -- ovaj dio se odnosi na filter kategorija iz satelitskog modula
BEGIN
	IF @CategoryFilterType = 0 -- 0 All categories
	BEGIN
		INSERT INTO @UserViewCategoriesWithFilter SELECT [CategoryID] FROM @UserViewCategories;
		INSERT INTO @FiltredByCategories SELECT [CategoryID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryList] WHERE PortalID = @PortalID;
	END
	ELSE IF @CategoryFilterType = 1 -- 1 - SELECTion
	BEGIN
		INSERT INTO @UserViewCategoriesWithFilter 
		SELECT cl.[CategoryID] FROM @UserViewCategories AS cl
		INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsModuleCategoryItems] AS mci ON mci.CategoryID = cl.CategoryID AND mci.ModuleID = @OuterModuleID
			
		INSERT INTO @FiltredByCategories SELECT [CategoryID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsModuleCategoryItems] WHERE ModuleID = @OuterModuleID;
	END
	ELSE IF @CategoryFilterType = 2 -- 2 - AutoAdd
	BEGIN
		WITH hierarchy AS(
			SELECT [CategoryID], [ParentCategory]
			FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryList] AS cl
			WHERE (cl.ParentCategory IN (SELECT [CategoryID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsModuleCategoryItems] WHERE ModuleID = @OuterModuleID) OR cl.CategoryID IN (SELECT [CategoryID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsModuleCategoryItems] WHERE ModuleID = @OuterModuleID)) AND PortalID = @PortalID
			UNION ALL
			SELECT c.[CategoryID], c.[ParentCategory]
			FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryList] AS c INNER JOIN hierarchy AS p ON c.ParentCategory = p.CategoryID WHERE c.PortalID = @PortalID
			)
		INSERT INTO @FiltredByCategories SELECT DISTINCT CategoryID FROM hierarchy;	
		INSERT INTO @UserViewCategoriesWithFilter SELECT uvc.CategoryID FROM @FiltredByCategories AS nfc INNER JOIN @UserViewCategories AS uvc ON uvc.CategoryID = nfc.CategoryID;
	END
END
ELSE
BEGIN
	IF @CategoryFilterType = 0 -- 0 All categories
	BEGIN
		INSERT INTO @UserViewCategoriesWithFilter SELECT [CategoryID] FROM @UserViewCategories;
		INSERT INTO @FiltredByCategories SELECT [CategoryID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryList] WHERE PortalID = @PortalID;
	END
	ELSE IF @CategoryFilterType = 1 -- 1 - SELECTion
	BEGIN
		IF @FillterSettingsSource = 1 -- portal
		BEGIN
			INSERT INTO @UserViewCategoriesWithFilter 
			SELECT cl.[CategoryID] FROM @UserViewCategories AS cl
			INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsPortalCategoryItems] AS pci ON pci.CategoryID = cl.CategoryID AND pci.PortalID = @PortalID
			
			INSERT INTO @FiltredByCategories SELECT [CategoryID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsPortalCategoryItems] WHERE PortalID = @PortalID;
		END
		ELSE -- module
		BEGIN
			INSERT INTO @UserViewCategoriesWithFilter 
			SELECT cl.[CategoryID] FROM @UserViewCategories AS cl
			INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsModuleCategoryItems] AS mci ON mci.CategoryID = cl.CategoryID AND mci.ModuleID = @ModuleID
			
			INSERT INTO @FiltredByCategories SELECT [CategoryID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsModuleCategoryItems] WHERE ModuleID = @ModuleID;
		END
	END
	ELSE IF @CategoryFilterType = 2 -- 2 - AutoAdd
	BEGIN
		IF @FillterSettingsSource = 1 -- portal
		BEGIN
			WITH hierarchy AS(
				SELECT [CategoryID], [ParentCategory]
				FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryList] AS cl
				WHERE (cl.ParentCategory IN (SELECT [CategoryID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsPortalCategoryItems] WHERE PortalID = @PortalID) OR cl.CategoryID IN (SELECT [CategoryID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsPortalCategoryItems] WHERE PortalID = @PortalID)) AND PortalID = @PortalID
				UNION ALL
				SELECT c.[CategoryID], c.[ParentCategory]
				FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryList] AS c INNER JOIN hierarchy AS p ON c.ParentCategory = p.CategoryID WHERE c.PortalID = @PortalID
				)
			INSERT INTO @FiltredByCategories SELECT DISTINCT CategoryID FROM hierarchy;	
			INSERT INTO @UserViewCategoriesWithFilter SELECT uvc.CategoryID FROM @FiltredByCategories AS nfc INNER JOIN @UserViewCategories AS uvc ON uvc.CategoryID = nfc.CategoryID;			
		END
		ELSE -- module
		BEGIN
			WITH hierarchy AS(
				SELECT [CategoryID], [ParentCategory]
				FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryList] AS cl
				WHERE (cl.ParentCategory IN (SELECT [CategoryID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsModuleCategoryItems] WHERE ModuleID = @ModuleID) OR cl.CategoryID IN (SELECT [CategoryID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsModuleCategoryItems] WHERE ModuleID = @ModuleID)) AND PortalID = @PortalID
				UNION ALL
				SELECT c.[CategoryID], c.[ParentCategory]
				FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryList] AS c INNER JOIN hierarchy AS p ON c.ParentCategory = p.CategoryID WHERE c.PortalID = @PortalID
				)
			INSERT INTO @FiltredByCategories SELECT DISTINCT CategoryID FROM hierarchy;	
			INSERT INTO @UserViewCategoriesWithFilter SELECT uvc.CategoryID FROM @FiltredByCategories AS nfc INNER JOIN @UserViewCategories AS uvc ON uvc.CategoryID = nfc.CategoryID;
		END
	END
END

DECLARE @FilterBySocialGroup bit;
SET @FilterBySocialGroup = 0;
DECLARE @FilterAuthorOrAuthors bit;
SET @FilterAuthorOrAuthors = 0;

DECLARE @TempAuthorsIDList TABLE (UserID int NOT NULL PRIMARY KEY);
IF @IsSocialInstance = 1
	BEGIN
		IF @FilterByDNNGroupID <> 0
		BEGIN	
			SET @FilterBySocialGroup = 1;
			IF @FilterByAuthor <> 0
			BEGIN
				SET @FilterAuthorOrAuthors = 1;
				SELECT @FilterByAuthor = UserID FROM {databaseOwner}[{objectQualifier}EasyDNNNewsAuthorProfile] WHERE [AuthorProfileID] = @FilterByAuthor;
			END
		END
	END
ELSE
BEGIN
-- ovaj dio odnosi se na filtriranje autora
	IF @OuterModuleID <> 0 AND @ShowAllAuthors = 0 -- filter iu other modula
	BEGIN
		SET @FilterAuthorOrAuthors = 1;
		INSERT INTO @TempAuthorsIDList
			SELECT [UserID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsModuleAuthorsItems] AS mai WHERE mai.ModuleID = @OuterModuleID
			UNION 
			SELECT [UserID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsAuthorProfile] AS ap 
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsAutorGroupItems] AS agi ON ap.AuthorProfileID = agi.AuthorProfileID
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsModuleGroupItems] AS mgi ON mgi.GroupID = agi.GroupID
			WHERE mgi.ModuleID = @OuterModuleID
	END
	ELSE
	BEGIN
		IF @FilterByAuthor = 0 AND @FilterByGroupID = 0 AND @ShowAllAuthors = 0 -- filter glavnog newsa
		BEGIN
			SET @FilterAuthorOrAuthors = 1;
			IF @FillterSettingsSource = 1 -- by portal
			BEGIN
				INSERT INTO @TempAuthorsIDList
				SELECT [UserID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsPortalAuthorsItems] AS pai WHERE pai.PortalID = @PortalID
				UNION 
				SELECT [UserID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsAuthorProfile] AS ap 
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsAutorGroupItems] AS agi ON ap.AuthorProfileID = agi.AuthorProfileID
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsPortalGroupItems] AS pgi ON pgi.GroupID = agi.GroupID
					WHERE pgi.PortalID = @PortalID
			END
			ELSE -- by modul
			BEGIN
				INSERT INTO @TempAuthorsIDList
				SELECT [UserID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsModuleAuthorsItems] AS mai WHERE mai.ModuleID = @ModuleID
				UNION 
				SELECT [UserID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsAuthorProfile] AS ap 
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsAutorGroupItems] AS agi ON ap.AuthorProfileID = agi.AuthorProfileID
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsModuleGroupItems] AS mgi ON mgi.GroupID = agi.GroupID
					WHERE mgi.ModuleID = @ModuleID
			END
		END
		ELSE IF @FilterByAuthor <> 0
		BEGIN
			SET @FilterAuthorOrAuthors = 1;
			INSERT INTO @TempAuthorsIDList SELECT [UserID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsAuthorProfile] WHERE [AuthorProfileID] = @FilterByAuthor;
		END
		ELSE IF @FilterByGroupID <> 0
		BEGIN
			SET @FilterAuthorOrAuthors = 1;
			INSERT INTO @TempAuthorsIDList
			SELECT [UserID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsAuthorProfile] AS ap 
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsAutorGroupItems] AS agi ON ap.AuthorProfileID = agi.AuthorProfileID	
				WHERE agi.GroupID = @FilterByGroupID
		END
	END
END
-- kategorije sa edit pravima
IF @AdminOrSuperUser = 1 OR @Perm_EditAllCategores = 1
BEGIN	
	INSERT INTO @UserEditCategories SELECT CategoryID FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryList] WHERE PortalID = @PortalID;
	SET @EditPermission = 1;
END
ELSE IF @SearchModulePermissions = 1 -- ovaj dio se odnosi na dozvole ako se pristupa iz satelitskog modula
BEGIN
	IF @OuterPermissionSource = 0
	BEGIN
		INSERT INTO @UserEditCategories SELECT [CategoryID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryList] WHERE PortalID = @PortalID;
		SET @EditPermission = 1;
	END
	ELSE IF @UserID = -1
	BEGIN
		IF @OuterPermissionSource = 1 -- portal settings
		BEGIN
			INSERT INTO @UserEditCategories
			SELECT rpatc.[CategoryID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsRolePremissionsAddToCategories] AS rpatc
			INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsRolePremissionSettings] AS rps ON rps.PremissionSettingsID = rpatc.PremissionSettingsID
			WHERE rps.PortalID = @PortalID AND rps.ModuleID IS NULL AND rps.RoleID IS NULL;
		END
		ELSE IF @OuterPermissionSource = 2 -- module settings
		BEGIN
			INSERT INTO @UserEditCategories
			SELECT rpatc.[CategoryID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsRolePremissionsAddToCategories] AS rpatc
			INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsRolePremissionSettings] AS rps ON rps.PremissionSettingsID = rpatc.PremissionSettingsID
			WHERE rps.RoleID IS NULL AND rps.PortalID = @PortalID AND rps.ModuleID = @OuterPermissionID;
		END
	END
	ELSE -- registrirani korisnik
	BEGIN
		IF @PermissionSettingsSource = 1 -- by portal
		BEGIN
			INSERT INTO @UserEditCategories
			SELECT rpatc.[CategoryID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsRolePremissionsAddToCategories] AS rpatc
			INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsRolePremissionSettings] AS rps ON rps.PremissionSettingsID = rpatc.PremissionSettingsID
			INNER JOIN @UserInRoles AS uir ON rps.RoleID = uir.RoleID
			WHERE rps.PortalID = @PortalID AND rps.ModuleID IS NULL GROUP BY rpatc.[CategoryID]
			UNION
			SELECT upatc.[CategoryID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsUserPremissionsAddToCategories] AS upatc
			INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsUserPremissionSettings] AS ups ON ups.PremissionSettingsID = upatc.PremissionSettingsID
			WHERE ups.UserID = @UserID AND ups.PortalID = @PortalID AND ups.ModuleID IS NULL GROUP BY upatc.[CategoryID];
		END
		ELSE -- by module
		BEGIN
			INSERT INTO @UserEditCategories
			SELECT rpatc.[CategoryID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsRolePremissionsAddToCategories] AS rpatc
			INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsRolePremissionSettings] AS rps ON rps.PremissionSettingsID = rpatc.PremissionSettingsID
			INNER JOIN @UserInRoles AS uir ON rps.RoleID = uir.RoleID
			WHERE rps.PortalID = @PortalID AND rps.ModuleID = @OuterPermissionID GROUP BY rpatc.[CategoryID]
			UNION
			SELECT upatc.[CategoryID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsUserPremissionsAddToCategories] AS upatc
			INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsUserPremissionSettings] AS ups ON ups.PremissionSettingsID = upatc.PremissionSettingsID
			WHERE ups.UserID = @UserID AND ups.PortalID = @PortalID AND ups.ModuleID = @OuterPermissionID GROUP BY upatc.[CategoryID];
		END	
	END
END
ELSE
BEGIN
	IF @UserID = -1
	BEGIN
		IF @PermissionSettingsSource = 1 -- by portal
		BEGIN
			INSERT INTO @UserEditCategories
			SELECT rpatc.[CategoryID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsRolePremissionsAddToCategories] AS rpatc
			INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsRolePremissionSettings] AS rps ON rps.PremissionSettingsID = rpatc.PremissionSettingsID
			WHERE rps.PortalID = @PortalID AND rps.ModuleID IS NULL AND rps.RoleID IS NULL;
		END
		ELSE -- by module
		BEGIN
		INSERT INTO @UserEditCategories
			SELECT rpatc.[CategoryID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsRolePremissionsAddToCategories] AS rpatc
			INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsRolePremissionSettings] AS rps ON rps.PremissionSettingsID = rpatc.PremissionSettingsID
			WHERE rps.RoleID IS NULL AND rps.PortalID = @PortalID AND rps.ModuleID = @ModuleID;
		END
	END
	ELSE -- registrirani korisnik
	BEGIN
		IF @PermissionSettingsSource = 1 -- by portal
		BEGIN
			INSERT INTO @UserEditCategories
			SELECT rpatc.[CategoryID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsRolePremissionsAddToCategories] AS rpatc
			INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsRolePremissionSettings] AS rps ON rps.PremissionSettingsID = rpatc.PremissionSettingsID
			INNER JOIN @UserInRoles AS uir ON rps.RoleID = uir.RoleID
			WHERE rps.PortalID = @PortalID AND rps.ModuleID IS NULL GROUP BY rpatc.[CategoryID]
			UNION
			SELECT upatc.[CategoryID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsUserPremissionsAddToCategories] AS upatc
			INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsUserPremissionSettings] AS ups ON ups.PremissionSettingsID = upatc.PremissionSettingsID
			WHERE ups.UserID = @UserID AND ups.PortalID = @PortalID AND ups.ModuleID IS NULL GROUP BY upatc.[CategoryID];
		END
		ELSE -- by module
		BEGIN
			INSERT INTO @UserEditCategories
			SELECT rpatc.[CategoryID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsRolePremissionsAddToCategories] AS rpatc
			INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsRolePremissionSettings] AS rps ON rps.PremissionSettingsID = rpatc.PremissionSettingsID
			INNER JOIN @UserInRoles AS uir ON rps.RoleID = uir.RoleID
			WHERE rps.PortalID = @PortalID AND rps.ModuleID = @ModuleID GROUP BY rpatc.[CategoryID]
			UNION
			SELECT upatc.[CategoryID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsUserPremissionsAddToCategories] AS upatc
			INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsUserPremissionSettings] AS ups ON ups.PremissionSettingsID = upatc.PremissionSettingsID
			WHERE ups.UserID = @UserID AND ups.PortalID = @PortalID AND ups.ModuleID = @ModuleID GROUP BY upatc.[CategoryID];
		END	
	END
	IF EXISTS(SELECT * FROM @UserEditCategories) BEGIN SET @EditPermission = 2; END
END

DECLARE @LocalizedCategories TABLE (ID int NOT NULL PRIMARY KEY, Name nvarchar(200), Position int, CategoryURL nvarchar(1500));
IF @LocaleCode <> ''''
BEGIN
	WITH LocCategories(ID, Name, Position, CategoryURL) AS (
		SELECT Cat.CategoryID AS ID, cl.Title AS Name, Cat.Position, Cat.CategoryURL FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryList] AS Cat INNER JOIN @UserViewCategories AS uvc ON uvc.CategoryID = Cat.CategoryID INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryLocalization] AS cl ON uvc.CategoryID = cl.CategoryID WHERE Cat.PortalID = @PortalID AND cl.LocaleCode = @LocaleCode
	),
	NotLocCategories(ID, Name, Position, CategoryURL) AS (
		SELECT Cat.CategoryID AS ID, Cat.CategoryName AS Name, Cat.Position, Cat.CategoryURL FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryList] AS Cat INNER JOIN @UserViewCategories AS uvc ON uvc.CategoryID = Cat.CategoryID WHERE Cat.PortalID = @PortalID AND Cat.CategoryID NOT IN (SELECT ID FROM LocCategories)
	)
	INSERT INTO @LocalizedCategories SELECT ID, Name, Position, CategoryURL FROM (SELECT ID, Name, Position, CategoryURL FROM LocCategories UNION ALL SELECT ID, Name, Position, CategoryURL FROM NotLocCategories) AS ArticleCategories
END
ELSE
BEGIN
	INSERT INTO @LocalizedCategories SELECT Cat.CategoryID AS ID, Cat.CategoryName AS Name, Cat.Position, Cat.CategoryURL FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryList] AS Cat INNER JOIN @UserViewCategories AS uvc ON uvc.CategoryID = cat.CategoryID WHERE Cat.PortalID = @PortalID
END

IF @IsSocialInstance = 0
BEGIN
IF @LocaleCode <> ''''
	BEGIN
		WITH FinalArticleIDsSet (ArticleID) AS(
		SELECT TOP (@ItemsTo - @ItemsFrom + 1) ArticleID FROM (SELECT *, ROW_NUMBER() OVER (ORDER BY 
		CASE WHEN @OrderBy =''PublishDate ASC'' THEN PublishDate END,
		CASE WHEN @OrderBy =''PublishDate DESC'' THEN PublishDate END DESC,
		CASE WHEN @OrderBy =''NumberOfViews ASC'' THEN NumberOfViews END,
		CASE WHEN @OrderBy =''NumberOfViews DESC'' THEN NumberOfViews END DESC,
		CASE WHEN @OrderBy =''RatingValue ASC'' THEN RatingValue END,
		CASE WHEN @OrderBy =''RatingValue DESC'' THEN RatingValue END DESC,
		CASE WHEN @OrderBy =''DateAdded ASC'' THEN DateAdded END,
		CASE WHEN @OrderBy =''DateAdded DESC'' THEN DateAdded END DESC,
		CASE WHEN @OrderBy =''ExpireDate ASC'' THEN ExpireDate END,
		CASE WHEN @OrderBy =''ExpireDate DESC'' THEN ExpireDate END DESC,
		CASE WHEN @OrderBy =''LastModified ASC'' THEN LastModified END,
		CASE WHEN @OrderBy =''LastModified DESC'' THEN LastModified END DESC,
		CASE WHEN @OrderBy =''NumberOfComments ASC'' THEN NumberOfComments END,
		CASE WHEN @OrderBy =''NumberOfComments DESC'' THEN NumberOfComments END DESC,
		CASE WHEN @OrderBy =''Title ASC'' THEN Title END,
		CASE WHEN @OrderBy =''Title DESC'' THEN Title END DESC) AS Kulike
		FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS n WHERE ArticleID IN(
			SELECT DISTINCT na.[ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS na
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS cat ON na.ArticleID = cat.ArticleID
				INNER JOIN @UserViewCategoriesWithFilter AS uvcwf ON uvcwf.CategoryID = cat.CategoryID
				INNER JOIN @SearchTable AS st ON(
					(@SearchType = 3 AND (na.SubTitle Like st.Words OR na.Title Like st.Words OR na.CleanArticleData Like st.Words))
					OR
					(@SearchType = 2 AND (na.CleanArticleData Like st.Words))
					OR
					(@SearchType = 1 AND (na.SubTitle Like st.Words OR na.Title Like st.Words))
				)
				LEFT OUTER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsContentLocalization] AS ncl ON ncl.ArticleID = na.ArticleID
			WHERE na.PortalID=@PortalID
				AND na.HasPermissions = 0
				AND na.PublishDate <= @CurrentDate AND na.ExpireDate >= @CurrentDate
				AND ((@AdminOrSuperUser = 1) OR ((@UserCanApprove = 1 OR na.Approved=1) AND (na.Active=1 OR na.UserID=@UserID)))
				AND ((@FilterAuthorOrAuthors = 1 AND na.UserID IN (SELECT UserID FROM @TempAuthorsIDList)) OR (@FilterAuthorOrAuthors = 0))
				AND ((@HideUnlocalizedItems = 1 AND ncl.ArticleID IS NOT NULL AND ncl.LocaleCode = @LocaleCode) OR (@HideUnlocalizedItems = 0))
			UNION
			SELECT DISTINCT na.[ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS na
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS cat ON na.ArticleID = cat.ArticleID
				INNER JOIN @UserViewCategoriesWithFilter AS uvcwf ON uvcwf.CategoryID = cat.CategoryID
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsTagsItems] AS nt ON na.ArticleID = nt.ArticleID
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsNewTags] AS newt ON nt.TagID = newt.TagID
				INNER JOIN @SearchTable AS st2 ON newt.Name Like st2.Words
				LEFT OUTER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsContentLocalization] AS ncl ON ncl.ArticleID = na.ArticleID
			WHERE na.PortalID=@PortalID
				AND na.HasPermissions = 0
				AND na.PublishDate <= @CurrentDate AND na.ExpireDate >= @CurrentDate
				AND ((@AdminOrSuperUser = 1) OR ((@UserCanApprove = 1 OR na.Approved=1) AND (na.Active=1 OR na.UserID=@UserID)))
				AND ((@FilterAuthorOrAuthors = 1 AND na.UserID IN (SELECT UserID FROM @TempAuthorsIDList)) OR (@FilterAuthorOrAuthors = 0))
				AND ((@HideUnlocalizedItems = 1 AND ncl.ArticleID IS NOT NULL AND ncl.LocaleCode = @LocaleCode) OR (@HideUnlocalizedItems = 0))
			UNION ALL
			SELECT na.[ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS na
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsArticleUserPermissions] AS aup ON na.ArticleID = aup.ArticleID
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS cat ON na.ArticleID = cat.ArticleID
				INNER JOIN @FiltredByCategories AS fbc ON fbc.CategoryID = cat.CategoryID
				INNER JOIN @SearchTable AS st ON(
					(@SearchType = 3 AND (na.SubTitle Like st.Words OR na.Title Like st.Words OR na.CleanArticleData Like st.Words))
					OR
					(@SearchType = 2 AND (na.CleanArticleData Like st.Words))
					OR
					(@SearchType = 1 AND (na.SubTitle Like st.Words OR na.Title Like st.Words))
				)
				LEFT OUTER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsContentLocalization] AS ncl ON ncl.ArticleID = na.ArticleID
			WHERE na.PortalID=@PortalID
				AND na.HasPermissions = 1
				AND na.PublishDate <= @CurrentDate AND na.ExpireDate >= @CurrentDate
				AND ((@AdminOrSuperUser = 1) OR (((@UserID = -1 AND aup.UserID IS NULL) OR (aup.UserID = @UserID))
					AND aup.Show = 1 AND ((@UserCanApprove = 1) OR (na.Approved=1)) AND (na.Active=1 OR na.UserID=@UserID)
				))
				AND ((@FilterAuthorOrAuthors = 1 AND na.UserID IN (SELECT UserID FROM @TempAuthorsIDList)) OR (@FilterAuthorOrAuthors = 0))
				AND ((@HideUnlocalizedItems = 1 AND ncl.ArticleID IS NOT NULL AND ncl.LocaleCode = @LocaleCode) OR (@HideUnlocalizedItems = 0))
			UNION
			SELECT na.[ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS na
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsArticleUserPermissions] AS aup ON na.ArticleID = aup.ArticleID
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS cat ON na.ArticleID = cat.ArticleID
				INNER JOIN @FiltredByCategories AS fbc ON fbc.CategoryID = cat.CategoryID
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsTagsItems] AS nt ON na.ArticleID = nt.ArticleID
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsNewTags] AS newt ON nt.TagID = newt.TagID
				INNER JOIN @SearchTable AS st2 ON newt.Name Like st2.Words
				LEFT OUTER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsContentLocalization] AS ncl ON ncl.ArticleID = na.ArticleID
			WHERE na.PortalID=@PortalID
				AND na.HasPermissions = 1
				AND na.PublishDate <= @CurrentDate AND na.ExpireDate >= @CurrentDate
				AND ((@AdminOrSuperUser = 1) OR (((@UserID = -1 AND aup.UserID IS NULL) OR (aup.UserID = @UserID))
					AND aup.Show = 1 AND ((@UserCanApprove = 1) OR (na.Approved=1)) AND (na.Active=1 OR na.UserID=@UserID)
				))
				AND ((@FilterAuthorOrAuthors = 1 AND na.UserID IN (SELECT UserID FROM @TempAuthorsIDList)) OR (@FilterAuthorOrAuthors = 0))
				AND ((@HideUnlocalizedItems = 1 AND ncl.ArticleID IS NOT NULL AND ncl.LocaleCode = @LocaleCode) OR (@HideUnlocalizedItems = 0))
			UNION
			SELECT DISTINCT na.[ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS na
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsArticleRolePermissions] AS arp ON na.ArticleID = arp.ArticleID
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS cat ON na.ArticleID = cat.ArticleID
				INNER JOIN @FiltredByCategories AS fbc ON fbc.CategoryID = cat.CategoryID
				INNER JOIN @SearchTable AS st ON(
					(@SearchType = 3 AND (na.SubTitle Like st.Words OR na.Title Like st.Words OR na.CleanArticleData Like st.Words))
					OR
					(@SearchType = 2 AND (na.CleanArticleData Like st.Words))
					OR
					(@SearchType = 1 AND (na.SubTitle Like st.Words OR na.Title Like st.Words))
				)
				LEFT OUTER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsContentLocalization] AS ncl ON ncl.ArticleID = na.ArticleID
			WHERE na.PortalID=@PortalID
				AND na.HasPermissions = 1
				AND na.PublishDate <= @CurrentDate AND na.ExpireDate >= @CurrentDate
				AND ((@AdminOrSuperUser = 1) OR (((@UserCanApprove = 1) OR (na.Approved=1))
					AND (na.Active=1 OR na.UserID=@UserID) AND arp.Show = 1 AND arp.RoleID IN (SELECT [RoleID] FROM @UserInRoles)
				))
				AND ((@FilterAuthorOrAuthors = 1 AND na.UserID IN (SELECT UserID FROM @TempAuthorsIDList)) OR (@FilterAuthorOrAuthors = 0))
				AND ((@HideUnlocalizedItems = 1 AND ncl.ArticleID IS NOT NULL AND ncl.LocaleCode = @LocaleCode) OR (@HideUnlocalizedItems = 0))
			UNION
			SELECT DISTINCT na.[ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS na
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsArticleRolePermissions] AS arp ON na.ArticleID = arp.ArticleID
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS cat ON na.ArticleID = cat.ArticleID
				INNER JOIN @FiltredByCategories AS fbc ON fbc.CategoryID = cat.CategoryID
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsTagsItems] AS nt ON na.ArticleID = nt.ArticleID
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsNewTags] AS newt ON nt.TagID = newt.TagID
				INNER JOIN @SearchTable AS st2 ON newt.Name Like st2.Words
				LEFT OUTER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsContentLocalization] AS ncl ON ncl.ArticleID = na.ArticleID
			WHERE na.PortalID=@PortalID
				AND na.HasPermissions = 1
				AND na.PublishDate <= @CurrentDate AND na.ExpireDate >= @CurrentDate
				AND ((@AdminOrSuperUser = 1) OR (((@UserCanApprove = 1) OR (na.Approved=1))
					AND (na.Active=1 OR na.UserID=@UserID) AND arp.Show = 1 AND arp.RoleID IN (SELECT [RoleID] FROM @UserInRoles)
				))
				AND ((@FilterAuthorOrAuthors = 1 AND na.UserID IN (SELECT UserID FROM @TempAuthorsIDList)) OR (@FilterAuthorOrAuthors = 0))
				AND ((@HideUnlocalizedItems = 1 AND ncl.ArticleID IS NOT NULL AND ncl.LocaleCode = @LocaleCode) OR (@HideUnlocalizedItems = 0))	
			)
		) AS Result WHERE Kulike BETWEEN @ItemsFrom AND @ItemsTo ORDER BY
			CASE WHEN @OrderBy =''PublishDate ASC'' THEN PublishDate END,
			CASE WHEN @OrderBy =''PublishDate DESC'' THEN PublishDate END DESC,
			CASE WHEN @OrderBy =''NumberOfViews ASC'' THEN NumberOfViews END,
			CASE WHEN @OrderBy =''NumberOfViews DESC'' THEN NumberOfViews END DESC,
			CASE WHEN @OrderBy =''RatingValue ASC'' THEN RatingValue END,
			CASE WHEN @OrderBy =''RatingValue DESC'' THEN RatingValue END DESC,
			CASE WHEN @OrderBy =''DateAdded ASC'' THEN DateAdded END,
			CASE WHEN @OrderBy =''DateAdded DESC'' THEN DateAdded END DESC,
			CASE WHEN @OrderBy =''ExpireDate ASC'' THEN ExpireDate END,
			CASE WHEN @OrderBy =''ExpireDate DESC'' THEN ExpireDate END DESC,
			CASE WHEN @OrderBy =''LastModified ASC'' THEN LastModified END,
			CASE WHEN @OrderBy =''LastModified DESC'' THEN LastModified END DESC,
			CASE WHEN @OrderBy =''NumberOfComments ASC'' THEN NumberOfComments END,
			CASE WHEN @OrderBy =''NumberOfComments DESC'' THEN NumberOfComments END DESC,
			CASE WHEN @OrderBy =''Title ASC'' THEN Title END,
			CASE WHEN @OrderBy =''Title DESC'' THEN Title END DESC
		),
		FinalLocalizedArticleIDsSet (ArticleID,Title,SubTitle,Summary,Article,DetailTypeData,TitleLink,MetaDecription,MetaKeywords,MainImageTitle,MainImageDescription) AS(
			SELECT ArticleID,Title,SubTitle,Summary,Article,DetailTypeData,clTitleLink AS TitleLink ,MetaDecription,MetaKeywords,MainImageTitle,MainImageDescription FROM {databaseOwner}[{objectQualifier}EasyDNNNewsContentLocalization] WHERE ArticleID IN (SELECT ArticleID FROM FinalArticleIDsSet) AND LocaleCode = @LocaleCode
		)
		SELECT *,
			CASE @AdminOrSuperUser 
				WHEN 0 THEN 0
				WHEN 1 THEN 1
				WHEN 2 THEN
				CASE @EditOnlyAsOwner
					WHEN 0 THEN			
						CASE WHEN EXISTS(SELECT CategoryID FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS c WHERE c.ArticleID = Result.ArticleID AND c.CategoryID IN (SELECT CategoryID FROM @UserEditCategories))
							THEN 1
							ELSE
								CASE WHEN EXISTS(SELECT [ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsArticleRolePermissions] AS arp WHERE arp.ArticleID = Result.ArticleID AND arp.Edit = 1 AND arp.RoleID IN(SELECT RoleID FROM @UserInRoles))
								THEN 1
								ELSE
									CASE WHEN EXISTS (SELECT [ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsArticleUserPermissions] AS aup WHERE aup.ArticleID = Result.ArticleID AND aup.Edit = 1 AND aup.UserID = @UserID)
										THEN 1
										ELSE 0
									END
								END
						END  			
					WHEN 1 THEN
						CASE WHEN EXISTS(SELECT CategoryID FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS c WHERE Result.UserID = @UserID AND c.ArticleID = Result.ArticleID AND c.CategoryID IN (SELECT CategoryID FROM @UserEditCategories))
							THEN 1
							ELSE
								CASE WHEN EXISTS(SELECT [ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsArticleRolePermissions] AS arp WHERE arp.ArticleID = Result.ArticleID AND arp.Edit = 1 AND arp.RoleID IN(SELECT RoleID FROM @UserInRoles))
								THEN 1
								ELSE
									CASE WHEN EXISTS (SELECT [ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsArticleUserPermissions] AS aup WHERE aup.ArticleID = Result.ArticleID AND aup.Edit = 1 AND aup.UserID = @UserID)
										THEN 1
										ELSE 0
									END
								END 
						END
				END
				WHEN 3 THEN
					CASE WHEN EXISTS(SELECT [ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsArticleRolePermissions] AS arp WHERE arp.ArticleID = Result.ArticleID AND arp.Edit = 1 AND arp.RoleID IN(SELECT RoleID FROM @UserInRoles))
						THEN 1
						ELSE
						CASE WHEN EXISTS (SELECT [ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsArticleUserPermissions] AS aup WHERE aup.ArticleID = Result.ArticleID AND aup.Edit = 1 AND aup.UserID = @UserID)
							THEN 1
							ELSE 0
							END
						END 
			END AS ''CanEdit'',
			(SELECT cat.ID, cat.Name, cat.CategoryURL FROM @LocalizedCategories AS Cat INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS c ON c.CategoryID = Cat.ID WHERE c.ArticleID = Result.ArticleID ORDER BY Position FOR XML AUTO, ROOT(''root'')) AS ''CatToShow'',
			 CASE Result.Active
				WHEN 1 THEN 0
				WHEN 0 THEN 1
			 END AS ''Published'',
			 CASE @UserCanApprove
				WHEN 0 THEN 0
				WHEN 1 THEN
					CASE Result.Approved
					 WHEN 1 THEN 0
					 WHEN 0 THEN
						 CASE Result.Active
							WHEN 1 THEN 1
							WHEN 0 THEN 0
						END
					END
			 END AS ''Approve''
			 FROM (
			 SELECT n.[ArticleID],n.[UserID],n.[Title],n.[SubTitle],n.[Summary],n.[Article],n.[ArticleImage],n.[DateAdded],n.[LastModified],n.[PublishDate]
				  ,n.[ExpireDate],n.[Approved],n.[Featured],n.[NumberOfViews],n.[RatingValue],n.[RatingCount],n.[AllowComments],n.[Active]
				  ,n.[TitleLink],n.[DetailType],n.[DetailTypeData],n.[DetailsTemplate],n.[DetailsTheme],n.[GalleryPosition],n.[GalleryDisplayType]
				  ,n.[ShowMainImage],n.[ShowMainImageFront],n.[CommentsTheme],n.[ArticleImageFolder],n.[NumberOfComments]
				  ,n.[ArticleImageSet],n.[MetaDecription],n.[MetaKeywords],n.[DisplayStyle],n.[DetailTarget]
				  ,n.[ArticleFromRSS],n.[HasPermissions],n.[EventArticle],n.[DetailMediaType],n.[DetailMediaData],n.[AuthorAliasName],n.[ShowGallery],n.[ArticleGalleryID],n.[MainImageTitle],n.[MainImageDescription]
				   FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS n WHERE ArticleID IN (SELECT ArticleID FROM FinalArticleIDsSet WHERE ArticleID NOT IN (SELECT ArticleID FROM FinalLocalizedArticleIDsSet))
			 UNION ALL
			 SELECT n.[ArticleID],n.[UserID],fla.[Title],fla.[SubTitle],fla.[Summary],fla.[Article],n.[ArticleImage],n.[DateAdded],n.[LastModified],n.[PublishDate]
				  ,n.[ExpireDate],n.[Approved],n.[Featured],n.[NumberOfViews],n.[RatingValue],n.[RatingCount],n.[AllowComments],n.[Active]
				  ,fla.[TitleLink],n.[DetailType],fla.[DetailTypeData],n.[DetailsTemplate],n.[DetailsTheme],n.[GalleryPosition],n.[GalleryDisplayType]
				  ,n.[ShowMainImage],n.[ShowMainImageFront],n.[CommentsTheme],n.[ArticleImageFolder],n.[NumberOfComments]
				  ,n.[ArticleImageSet],fla.[MetaDecription],fla.[MetaKeywords],n.[DisplayStyle],n.[DetailTarget]
				  ,n.[ArticleFromRSS],n.[HasPermissions],n.[EventArticle],n.[DetailMediaType],n.[DetailMediaData],n.[AuthorAliasName],n.[ShowGallery],n.[ArticleGalleryID],fla.[MainImageTitle],fla.[MainImageDescription]
			  FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS n INNER JOIN FinalLocalizedArticleIDsSet AS fla ON fla.ArticleID = n.ArticleID) As Result
			ORDER BY
				CASE WHEN @OrderBy =''PublishDate ASC'' THEN PublishDate END,
				CASE WHEN @OrderBy =''PublishDate DESC'' THEN PublishDate END DESC,
				CASE WHEN @OrderBy =''NumberOfViews ASC'' THEN NumberOfViews END,
				CASE WHEN @OrderBy =''NumberOfViews DESC'' THEN NumberOfViews END DESC,
				CASE WHEN @OrderBy =''RatingValue ASC'' THEN RatingValue END,
				CASE WHEN @OrderBy =''RatingValue DESC'' THEN RatingValue END DESC,
				CASE WHEN @OrderBy =''DateAdded ASC'' THEN DateAdded END,
				CASE WHEN @OrderBy =''DateAdded DESC'' THEN DateAdded END DESC,
				CASE WHEN @OrderBy =''ExpireDate ASC'' THEN ExpireDate END,
				CASE WHEN @OrderBy =''ExpireDate DESC'' THEN ExpireDate END DESC,
				CASE WHEN @OrderBy =''LastModified ASC'' THEN LastModified END,
				CASE WHEN @OrderBy =''LastModified DESC'' THEN LastModified END DESC,
				CASE WHEN @OrderBy =''NumberOfComments ASC'' THEN NumberOfComments END,
				CASE WHEN @OrderBy =''NumberOfComments DESC'' THEN NumberOfComments END DESC,
				CASE WHEN @OrderBy =''Title ASC'' THEN Title END,
				CASE WHEN @OrderBy =''Title DESC'' THEN Title END DESC;
	END
	ELSE
	BEGIN
		SELECT *,
		CASE @AdminOrSuperUser 
			WHEN 0 THEN 0
			WHEN 1 THEN 1
			WHEN 2 THEN
			CASE @EditOnlyAsOwner
				WHEN 0 THEN			
					CASE WHEN EXISTS(SELECT CategoryID FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS c WHERE c.ArticleID = Result.ArticleID AND c.CategoryID IN (SELECT CategoryID FROM @UserEditCategories))
						THEN 1
						ELSE
							CASE WHEN EXISTS(SELECT [ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsArticleRolePermissions] AS arp WHERE arp.ArticleID = Result.ArticleID AND arp.Edit = 1 AND arp.RoleID IN(SELECT RoleID FROM @UserInRoles))
							THEN 1
							ELSE
								CASE WHEN EXISTS (SELECT [ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsArticleUserPermissions] AS aup WHERE aup.ArticleID = Result.ArticleID AND aup.Edit = 1 AND aup.UserID = @UserID)
									THEN 1
									ELSE 0
								END
							END
					END  			
				WHEN 1 THEN
					CASE WHEN EXISTS(SELECT CategoryID FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS c WHERE Result.UserID = @UserID AND c.ArticleID = Result.ArticleID AND c.CategoryID IN (SELECT CategoryID FROM @UserEditCategories))
						THEN 1
						ELSE
							CASE WHEN EXISTS(SELECT [ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsArticleRolePermissions] AS arp WHERE arp.ArticleID = Result.ArticleID AND arp.Edit = 1 AND arp.RoleID IN(SELECT RoleID FROM @UserInRoles))
							THEN 1
							ELSE
								CASE WHEN EXISTS (SELECT [ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsArticleUserPermissions] AS aup WHERE aup.ArticleID = Result.ArticleID AND aup.Edit = 1 AND aup.UserID = @UserID)
									THEN 1
									ELSE 0
								END
							END 
					END
			END
			WHEN 3 THEN
				CASE WHEN EXISTS(SELECT [ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsArticleRolePermissions] AS arp WHERE arp.ArticleID = Result.ArticleID AND arp.Edit = 1 AND arp.RoleID IN(SELECT RoleID FROM @UserInRoles))
					THEN 1
					ELSE
					CASE WHEN EXISTS (SELECT [ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsArticleUserPermissions] AS aup WHERE aup.ArticleID = Result.ArticleID AND aup.Edit = 1 AND aup.UserID = @UserID)
						THEN 1
						ELSE 0
						END
					END 
		END AS ''CanEdit'',
		(SELECT cat.ID, cat.Name, cat.CategoryURL FROM @LocalizedCategories AS Cat INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS c ON c.CategoryID = Cat.ID WHERE c.ArticleID = Result.ArticleID ORDER BY Position FOR XML AUTO, ROOT(''root'')) AS ''CatToShow'',
		 CASE Result.Active
			WHEN 1 THEN 0
			WHEN 0 THEN 1
		 END AS ''Published'',
		 CASE @UserCanApprove
			WHEN 0 THEN 0
			WHEN 1 THEN
				CASE Result.Approved
				 WHEN 1 THEN 0
				 WHEN 0 THEN
					 CASE Result.Active
						WHEN 1 THEN 1
						WHEN 0 THEN 0
					END
				END
		 END AS  ''Approve''
		FROM (SELECT
		 n.[ArticleID],n.[UserID],n.[Title],n.[SubTitle],n.[Summary],n.[Article],n.[ArticleImage],n.[DateAdded],n.[LastModified],n.[PublishDate]
		,n.[ExpireDate],n.[Approved],n.[Featured],n.[NumberOfViews],n.[RatingValue],n.[RatingCount],n.[AllowComments],n.[Active]
		,n.[TitleLink],n.[DetailType],n.[DetailTypeData],n.[DetailsTemplate],n.[DetailsTheme],n.[GalleryPosition],n.[GalleryDisplayType]
		,n.[ShowMainImage],n.[ShowMainImageFront],n.[CommentsTheme],n.[ArticleImageFolder],n.[NumberOfComments]
		,n.[ArticleImageSet],n.[MetaDecription],n.[MetaKeywords],n.[DisplayStyle],n.[DetailTarget]
		,n.[ArticleFromRSS],n.[HasPermissions],n.[EventArticle],n.[DetailMediaType],n.[DetailMediaData],n.[AuthorAliasName],n.[ShowGallery],n.[ArticleGalleryID],n.[MainImageTitle],n.[MainImageDescription], ROW_NUMBER() OVER (ORDER BY 
		CASE WHEN @OrderBy =''PublishDate ASC'' THEN PublishDate END,
		CASE WHEN @OrderBy =''PublishDate DESC'' THEN PublishDate END DESC,
		CASE WHEN @OrderBy =''NumberOfViews ASC'' THEN NumberOfViews END,
		CASE WHEN @OrderBy =''NumberOfViews DESC'' THEN NumberOfViews END DESC,
		CASE WHEN @OrderBy =''RatingValue ASC'' THEN RatingValue END,
		CASE WHEN @OrderBy =''RatingValue DESC'' THEN RatingValue END DESC,
		CASE WHEN @OrderBy =''DateAdded ASC'' THEN DateAdded END,
		CASE WHEN @OrderBy =''DateAdded DESC'' THEN DateAdded END DESC,
		CASE WHEN @OrderBy =''ExpireDate ASC'' THEN ExpireDate END,
		CASE WHEN @OrderBy =''ExpireDate DESC'' THEN ExpireDate END DESC,
		CASE WHEN @OrderBy =''LastModified ASC'' THEN LastModified END,
		CASE WHEN @OrderBy =''LastModified DESC'' THEN LastModified END DESC,
		CASE WHEN @OrderBy =''NumberOfComments ASC'' THEN NumberOfComments END,
		CASE WHEN @OrderBy =''NumberOfComments DESC'' THEN NumberOfComments END DESC,
		CASE WHEN @OrderBy =''Title ASC'' THEN Title END,
		CASE WHEN @OrderBy =''Title DESC'' THEN Title END DESC) AS Kulike
		FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS n WHERE ArticleID IN(
			SELECT DISTINCT na.[ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS na
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS cat ON na.ArticleID = cat.ArticleID
				INNER JOIN @UserViewCategoriesWithFilter AS uvcwf ON uvcwf.CategoryID = cat.CategoryID
				INNER JOIN @SearchTable AS st ON(
					(@SearchType = 3 AND (na.Title Like st.Words OR na.CleanArticleData Like st.Words))
					OR
					(@SearchType = 2 AND (na.CleanArticleData Like st.Words))
					OR
					(@SearchType = 1 AND (na.SubTitle Like st.Words OR na.Title Like st.Words))
				)
			WHERE na.PortalID=@PortalID
				AND na.HasPermissions = 0
				AND na.HideDefaultLocale = 0
				AND na.PublishDate <= @CurrentDate AND na.ExpireDate >= @CurrentDate
				AND ((@AdminOrSuperUser = 1) OR ((@UserCanApprove = 1 OR na.Approved=1) AND (na.Active=1 OR na.UserID=@UserID)))
				AND((@FilterAuthorOrAuthors = 1 AND na.UserID IN (SELECT UserID FROM @TempAuthorsIDList)) OR (@FilterAuthorOrAuthors = 0))
			UNION
			SELECT DISTINCT na.[ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS na
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS cat ON na.ArticleID = cat.ArticleID
				INNER JOIN @UserViewCategoriesWithFilter AS uvcwf ON uvcwf.CategoryID = cat.CategoryID
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsTagsItems] AS nt ON na.ArticleID = nt.ArticleID
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsNewTags] AS newt ON nt.TagID = newt.TagID
				INNER JOIN @SearchTable AS st2 ON newt.Name Like st2.Words
			WHERE na.PortalID=@PortalID
				AND na.HasPermissions = 0
				AND na.HideDefaultLocale = 0
				AND na.PublishDate <= @CurrentDate AND na.ExpireDate >= @CurrentDate
				AND ((@AdminOrSuperUser = 1) OR ((@UserCanApprove = 1 OR na.Approved=1) AND (na.Active=1 OR na.UserID=@UserID)))
				AND((@FilterAuthorOrAuthors = 1 AND na.UserID IN (SELECT UserID FROM @TempAuthorsIDList)) OR (@FilterAuthorOrAuthors = 0))
			UNION ALL
			SELECT na.[ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS na
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsArticleUserPermissions] AS aup ON na.ArticleID = aup.ArticleID
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS cat ON na.ArticleID = cat.ArticleID
				INNER JOIN @FiltredByCategories AS fbc ON fbc.CategoryID = cat.CategoryID
				INNER JOIN @SearchTable AS st ON(
					(@SearchType = 3 AND (na.SubTitle Like st.Words OR na.Title Like st.Words OR na.CleanArticleData Like st.Words))
					OR
					(@SearchType = 2 AND (na.CleanArticleData Like st.Words))
					OR
					(@SearchType = 1 AND (na.SubTitle Like st.Words OR na.Title Like st.Words))
				)
			WHERE na.PortalID=@PortalID
				AND na.HasPermissions = 1
				AND na.HideDefaultLocale = 0
				AND na.PublishDate <= @CurrentDate AND na.ExpireDate >= @CurrentDate
				AND ((@AdminOrSuperUser = 1) OR (((@UserID = -1 AND aup.UserID IS NULL) OR (aup.UserID = @UserID))
					AND aup.Show = 1 AND ((@UserCanApprove = 1) OR (na.Approved=1)) AND (na.Active=1 OR na.UserID=@UserID)
				))
				AND((@FilterAuthorOrAuthors = 1 AND na.UserID IN (SELECT UserID FROM @TempAuthorsIDList)) OR (@FilterAuthorOrAuthors = 0))
			UNION
			SELECT na.[ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS na
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsArticleUserPermissions] AS aup ON na.ArticleID = aup.ArticleID
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS cat ON na.ArticleID = cat.ArticleID
				INNER JOIN @FiltredByCategories AS fbc ON fbc.CategoryID = cat.CategoryID
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsTagsItems] AS nt ON na.ArticleID = nt.ArticleID
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsNewTags] AS newt ON nt.TagID = newt.TagID
				INNER JOIN @SearchTable AS st2 ON newt.Name Like st2.Words
			WHERE na.PortalID=@PortalID
				AND na.HasPermissions = 1
				AND na.HideDefaultLocale = 0
				AND na.PublishDate <= @CurrentDate AND na.ExpireDate >= @CurrentDate
				AND ((@AdminOrSuperUser = 1) OR (((@UserID = -1 AND aup.UserID IS NULL) OR (aup.UserID = @UserID))
					AND aup.Show = 1 AND ((@UserCanApprove = 1) OR (na.Approved=1)) AND (na.Active=1 OR na.UserID=@UserID)
				))
				AND((@FilterAuthorOrAuthors = 1 AND na.UserID IN (SELECT UserID FROM @TempAuthorsIDList)) OR (@FilterAuthorOrAuthors = 0))
			UNION
			SELECT DISTINCT na.[ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS na
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsArticleRolePermissions] AS arp ON na.ArticleID = arp.ArticleID
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS cat ON na.ArticleID = cat.ArticleID
				INNER JOIN @FiltredByCategories AS fbc ON fbc.CategoryID = cat.CategoryID
				INNER JOIN @SearchTable AS st ON(
					(@SearchType = 3 AND (na.SubTitle Like st.Words OR na.Title Like st.Words OR na.CleanArticleData Like st.Words))
					OR
					(@SearchType = 2 AND (na.CleanArticleData Like st.Words))
					OR
					(@SearchType = 1 AND (na.SubTitle Like st.Words OR na.Title Like st.Words))
				)
			WHERE na.PortalID=@PortalID
				AND na.HasPermissions = 1
				AND na.HideDefaultLocale = 0
				AND na.PublishDate <= @CurrentDate AND na.ExpireDate >= @CurrentDate
				AND ((@AdminOrSuperUser = 1) OR (((@UserCanApprove = 1) OR (na.Approved=1))
					AND (na.Active=1 OR na.UserID=@UserID) AND arp.Show = 1 AND arp.RoleID IN (SELECT [RoleID] FROM @UserInRoles)
				))
				AND((@FilterAuthorOrAuthors = 1 AND na.UserID IN (SELECT UserID FROM @TempAuthorsIDList)) OR (@FilterAuthorOrAuthors = 0))	
			UNION
			SELECT DISTINCT na.[ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS na
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsArticleRolePermissions] AS arp ON na.ArticleID = arp.ArticleID
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS cat ON na.ArticleID = cat.ArticleID
				INNER JOIN @FiltredByCategories AS fbc ON fbc.CategoryID = cat.CategoryID
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsTagsItems] AS nt ON na.ArticleID = nt.ArticleID
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsNewTags] AS newt ON nt.TagID = newt.TagID
				INNER JOIN @SearchTable AS st2 ON newt.Name Like st2.Words
			WHERE na.PortalID=@PortalID
				AND na.HasPermissions = 1
				AND na.HideDefaultLocale = 0
				AND na.PublishDate <= @CurrentDate AND na.ExpireDate >= @CurrentDate
				AND ((@AdminOrSuperUser = 1) OR (((@UserCanApprove = 1) OR (na.Approved=1))
					AND (na.Active=1 OR na.UserID=@UserID) AND arp.Show = 1 AND arp.RoleID IN (SELECT [RoleID] FROM @UserInRoles)
				))
				AND((@FilterAuthorOrAuthors = 1 AND na.UserID IN (SELECT UserID FROM @TempAuthorsIDList)) OR (@FilterAuthorOrAuthors = 0))	
			)
		) AS Result WHERE Kulike BETWEEN @ItemsFrom AND @ItemsTo ORDER BY
			CASE WHEN @OrderBy =''PublishDate ASC'' THEN PublishDate END,
			CASE WHEN @OrderBy =''PublishDate DESC'' THEN PublishDate END DESC,
			CASE WHEN @OrderBy =''NumberOfViews ASC'' THEN NumberOfViews END,
			CASE WHEN @OrderBy =''NumberOfViews DESC'' THEN NumberOfViews END DESC,
			CASE WHEN @OrderBy =''RatingValue ASC'' THEN RatingValue END,
			CASE WHEN @OrderBy =''RatingValue DESC'' THEN RatingValue END DESC,
			CASE WHEN @OrderBy =''DateAdded ASC'' THEN DateAdded END,
			CASE WHEN @OrderBy =''DateAdded DESC'' THEN DateAdded END DESC,
			CASE WHEN @OrderBy =''ExpireDate ASC'' THEN ExpireDate END,
			CASE WHEN @OrderBy =''ExpireDate DESC'' THEN ExpireDate END DESC,
			CASE WHEN @OrderBy =''LastModified ASC'' THEN LastModified END,
			CASE WHEN @OrderBy =''LastModified DESC'' THEN LastModified END DESC,
			CASE WHEN @OrderBy =''NumberOfComments ASC'' THEN NumberOfComments END,
			CASE WHEN @OrderBy =''NumberOfComments DESC'' THEN NumberOfComments END DESC,
			CASE WHEN @OrderBy =''Title ASC'' THEN Title END,
			CASE WHEN @OrderBy =''Title DESC'' THEN Title END DESC;
	END
END
ELSE IF @FilterBySocialGroup = 1
BEGIN
	IF @LocaleCode <> ''''
	BEGIN
		WITH FinalArticleIDsSet (ArticleID) AS(
		SELECT TOP (@ItemsTo - @ItemsFrom + 1) ArticleID FROM (SELECT *, ROW_NUMBER() OVER (ORDER BY 
		CASE WHEN @OrderBy =''PublishDate ASC'' THEN PublishDate END,
		CASE WHEN @OrderBy =''PublishDate DESC'' THEN PublishDate END DESC,
		CASE WHEN @OrderBy =''NumberOfViews ASC'' THEN NumberOfViews END,
		CASE WHEN @OrderBy =''NumberOfViews DESC'' THEN NumberOfViews END DESC,
		CASE WHEN @OrderBy =''RatingValue ASC'' THEN RatingValue END,
		CASE WHEN @OrderBy =''RatingValue DESC'' THEN RatingValue END DESC,
		CASE WHEN @OrderBy =''DateAdded ASC'' THEN DateAdded END,
		CASE WHEN @OrderBy =''DateAdded DESC'' THEN DateAdded END DESC,
		CASE WHEN @OrderBy =''ExpireDate ASC'' THEN ExpireDate END,
		CASE WHEN @OrderBy =''ExpireDate DESC'' THEN ExpireDate END DESC,
		CASE WHEN @OrderBy =''LastModified ASC'' THEN LastModified END,
		CASE WHEN @OrderBy =''LastModified DESC'' THEN LastModified END DESC,
		CASE WHEN @OrderBy =''NumberOfComments ASC'' THEN NumberOfComments END,
		CASE WHEN @OrderBy =''NumberOfComments DESC'' THEN NumberOfComments END DESC,
		CASE WHEN @OrderBy =''Title ASC'' THEN Title END,
		CASE WHEN @OrderBy =''Title DESC'' THEN Title END DESC) AS Kulike
		FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS n WHERE ArticleID IN(
			SELECT DISTINCT na.[ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS na
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS cat ON na.ArticleID = cat.ArticleID
				INNER JOIN @UserViewCategoriesWithFilter AS uvcwf ON uvcwf.CategoryID = cat.CategoryID
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = n.ArticleID
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialGroupItems] AS sgi ON sgi.ArticleID = n.ArticleID AND sgi.RoleID = @FilterByDNNGroupID
				INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserID, @FilterByDNNGroupID) AS t ON t.seckey = nss.SecurityKey
				INNER JOIN @SearchTable AS st ON(
					(@SearchType = 3 AND (na.SubTitle Like st.Words OR na.Title Like st.Words OR na.CleanArticleData Like st.Words))
					OR
					(@SearchType = 2 AND (na.CleanArticleData Like st.Words))
					OR
					(@SearchType = 1 AND (na.SubTitle Like st.Words OR na.Title Like st.Words))
				)
				LEFT OUTER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsContentLocalization] AS ncl ON ncl.ArticleID = na.ArticleID
			WHERE na.PortalID=@PortalID
				AND na.HasPermissions = 0
				AND na.PublishDate <= @CurrentDate AND na.ExpireDate >= @CurrentDate
				AND ((@AdminOrSuperUser = 1) OR ((@UserCanApprove = 1 OR na.Approved=1) AND (na.Active=1 OR na.UserID=@UserID)))
				AND ((@FilterAuthorOrAuthors = 1 AND na.UserID = @FilterByAuthor) OR (@FilterAuthorOrAuthors = 0))
				AND ((@HideUnlocalizedItems = 1 AND ncl.ArticleID IS NOT NULL AND ncl.LocaleCode = @LocaleCode) OR (@HideUnlocalizedItems = 0))
			UNION
			SELECT DISTINCT na.[ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS na
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS cat ON na.ArticleID = cat.ArticleID
				INNER JOIN @UserViewCategoriesWithFilter AS uvcwf ON uvcwf.CategoryID = cat.CategoryID
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = n.ArticleID
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialGroupItems] AS sgi ON sgi.ArticleID = n.ArticleID AND sgi.RoleID = @FilterByDNNGroupID
				INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserID, @FilterByDNNGroupID) AS t ON t.seckey = nss.SecurityKey
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsTagsItems] AS nt ON na.ArticleID = nt.ArticleID
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsNewTags] AS newt ON nt.TagID = newt.TagID
				INNER JOIN @SearchTable AS st2 ON newt.Name Like st2.Words
				LEFT OUTER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsContentLocalization] AS ncl ON ncl.ArticleID = na.ArticleID
			WHERE na.PortalID=@PortalID
				AND na.HasPermissions = 0
				AND na.PublishDate <= @CurrentDate AND na.ExpireDate >= @CurrentDate
				AND ((@AdminOrSuperUser = 1) OR ((@UserCanApprove = 1 OR na.Approved=1)AND (na.Active=1 OR na.UserID=@UserID)))
				AND ((@FilterAuthorOrAuthors = 1 AND na.UserID = @FilterByAuthor) OR (@FilterAuthorOrAuthors = 0))
				AND ((@HideUnlocalizedItems = 1 AND ncl.ArticleID IS NOT NULL AND ncl.LocaleCode = @LocaleCode) OR (@HideUnlocalizedItems = 0))
			UNION ALL
			SELECT na.[ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS na
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsArticleUserPermissions] AS aup ON na.ArticleID = aup.ArticleID
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS cat ON na.ArticleID = cat.ArticleID
				INNER JOIN @FiltredByCategories AS fbc ON fbc.CategoryID = cat.CategoryID
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = n.ArticleID
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialGroupItems] AS sgi ON sgi.ArticleID = n.ArticleID AND sgi.RoleID = @FilterByDNNGroupID
				INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserID, @FilterByDNNGroupID) AS t ON t.seckey = nss.SecurityKey
				INNER JOIN @SearchTable AS st ON(
					(@SearchType = 3 AND (na.SubTitle Like st.Words OR na.Title Like st.Words OR na.CleanArticleData Like st.Words))
					OR
					(@SearchType = 2 AND (na.CleanArticleData Like st.Words))
					OR
					(@SearchType = 1 AND (na.SubTitle Like st.Words OR na.Title Like st.Words))
				)
				LEFT OUTER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsContentLocalization] AS ncl ON ncl.ArticleID = na.ArticleID
			WHERE na.PortalID=@PortalID
				AND na.HasPermissions = 1
				AND na.PublishDate <= @CurrentDate AND na.ExpireDate >= @CurrentDate
				AND ((@AdminOrSuperUser = 1) OR (((@UserID = -1 AND aup.UserID IS NULL) OR (aup.UserID = @UserID))
					AND aup.Show = 1 AND ((@UserCanApprove = 1) OR (na.Approved=1)) AND (na.Active=1 OR na.UserID=@UserID)
				))
				AND ((@FilterAuthorOrAuthors = 1 AND na.UserID = @FilterByAuthor) OR (@FilterAuthorOrAuthors = 0))
				AND ((@HideUnlocalizedItems = 1 AND ncl.ArticleID IS NOT NULL AND ncl.LocaleCode = @LocaleCode) OR (@HideUnlocalizedItems = 0))
			UNION
			SELECT na.[ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS na
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsArticleUserPermissions] AS aup ON na.ArticleID = aup.ArticleID
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS cat ON na.ArticleID = cat.ArticleID
				INNER JOIN @FiltredByCategories AS fbc ON fbc.CategoryID = cat.CategoryID
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = n.ArticleID
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialGroupItems] AS sgi ON sgi.ArticleID = n.ArticleID AND sgi.RoleID = @FilterByDNNGroupID
				INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserID, @FilterByDNNGroupID) AS t ON t.seckey = nss.SecurityKey
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsTagsItems] AS nt ON na.ArticleID = nt.ArticleID
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsNewTags] AS newt ON nt.TagID = newt.TagID
				INNER JOIN @SearchTable AS st2 ON newt.Name Like st2.Words
				LEFT OUTER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsContentLocalization] AS ncl ON ncl.ArticleID = na.ArticleID
			WHERE na.PortalID=@PortalID
				AND na.HasPermissions = 1
				AND na.PublishDate <= @CurrentDate AND na.ExpireDate >= @CurrentDate
				AND ((@AdminOrSuperUser = 1) OR (((@UserID = -1 AND aup.UserID IS NULL) OR (aup.UserID = @UserID))
					AND aup.Show = 1 AND ((@UserCanApprove = 1) OR (na.Approved=1)) AND (na.Active=1 OR na.UserID=@UserID)
				))
				AND ((@FilterAuthorOrAuthors = 1 AND na.UserID = @FilterByAuthor) OR (@FilterAuthorOrAuthors = 0))
				AND ((@HideUnlocalizedItems = 1 AND ncl.ArticleID IS NOT NULL AND ncl.LocaleCode = @LocaleCode) OR (@HideUnlocalizedItems = 0))
			UNION
			SELECT DISTINCT na.[ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS na
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsArticleRolePermissions] AS arp ON na.ArticleID = arp.ArticleID
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS cat ON na.ArticleID = cat.ArticleID
				INNER JOIN @FiltredByCategories AS fbc ON fbc.CategoryID = cat.CategoryID
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = n.ArticleID
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialGroupItems] AS sgi ON sgi.ArticleID = n.ArticleID AND sgi.RoleID = @FilterByDNNGroupID
				INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserID, @FilterByDNNGroupID) AS t ON t.seckey = nss.SecurityKey
				INNER JOIN @SearchTable AS st ON(
					(@SearchType = 3 AND (na.SubTitle Like st.Words OR na.Title Like st.Words OR na.CleanArticleData Like st.Words))
					OR
					(@SearchType = 2 AND (na.CleanArticleData Like st.Words))
					OR
					(@SearchType = 1 AND (na.SubTitle Like st.Words OR na.Title Like st.Words))
				)
				LEFT OUTER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsContentLocalization] AS ncl ON ncl.ArticleID = na.ArticleID
			WHERE na.PortalID=@PortalID
				AND na.HasPermissions = 1
				AND na.PublishDate <= @CurrentDate AND na.ExpireDate >= @CurrentDate
				AND ((@AdminOrSuperUser = 1) OR (((@UserCanApprove = 1) OR (na.Approved=1))
					AND (na.Active=1 OR na.UserID=@UserID) AND arp.Show = 1 AND arp.RoleID IN (SELECT [RoleID] FROM @UserInRoles)
				))
				AND ((@FilterAuthorOrAuthors = 1 AND na.UserID = @FilterByAuthor) OR (@FilterAuthorOrAuthors = 0))
				AND ((@HideUnlocalizedItems = 1 AND ncl.ArticleID IS NOT NULL AND ncl.LocaleCode = @LocaleCode) OR (@HideUnlocalizedItems = 0))
			UNION
			SELECT DISTINCT na.[ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS na
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsArticleRolePermissions] AS arp ON na.ArticleID = arp.ArticleID
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS cat ON na.ArticleID = cat.ArticleID
				INNER JOIN @FiltredByCategories AS fbc ON fbc.CategoryID = cat.CategoryID
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = n.ArticleID
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialGroupItems] AS sgi ON sgi.ArticleID = n.ArticleID AND sgi.RoleID = @FilterByDNNGroupID
				INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserID, @FilterByDNNGroupID) AS t ON t.seckey = nss.SecurityKey
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsTagsItems] AS nt ON na.ArticleID = nt.ArticleID
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsNewTags] AS newt ON nt.TagID = newt.TagID
				INNER JOIN @SearchTable AS st2 ON newt.Name Like st2.Words
				LEFT OUTER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsContentLocalization] AS ncl ON ncl.ArticleID = na.ArticleID
			WHERE na.PortalID=@PortalID
				AND na.HasPermissions = 1
				AND na.PublishDate <= @CurrentDate AND na.ExpireDate >= @CurrentDate
				AND ((@AdminOrSuperUser = 1) OR (((@UserCanApprove = 1) OR (na.Approved=1))
					AND (na.Active=1 OR na.UserID=@UserID) AND arp.Show = 1 AND arp.RoleID IN (SELECT [RoleID] FROM @UserInRoles)
				))
				AND ((@FilterAuthorOrAuthors = 1 AND na.UserID = @FilterByAuthor) OR (@FilterAuthorOrAuthors = 0))
				AND ((@HideUnlocalizedItems = 1 AND ncl.ArticleID IS NOT NULL AND ncl.LocaleCode = @LocaleCode) OR (@HideUnlocalizedItems = 0))
			)
		) AS Result WHERE Kulike BETWEEN @ItemsFrom AND @ItemsTo ORDER BY
			CASE WHEN @OrderBy =''PublishDate ASC'' THEN PublishDate END,
			CASE WHEN @OrderBy =''PublishDate DESC'' THEN PublishDate END DESC,
			CASE WHEN @OrderBy =''NumberOfViews ASC'' THEN NumberOfViews END,
			CASE WHEN @OrderBy =''NumberOfViews DESC'' THEN NumberOfViews END DESC,
			CASE WHEN @OrderBy =''RatingValue ASC'' THEN RatingValue END,
			CASE WHEN @OrderBy =''RatingValue DESC'' THEN RatingValue END DESC,
			CASE WHEN @OrderBy =''DateAdded ASC'' THEN DateAdded END,
			CASE WHEN @OrderBy =''DateAdded DESC'' THEN DateAdded END DESC,
			CASE WHEN @OrderBy =''ExpireDate ASC'' THEN ExpireDate END,
			CASE WHEN @OrderBy =''ExpireDate DESC'' THEN ExpireDate END DESC,
			CASE WHEN @OrderBy =''LastModified ASC'' THEN LastModified END,
			CASE WHEN @OrderBy =''LastModified DESC'' THEN LastModified END DESC,
			CASE WHEN @OrderBy =''NumberOfComments ASC'' THEN NumberOfComments END,
			CASE WHEN @OrderBy =''NumberOfComments DESC'' THEN NumberOfComments END DESC,
			CASE WHEN @OrderBy =''Title ASC'' THEN Title END,
			CASE WHEN @OrderBy =''Title DESC'' THEN Title END DESC
		),
		FinalLocalizedArticleIDsSet (ArticleID,Title,SubTitle,Summary,Article,DetailTypeData,TitleLink,MetaDecription,MetaKeywords,MainImageTitle,MainImageDescription) AS(
			SELECT ArticleID,Title,SubTitle,Summary,Article,DetailTypeData,clTitleLink AS TitleLink ,MetaDecription,MetaKeywords,MainImageTitle,MainImageDescription FROM {databaseOwner}[{objectQualifier}EasyDNNNewsContentLocalization] WHERE ArticleID IN (SELECT ArticleID FROM FinalArticleIDsSet) AND LocaleCode = @LocaleCode
		)
		SELECT *,
			CASE @AdminOrSuperUser 
				WHEN 0 THEN 0
				WHEN 1 THEN 1
				WHEN 2 THEN
				CASE @EditOnlyAsOwner
					WHEN 0 THEN			
						CASE WHEN EXISTS(SELECT CategoryID FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS c WHERE c.ArticleID = Result.ArticleID AND c.CategoryID IN (SELECT CategoryID FROM @UserEditCategories))
							THEN 1
							ELSE
								CASE WHEN EXISTS(SELECT [ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsArticleRolePermissions] AS arp WHERE arp.ArticleID = Result.ArticleID AND arp.Edit = 1 AND arp.RoleID IN(SELECT RoleID FROM @UserInRoles))
								THEN 1
								ELSE
									CASE WHEN EXISTS (SELECT [ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsArticleUserPermissions] AS aup WHERE aup.ArticleID = Result.ArticleID AND aup.Edit = 1 AND aup.UserID = @UserID)
										THEN 1
										ELSE 0
									END
								END
						END  			
					WHEN 1 THEN
						CASE WHEN EXISTS(SELECT CategoryID FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS c WHERE Result.UserID = @UserID AND c.ArticleID = Result.ArticleID AND c.CategoryID IN (SELECT CategoryID FROM @UserEditCategories))
							THEN 1
							ELSE
								CASE WHEN EXISTS(SELECT [ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsArticleRolePermissions] AS arp WHERE arp.ArticleID = Result.ArticleID AND arp.Edit = 1 AND arp.RoleID IN(SELECT RoleID FROM @UserInRoles))
								THEN 1
								ELSE
									CASE WHEN EXISTS (SELECT [ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsArticleUserPermissions] AS aup WHERE aup.ArticleID = Result.ArticleID AND aup.Edit = 1 AND aup.UserID = @UserID)
										THEN 1
										ELSE 0
									END
								END 
						END
				END
				WHEN 3 THEN
					CASE WHEN EXISTS(SELECT [ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsArticleRolePermissions] AS arp WHERE arp.ArticleID = Result.ArticleID AND arp.Edit = 1 AND arp.RoleID IN(SELECT RoleID FROM @UserInRoles))
						THEN 1
						ELSE
						CASE WHEN EXISTS (SELECT [ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsArticleUserPermissions] AS aup WHERE aup.ArticleID = Result.ArticleID AND aup.Edit = 1 AND aup.UserID = @UserID)
							THEN 1
							ELSE 0
							END
						END 
			END AS ''CanEdit'',
			(SELECT cat.ID, cat.Name, cat.CategoryURL FROM @LocalizedCategories AS Cat INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS c ON c.CategoryID = Cat.ID WHERE c.ArticleID = Result.ArticleID ORDER BY Position FOR XML AUTO, ROOT(''root'')) AS ''CatToShow'',
			 CASE Result.Active
				WHEN 1 THEN 0
				WHEN 0 THEN 1
			 END AS ''Published'',
			 CASE @UserCanApprove
				WHEN 0 THEN 0
				WHEN 1 THEN
					CASE Result.Approved
					 WHEN 1 THEN 0
					 WHEN 0 THEN
						 CASE Result.Active
							WHEN 1 THEN 1
							WHEN 0 THEN 0
						END
					END
			 END AS ''Approve''
			 FROM (
				 SELECT n.[ArticleID],n.[UserID],n.[Title],n.[SubTitle],n.[Summary],n.[Article],n.[ArticleImage],n.[DateAdded],n.[LastModified],n.[PublishDate]
					  ,n.[ExpireDate],n.[Approved],n.[Featured],n.[NumberOfViews],n.[RatingValue],n.[RatingCount],n.[AllowComments],n.[Active]
					  ,n.[TitleLink],n.[DetailType],n.[DetailTypeData],n.[DetailsTemplate],n.[DetailsTheme],n.[GalleryPosition],n.[GalleryDisplayType]
					  ,n.[ShowMainImage],n.[ShowMainImageFront],n.[CommentsTheme],n.[ArticleImageFolder],n.[NumberOfComments]
					  ,n.[ArticleImageSet],n.[MetaDecription],n.[MetaKeywords],n.[DisplayStyle],n.[DetailTarget]
					  ,n.[ArticleFromRSS],n.[HasPermissions],n.[EventArticle],n.[DetailMediaType],n.[DetailMediaData],n.[AuthorAliasName],n.[ShowGallery],n.[ArticleGalleryID],n.[MainImageTitle],n.[MainImageDescription]
					   FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS n WHERE ArticleID IN (SELECT ArticleID FROM FinalArticleIDsSet WHERE ArticleID NOT IN (SELECT ArticleID FROM FinalLocalizedArticleIDsSet))
				 UNION ALL
				 SELECT n.[ArticleID],n.[UserID],fla.[Title],fla.[SubTitle],fla.[Summary],fla.[Article],n.[ArticleImage],n.[DateAdded],n.[LastModified],n.[PublishDate]
					  ,n.[ExpireDate],n.[Approved],n.[Featured],n.[NumberOfViews],n.[RatingValue],n.[RatingCount],n.[AllowComments],n.[Active]
					  ,fla.[TitleLink],n.[DetailType],fla.[DetailTypeData],n.[DetailsTemplate],n.[DetailsTheme],n.[GalleryPosition],n.[GalleryDisplayType]
					  ,n.[ShowMainImage],n.[ShowMainImageFront],n.[CommentsTheme],n.[ArticleImageFolder],n.[NumberOfComments]
					  ,n.[ArticleImageSet],fla.[MetaDecription],fla.[MetaKeywords],n.[DisplayStyle],n.[DetailTarget]
					  ,n.[ArticleFromRSS],n.[HasPermissions],n.[EventArticle],n.[DetailMediaType],n.[DetailMediaData],n.[AuthorAliasName],n.[ShowGallery],n.[ArticleGalleryID],fla.[MainImageTitle],fla.[MainImageDescription]
				  FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS n INNER JOIN FinalLocalizedArticleIDsSet AS fla ON fla.ArticleID = n.ArticleID) As Result
			ORDER BY
				CASE WHEN @OrderBy =''PublishDate ASC'' THEN PublishDate END,
				CASE WHEN @OrderBy =''PublishDate DESC'' THEN PublishDate END DESC,
				CASE WHEN @OrderBy =''NumberOfViews ASC'' THEN NumberOfViews END,
				CASE WHEN @OrderBy =''NumberOfViews DESC'' THEN NumberOfViews END DESC,
				CASE WHEN @OrderBy =''RatingValue ASC'' THEN RatingValue END,
				CASE WHEN @OrderBy =''RatingValue DESC'' THEN RatingValue END DESC,
				CASE WHEN @OrderBy =''DateAdded ASC'' THEN DateAdded END,
				CASE WHEN @OrderBy =''DateAdded DESC'' THEN DateAdded END DESC,
				CASE WHEN @OrderBy =''ExpireDate ASC'' THEN ExpireDate END,
				CASE WHEN @OrderBy =''ExpireDate DESC'' THEN ExpireDate END DESC,
				CASE WHEN @OrderBy =''LastModified ASC'' THEN LastModified END,
				CASE WHEN @OrderBy =''LastModified DESC'' THEN LastModified END DESC,
				CASE WHEN @OrderBy =''NumberOfComments ASC'' THEN NumberOfComments END,
				CASE WHEN @OrderBy =''NumberOfComments DESC'' THEN NumberOfComments END DESC,
				CASE WHEN @OrderBy =''Title ASC'' THEN Title END,
				CASE WHEN @OrderBy =''Title DESC'' THEN Title END DESC;
	END
	ELSE
	BEGIN
		SELECT *,
		CASE @AdminOrSuperUser 
			WHEN 0 THEN 0
			WHEN 1 THEN 1
			WHEN 2 THEN
			CASE @EditOnlyAsOwner
				WHEN 0 THEN			
					CASE WHEN EXISTS(SELECT CategoryID FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS c WHERE c.ArticleID = Result.ArticleID AND c.CategoryID IN (SELECT CategoryID FROM @UserEditCategories))
						THEN 1
						ELSE
							CASE WHEN EXISTS(SELECT [ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsArticleRolePermissions] AS arp WHERE arp.ArticleID = Result.ArticleID AND arp.Edit = 1 AND arp.RoleID IN(SELECT RoleID FROM @UserInRoles))
							THEN 1
							ELSE
								CASE WHEN EXISTS (SELECT [ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsArticleUserPermissions] AS aup WHERE aup.ArticleID = Result.ArticleID AND aup.Edit = 1 AND aup.UserID = @UserID)
									THEN 1
									ELSE 0
								END
							END
					END  			
				WHEN 1 THEN
					CASE WHEN EXISTS(SELECT CategoryID FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS c WHERE Result.UserID = @UserID AND c.ArticleID = Result.ArticleID AND c.CategoryID IN (SELECT CategoryID FROM @UserEditCategories))
						THEN 1
						ELSE
							CASE WHEN EXISTS(SELECT [ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsArticleRolePermissions] AS arp WHERE arp.ArticleID = Result.ArticleID AND arp.Edit = 1 AND arp.RoleID IN(SELECT RoleID FROM @UserInRoles))
							THEN 1
							ELSE
								CASE WHEN EXISTS (SELECT [ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsArticleUserPermissions] AS aup WHERE aup.ArticleID = Result.ArticleID AND aup.Edit = 1 AND aup.UserID = @UserID)
									THEN 1
									ELSE 0
								END
							END 
					END
			END
			WHEN 3 THEN
				CASE WHEN EXISTS(SELECT [ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsArticleRolePermissions] AS arp WHERE arp.ArticleID = Result.ArticleID AND arp.Edit = 1 AND arp.RoleID IN(SELECT RoleID FROM @UserInRoles))
					THEN 1
					ELSE
					CASE WHEN EXISTS (SELECT [ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsArticleUserPermissions] AS aup WHERE aup.ArticleID = Result.ArticleID AND aup.Edit = 1 AND aup.UserID = @UserID)
						THEN 1
						ELSE 0
						END
					END 
		END AS ''CanEdit'',
		(SELECT cat.ID, cat.Name, cat.CategoryURL FROM @LocalizedCategories AS Cat INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS c ON c.CategoryID = Cat.ID WHERE c.ArticleID = Result.ArticleID ORDER BY Position FOR XML AUTO, ROOT(''root'')) AS ''CatToShow'',
		 CASE Result.Active
			WHEN 1 THEN 0
			WHEN 0 THEN 1
		 END AS ''Published'',
		 CASE @UserCanApprove
			WHEN 0 THEN 0
			WHEN 1 THEN
				CASE Result.Approved
				 WHEN 1 THEN 0
				 WHEN 0 THEN
					 CASE Result.Active
						WHEN 1 THEN 1
						WHEN 0 THEN 0
					END
				END
		 END AS  ''Approve''
		FROM (SELECT
		 n.[ArticleID],n.[UserID],n.[Title],n.[SubTitle],n.[Summary],n.[Article],n.[ArticleImage],n.[DateAdded],n.[LastModified],n.[PublishDate]
		,n.[ExpireDate],n.[Approved],n.[Featured],n.[NumberOfViews],n.[RatingValue],n.[RatingCount],n.[AllowComments],n.[Active]
		,n.[TitleLink],n.[DetailType],n.[DetailTypeData],n.[DetailsTemplate],n.[DetailsTheme],n.[GalleryPosition],n.[GalleryDisplayType]
		,n.[ShowMainImage],n.[ShowMainImageFront],n.[CommentsTheme],n.[ArticleImageFolder],n.[NumberOfComments]
		,n.[ArticleImageSet],n.[MetaDecription],n.[MetaKeywords],n.[DisplayStyle],n.[DetailTarget]
		,n.[ArticleFromRSS],n.[HasPermissions],n.[EventArticle],n.[DetailMediaType],n.[DetailMediaData],n.[AuthorAliasName],n.[ShowGallery],n.[ArticleGalleryID],n.[MainImageTitle],n.[MainImageDescription], ROW_NUMBER() OVER (ORDER BY 
		CASE WHEN @OrderBy =''PublishDate ASC'' THEN PublishDate END,
		CASE WHEN @OrderBy =''PublishDate DESC'' THEN PublishDate END DESC,
		CASE WHEN @OrderBy =''NumberOfViews ASC'' THEN NumberOfViews END,
		CASE WHEN @OrderBy =''NumberOfViews DESC'' THEN NumberOfViews END DESC,
		CASE WHEN @OrderBy =''RatingValue ASC'' THEN RatingValue END,
		CASE WHEN @OrderBy =''RatingValue DESC'' THEN RatingValue END DESC,
		CASE WHEN @OrderBy =''DateAdded ASC'' THEN DateAdded END,
		CASE WHEN @OrderBy =''DateAdded DESC'' THEN DateAdded END DESC,
		CASE WHEN @OrderBy =''ExpireDate ASC'' THEN ExpireDate END,
		CASE WHEN @OrderBy =''ExpireDate DESC'' THEN ExpireDate END DESC,
		CASE WHEN @OrderBy =''LastModified ASC'' THEN LastModified END,
		CASE WHEN @OrderBy =''LastModified DESC'' THEN LastModified END DESC,
		CASE WHEN @OrderBy =''NumberOfComments ASC'' THEN NumberOfComments END,
		CASE WHEN @OrderBy =''NumberOfComments DESC'' THEN NumberOfComments END DESC,
		CASE WHEN @OrderBy =''Title ASC'' THEN Title END,
		CASE WHEN @OrderBy =''Title DESC'' THEN Title END DESC) AS Kulike
		FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS n WHERE ArticleID IN(
			SELECT DISTINCT na.[ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS na
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS cat ON na.ArticleID = cat.ArticleID
				INNER JOIN @UserViewCategoriesWithFilter AS uvcwf ON uvcwf.CategoryID = cat.CategoryID
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = n.ArticleID
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialGroupItems] AS sgi ON sgi.ArticleID = n.ArticleID AND sgi.RoleID = @FilterByDNNGroupID
				INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserID, @FilterByDNNGroupID) AS t ON t.seckey = nss.SecurityKey
				INNER JOIN @SearchTable AS st ON(
					(@SearchType = 3 AND (na.SubTitle Like st.Words OR na.Title Like st.Words OR na.CleanArticleData Like st.Words))
					OR
					(@SearchType = 2 AND (na.CleanArticleData Like st.Words))
					OR
					(@SearchType = 1 AND (na.SubTitle Like st.Words OR na.Title Like st.Words))
				)
			WHERE na.PortalID=@PortalID
				AND na.HasPermissions = 0
				AND na.HideDefaultLocale = 0
				AND na.PublishDate <= @CurrentDate AND na.ExpireDate >= @CurrentDate
				AND ((@AdminOrSuperUser = 1) OR ((@UserCanApprove = 1 OR na.Approved=1) AND (na.Active=1 OR na.UserID=@UserID)))
				AND((@FilterAuthorOrAuthors = 1 AND na.UserID = @FilterByAuthor) OR (@FilterAuthorOrAuthors = 0))
			 UNION
			 SELECT DISTINCT na.[ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS na
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS cat ON na.ArticleID = cat.ArticleID
				INNER JOIN @UserViewCategoriesWithFilter AS uvcwf ON uvcwf.CategoryID = cat.CategoryID
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = n.ArticleID
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialGroupItems] AS sgi ON sgi.ArticleID = n.ArticleID AND sgi.RoleID = @FilterByDNNGroupID
				INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserID, @FilterByDNNGroupID) AS t ON t.seckey = nss.SecurityKey
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsTagsItems] AS nt ON na.ArticleID = nt.ArticleID
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsNewTags] AS newt ON nt.TagID = newt.TagID
				INNER JOIN @SearchTable AS st2 ON newt.Name Like st2.Words
			WHERE na.PortalID=@PortalID
				AND na.HasPermissions = 0
				AND na.HideDefaultLocale = 0
				AND na.PublishDate <= @CurrentDate AND na.ExpireDate >= @CurrentDate
				AND ((@AdminOrSuperUser = 1) OR ((@UserCanApprove = 1 OR na.Approved=1) AND (na.Active=1 OR na.UserID=@UserID)))
				AND((@FilterAuthorOrAuthors = 1 AND na.UserID = @FilterByAuthor) OR (@FilterAuthorOrAuthors = 0))
			UNION ALL
			SELECT na.[ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS na
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsArticleUserPermissions] AS aup ON na.ArticleID = aup.ArticleID
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS cat ON na.ArticleID = cat.ArticleID
				INNER JOIN @FiltredByCategories AS fbc ON fbc.CategoryID = cat.CategoryID
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = n.ArticleID
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialGroupItems] AS sgi ON sgi.ArticleID = n.ArticleID AND sgi.RoleID = @FilterByDNNGroupID
				INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserID, @FilterByDNNGroupID) AS t ON t.seckey = nss.SecurityKey
				INNER JOIN @SearchTable AS st ON(
					(@SearchType = 3 AND (na.SubTitle Like st.Words OR na.Title Like st.Words OR na.CleanArticleData Like st.Words))
					OR
					(@SearchType = 2 AND (na.CleanArticleData Like st.Words))
					OR
					(@SearchType = 1 AND (na.SubTitle Like st.Words OR na.Title Like st.Words))
				)
			WHERE na.PortalID=@PortalID
				AND na.HasPermissions = 1
				AND na.HideDefaultLocale = 0
				AND na.PublishDate <= @CurrentDate AND na.ExpireDate >= @CurrentDate
				AND ((@AdminOrSuperUser = 1) OR (((@UserID = -1 AND aup.UserID IS NULL) OR (aup.UserID = @UserID))
					AND aup.Show = 1 AND ((@UserCanApprove = 1) OR (na.Approved=1)) AND (na.Active=1 OR na.UserID=@UserID)
				))
				AND((@FilterAuthorOrAuthors = 1 AND na.UserID = @FilterByAuthor) OR (@FilterAuthorOrAuthors = 0))
			UNION
			SELECT na.[ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS na
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsArticleUserPermissions] AS aup ON na.ArticleID = aup.ArticleID
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS cat ON na.ArticleID = cat.ArticleID
				INNER JOIN @FiltredByCategories AS fbc ON fbc.CategoryID = cat.CategoryID
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = n.ArticleID
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialGroupItems] AS sgi ON sgi.ArticleID = n.ArticleID AND sgi.RoleID = @FilterByDNNGroupID
				INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserID, @FilterByDNNGroupID) AS t ON t.seckey = nss.SecurityKey
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsTagsItems] AS nt ON na.ArticleID = nt.ArticleID
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsNewTags] AS newt ON nt.TagID = newt.TagID
				INNER JOIN @SearchTable AS st2 ON newt.Name Like st2.Words
			WHERE na.PortalID=@PortalID
				AND na.HasPermissions = 1
				AND na.HideDefaultLocale = 0
				AND na.PublishDate <= @CurrentDate AND na.ExpireDate >= @CurrentDate
				AND ((@AdminOrSuperUser = 1) OR (((@UserID = -1 AND aup.UserID IS NULL) OR (aup.UserID = @UserID))
					AND aup.Show = 1 AND ((@UserCanApprove = 1) OR (na.Approved=1)) AND (na.Active=1 OR na.UserID=@UserID)
				))
				AND((@FilterAuthorOrAuthors = 1 AND na.UserID = @FilterByAuthor) OR (@FilterAuthorOrAuthors = 0))
			UNION
			SELECT DISTINCT na.[ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS na
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsArticleRolePermissions] AS arp ON na.ArticleID = arp.ArticleID
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS cat ON na.ArticleID = cat.ArticleID
				INNER JOIN @FiltredByCategories AS fbc ON fbc.CategoryID = cat.CategoryID
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = n.ArticleID
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialGroupItems] AS sgi ON sgi.ArticleID = n.ArticleID AND sgi.RoleID = @FilterByDNNGroupID
				INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserID, @FilterByDNNGroupID) AS t ON t.seckey = nss.SecurityKey
				INNER JOIN @SearchTable AS st ON(
					(@SearchType = 3 AND (na.SubTitle Like st.Words OR na.Title Like st.Words OR na.CleanArticleData Like st.Words))
					OR
					(@SearchType = 2 AND (na.CleanArticleData Like st.Words))
					OR
					(@SearchType = 1 AND (na.SubTitle Like st.Words OR na.Title Like st.Words))
				)
			WHERE na.PortalID=@PortalID
				AND na.HasPermissions = 1
				AND na.HideDefaultLocale = 0
				AND na.PublishDate <= @CurrentDate AND na.ExpireDate >= @CurrentDate
				AND ((@AdminOrSuperUser = 1) OR (((@UserCanApprove = 1) OR (na.Approved=1))
					AND (na.Active=1 OR na.UserID=@UserID) AND arp.Show = 1 AND arp.RoleID IN (SELECT [RoleID] FROM @UserInRoles)
				))
				AND((@FilterAuthorOrAuthors = 1 AND na.UserID = @FilterByAuthor) OR (@FilterAuthorOrAuthors = 0))
			UNION
			SELECT DISTINCT na.[ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS na
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsArticleRolePermissions] AS arp ON na.ArticleID = arp.ArticleID
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS cat ON na.ArticleID = cat.ArticleID
				INNER JOIN @FiltredByCategories AS fbc ON fbc.CategoryID = cat.CategoryID
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = n.ArticleID
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialGroupItems] AS sgi ON sgi.ArticleID = n.ArticleID AND sgi.RoleID = @FilterByDNNGroupID
				INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserID, @FilterByDNNGroupID) AS t ON t.seckey = nss.SecurityKey
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsTagsItems] AS nt ON na.ArticleID = nt.ArticleID
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsNewTags] AS newt ON nt.TagID = newt.TagID
				INNER JOIN @SearchTable AS st2 ON newt.Name Like st2.Words
			WHERE na.PortalID=@PortalID
				AND na.HasPermissions = 1
				AND na.HideDefaultLocale = 0
				AND na.PublishDate <= @CurrentDate AND na.ExpireDate >= @CurrentDate
				AND ((@AdminOrSuperUser = 1) OR (((@UserCanApprove = 1) OR (na.Approved=1))
					AND (na.Active=1 OR na.UserID=@UserID) AND arp.Show = 1 AND arp.RoleID IN (SELECT [RoleID] FROM @UserInRoles)
				))
				AND((@FilterAuthorOrAuthors = 1 AND na.UserID = @FilterByAuthor) OR (@FilterAuthorOrAuthors = 0))
			)
		) AS Result WHERE Kulike BETWEEN @ItemsFrom AND @ItemsTo ORDER BY
			CASE WHEN @OrderBy =''PublishDate ASC'' THEN PublishDate END,
			CASE WHEN @OrderBy =''PublishDate DESC'' THEN PublishDate END DESC,
			CASE WHEN @OrderBy =''NumberOfViews ASC'' THEN NumberOfViews END,
			CASE WHEN @OrderBy =''NumberOfViews DESC'' THEN NumberOfViews END DESC,
			CASE WHEN @OrderBy =''RatingValue ASC'' THEN RatingValue END,
			CASE WHEN @OrderBy =''RatingValue DESC'' THEN RatingValue END DESC,
			CASE WHEN @OrderBy =''DateAdded ASC'' THEN DateAdded END,
			CASE WHEN @OrderBy =''DateAdded DESC'' THEN DateAdded END DESC,
			CASE WHEN @OrderBy =''ExpireDate ASC'' THEN ExpireDate END,
			CASE WHEN @OrderBy =''ExpireDate DESC'' THEN ExpireDate END DESC,
			CASE WHEN @OrderBy =''LastModified ASC'' THEN LastModified END,
			CASE WHEN @OrderBy =''LastModified DESC'' THEN LastModified END DESC,
			CASE WHEN @OrderBy =''NumberOfComments ASC'' THEN NumberOfComments END,
			CASE WHEN @OrderBy =''NumberOfComments DESC'' THEN NumberOfComments END DESC,
			CASE WHEN @OrderBy =''Title ASC'' THEN Title END,
			CASE WHEN @OrderBy =''Title DESC'' THEN Title END DESC;
	END
END
ELSE IF @FilterByDNNUserID <> 0
BEGIN
	IF @LocaleCode <> ''''
	BEGIN
		WITH FinalArticleIDsSet (ArticleID) AS(
		SELECT TOP (@ItemsTo - @ItemsFrom + 1) ArticleID FROM (SELECT *, ROW_NUMBER() OVER (ORDER BY 
		CASE WHEN @OrderBy =''PublishDate ASC'' THEN PublishDate END,
		CASE WHEN @OrderBy =''PublishDate DESC'' THEN PublishDate END DESC,
		CASE WHEN @OrderBy =''NumberOfViews ASC'' THEN NumberOfViews END,
		CASE WHEN @OrderBy =''NumberOfViews DESC'' THEN NumberOfViews END DESC,
		CASE WHEN @OrderBy =''RatingValue ASC'' THEN RatingValue END,
		CASE WHEN @OrderBy =''RatingValue DESC'' THEN RatingValue END DESC,
		CASE WHEN @OrderBy =''DateAdded ASC'' THEN DateAdded END,
		CASE WHEN @OrderBy =''DateAdded DESC'' THEN DateAdded END DESC,
		CASE WHEN @OrderBy =''ExpireDate ASC'' THEN ExpireDate END,
		CASE WHEN @OrderBy =''ExpireDate DESC'' THEN ExpireDate END DESC,
		CASE WHEN @OrderBy =''LastModified ASC'' THEN LastModified END,
		CASE WHEN @OrderBy =''LastModified DESC'' THEN LastModified END DESC,
		CASE WHEN @OrderBy =''NumberOfComments ASC'' THEN NumberOfComments END,
		CASE WHEN @OrderBy =''NumberOfComments DESC'' THEN NumberOfComments END DESC,
		CASE WHEN @OrderBy =''Title ASC'' THEN Title END,
		CASE WHEN @OrderBy =''Title DESC'' THEN Title END DESC) AS Kulike
		FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS n WHERE ArticleID IN(
			SELECT DISTINCT na.[ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS na
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS cat ON na.ArticleID = cat.ArticleID
				INNER JOIN @UserViewCategoriesWithFilter AS uvcwf ON uvcwf.CategoryID = cat.CategoryID
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = n.ArticleID
				INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserID, @FilterByDNNGroupID) AS t ON t.seckey = nss.SecurityKey
				INNER JOIN @SearchTable AS st ON(
					(@SearchType = 3 AND (na.SubTitle Like st.Words OR na.Title Like st.Words OR na.CleanArticleData Like st.Words))
					OR
					(@SearchType = 2 AND (na.CleanArticleData Like st.Words))
					OR
					(@SearchType = 1 AND (na.SubTitle Like st.Words OR na.Title Like st.Words))
				)
				LEFT OUTER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsContentLocalization] AS ncl ON ncl.ArticleID = na.ArticleID
			WHERE na.PortalID=@PortalID
				AND na.HasPermissions = 0
				AND na.PublishDate <= @CurrentDate AND na.ExpireDate >= @CurrentDate
				AND na.UserID = @FilterByDNNUserID
				AND ((@AdminOrSuperUser = 1) OR ((@UserCanApprove = 1 OR na.Approved=1) AND (na.Active=1 OR na.UserID=@UserID)))
				AND ((@HideUnlocalizedItems = 1 AND ncl.ArticleID IS NOT NULL AND ncl.LocaleCode = @LocaleCode) OR (@HideUnlocalizedItems = 0))
			UNION
			SELECT DISTINCT na.[ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS na
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS cat ON na.ArticleID = cat.ArticleID
				INNER JOIN @UserViewCategoriesWithFilter AS uvcwf ON uvcwf.CategoryID = cat.CategoryID
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = n.ArticleID
				INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserID, @FilterByDNNGroupID) AS t ON t.seckey = nss.SecurityKey
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsTagsItems] AS nt ON na.ArticleID = nt.ArticleID
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsNewTags] AS newt ON nt.TagID = newt.TagID
				INNER JOIN @SearchTable AS st2 ON newt.Name Like st2.Words
				LEFT OUTER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsContentLocalization] AS ncl ON ncl.ArticleID = na.ArticleID
			WHERE na.PortalID=@PortalID
				AND na.HasPermissions = 0
				AND na.PublishDate <= @CurrentDate AND na.ExpireDate >= @CurrentDate
				AND na.UserID = @FilterByDNNUserID
				AND ((@AdminOrSuperUser = 1) OR ((@UserCanApprove = 1 OR na.Approved=1) AND (na.Active=1 OR na.UserID=@UserID)))
				AND ((@HideUnlocalizedItems = 1 AND ncl.ArticleID IS NOT NULL AND ncl.LocaleCode = @LocaleCode) OR (@HideUnlocalizedItems = 0))
			UNION ALL
			SELECT na.[ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS na
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsArticleUserPermissions] AS aup ON na.ArticleID = aup.ArticleID
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS cat ON na.ArticleID = cat.ArticleID
				INNER JOIN @FiltredByCategories AS fbc ON fbc.CategoryID = cat.CategoryID
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = n.ArticleID
				INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserID, @FilterByDNNGroupID) AS t ON t.seckey = nss.SecurityKey
				INNER JOIN @SearchTable AS st ON(
					(@SearchType = 3 AND (na.SubTitle Like st.Words OR na.Title Like st.Words OR na.CleanArticleData Like st.Words))
					OR
					(@SearchType = 2 AND (na.CleanArticleData Like st.Words))
					OR
					(@SearchType = 1 AND (na.SubTitle Like st.Words OR na.Title Like st.Words))
				)
				LEFT OUTER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsContentLocalization] AS ncl ON ncl.ArticleID = na.ArticleID
			WHERE na.PortalID=@PortalID
				AND na.HasPermissions = 1
				AND na.PublishDate <= @CurrentDate AND na.ExpireDate >= @CurrentDate
				AND na.UserID = @FilterByDNNUserID
				AND ((@AdminOrSuperUser = 1) OR (((@UserID = -1 AND aup.UserID IS NULL) OR (aup.UserID = @UserID))
					AND aup.Show = 1 AND ((@UserCanApprove = 1) OR (na.Approved=1)) AND (na.Active=1 OR na.UserID=@UserID)
				))
				AND ((@HideUnlocalizedItems = 1 AND ncl.ArticleID IS NOT NULL AND ncl.LocaleCode = @LocaleCode) OR (@HideUnlocalizedItems = 0))
			UNION
			SELECT na.[ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS na
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsArticleUserPermissions] AS aup ON na.ArticleID = aup.ArticleID
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS cat ON na.ArticleID = cat.ArticleID
				INNER JOIN @FiltredByCategories AS fbc ON fbc.CategoryID = cat.CategoryID
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = n.ArticleID
				INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserID, @FilterByDNNGroupID) AS t ON t.seckey = nss.SecurityKey
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsTagsItems] AS nt ON na.ArticleID = nt.ArticleID
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsNewTags] AS newt ON nt.TagID = newt.TagID
				INNER JOIN @SearchTable AS st2 ON newt.Name Like st2.Words
				LEFT OUTER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsContentLocalization] AS ncl ON ncl.ArticleID = na.ArticleID
			WHERE na.PortalID=@PortalID
				AND na.HasPermissions = 1
				AND na.PublishDate <= @CurrentDate AND na.ExpireDate >= @CurrentDate
				AND na.UserID = @FilterByDNNUserID
				AND ((@AdminOrSuperUser = 1) OR (((@UserID = -1 AND aup.UserID IS NULL) OR (aup.UserID = @UserID))
					AND aup.Show = 1 AND ((@UserCanApprove = 1) OR (na.Approved=1)) AND (na.Active=1 OR na.UserID=@UserID)
				))
				AND ((@HideUnlocalizedItems = 1 AND ncl.ArticleID IS NOT NULL AND ncl.LocaleCode = @LocaleCode) OR (@HideUnlocalizedItems = 0))
			UNION
			SELECT DISTINCT na.[ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS na
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsArticleRolePermissions] AS arp ON na.ArticleID = arp.ArticleID
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS cat ON na.ArticleID = cat.ArticleID
				INNER JOIN @FiltredByCategories AS fbc ON fbc.CategoryID = cat.CategoryID
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = n.ArticleID
				INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserID, @FilterByDNNGroupID) AS t ON t.seckey = nss.SecurityKey
				INNER JOIN @SearchTable AS st ON(
					(@SearchType = 3 AND (na.SubTitle Like st.Words OR na.Title Like st.Words OR na.CleanArticleData Like st.Words))
					OR
					(@SearchType = 2 AND (na.CleanArticleData Like st.Words))
					OR
					(@SearchType = 1 AND (na.SubTitle Like st.Words OR na.Title Like st.Words))
				)
				LEFT OUTER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsContentLocalization] AS ncl ON ncl.ArticleID = na.ArticleID
			WHERE na.PortalID=@PortalID
				AND na.HasPermissions = 1
				AND na.PublishDate <= @CurrentDate AND na.ExpireDate >= @CurrentDate
				AND na.UserID = @FilterByDNNUserID
				AND ((@AdminOrSuperUser = 1) OR (((@UserCanApprove = 1) OR (na.Approved=1))
					AND (na.Active=1 OR na.UserID=@UserID) AND arp.Show = 1 AND arp.RoleID IN (SELECT [RoleID] FROM @UserInRoles)
				))
				AND ((@HideUnlocalizedItems = 1 AND ncl.ArticleID IS NOT NULL AND ncl.LocaleCode = @LocaleCode) OR (@HideUnlocalizedItems = 0))
			UNION
			SELECT DISTINCT na.[ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS na
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsArticleRolePermissions] AS arp ON na.ArticleID = arp.ArticleID
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS cat ON na.ArticleID = cat.ArticleID
				INNER JOIN @FiltredByCategories AS fbc ON fbc.CategoryID = cat.CategoryID
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = n.ArticleID
				INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserID, @FilterByDNNGroupID) AS t ON t.seckey = nss.SecurityKey
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsTagsItems] AS nt ON na.ArticleID = nt.ArticleID
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsNewTags] AS newt ON nt.TagID = newt.TagID
				INNER JOIN @SearchTable AS st2 ON newt.Name Like st2.Words
				LEFT OUTER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsContentLocalization] AS ncl ON ncl.ArticleID = na.ArticleID
			WHERE na.PortalID=@PortalID
				AND na.HasPermissions = 1
				AND na.PublishDate <= @CurrentDate AND na.ExpireDate >= @CurrentDate
				AND na.UserID = @FilterByDNNUserID
				AND ((@AdminOrSuperUser = 1) OR (((@UserCanApprove = 1) OR (na.Approved=1))
					AND (na.Active=1 OR na.UserID=@UserID) AND arp.Show = 1 AND arp.RoleID IN (SELECT [RoleID] FROM @UserInRoles)
				))
				AND ((@HideUnlocalizedItems = 1 AND ncl.ArticleID IS NOT NULL AND ncl.LocaleCode = @LocaleCode) OR (@HideUnlocalizedItems = 0))
			)
		) AS Result WHERE Kulike BETWEEN @ItemsFrom AND @ItemsTo ORDER BY
			CASE WHEN @OrderBy =''PublishDate ASC'' THEN PublishDate END,
			CASE WHEN @OrderBy =''PublishDate DESC'' THEN PublishDate END DESC,
			CASE WHEN @OrderBy =''NumberOfViews ASC'' THEN NumberOfViews END,
			CASE WHEN @OrderBy =''NumberOfViews DESC'' THEN NumberOfViews END DESC,
			CASE WHEN @OrderBy =''RatingValue ASC'' THEN RatingValue END,
			CASE WHEN @OrderBy =''RatingValue DESC'' THEN RatingValue END DESC,
			CASE WHEN @OrderBy =''DateAdded ASC'' THEN DateAdded END,
			CASE WHEN @OrderBy =''DateAdded DESC'' THEN DateAdded END DESC,
			CASE WHEN @OrderBy =''ExpireDate ASC'' THEN ExpireDate END,
			CASE WHEN @OrderBy =''ExpireDate DESC'' THEN ExpireDate END DESC,
			CASE WHEN @OrderBy =''LastModified ASC'' THEN LastModified END,
			CASE WHEN @OrderBy =''LastModified DESC'' THEN LastModified END DESC,
			CASE WHEN @OrderBy =''NumberOfComments ASC'' THEN NumberOfComments END,
			CASE WHEN @OrderBy =''NumberOfComments DESC'' THEN NumberOfComments END DESC,
			CASE WHEN @OrderBy =''Title ASC'' THEN Title END,
			CASE WHEN @OrderBy =''Title DESC'' THEN Title END DESC
		),
		FinalLocalizedArticleIDsSet (ArticleID,Title,SubTitle,Summary,Article,DetailTypeData,TitleLink,MetaDecription,MetaKeywords,MainImageTitle,MainImageDescription) AS(
			SELECT ArticleID,Title,SubTitle,Summary,Article,DetailTypeData,clTitleLink AS TitleLink ,MetaDecription,MetaKeywords,MainImageTitle,MainImageDescription FROM {databaseOwner}[{objectQualifier}EasyDNNNewsContentLocalization] WHERE ArticleID IN (SELECT ArticleID FROM FinalArticleIDsSet) AND LocaleCode = @LocaleCode
		)
		SELECT *,
			CASE @AdminOrSuperUser 
				WHEN 0 THEN 0
				WHEN 1 THEN 1
				WHEN 2 THEN
				CASE @EditOnlyAsOwner
					WHEN 0 THEN			
						CASE WHEN EXISTS(SELECT CategoryID FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS c WHERE c.ArticleID = Result.ArticleID AND c.CategoryID IN (SELECT CategoryID FROM @UserEditCategories))
							THEN 1
							ELSE
								CASE WHEN EXISTS(SELECT [ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsArticleRolePermissions] AS arp WHERE arp.ArticleID = Result.ArticleID AND arp.Edit = 1 AND arp.RoleID IN(SELECT RoleID FROM @UserInRoles))
								THEN 1
								ELSE
									CASE WHEN EXISTS (SELECT [ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsArticleUserPermissions] AS aup WHERE aup.ArticleID = Result.ArticleID AND aup.Edit = 1 AND aup.UserID = @UserID)
										THEN 1
										ELSE 0
									END
								END
						END  			
					WHEN 1 THEN
						CASE WHEN EXISTS(SELECT CategoryID FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS c WHERE Result.UserID = @UserID AND c.ArticleID = Result.ArticleID AND c.CategoryID IN (SELECT CategoryID FROM @UserEditCategories))
							THEN 1
							ELSE
								CASE WHEN EXISTS(SELECT [ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsArticleRolePermissions] AS arp WHERE arp.ArticleID = Result.ArticleID AND arp.Edit = 1 AND arp.RoleID IN(SELECT RoleID FROM @UserInRoles))
								THEN 1
								ELSE
									CASE WHEN EXISTS (SELECT [ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsArticleUserPermissions] AS aup WHERE aup.ArticleID = Result.ArticleID AND aup.Edit = 1 AND aup.UserID = @UserID)
										THEN 1
										ELSE 0
									END
								END 
						END
				END
				WHEN 3 THEN
					CASE WHEN EXISTS(SELECT [ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsArticleRolePermissions] AS arp WHERE arp.ArticleID = Result.ArticleID AND arp.Edit = 1 AND arp.RoleID IN(SELECT RoleID FROM @UserInRoles))
						THEN 1
						ELSE
						CASE WHEN EXISTS (SELECT [ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsArticleUserPermissions] AS aup WHERE aup.ArticleID = Result.ArticleID AND aup.Edit = 1 AND aup.UserID = @UserID)
							THEN 1
							ELSE 0
							END
						END 
			END AS ''CanEdit'',
			(SELECT cat.ID, cat.Name, cat.CategoryURL FROM @LocalizedCategories AS Cat INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS c ON c.CategoryID = Cat.ID WHERE c.ArticleID = Result.ArticleID ORDER BY Position FOR XML AUTO, ROOT(''root'')) AS ''CatToShow'',
			 CASE Result.Active
				WHEN 1 THEN 0
				WHEN 0 THEN 1
			 END AS ''Published'',
			 CASE @UserCanApprove
				WHEN 0 THEN 0
				WHEN 1 THEN
					CASE Result.Approved
					 WHEN 1 THEN 0
					 WHEN 0 THEN
						 CASE Result.Active
							WHEN 1 THEN 1
							WHEN 0 THEN 0
						END
					END
			 END AS ''Approve''
			 FROM (
				 SELECT n.[ArticleID],n.[UserID],n.[Title],n.[SubTitle],n.[Summary],n.[Article],n.[ArticleImage],n.[DateAdded],n.[LastModified],n.[PublishDate]
					  ,n.[ExpireDate],n.[Approved],n.[Featured],n.[NumberOfViews],n.[RatingValue],n.[RatingCount],n.[AllowComments],n.[Active]
					  ,n.[TitleLink],n.[DetailType],n.[DetailTypeData],n.[DetailsTemplate],n.[DetailsTheme],n.[GalleryPosition],n.[GalleryDisplayType]
					  ,n.[ShowMainImage],n.[ShowMainImageFront],n.[CommentsTheme],n.[ArticleImageFolder],n.[NumberOfComments]
					  ,n.[ArticleImageSet],n.[MetaDecription],n.[MetaKeywords],n.[DisplayStyle],n.[DetailTarget]
					  ,n.[ArticleFromRSS],n.[HasPermissions],n.[EventArticle],n.[DetailMediaType],n.[DetailMediaData],n.[AuthorAliasName],n.[ShowGallery],n.[ArticleGalleryID],n.[MainImageTitle],n.[MainImageDescription]
					   FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS n WHERE ArticleID IN (SELECT ArticleID FROM FinalArticleIDsSet WHERE ArticleID NOT IN (SELECT ArticleID FROM FinalLocalizedArticleIDsSet))
				 UNION ALL
				 SELECT n.[ArticleID],n.[UserID],fla.[Title],fla.[SubTitle],fla.[Summary],fla.[Article],n.[ArticleImage],n.[DateAdded],n.[LastModified],n.[PublishDate]
					  ,n.[ExpireDate],n.[Approved],n.[Featured],n.[NumberOfViews],n.[RatingValue],n.[RatingCount],n.[AllowComments],n.[Active]
					  ,fla.[TitleLink],n.[DetailType],fla.[DetailTypeData],n.[DetailsTemplate],n.[DetailsTheme],n.[GalleryPosition],n.[GalleryDisplayType]
					  ,n.[ShowMainImage],n.[ShowMainImageFront],n.[CommentsTheme],n.[ArticleImageFolder],n.[NumberOfComments]
					  ,n.[ArticleImageSet],fla.[MetaDecription],fla.[MetaKeywords],n.[DisplayStyle],n.[DetailTarget]
					  ,n.[ArticleFromRSS],n.[HasPermissions],n.[EventArticle],n.[DetailMediaType],n.[DetailMediaData],n.[AuthorAliasName],n.[ShowGallery],n.[ArticleGalleryID],fla.[MainImageTitle],fla.[MainImageDescription]
				  FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS n INNER JOIN FinalLocalizedArticleIDsSet AS fla ON fla.ArticleID = n.ArticleID) As Result
			ORDER BY
				CASE WHEN @OrderBy =''PublishDate ASC'' THEN PublishDate END,
				CASE WHEN @OrderBy =''PublishDate DESC'' THEN PublishDate END DESC,
				CASE WHEN @OrderBy =''NumberOfViews ASC'' THEN NumberOfViews END,
				CASE WHEN @OrderBy =''NumberOfViews DESC'' THEN NumberOfViews END DESC,
				CASE WHEN @OrderBy =''RatingValue ASC'' THEN RatingValue END,
				CASE WHEN @OrderBy =''RatingValue DESC'' THEN RatingValue END DESC,
				CASE WHEN @OrderBy =''DateAdded ASC'' THEN DateAdded END,
				CASE WHEN @OrderBy =''DateAdded DESC'' THEN DateAdded END DESC,
				CASE WHEN @OrderBy =''ExpireDate ASC'' THEN ExpireDate END,
				CASE WHEN @OrderBy =''ExpireDate DESC'' THEN ExpireDate END DESC,
				CASE WHEN @OrderBy =''LastModified ASC'' THEN LastModified END,
				CASE WHEN @OrderBy =''LastModified DESC'' THEN LastModified END DESC,
				CASE WHEN @OrderBy =''NumberOfComments ASC'' THEN NumberOfComments END,
				CASE WHEN @OrderBy =''NumberOfComments DESC'' THEN NumberOfComments END DESC,
				CASE WHEN @OrderBy =''Title ASC'' THEN Title END,
				CASE WHEN @OrderBy =''Title DESC'' THEN Title END DESC;
	END
	ELSE
	BEGIN
		SELECT *,
		CASE @AdminOrSuperUser 
			WHEN 0 THEN 0
			WHEN 1 THEN 1
			WHEN 2 THEN
			CASE @EditOnlyAsOwner
				WHEN 0 THEN			
					CASE WHEN EXISTS(SELECT CategoryID FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS c WHERE c.ArticleID = Result.ArticleID AND c.CategoryID IN (SELECT CategoryID FROM @UserEditCategories))
						THEN 1
						ELSE
							CASE WHEN EXISTS(SELECT [ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsArticleRolePermissions] AS arp WHERE arp.ArticleID = Result.ArticleID AND arp.Edit = 1 AND arp.RoleID IN(SELECT RoleID FROM @UserInRoles))
							THEN 1
							ELSE
								CASE WHEN EXISTS (SELECT [ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsArticleUserPermissions] AS aup WHERE aup.ArticleID = Result.ArticleID AND aup.Edit = 1 AND aup.UserID = @UserID)
									THEN 1
									ELSE 0
								END
							END
					END  			
				WHEN 1 THEN
					CASE WHEN EXISTS(SELECT CategoryID FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS c WHERE Result.UserID = @UserID AND c.ArticleID = Result.ArticleID AND c.CategoryID IN (SELECT CategoryID FROM @UserEditCategories))
						THEN 1
						ELSE
							CASE WHEN EXISTS(SELECT [ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsArticleRolePermissions] AS arp WHERE arp.ArticleID = Result.ArticleID AND arp.Edit = 1 AND arp.RoleID IN(SELECT RoleID FROM @UserInRoles))
							THEN 1
							ELSE
								CASE WHEN EXISTS (SELECT [ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsArticleUserPermissions] AS aup WHERE aup.ArticleID = Result.ArticleID AND aup.Edit = 1 AND aup.UserID = @UserID)
									THEN 1
									ELSE 0
								END
							END 
					END
			END
			WHEN 3 THEN
				CASE WHEN EXISTS(SELECT [ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsArticleRolePermissions] AS arp WHERE arp.ArticleID = Result.ArticleID AND arp.Edit = 1 AND arp.RoleID IN(SELECT RoleID FROM @UserInRoles))
					THEN 1
					ELSE
					CASE WHEN EXISTS (SELECT [ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsArticleUserPermissions] AS aup WHERE aup.ArticleID = Result.ArticleID AND aup.Edit = 1 AND aup.UserID = @UserID)
						THEN 1
						ELSE 0
						END
					END 
		END AS ''CanEdit'',
		(SELECT cat.ID, cat.Name, cat.CategoryURL FROM @LocalizedCategories AS Cat INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS c ON c.CategoryID = Cat.ID WHERE c.ArticleID = Result.ArticleID ORDER BY Position FOR XML AUTO, ROOT(''root'')) AS ''CatToShow'',
		 CASE Result.Active
			WHEN 1 THEN 0
			WHEN 0 THEN 1
		 END AS ''Published'',
		 CASE @UserCanApprove
			WHEN 0 THEN 0
			WHEN 1 THEN
				CASE Result.Approved
				 WHEN 1 THEN 0
				 WHEN 0 THEN
					 CASE Result.Active
						WHEN 1 THEN 1
						WHEN 0 THEN 0
					END
				END
		 END AS  ''Approve''
		FROM (SELECT
		 n.[ArticleID],n.[UserID],n.[Title],n.[SubTitle],n.[Summary],n.[Article],n.[ArticleImage],n.[DateAdded],n.[LastModified],n.[PublishDate]
		,n.[ExpireDate],n.[Approved],n.[Featured],n.[NumberOfViews],n.[RatingValue],n.[RatingCount],n.[AllowComments],n.[Active]
		,n.[TitleLink],n.[DetailType],n.[DetailTypeData],n.[DetailsTemplate],n.[DetailsTheme],n.[GalleryPosition],n.[GalleryDisplayType]
		,n.[ShowMainImage],n.[ShowMainImageFront],n.[CommentsTheme],n.[ArticleImageFolder],n.[NumberOfComments]
		,n.[ArticleImageSet],n.[MetaDecription],n.[MetaKeywords],n.[DisplayStyle],n.[DetailTarget]
		,n.[ArticleFromRSS],n.[HasPermissions],n.[EventArticle],n.[DetailMediaType],n.[DetailMediaData],n.[AuthorAliasName],n.[ShowGallery],n.[ArticleGalleryID],n.[MainImageTitle],n.[MainImageDescription], ROW_NUMBER() OVER (ORDER BY 
		CASE WHEN @OrderBy =''PublishDate ASC'' THEN PublishDate END,
		CASE WHEN @OrderBy =''PublishDate DESC'' THEN PublishDate END DESC,
		CASE WHEN @OrderBy =''NumberOfViews ASC'' THEN NumberOfViews END,
		CASE WHEN @OrderBy =''NumberOfViews DESC'' THEN NumberOfViews END DESC,
		CASE WHEN @OrderBy =''RatingValue ASC'' THEN RatingValue END,
		CASE WHEN @OrderBy =''RatingValue DESC'' THEN RatingValue END DESC,
		CASE WHEN @OrderBy =''DateAdded ASC'' THEN DateAdded END,
		CASE WHEN @OrderBy =''DateAdded DESC'' THEN DateAdded END DESC,
		CASE WHEN @OrderBy =''ExpireDate ASC'' THEN ExpireDate END,
		CASE WHEN @OrderBy =''ExpireDate DESC'' THEN ExpireDate END DESC,
		CASE WHEN @OrderBy =''LastModified ASC'' THEN LastModified END,
		CASE WHEN @OrderBy =''LastModified DESC'' THEN LastModified END DESC,
		CASE WHEN @OrderBy =''NumberOfComments ASC'' THEN NumberOfComments END,
		CASE WHEN @OrderBy =''NumberOfComments DESC'' THEN NumberOfComments END DESC,
		CASE WHEN @OrderBy =''Title ASC'' THEN Title END,
		CASE WHEN @OrderBy =''Title DESC'' THEN Title END DESC) AS Kulike
		FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS n WHERE ArticleID IN(
			SELECT DISTINCT na.[ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS na
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS cat ON na.ArticleID = cat.ArticleID
				INNER JOIN @UserViewCategoriesWithFilter AS uvcwf ON uvcwf.CategoryID = cat.CategoryID
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = n.ArticleID
				INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserID, @FilterByDNNGroupID) AS t ON t.seckey = nss.SecurityKey
				INNER JOIN @SearchTable AS st ON(
					(@SearchType = 3 AND (na.SubTitle Like st.Words OR na.Title Like st.Words OR na.CleanArticleData Like st.Words))
					OR
					(@SearchType = 2 AND (na.CleanArticleData Like st.Words))
					OR
					(@SearchType = 1 AND (na.SubTitle Like st.Words OR na.Title Like st.Words))
				)
			WHERE na.PortalID=@PortalID
				AND na.HasPermissions = 0
				AND na.HideDefaultLocale = 0
				AND na.PublishDate <= @CurrentDate AND na.ExpireDate >= @CurrentDate
				AND na.UserID = @FilterByDNNUserID
				AND ((@AdminOrSuperUser = 1) OR ((@UserCanApprove = 1 OR na.Approved=1) AND (na.Active=1 OR na.UserID=@UserID)))
			UNION
			SELECT DISTINCT na.[ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS na
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS cat ON na.ArticleID = cat.ArticleID
				INNER JOIN @UserViewCategoriesWithFilter AS uvcwf ON uvcwf.CategoryID = cat.CategoryID
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = n.ArticleID
				INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserID, @FilterByDNNGroupID) AS t ON t.seckey = nss.SecurityKey
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsTagsItems] AS nt ON na.ArticleID = nt.ArticleID
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsNewTags] AS newt ON nt.TagID = newt.TagID
				INNER JOIN @SearchTable AS st2 ON newt.Name Like st2.Words
			WHERE na.PortalID=@PortalID
				AND na.HasPermissions = 0
				AND na.HideDefaultLocale = 0
				AND na.PublishDate <= @CurrentDate AND na.ExpireDate >= @CurrentDate
				AND na.UserID = @FilterByDNNUserID
				AND ((@AdminOrSuperUser = 1) OR ((@UserCanApprove = 1 OR na.Approved=1) AND (na.Active=1 OR na.UserID=@UserID)))
			UNION ALL
			SELECT na.[ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS na
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsArticleUserPermissions] AS aup ON na.ArticleID = aup.ArticleID
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS cat ON na.ArticleID = cat.ArticleID
				INNER JOIN @FiltredByCategories AS fbc ON fbc.CategoryID = cat.CategoryID
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = n.ArticleID
				INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserID, @FilterByDNNGroupID) AS t ON t.seckey = nss.SecurityKey
				INNER JOIN @SearchTable AS st ON(
					(@SearchType = 3 AND (na.SubTitle Like st.Words OR na.Title Like st.Words OR na.CleanArticleData Like st.Words))
					OR
					(@SearchType = 2 AND (na.CleanArticleData Like st.Words))
					OR
					(@SearchType = 1 AND (na.SubTitle Like st.Words OR na.Title Like st.Words))
				)
			WHERE na.PortalID=@PortalID
				AND na.HasPermissions = 1
				AND na.HideDefaultLocale = 0
				AND na.PublishDate <= @CurrentDate AND na.ExpireDate >= @CurrentDate
				AND na.UserID = @FilterByDNNUserID
				AND ((@AdminOrSuperUser = 1) OR (((@UserID = -1 AND aup.UserID IS NULL) OR (aup.UserID = @UserID))
					AND aup.Show = 1 AND ((@UserCanApprove = 1) OR (na.Approved=1)) AND (na.Active=1 OR na.UserID=@UserID)
				))
			UNION
			SELECT na.[ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS na
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsArticleUserPermissions] AS aup ON na.ArticleID = aup.ArticleID
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS cat ON na.ArticleID = cat.ArticleID
				INNER JOIN @FiltredByCategories AS fbc ON fbc.CategoryID = cat.CategoryID
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = n.ArticleID
				INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserID, @FilterByDNNGroupID) AS t ON t.seckey = nss.SecurityKey
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsTagsItems] AS nt ON na.ArticleID = nt.ArticleID
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsNewTags] AS newt ON nt.TagID = newt.TagID
				INNER JOIN @SearchTable AS st2 ON newt.Name Like st2.Words
			WHERE na.PortalID=@PortalID
				AND na.HasPermissions = 1
				AND na.HideDefaultLocale = 0
				AND na.PublishDate <= @CurrentDate AND na.ExpireDate >= @CurrentDate
				AND na.UserID = @FilterByDNNUserID
				AND ((@AdminOrSuperUser = 1) OR (((@UserID = -1 AND aup.UserID IS NULL) OR (aup.UserID = @UserID))
					AND aup.Show = 1 AND ((@UserCanApprove = 1) OR (na.Approved=1)) AND (na.Active=1 OR na.UserID=@UserID)
				))
			UNION
			SELECT DISTINCT na.[ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS na
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsArticleRolePermissions] AS arp ON na.ArticleID = arp.ArticleID
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS cat ON na.ArticleID = cat.ArticleID
				INNER JOIN @FiltredByCategories AS fbc ON fbc.CategoryID = cat.CategoryID
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = n.ArticleID
				INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserID, @FilterByDNNGroupID) AS t ON t.seckey = nss.SecurityKey
				INNER JOIN @SearchTable AS st ON(
					(@SearchType = 3 AND (na.SubTitle Like st.Words OR na.Title Like st.Words OR na.CleanArticleData Like st.Words))
					OR
					(@SearchType = 2 AND (na.CleanArticleData Like st.Words))
					OR
					(@SearchType = 1 AND (na.SubTitle Like st.Words OR na.Title Like st.Words))
				)
			WHERE na.PortalID=@PortalID
				AND na.HasPermissions = 1
				AND na.HideDefaultLocale = 0
				AND na.PublishDate <= @CurrentDate AND na.ExpireDate >= @CurrentDate
				AND na.UserID = @FilterByDNNUserID
				AND ((@AdminOrSuperUser = 1) OR (((@UserCanApprove = 1) OR (na.Approved=1))
					AND (na.Active=1 OR na.UserID=@UserID) AND arp.Show = 1 AND arp.RoleID IN (SELECT [RoleID] FROM @UserInRoles)
				))
			UNION
			SELECT DISTINCT na.[ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS na
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsArticleRolePermissions] AS arp ON na.ArticleID = arp.ArticleID
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS cat ON na.ArticleID = cat.ArticleID
				INNER JOIN @FiltredByCategories AS fbc ON fbc.CategoryID = cat.CategoryID
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = n.ArticleID
				INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserID, @FilterByDNNGroupID) AS t ON t.seckey = nss.SecurityKey
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsTagsItems] AS nt ON na.ArticleID = nt.ArticleID
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsNewTags] AS newt ON nt.TagID = newt.TagID
				INNER JOIN @SearchTable AS st2 ON newt.Name Like st2.Words
			WHERE na.PortalID=@PortalID
				AND na.HasPermissions = 1
				AND na.HideDefaultLocale = 0
				AND na.PublishDate <= @CurrentDate AND na.ExpireDate >= @CurrentDate
				AND na.UserID = @FilterByDNNUserID
				AND ((@AdminOrSuperUser = 1) OR (((@UserCanApprove = 1) OR (na.Approved=1))
					AND (na.Active=1 OR na.UserID=@UserID) AND arp.Show = 1 AND arp.RoleID IN (SELECT [RoleID] FROM @UserInRoles)
				))
			)
		) AS Result WHERE Kulike BETWEEN @ItemsFrom AND @ItemsTo ORDER BY
			CASE WHEN @OrderBy =''PublishDate ASC'' THEN PublishDate END,
			CASE WHEN @OrderBy =''PublishDate DESC'' THEN PublishDate END DESC,
			CASE WHEN @OrderBy =''NumberOfViews ASC'' THEN NumberOfViews END,
			CASE WHEN @OrderBy =''NumberOfViews DESC'' THEN NumberOfViews END DESC,
			CASE WHEN @OrderBy =''RatingValue ASC'' THEN RatingValue END,
			CASE WHEN @OrderBy =''RatingValue DESC'' THEN RatingValue END DESC,
			CASE WHEN @OrderBy =''DateAdded ASC'' THEN DateAdded END,
			CASE WHEN @OrderBy =''DateAdded DESC'' THEN DateAdded END DESC,
			CASE WHEN @OrderBy =''ExpireDate ASC'' THEN ExpireDate END,
			CASE WHEN @OrderBy =''ExpireDate DESC'' THEN ExpireDate END DESC,
			CASE WHEN @OrderBy =''LastModified ASC'' THEN LastModified END,
			CASE WHEN @OrderBy =''LastModified DESC'' THEN LastModified END DESC,
			CASE WHEN @OrderBy =''NumberOfComments ASC'' THEN NumberOfComments END,
			CASE WHEN @OrderBy =''NumberOfComments DESC'' THEN NumberOfComments END DESC,
			CASE WHEN @OrderBy =''Title ASC'' THEN Title END,
			CASE WHEN @OrderBy =''Title DESC'' THEN Title END DESC;
	END
END' 
END
GO
/****** Object:  StoredProcedure {databaseOwner}[{objectQualifier}EasyDNNNewsGetItemsForTreeView]    Script Date: 06/24/2013 16:39:07 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'{databaseOwner}[{objectQualifier}EasyDNNNewsGetItemsForTreeView]') AND type in (N'P', N'PC'))
BEGIN
EXEC dbo.sp_executesql @statement = N'CREATE PROCEDURE {databaseOwner}[{objectQualifier}EasyDNNNewsGetItemsForTreeView]
	@PortalID int,
	@UserID int,
	@MenuModuleID int,
	@DefaultTabID int,
    @DefaultModuleID int,
	@CurrentDate DateTime,
	@AdminOrSuperUser bit  = 0,
	@CountItems bit = 0,
	@IsSocialInstance bit = 0,
	@FilterByDNNUserID int = 0, -- filter by some UserID / not current user ID
	@FilterByDNNGroupID int = 0, -- filter by DNNGroup/RoleID / not profile GroupID
	@LocaleCode nvarchar(20) = '''',	
	@ShowAllAuthors bit = 1, -- filter postavka menija
	@CategoryFilterType tinyint = 0, --0 All categories, 1 - Selection, 2 - AutoAdd
	@HideUnlocalizedItems bit = 0,
	@PermissionSettingsSource tinyint = 0, -- None, 1 - portal, 2 - module
	@PermissionsModuleID int = 0 -- NewsModuleID
AS
SET NOCOUNT ON;
DECLARE @UserCanApprove bit;
SET @UserCanApprove = 0;
DECLARE @UserInRoles table (RoleID int NOT NULL PRIMARY KEY);
INSERT INTO @UserInRoles SELECT DISTINCT ur.[RoleID] FROM {databaseOwner}[{objectQualifier}UserRoles] AS ur INNER JOIN {databaseOwner}[{objectQualifier}Roles] AS r ON ur.RoleID = r.RoleID WHERE ur.UserID = @UserID AND r.PortalID = @PortalID AND (ur.ExpiryDate IS NULL OR ur.ExpiryDate > GETUTCDATE()) AND (ur.EffectiveDate IS NULL OR ur.EffectiveDate < GETUTCDATE());
DECLARE @UserViewCategories table (CategoryID int NOT NULL PRIMARY KEY); -- all categories which user can see based on permissions
DECLARE @UserViewCategoriesWithFilter table (CategoryID int NOT NULL PRIMARY KEY); -- all categories which user can see based on permissions and Module filter

DECLARE @SettingsSource bit; SET @SettingsSource = 1;
IF @AdminOrSuperUser = 1 OR @PermissionSettingsSource = 0
BEGIN
	INSERT INTO @UserViewCategories SELECT [CategoryID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryList] WHERE PortalID = @PortalID;
END
ELSE IF @UserID = -1
BEGIN	
	IF @PermissionSettingsSource = 1 -- by portal
	BEGIN
		IF EXISTS (SELECT ShowAllCategories FROM {databaseOwner}[{objectQualifier}EasyDNNNewsRolePremissionSettings] as rps WHERE rps.PortalID = @PortalID  AND rps.ModuleID IS NULL AND rps.RoleID IS NULL AND rps.ShowAllCategories = 1)
		BEGIN
			INSERT INTO @UserViewCategories SELECT [CategoryID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryList] WHERE PortalID = @PortalID;
		END
		ELSE
		BEGIN
			INSERT INTO @UserViewCategories
			SELECT rpsc.[CategoryID] FROM  {databaseOwner}[{objectQualifier}EasyDNNNewsRolePremissionsShowCategories] as rpsc 
			INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsRolePremissionSettings] as rps ON rps.PremissionSettingsID = rpsc.PremissionSettingsID
			WHERE rps.PortalID = @PortalID  AND rps.ModuleID IS NULL AND rps.RoleID IS NULL;
		END
	END
	ELSE -- by module
	BEGIN
		SELECT @SettingsSource = PermissionsPMSource FROM {databaseOwner}[{objectQualifier}EasyDNNNewsModuleSettings] WHERE ModuleID = @PermissionsModuleID;
		IF @SettingsSource = 1
		BEGIN
			IF EXISTS (SELECT ShowAllCategories FROM {databaseOwner}[{objectQualifier}EasyDNNNewsRolePremissionSettings] as rps WHERE rps.PortalID = @PortalID  AND rps.ModuleID IS NULL AND rps.RoleID IS NULL AND rps.ShowAllCategories = 1)
			BEGIN
				INSERT INTO @UserViewCategories SELECT [CategoryID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryList] WHERE PortalID = @PortalID;
			END
			ELSE
			BEGIN
				INSERT INTO @UserViewCategories
				SELECT rpsc.[CategoryID] FROM  {databaseOwner}[{objectQualifier}EasyDNNNewsRolePremissionsShowCategories] as rpsc 
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsRolePremissionSettings] as rps ON rps.PremissionSettingsID = rpsc.PremissionSettingsID
				WHERE rps.PortalID = @PortalID  AND rps.ModuleID IS NULL AND rps.RoleID IS NULL;
			END
		END
		ELSE
		BEGIN
			IF EXISTS (SELECT ShowAllCategories FROM {databaseOwner}[{objectQualifier}EasyDNNNewsRolePremissionSettings] as rps WHERE rps.PortalID = @PortalID AND rps.ModuleID = @PermissionsModuleID AND rps.RoleID IS NULL AND rps.ShowAllCategories = 1)
			BEGIN
				INSERT INTO @UserViewCategories SELECT [CategoryID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryList] WHERE PortalID = @PortalID;
			END
			ELSE
			BEGIN
				INSERT INTO @UserViewCategories
				SELECT rpsc.[CategoryID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsRolePremissionsShowCategories] as rpsc
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsRolePremissionSettings] as rps ON rps.PremissionSettingsID = rpsc.PremissionSettingsID
				WHERE rps.PortalID = @PortalID AND rps.ModuleID = @PermissionsModuleID AND rps.RoleID IS NULL;
			END
		END
	END
END
ELSE -- registrirani korisnik
BEGIN
	IF @PermissionSettingsSource = 1 -- by portal
	BEGIN
		IF EXISTS (
				SELECT TOP (1) ShowAllCategories FROM {databaseOwner}[{objectQualifier}EasyDNNNewsRolePremissionSettings] as rps
					INNER JOIN @UserInRoles as uir ON rps.RoleID = uir.RoleID
					WHERE rps.PortalID = @PortalID AND rps.ModuleID IS NULL AND rps.ShowAllCategories = 1
				UNION
				SELECT ShowAllCategories FROM {databaseOwner}[{objectQualifier}EasyDNNNewsUserPremissionSettings] as ups
				WHERE ups.UserID = @UserID AND ups.PortalID = @PortalID AND ups.ModuleID IS NULL AND ups.ShowAllCategories = 1
		)
		BEGIN
			INSERT INTO @UserViewCategories SELECT [CategoryID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryList] WHERE PortalID = @PortalID;
		END
		ELSE
		BEGIN
			INSERT INTO @UserViewCategories
			SELECT rpsc.[CategoryID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsRolePremissionsShowCategories] as rpsc
			INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsRolePremissionSettings] as rps ON rps.PremissionSettingsID = rpsc.PremissionSettingsID
			INNER JOIN @UserInRoles as uir ON rps.RoleID = uir.RoleID
			WHERE rps.PortalID = @PortalID AND rps.ModuleID IS NULL GROUP BY rpsc.[CategoryID]
			UNION
			SELECT upsc.[CategoryID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsUserPremissionsShowCategories] as upsc
			INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsUserPremissionSettings] as ups ON ups.PremissionSettingsID = upsc.PremissionSettingsID
			WHERE ups.UserID = @UserID AND ups.PortalID = @PortalID AND ups.ModuleID IS NULL GROUP BY upsc.[CategoryID];
		END
	END
	ELSE -- by module
	BEGIN
		SELECT @SettingsSource = PermissionsPMSource FROM {databaseOwner}[{objectQualifier}EasyDNNNewsModuleSettings] WHERE ModuleID = @PermissionsModuleID;
		IF @SettingsSource = 1
		BEGIN
			IF EXISTS (
				SELECT TOP (1) ShowAllCategories FROM {databaseOwner}[{objectQualifier}EasyDNNNewsRolePremissionSettings] as rps
					INNER JOIN @UserInRoles as uir ON rps.RoleID = uir.RoleID
					WHERE rps.PortalID = @PortalID AND rps.ModuleID IS NULL AND rps.ShowAllCategories = 1
				UNION
				SELECT ShowAllCategories FROM {databaseOwner}[{objectQualifier}EasyDNNNewsUserPremissionSettings] as ups
				WHERE ups.UserID = @UserID AND ups.PortalID = @PortalID AND ups.ModuleID IS NULL AND ups.ShowAllCategories = 1
			)
			BEGIN
				INSERT INTO @UserViewCategories SELECT [CategoryID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryList] WHERE PortalID = @PortalID;
			END
			ELSE
			BEGIN
				INSERT INTO @UserViewCategories
				SELECT rpsc.[CategoryID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsRolePremissionsShowCategories] as rpsc
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsRolePremissionSettings] as rps ON rps.PremissionSettingsID = rpsc.PremissionSettingsID
				INNER JOIN @UserInRoles as uir ON rps.RoleID = uir.RoleID
				WHERE rps.PortalID = @PortalID AND rps.ModuleID IS NULL GROUP BY rpsc.[CategoryID]
				UNION
				SELECT upsc.[CategoryID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsUserPremissionsShowCategories] as upsc
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsUserPremissionSettings] as ups ON ups.PremissionSettingsID = upsc.PremissionSettingsID
				WHERE ups.UserID = @UserID AND ups.PortalID = @PortalID AND ups.ModuleID IS NULL GROUP BY upsc.[CategoryID];
			END
		END
		ELSE
		BEGIN
			IF EXISTS (
				SELECT TOP (1) ShowAllCategories FROM {databaseOwner}[{objectQualifier}EasyDNNNewsRolePremissionSettings] as rps
					INNER JOIN @UserInRoles as uir ON rps.RoleID = uir.RoleID
					WHERE rps.PortalID = @PortalID AND rps.ModuleID = @PermissionsModuleID AND rps.ShowAllCategories = 1
				UNION
				SELECT ShowAllCategories FROM {databaseOwner}[{objectQualifier}EasyDNNNewsUserPremissionSettings] as ups
				WHERE ups.UserID = @UserID AND ups.PortalID = @PortalID AND ups.ModuleID = @PermissionsModuleID AND ups.ShowAllCategories = 1
			)
			BEGIN
				INSERT INTO @UserViewCategories SELECT [CategoryID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryList] WHERE PortalID = @PortalID;
			END
			ELSE
			BEGIN
				INSERT INTO @UserViewCategories
				SELECT rpsc.[CategoryID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsRolePremissionsShowCategories] as rpsc
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsRolePremissionSettings] as rps ON rps.PremissionSettingsID = rpsc.PremissionSettingsID
				INNER JOIN @UserInRoles as uir ON rps.RoleID = uir.RoleID
				WHERE rps.PortalID = @PortalID AND rps.ModuleID = @PermissionsModuleID GROUP BY rpsc.[CategoryID]
				UNION
				SELECT upsc.[CategoryID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsUserPremissionsShowCategories] as upsc
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsUserPremissionSettings] as ups ON ups.PremissionSettingsID = upsc.PremissionSettingsID
				WHERE ups.UserID = @UserID AND ups.PortalID = @PortalID AND ups.ModuleID = @PermissionsModuleID GROUP BY upsc.[CategoryID];
			END
		END
	END
END

IF @CategoryFilterType = 0 -- 0 All categories
BEGIN
	INSERT INTO @UserViewCategoriesWithFilter SELECT [CategoryID] FROM @UserViewCategories;
END
ELSE IF @CategoryFilterType = 1 -- 1 - Selection
BEGIN
		INSERT INTO @UserViewCategoriesWithFilter 
		SELECT cl.[CategoryID] FROM @UserViewCategories as cl
		INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsModuleCategoryItems] AS mci ON mci.CategoryID = cl.CategoryID AND mci.ModuleID = @MenuModuleID
END
ELSE IF @CategoryFilterType = 2 -- 2 - AutoAdd
BEGIN
	WITH hierarchy AS(
		SELECT [CategoryID], [ParentCategory]
		FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryList] AS cl
		WHERE (cl.ParentCategory IN (SELECT [CategoryID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsModuleCategoryItems] WHERE ModuleID = @MenuModuleID) OR cl.CategoryID IN (SELECT [CategoryID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsModuleCategoryItems] WHERE ModuleID = @MenuModuleID)) AND PortalID = @PortalID
		UNION ALL
		SELECT c.[CategoryID], c.[ParentCategory]
		FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryList] AS c INNER JOIN hierarchy AS p ON c.ParentCategory = p.CategoryID WHERE c.PortalID = @PortalID
		)
	INSERT INTO @UserViewCategoriesWithFilter SELECT DISTINCT uvc.CategoryID FROM hierarchy as nfc INNER JOIN @UserViewCategories as uvc ON uvc.CategoryID = nfc.CategoryID;
END

DECLARE @FilterBySocialGroup bit;
SET @FilterBySocialGroup = 0;
DECLARE @FilterAuthorOrAuthors bit;
SET @FilterAuthorOrAuthors = 0;

DECLARE @TempAuthorsIDList table (UserID int NOT NULL PRIMARY KEY);
IF @IsSocialInstance = 1
	BEGIN
		IF @FilterByDNNGroupID <> 0
		BEGIN	
			SET @FilterBySocialGroup = 1;
		END
	END
ELSE
BEGIN
	IF @ShowAllAuthors = 0
	BEGIN
		SET @FilterAuthorOrAuthors = 1;
		INSERT INTO @TempAuthorsIDList
		SELECT [UserID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsModuleAuthorsItems] AS mai WHERE mai.ModuleID = @MenuModuleID
		UNION 
		SELECT [UserID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsAuthorProfile] AS ap 
			INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsAutorGroupItems] AS agi ON ap.AuthorProfileID = agi.AuthorProfileID
			INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsModuleGroupItems] AS mgi ON mgi.GroupID = agi.GroupID
			WHERE mgi.ModuleID = @MenuModuleID
	END
END

DECLARE @tempMenuCats TABLE(
	[CategoryID] int NOT NULL PRIMARY KEY,
	[PortalID] int,
	[CategoryName] nvarchar(200),
	[Position] int,
	[ParentCategory] int,
	[Level] int,
	[CategoryURL] nvarchar(1500),
	[CategoryImage] nvarchar(1500),
	[CategoryText] ntext,[Show] bit)

IF @LocaleCode <> ''''
BEGIN
	WITH LocCategories([CategoryID],[PortalID],[CategoryName],[Position],[ParentCategory],[Level],[CategoryURL],[CategoryImage],[CategoryText]) AS 
	(
		SELECT Cat.[CategoryID],Cat.[PortalID],cl.[Title] AS CategoryName,Cat.[Position],Cat.[ParentCategory],Cat.[Level],Cat.[CategoryURL],Cat.[CategoryImage],cl.[CategoryText] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryList] AS Cat INNER JOIN @UserViewCategoriesWithFilter cwf ON cwf.CategoryID = Cat.CategoryID INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryLocalization] AS cl ON cwf.CategoryID = cl.CategoryID WHERE Cat.PortalID = @PortalID AND cl.LocaleCode = @LocaleCode
	),
	NotLocCategories([CategoryID],[PortalID],[CategoryName],[Position],[ParentCategory],[Level],[CategoryURL],[CategoryImage],[CategoryText]) AS 
	(
		SELECT Cat.* FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryList] AS Cat INNER JOIN @UserViewCategoriesWithFilter cwf ON cwf.CategoryID = Cat.CategoryID WHERE Cat.PortalID = @PortalID AND Cat.CategoryID NOT IN (SELECT lctemp.CategoryID FROM LocCategories as lctemp)
	)
	INSERT INTO @tempMenuCats SELECT [CategoryID],[PortalID],[CategoryName],[Position],[ParentCategory],[Level],[CategoryURL],[CategoryImage],[CategoryText],''1'' AS Show FROM (SELECT * FROM LocCategories UNION ALL SELECT * FROM NotLocCategories) as result
END
ELSE
BEGIN
	
INSERT @tempMenuCats SELECT
 [CategoryID],[PortalID],[CategoryName],[Position],[ParentCategory],[Level],[CategoryURL],[CategoryImage],[CategoryText],''1'' AS Show
 FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryList] AS cat WHERE cat.CategoryID in (SELECT CategoryID FROM @UserViewCategoriesWithFilter) AND PortalID = @PortalID;

END

INSERT @tempMenuCats SELECT
 [CategoryID],[PortalID],[CategoryName],[Position],[ParentCategory],[Level],[CategoryURL],[CategoryImage],[CategoryText],''0'' AS Show
  FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryList] WHERE PortalID = @PortalID AND CategoryID not in (SELECT CategoryID FROM @UserViewCategoriesWithFilter);
  
SELECT TOP 1 @DefaultTabID = TabID FROM {databaseOwner}[{objectQualifier}TabModules] WHERE ModuleID = @DefaultModuleID;

IF @CountItems = 0
BEGIN 
	SELECT ncl.[CategoryID],ncl.[PortalID],ncl.[CategoryName],ncl.[Position],ncl.[ParentCategory],ncl.[Level],ncl.[CategoryURL],ncl.[CategoryImage],ncl.[CategoryText],ncl.Show,
	0 AS ''Count'',
		CASE WHEN cl.[NewsModuleID] IS NULL THEN @DefaultModuleID ELSE cl.[NewsModuleID] END AS NewsModuleID,
		CASE WHEN tm.[TabID] IS NULL THEN @DefaultTabID ELSE tm.[TabID] END AS TabID
	FROM @tempMenuCats as ncl LEFT OUTER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryLink] as cl
	ON ncl.CategoryID = cl.CategoryID AND cl.[SourceModuleID] = @MenuModuleID
	LEFT OUTER JOIN {databaseOwner}[{objectQualifier}TabModules] AS tm ON cl.NewsModuleID = tm.ModuleID
	ORDER BY Position ASC, ParentCategory ASC;
END
ELSE
BEGIN

IF @HideUnlocalizedItems = 0
BEGIN

IF @IsSocialInstance = 0
BEGIN
SELECT *,
	CASE Show
	 WHEN 0 THEN 0
	 WHEN 1 THEN	
		CASE @AdminOrSuperUser
		WHEN 1 THEN
		(
		 SELECT count(n.[ArticleID]) as cnt FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS n
			 INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS c ON n.ArticleID = c.ArticleID AND c.CategoryID = Result.CategoryID
			 WHERE n.PublishDate <= @CurrentDate
			 AND n.ExpireDate >= @CurrentDate
			 AND n.PortalID = @PortalID
			 AND((@FilterAuthorOrAuthors = 1 AND n.UserID IN (SELECT UserID FROM @TempAuthorsIDList)) OR (@FilterAuthorOrAuthors = 0))			 
		)
		WHEN 0 THEN
		(
		SELECT (
					(
						SELECT count(n.[ArticleID]) as cnt FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS n
						 INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS c ON n.ArticleID = c.ArticleID AND c.CategoryID = Result.CategoryID
						 WHERE n.PublishDate <= @CurrentDate
							 AND n.ExpireDate >= @CurrentDate
							 AND ((@UserCanApprove = 1) OR (n.Approved = 1))
							 AND ((@AdminOrSuperUser = 1) OR (n.Active = 1 OR n.UserID=@UserID))
							 AND n.HasPermissions = 0
							 AND n.PortalID = @PortalID
							 AND((@FilterAuthorOrAuthors = 1 AND n.UserID IN (SELECT UserID FROM @TempAuthorsIDList)) OR (@FilterAuthorOrAuthors = 0))
					 )
					 +
					(
						SELECT count(aup.[ArticleID]) FROM {databaseOwner}[{objectQualifier}EasyDNNNewsArticleUserPermissions] AS aup
						 INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS c ON c.ArticleID = aup.ArticleID AND c.CategoryID = Result.CategoryID
						 INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNews] AS n ON n.ArticleID = aup.ArticleID
						 WHERE ((@UserID = -1 AND aup.UserID IS NULL) OR (aup.UserID = @UserID))
					 		AND n.PublishDate <= @CurrentDate
							AND n.ExpireDate >= @CurrentDate
							AND ((@UserCanApprove = 1) OR (n.Approved = 1))
							AND ((@AdminOrSuperUser = 1) OR (n.Active = 1 OR n.UserID=@UserID))
							AND n.HasPermissions = 1
							AND n.PortalID = @PortalID
							AND((@FilterAuthorOrAuthors = 1 AND n.UserID IN (SELECT UserID FROM @TempAuthorsIDList)) OR (@FilterAuthorOrAuthors = 0))
					 )	 
					+ 
					(
						CASE @UserID
						WHEN -1 THEN 0
						ELSE			
					(
						SELECT count(PerRoles.[ArticleID]) FROM 
						
						(SELECT DISTINCT arp.[ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsArticleRolePermissions] as arp
						 INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS c ON c.ArticleID = arp.ArticleID AND c.CategoryID = Result.CategoryID
						 WHERE arp.RoleID IN (SELECT RoleID FROM @UserInRoles)
						  AND arp.ArticleID NOT IN (
							SELECT aup.[ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsArticleUserPermissions] AS aup
							INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS c ON c.ArticleID = aup.ArticleID AND c.CategoryID = Result.CategoryID
							INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNews] AS n ON n.ArticleID = aup.ArticleID
								WHERE aup.UserID = @UserID
					 				AND n.PublishDate <= @CurrentDate
									AND n.ExpireDate >= @CurrentDate
									AND ((@UserCanApprove = 1) OR (n.Approved = 1))
									AND ((@AdminOrSuperUser = 1) OR (n.Active = 1 OR n.UserID=@UserID))
									AND n.HasPermissions = 1
									AND n.PortalID = @PortalID
									AND((@FilterAuthorOrAuthors = 1 AND n.UserID IN (SELECT UserID FROM @TempAuthorsIDList)) OR (@FilterAuthorOrAuthors = 0))
							)
						 ) as PerRoles 
						 INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNews] AS n ON n.ArticleID = PerRoles.ArticleID
						 WHERE n.PublishDate <= @CurrentDate
						 AND n.ExpireDate >= @CurrentDate
						 AND ((@UserCanApprove = 1) OR (n.Approved = 1))
						 AND ((@AdminOrSuperUser = 1) OR (n.Active = 1 OR n.UserID=@UserID))
						 AND n.HasPermissions = 1
						 AND n.PortalID = @PortalID
						 AND((@FilterAuthorOrAuthors = 1 AND n.UserID IN (SELECT UserID FROM @TempAuthorsIDList)) OR (@FilterAuthorOrAuthors = 0))
						 )
			END
					)
				)
		)
		END		
	 END AS ''Count''
	FROM 
	(SELECT 
	ncl.[CategoryID],
	ncl.[PortalID],
	ncl.[CategoryName],
	ncl.[Position],
	ncl.[ParentCategory],
	ncl.[Level],
	ncl.[CategoryURL],
	ncl.[CategoryImage],
	ncl.[CategoryText],
	ncl.Show,
		CASE WHEN cl.[NewsModuleID] IS NULL THEN @DefaultModuleID ELSE cl.[NewsModuleID] END AS NewsModuleID,
		CASE WHEN tm.[TabID] IS NULL THEN @DefaultTabID ELSE tm.[TabID] END AS TabID
	FROM @tempMenuCats as ncl LEFT OUTER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryLink] as cl
	ON ncl.CategoryID = cl.CategoryID AND cl.[SourceModuleID] = @MenuModuleID
	LEFT OUTER JOIN {databaseOwner}[{objectQualifier}TabModules] AS tm ON cl.NewsModuleID = tm.ModuleID) as Result
	ORDER BY Position ASC, ParentCategory ASC	
END
ELSE IF @FilterBySocialGroup = 1
BEGIN
SELECT *,
	CASE Show
	 WHEN 0 THEN 0
	 WHEN 1 THEN	
		CASE @AdminOrSuperUser
		WHEN 1 THEN
		(
		 SELECT count(n.[ArticleID]) as cnt FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS n
			 INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS c ON n.ArticleID = c.ArticleID AND c.CategoryID = Result.CategoryID
			 INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = n.ArticleID
			 INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialGroupItems] AS sgi ON sgi.ArticleID = n.ArticleID AND sgi.RoleID = @FilterByDNNGroupID
			 INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserID, @FilterByDNNGroupID) as t ON t.seckey = nss.SecurityKey
			 WHERE  n.PublishDate <= @CurrentDate
				AND n.ExpireDate >= @CurrentDate
				AND n.PortalID = @PortalID
		)
		WHEN 0 THEN
		(
		SELECT (
					(
						SELECT count(n.[ArticleID]) as cnt FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS n
						INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS c ON n.ArticleID = c.ArticleID AND c.CategoryID = Result.CategoryID
						INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = n.ArticleID
						INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialGroupItems] AS sgi ON sgi.ArticleID = n.ArticleID AND sgi.RoleID = @FilterByDNNGroupID
						INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserID, @FilterByDNNGroupID) as t ON t.seckey = nss.SecurityKey
						 WHERE n.PublishDate <= @CurrentDate
							 AND n.ExpireDate >= @CurrentDate
							 AND ((@UserCanApprove = 1) OR (n.Approved = 1))
							 AND ((@AdminOrSuperUser = 1) OR (n.Active = 1 OR n.UserID=@UserID))
							 AND n.HasPermissions = 0
							 AND n.PortalID = @PortalID
					 )
					 +
					(
						SELECT count(aup.[ArticleID]) FROM {databaseOwner}[{objectQualifier}EasyDNNNewsArticleUserPermissions] AS aup
						 INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS c ON c.ArticleID = aup.ArticleID AND c.CategoryID = Result.CategoryID
						 INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNews] AS n ON n.ArticleID = aup.ArticleID
						 INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = n.ArticleID
						 INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialGroupItems] AS sgi ON sgi.ArticleID = n.ArticleID AND sgi.RoleID = @FilterByDNNGroupID
						 INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserID, @FilterByDNNGroupID) as t ON t.seckey = nss.SecurityKey
						 WHERE ((@UserID = -1 AND aup.UserID IS NULL) OR (aup.UserID = @UserID))
					 		AND n.PublishDate <= @CurrentDate
							AND n.ExpireDate >= @CurrentDate
							AND ((@UserCanApprove = 1) OR (n.Approved = 1))
							AND ((@AdminOrSuperUser = 1) OR (n.Active = 1 OR n.UserID=@UserID))
							AND n.HasPermissions = 1
							AND n.PortalID = @PortalID
					 )	 
					+ 
					(
						CASE @UserID
						WHEN -1 THEN 0
						ELSE			
					(
						SELECT count(PerRoles.[ArticleID]) FROM 
						
						(SELECT DISTINCT arp.[ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsArticleRolePermissions] as arp
						 INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS c ON c.ArticleID = arp.ArticleID AND c.CategoryID = Result.CategoryID
						 WHERE arp.RoleID IN (SELECT RoleID FROM @UserInRoles)
						  AND arp.ArticleID NOT IN (
							SELECT aup.[ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsArticleUserPermissions] AS aup
							INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS c ON c.ArticleID = aup.ArticleID AND c.CategoryID = Result.CategoryID
							INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNews] AS n ON n.ArticleID = aup.ArticleID
							INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = n.ArticleID
							INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialGroupItems] AS sgi ON sgi.ArticleID = n.ArticleID AND sgi.RoleID = @FilterByDNNGroupID
							INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserID, @FilterByDNNGroupID) as t ON t.seckey = nss.SecurityKey
								WHERE aup.UserID = @UserID
					 				AND n.PublishDate <= @CurrentDate
									AND n.ExpireDate >= @CurrentDate
									AND ((@UserCanApprove = 1) OR (n.Approved = 1))
									AND ((@AdminOrSuperUser = 1) OR (n.Active = 1 OR n.UserID=@UserID))
									AND n.HasPermissions = 1
									AND n.PortalID = @PortalID
							)
						 ) as PerRoles 
						 INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNews] AS n ON n.ArticleID = PerRoles.ArticleID
						 WHERE n.PublishDate <= @CurrentDate
						 AND n.ExpireDate >= @CurrentDate
						 AND ((@UserCanApprove = 1) OR (n.Approved = 1))
						 AND ((@AdminOrSuperUser = 1) OR (n.Active = 1 OR n.UserID=@UserID))
						 AND n.HasPermissions = 1
						 AND n.PortalID = @PortalID
						 )
			END
					)
				)
		)
		END		
	 END AS ''Count''
	FROM 
	(SELECT 
	ncl.[CategoryID],
	ncl.[PortalID],
	ncl.[CategoryName],
	ncl.[Position],
	ncl.[ParentCategory],
	ncl.[Level],
	ncl.[CategoryURL],
	ncl.[CategoryImage],
	ncl.[CategoryText],
	ncl.Show,
		CASE WHEN cl.[NewsModuleID] IS NULL THEN @DefaultModuleID ELSE cl.[NewsModuleID] END AS NewsModuleID,
		CASE WHEN tm.[TabID] IS NULL THEN @DefaultTabID ELSE tm.[TabID] END AS TabID
	FROM @tempMenuCats as ncl LEFT OUTER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryLink] as cl
	ON ncl.CategoryID = cl.CategoryID AND cl.[SourceModuleID] = @MenuModuleID
	LEFT OUTER JOIN {databaseOwner}[{objectQualifier}TabModules] AS tm ON cl.NewsModuleID = tm.ModuleID) as Result
	ORDER BY Position ASC, ParentCategory ASC	
END
ELSE IF @FilterByDNNUserID <> 0
BEGIN
SELECT *,
	CASE Show
	 WHEN 0 THEN 0
	 WHEN 1 THEN	
		CASE @AdminOrSuperUser
		WHEN 1 THEN
		(
		 SELECT count(n.[ArticleID]) as cnt FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS n
		 
			 INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS c ON n.ArticleID = c.ArticleID
			 INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = n.ArticleID AND c.CategoryID = Result.CategoryID
			 INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserID, @FilterByDNNGroupID) as t ON t.seckey = nss.SecurityKey
			 WHERE  n.PublishDate <= @CurrentDate
				AND n.ExpireDate >= @CurrentDate
				AND n.PortalID = @PortalID
				AND n.UserID = @FilterByDNNUserID 
		)
		WHEN 0 THEN
		(
		SELECT (
					(
						SELECT count(n.[ArticleID]) as cnt FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS n
						 INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS c ON n.ArticleID = c.ArticleID AND c.CategoryID = Result.CategoryID
						 INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = n.ArticleID
						 INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserID, @FilterByDNNGroupID) as t ON t.seckey = nss.SecurityKey
						 WHERE n.PublishDate <= @CurrentDate
							 AND n.ExpireDate >= @CurrentDate
							 AND ((@UserCanApprove = 1) OR (n.Approved = 1))
							 AND ((@AdminOrSuperUser = 1) OR (n.Active = 1 OR n.UserID=@UserID))
							 AND n.HasPermissions = 0
							 AND n.PortalID = @PortalID
							 AND n.UserID = @FilterByDNNUserID
					)
					 +
					(
						SELECT count(aup.[ArticleID]) FROM {databaseOwner}[{objectQualifier}EasyDNNNewsArticleUserPermissions] AS aup
						 INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS c ON c.ArticleID = aup.ArticleID AND c.CategoryID = Result.CategoryID
						 INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNews] AS n ON n.ArticleID = aup.ArticleID
						 INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = n.ArticleID
						 INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserID, @FilterByDNNGroupID) as t ON t.seckey = nss.SecurityKey
						 WHERE ((@UserID = -1 AND aup.UserID IS NULL) OR (aup.UserID = @UserID))
					 		AND n.PublishDate <= @CurrentDate
							AND n.ExpireDate >= @CurrentDate
							AND ((@UserCanApprove = 1) OR (n.Approved = 1))
							AND ((@AdminOrSuperUser = 1) OR (n.Active = 1 OR n.UserID=@UserID))
							AND n.HasPermissions = 1
							AND n.PortalID = @PortalID
							AND n.UserID = @FilterByDNNUserID 					 )	 
					+ 
					(
						CASE @UserID
						WHEN -1 THEN 0
						ELSE			
					(
						SELECT count(PerRoles.[ArticleID]) FROM 
						
						(SELECT DISTINCT arp.[ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsArticleRolePermissions] as arp
						 INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS c ON c.ArticleID = arp.ArticleID AND c.CategoryID = Result.CategoryID
						 WHERE arp.RoleID IN (SELECT RoleID FROM @UserInRoles)
						  AND arp.ArticleID NOT IN (
							SELECT aup.[ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsArticleUserPermissions] AS aup
							INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS c ON c.ArticleID = aup.ArticleID AND c.CategoryID = Result.CategoryID
							INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNews] AS n ON n.ArticleID = aup.ArticleID
							INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = n.ArticleID
							INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserID, @FilterByDNNGroupID) as t ON t.seckey = nss.SecurityKey
								WHERE aup.UserID = @UserID
					 				AND n.PublishDate <= @CurrentDate
									AND n.ExpireDate >= @CurrentDate
									AND ((@UserCanApprove = 1) OR (n.Approved = 1))
									AND ((@AdminOrSuperUser = 1) OR (n.Active = 1 OR n.UserID=@UserID))
									AND n.HasPermissions = 1
									AND n.PortalID = @PortalID
									AND n.UserID = @FilterByDNNUserID 
			  				)
						 ) as PerRoles 
						 INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNews] AS n ON n.ArticleID = PerRoles.ArticleID
						 WHERE n.PublishDate <= @CurrentDate
						 AND n.ExpireDate >= @CurrentDate
						 AND ((@UserCanApprove = 1) OR (n.Approved = 1))
						 AND ((@AdminOrSuperUser = 1) OR (n.Active = 1 OR n.UserID=@UserID))
						 AND n.HasPermissions = 1
						 AND n.PortalID = @PortalID
						 AND n.UserID = @FilterByDNNUserID 						 )
			END
					)
				)
		)
		END		
	 END AS ''Count''
	FROM 
	(SELECT 
	ncl.[CategoryID],
	ncl.[PortalID],
	ncl.[CategoryName],
	ncl.[Position],
	ncl.[ParentCategory],
	ncl.[Level],
	ncl.[CategoryURL],
	ncl.[CategoryImage],
	ncl.[CategoryText],
	ncl.Show,
		CASE WHEN cl.[NewsModuleID] IS NULL THEN @DefaultModuleID ELSE cl.[NewsModuleID] END AS NewsModuleID,
		CASE WHEN tm.[TabID] IS NULL THEN @DefaultTabID ELSE tm.[TabID] END AS TabID
	FROM @tempMenuCats as ncl LEFT OUTER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryLink] as cl
	ON ncl.CategoryID = cl.CategoryID AND cl.[SourceModuleID] = @MenuModuleID
	LEFT OUTER JOIN {databaseOwner}[{objectQualifier}TabModules] AS tm ON cl.NewsModuleID = tm.ModuleID) as Result
	ORDER BY Position ASC, ParentCategory ASC
END
END

ELSE
BEGIN

IF @IsSocialInstance = 0
BEGIN
SELECT *,
	CASE Show
	 WHEN 0 THEN 0
	 WHEN 1 THEN	
		CASE @AdminOrSuperUser
		WHEN 1 THEN
		(
		 SELECT count(c.[ArticleID]) as cnt FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS n
			 INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS c ON n.ArticleID = c.ArticleID AND c.CategoryID = Result.CategoryID
			 INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsContentLocalization] AS ncl ON ncl.ArticleID = n.ArticleID AND ncl.LocaleCode = @LocaleCode
			 WHERE n.PublishDate <= @CurrentDate
				AND n.ExpireDate >= @CurrentDate
				AND n.PortalID = @PortalID
				AND((@FilterAuthorOrAuthors = 1 AND n.UserID IN (SELECT UserID FROM @TempAuthorsIDList)) OR (@FilterAuthorOrAuthors = 0))		 
		)
		WHEN 0 THEN
		(
		SELECT (
					(
						SELECT count(n.[ArticleID]) as cnt FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS n
						 INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS c ON n.ArticleID = c.ArticleID AND c.CategoryID = Result.CategoryID
						 INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsContentLocalization] AS ncl ON ncl.ArticleID = n.ArticleID AND ncl.LocaleCode = @LocaleCode
						 WHERE n.PublishDate <= @CurrentDate
							 AND n.ExpireDate >= @CurrentDate
							 AND ((@UserCanApprove = 1) OR (n.Approved = 1))
							 AND ((@AdminOrSuperUser = 1) OR (n.Active = 1 OR n.UserID=@UserID))
							 AND n.HasPermissions = 0
							 AND n.PortalID = @PortalID
							 AND((@FilterAuthorOrAuthors = 1 AND n.UserID IN (SELECT UserID FROM @TempAuthorsIDList)) OR (@FilterAuthorOrAuthors = 0))
					 )
					 +
					(
						SELECT count(aup.[ArticleID]) FROM {databaseOwner}[{objectQualifier}EasyDNNNewsArticleUserPermissions] AS aup
						 INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS c ON c.ArticleID = aup.ArticleID AND c.CategoryID = Result.CategoryID
						 INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNews] AS n ON n.ArticleID = aup.ArticleID
						 INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsContentLocalization] AS ncl ON ncl.ArticleID = n.ArticleID AND ncl.LocaleCode = @LocaleCode
						 WHERE ((@UserID = -1 AND aup.UserID IS NULL) OR (aup.UserID = @UserID))
					 		AND n.PublishDate <= @CurrentDate
							AND n.ExpireDate >= @CurrentDate
							AND ((@UserCanApprove = 1) OR (n.Approved = 1))
							AND ((@AdminOrSuperUser = 1) OR (n.Active = 1 OR n.UserID=@UserID))
							AND n.HasPermissions = 1
							AND n.PortalID = @PortalID
							AND((@FilterAuthorOrAuthors = 1 AND n.UserID IN (SELECT UserID FROM @TempAuthorsIDList)) OR (@FilterAuthorOrAuthors = 0))
					 )	 
					+ 
					(
						CASE @UserID
						WHEN -1 THEN 0
						ELSE			
					(
						SELECT count(PerRoles.[ArticleID]) FROM 
						
						(SELECT DISTINCT arp.[ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsArticleRolePermissions] as arp
						 INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS c ON c.ArticleID = arp.ArticleID AND c.CategoryID = Result.CategoryID
						 INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsContentLocalization] AS ncl ON ncl.ArticleID = arp.ArticleID AND ncl.LocaleCode = @LocaleCode
						 WHERE arp.RoleID IN (SELECT RoleID FROM @UserInRoles)
						  AND arp.ArticleID NOT IN (
							SELECT aup.[ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsArticleUserPermissions] AS aup
							INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS c ON c.ArticleID = aup.ArticleID AND c.CategoryID = Result.CategoryID
							INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNews] AS n ON n.ArticleID = aup.ArticleID
							INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsContentLocalization] AS ncl ON ncl.ArticleID = n.ArticleID AND ncl.LocaleCode = @LocaleCode
								WHERE aup.UserID = @UserID
					 				AND n.PublishDate <= @CurrentDate
									AND n.ExpireDate >= @CurrentDate
									AND ((@UserCanApprove = 1) OR (n.Approved = 1))
									AND ((@AdminOrSuperUser = 1) OR (n.Active = 1 OR n.UserID=@UserID))
									AND n.HasPermissions = 1
									AND n.PortalID = @PortalID
									AND((@FilterAuthorOrAuthors = 1 AND n.UserID IN (SELECT UserID FROM @TempAuthorsIDList)) OR (@FilterAuthorOrAuthors = 0))
							)
						 ) as PerRoles 
						 INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNews] AS n ON n.ArticleID = PerRoles.ArticleID
						 WHERE n.PublishDate <= @CurrentDate
							AND n.ExpireDate >= @CurrentDate
							AND ((@UserCanApprove = 1) OR (n.Approved = 1))
							AND ((@AdminOrSuperUser = 1) OR (n.Active = 1 OR n.UserID=@UserID))
							AND n.HasPermissions = 1
							AND n.PortalID = @PortalID
							AND((@FilterAuthorOrAuthors = 1 AND n.UserID IN (SELECT UserID FROM @TempAuthorsIDList)) OR (@FilterAuthorOrAuthors = 0))
						 )
			END
					)
				)
		)
		END		
	 END AS ''Count''
	FROM 
	(SELECT 
	ncl.[CategoryID],
	ncl.[PortalID],
	ncl.[CategoryName],
	ncl.[Position],
	ncl.[ParentCategory],
	ncl.[Level],
	ncl.[CategoryURL],
	ncl.[CategoryImage],
	ncl.[CategoryText],
	ncl.Show,
		CASE WHEN cl.[NewsModuleID] IS NULL THEN @DefaultModuleID ELSE cl.[NewsModuleID] END AS NewsModuleID,
		CASE WHEN tm.[TabID] IS NULL THEN @DefaultTabID ELSE tm.[TabID] END AS TabID
	FROM @tempMenuCats as ncl LEFT OUTER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryLink] as cl
	ON ncl.CategoryID = cl.CategoryID AND cl.[SourceModuleID] = @MenuModuleID
	LEFT OUTER JOIN {databaseOwner}[{objectQualifier}TabModules] AS tm ON cl.NewsModuleID = tm.ModuleID) as Result
	ORDER BY Position ASC, ParentCategory ASC
END
ELSE IF @FilterBySocialGroup = 1
BEGIN
SELECT *,
	CASE Show
	 WHEN 0 THEN 0
	 WHEN 1 THEN	
		CASE @AdminOrSuperUser
		WHEN 1 THEN
		(
		 SELECT count(n.[ArticleID]) as cnt FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS n
			 INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS c ON n.ArticleID = c.ArticleID AND c.CategoryID = Result.CategoryID
			 INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = n.ArticleID
			 INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialGroupItems] AS sgi ON sgi.ArticleID = n.ArticleID AND sgi.RoleID = @FilterByDNNGroupID
			 INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserID, @FilterByDNNGroupID) as t ON t.seckey = nss.SecurityKey
			 INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsContentLocalization] AS ncl ON ncl.ArticleID = n.ArticleID AND ncl.LocaleCode = @LocaleCode
			 WHERE n.PublishDate <= @CurrentDate
				AND n.ExpireDate >= @CurrentDate
				AND n.PortalID = @PortalID
		)
		WHEN 0 THEN
		(
		SELECT (
					(
						SELECT count(n.[ArticleID]) as cnt FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS n
						INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS c ON n.ArticleID = c.ArticleID AND c.CategoryID = Result.CategoryID
						INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = n.ArticleID
						INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialGroupItems] AS sgi ON sgi.ArticleID = n.ArticleID AND sgi.RoleID = @FilterByDNNGroupID
						INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserID, @FilterByDNNGroupID) as t ON t.seckey = nss.SecurityKey
						INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsContentLocalization] AS ncl ON ncl.ArticleID = n.ArticleID AND ncl.LocaleCode = @LocaleCode
						 WHERE n.PublishDate <= @CurrentDate
							 AND n.ExpireDate >= @CurrentDate
							 AND ((@UserCanApprove = 1) OR (n.Approved = 1))
							 AND ((@AdminOrSuperUser = 1) OR (n.Active = 1 OR n.UserID=@UserID))
							 AND n.HasPermissions = 0
							 AND n.PortalID = @PortalID
					 )
					 +
					(
						SELECT count(aup.[ArticleID]) FROM {databaseOwner}[{objectQualifier}EasyDNNNewsArticleUserPermissions] AS aup
						 INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS c ON c.ArticleID = aup.ArticleID AND c.CategoryID = Result.CategoryID
						 INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNews] AS n ON n.ArticleID = aup.ArticleID
						 INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = n.ArticleID
						 INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialGroupItems] AS sgi ON sgi.ArticleID = n.ArticleID AND sgi.RoleID = @FilterByDNNGroupID
						 INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserID, @FilterByDNNGroupID) as t ON t.seckey = nss.SecurityKey
						 INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsContentLocalization] AS ncl ON ncl.ArticleID = n.ArticleID AND ncl.LocaleCode = @LocaleCode
						 WHERE ((@UserID = -1 AND aup.UserID IS NULL) OR (aup.UserID = @UserID))
					 		AND n.PublishDate <= @CurrentDate
							AND n.ExpireDate >= @CurrentDate
							AND ((@UserCanApprove = 1) OR (n.Approved = 1))
							AND ((@AdminOrSuperUser = 1) OR (n.Active = 1 OR n.UserID=@UserID))
							AND n.HasPermissions = 1
							AND n.PortalID = @PortalID
					 )	 
					+ 
					(
						CASE @UserID
						WHEN -1 THEN 0
						ELSE			
					(
						SELECT count(PerRoles.[ArticleID]) FROM 
						
						(SELECT DISTINCT arp.[ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsArticleRolePermissions] as arp
						 INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS c ON c.ArticleID = arp.ArticleID AND c.CategoryID = Result.CategoryID
						 INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsContentLocalization] AS ncl ON ncl.ArticleID = arp.ArticleID AND ncl.LocaleCode = @LocaleCode
						 WHERE arp.RoleID IN (SELECT RoleID FROM @UserInRoles)
						  AND arp.ArticleID NOT IN (
							SELECT aup.[ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsArticleUserPermissions] AS aup
							INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS c ON c.ArticleID = aup.ArticleID AND c.CategoryID = Result.CategoryID
							INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNews] AS n ON n.ArticleID = aup.ArticleID
							INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = n.ArticleID
							INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialGroupItems] AS sgi ON sgi.ArticleID = n.ArticleID AND sgi.RoleID = @FilterByDNNGroupID
							INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserID, @FilterByDNNGroupID) as t ON t.seckey = nss.SecurityKey
							INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsContentLocalization] AS ncl ON ncl.ArticleID = n.ArticleID AND ncl.LocaleCode = @LocaleCode
								WHERE aup.UserID = @UserID
					 				AND n.PublishDate <= @CurrentDate
									AND n.ExpireDate >= @CurrentDate
									AND ((@UserCanApprove = 1) OR (n.Approved = 1))
									AND ((@AdminOrSuperUser = 1) OR (n.Active = 1 OR n.UserID=@UserID))
									AND n.HasPermissions = 1
									AND n.PortalID = @PortalID
							)
						 ) as PerRoles 
						 INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNews] AS n ON n.ArticleID = PerRoles.ArticleID
						 WHERE n.PublishDate <= @CurrentDate
						 AND n.ExpireDate >= @CurrentDate
						 AND ((@UserCanApprove = 1) OR (n.Approved = 1))
						 AND ((@AdminOrSuperUser = 1) OR (n.Active = 1 OR n.UserID=@UserID))
						 AND n.HasPermissions = 1
						 AND n.PortalID = @PortalID
						 )
			END
					)
				)
		)
		END		
	 END AS ''Count''
	FROM 
	(SELECT 
	ncl.[CategoryID],
	ncl.[PortalID],
	ncl.[CategoryName],
	ncl.[Position],
	ncl.[ParentCategory],
	ncl.[Level],
	ncl.[CategoryURL],
	ncl.[CategoryImage],
	ncl.[CategoryText],
	ncl.Show,
		CASE WHEN cl.[NewsModuleID] IS NULL THEN @DefaultModuleID ELSE cl.[NewsModuleID] END AS NewsModuleID,
		CASE WHEN tm.[TabID] IS NULL THEN @DefaultTabID ELSE tm.[TabID] END AS TabID
	FROM @tempMenuCats as ncl LEFT OUTER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryLink] as cl
	ON ncl.CategoryID = cl.CategoryID AND cl.[SourceModuleID] = @MenuModuleID
	LEFT OUTER JOIN {databaseOwner}[{objectQualifier}TabModules] AS tm ON cl.NewsModuleID = tm.ModuleID) as Result
	ORDER BY Position ASC, ParentCategory ASC	
END
ELSE IF @FilterByDNNUserID <> 0
BEGIN
SELECT *,
	CASE Show
	 WHEN 0 THEN 0
	 WHEN 1 THEN	
		CASE @AdminOrSuperUser
		WHEN 1 THEN
		(
		 SELECT count(n.[ArticleID]) as cnt FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS n	 
			 INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS c ON n.ArticleID = c.ArticleID AND c.CategoryID = Result.CategoryID
			 INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = n.ArticleID
			 INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserID, @FilterByDNNGroupID) as t ON t.seckey = nss.SecurityKey
			 INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsContentLocalization] AS ncl ON ncl.ArticleID = n.ArticleID AND ncl.LocaleCode = @LocaleCode
			 WHERE n.PublishDate <= @CurrentDate
			 AND n.ExpireDate >= @CurrentDate
			 AND n.PortalID = @PortalID
			 AND n.UserID = @FilterByDNNUserID 
		)
		WHEN 0 THEN
		(
		SELECT (
					(
						SELECT count(n.[ArticleID]) as cnt FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS n
						 INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS c ON n.ArticleID = c.ArticleID AND c.CategoryID = Result.CategoryID
						 INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = n.ArticleID
						 INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserID, @FilterByDNNGroupID) as t ON t.seckey = nss.SecurityKey
						 INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsContentLocalization] AS ncl ON ncl.ArticleID = n.ArticleID AND ncl.LocaleCode = @LocaleCode
						 WHERE n.PublishDate <= @CurrentDate
							 AND n.ExpireDate >= @CurrentDate
							 AND ((@UserCanApprove = 1) OR (n.Approved = 1))
							 AND ((@AdminOrSuperUser = 1) OR (n.Active = 1 OR n.UserID=@UserID))
							 AND n.HasPermissions = 0
							 AND n.PortalID = @PortalID
							 AND n.UserID = @FilterByDNNUserID
					)
					 +
					(
						SELECT count(aup.[ArticleID]) FROM {databaseOwner}[{objectQualifier}EasyDNNNewsArticleUserPermissions] AS aup
						 INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS c ON c.ArticleID = aup.ArticleID AND c.CategoryID = Result.CategoryID
						 INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNews] AS n ON n.ArticleID = aup.ArticleID
						 INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = n.ArticleID
						 INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserID, @FilterByDNNGroupID) as t ON t.seckey = nss.SecurityKey
						 INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsContentLocalization] AS ncl ON ncl.ArticleID = n.ArticleID AND ncl.LocaleCode = @LocaleCode
						 WHERE ((@UserID = -1 AND aup.UserID IS NULL) OR (aup.UserID = @UserID))
					 		AND n.PublishDate <= @CurrentDate
							AND n.ExpireDate >= @CurrentDate
							AND ((@UserCanApprove = 1) OR (n.Approved = 1))
							AND ((@AdminOrSuperUser = 1) OR (n.Active = 1 OR n.UserID=@UserID))
							AND n.HasPermissions = 1
							AND n.PortalID = @PortalID
							AND n.UserID = @FilterByDNNUserID 					 )	 
					+ 
					(
						CASE @UserID
						WHEN -1 THEN 0
						ELSE			
					(
						SELECT count(PerRoles.[ArticleID]) FROM 
						
						(SELECT DISTINCT arp.[ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsArticleRolePermissions] as arp
						 INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS c ON c.ArticleID = arp.ArticleID AND c.CategoryID = Result.CategoryID
						 INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsContentLocalization] AS ncl ON ncl.ArticleID = arp.ArticleID AND ncl.LocaleCode = @LocaleCode
						 WHERE arp.RoleID IN (SELECT RoleID FROM @UserInRoles)
						  AND arp.ArticleID NOT IN (
							SELECT aup.[ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsArticleUserPermissions] AS aup
							INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS c ON c.ArticleID = aup.ArticleID AND c.CategoryID = Result.CategoryID
							INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNews] AS n ON n.ArticleID = aup.ArticleID
							INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = n.ArticleID
							INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserID, @FilterByDNNGroupID) as t ON t.seckey = nss.SecurityKey
							INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsContentLocalization] AS ncl ON ncl.ArticleID = n.ArticleID AND ncl.LocaleCode = @LocaleCode
								WHERE aup.UserID = @UserID
					 				AND n.PublishDate <= @CurrentDate
									AND n.ExpireDate >= @CurrentDate
									AND ((@UserCanApprove = 1) OR (n.Approved = 1))
									AND ((@AdminOrSuperUser = 1) OR (n.Active = 1 OR n.UserID=@UserID))
									AND n.HasPermissions = 1
									AND n.PortalID = @PortalID
									AND n.UserID = @FilterByDNNUserID 
			  				)
						 ) as PerRoles 
						 INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNews] AS n ON n.ArticleID = PerRoles.ArticleID
						 WHERE n.PublishDate <= @CurrentDate
						 AND n.ExpireDate >= @CurrentDate
						 AND ((@UserCanApprove = 1) OR (n.Approved = 1))
						 AND ((@AdminOrSuperUser = 1) OR (n.Active = 1 OR n.UserID=@UserID))
						 AND n.HasPermissions = 1
						 AND n.PortalID = @PortalID
						 AND n.UserID = @FilterByDNNUserID 						 )
			END
					)
				)
		)
		END		
	 END AS ''Count''
	FROM 
	(SELECT 
	ncl.[CategoryID],
	ncl.[PortalID],
	ncl.[CategoryName],
	ncl.[Position],
	ncl.[ParentCategory],
	ncl.[Level],
	ncl.[CategoryURL],
	ncl.[CategoryImage],
	ncl.[CategoryText],
	ncl.Show,
		CASE WHEN cl.[NewsModuleID] IS NULL THEN @DefaultModuleID ELSE cl.[NewsModuleID] END AS NewsModuleID,
		CASE WHEN tm.[TabID] IS NULL THEN @DefaultTabID ELSE tm.[TabID] END AS TabID
	FROM @tempMenuCats as ncl LEFT OUTER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryLink] as cl
	ON ncl.CategoryID = cl.CategoryID AND cl.[SourceModuleID] = @MenuModuleID
	LEFT OUTER JOIN {databaseOwner}[{objectQualifier}TabModules] AS tm ON cl.NewsModuleID = tm.ModuleID) as Result
	ORDER BY Position ASC, ParentCategory ASC
END

END

END' 
END
GO
/****** Object:  StoredProcedure {databaseOwner}[{objectQualifier}EasyDNNNewsGetItemsForTagCloud]    Script Date: 06/24/2013 16:39:07 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'{databaseOwner}[{objectQualifier}EasyDNNNewsGetItemsForTagCloud]') AND type in (N'P', N'PC'))
BEGIN
EXEC dbo.sp_executesql @statement = N'CREATE PROCEDURE {databaseOwner}[{objectQualifier}EasyDNNNewsGetItemsForTagCloud]
	@PortalID int,
	@UserID int,
	@TagModuleID int,
	@AdminOrSuperUser bit  = 0,
	@CurrentDate DateTime,
	@OrderBy nvarchar(20) = ''Size DESC'',
	@RowCount int = 0,
	@LocaleCode nvarchar(20) = '''',
	@IsSocialInstance bit = 0,
	@FilterByDNNUserID int = 0, -- filter by some UserID / not current user ID
	@FilterByDNNGroupID int = 0, -- filter by DNNGroup/RoleID / not profile GroupID
	@ShowAllAuthors bit = 1, -- filter postavka menija
	@CategoryFilterType tinyint = 0, --0 All categories, 1 - SELECTion, 2 - AutoAdd
	@OnlyOneCategory int = 0, -- used for gererating tags by only one category need to filter by one category
	@HideUnlocalizedItems bit = 0,
	@PermissionSettingsSource tinyint = 0, -- None, 1 - portal, 2 - module
	@PermissionsModuleID int = 0 -- NewsModuleID
AS
SET NOCOUNT ON;
DECLARE @UserCanApprove bit;
SET @UserCanApprove = 0;
DECLARE @UserInRoles TABLE (RoleID int NOT NULL PRIMARY KEY);
INSERT INTO @UserInRoles SELECT DISTINCT ur.[RoleID] FROM {databaseOwner}[{objectQualifier}UserRoles] AS ur INNER JOIN {databaseOwner}[{objectQualifier}Roles] AS r ON ur.RoleID = r.RoleID WHERE ur.UserID = @UserID AND r.PortalID = @PortalID AND (ur.ExpiryDate IS NULL OR ur.ExpiryDate > GETUTCDATE()) AND (ur.EffectiveDate IS NULL OR ur.EffectiveDate < GETUTCDATE());
DECLARE @UserViewCategories TABLE (CategoryID int NOT NULL PRIMARY KEY); -- all categories which user can see based on permissions
DECLARE @UserViewCategoriesWithFilter TABLE (CategoryID int NOT NULL PRIMARY KEY); -- all categories which user can see based on permissions and Module filter
DECLARE @FiltredByCategories TABLE (CategoryID int NOT NULL PRIMARY KEY); -- all categories that are filtred by module or portal

DECLARE @SettingsSource bit; SET @SettingsSource = 1;
IF @AdminOrSuperUser = 1 OR @PermissionSettingsSource = 0
BEGIN
	INSERT INTO @UserViewCategories SELECT [CategoryID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryList] WHERE PortalID = @PortalID;
END
ELSE IF @UserID = -1
BEGIN	
	IF @PermissionSettingsSource = 1 -- by portal
	BEGIN
		IF EXISTS (SELECT ShowAllCategories FROM {databaseOwner}[{objectQualifier}EasyDNNNewsRolePremissionSettings] AS rps WHERE rps.PortalID = @PortalID  AND rps.ModuleID IS NULL AND rps.RoleID IS NULL AND rps.ShowAllCategories = 1)
		BEGIN
			INSERT INTO @UserViewCategories SELECT [CategoryID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryList] WHERE PortalID = @PortalID;
		END
		ELSE
		BEGIN
			INSERT INTO @UserViewCategories
			SELECT rpsc.[CategoryID] FROM  {databaseOwner}[{objectQualifier}EasyDNNNewsRolePremissionsShowCategories] AS rpsc 
			INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsRolePremissionSettings] AS rps ON rps.PremissionSettingsID = rpsc.PremissionSettingsID
			WHERE rps.PortalID = @PortalID  AND rps.ModuleID IS NULL AND rps.RoleID IS NULL;
		END
	END
	ELSE -- by module
	BEGIN
		SELECT @SettingsSource = PermissionsPMSource FROM {databaseOwner}[{objectQualifier}EasyDNNNewsModuleSettings] WHERE ModuleID = @PermissionsModuleID;
		IF @SettingsSource = 1
		BEGIN
			IF EXISTS (SELECT ShowAllCategories FROM {databaseOwner}[{objectQualifier}EasyDNNNewsRolePremissionSettings] AS rps WHERE rps.PortalID = @PortalID  AND rps.ModuleID IS NULL AND rps.RoleID IS NULL AND rps.ShowAllCategories = 1)
			BEGIN
				INSERT INTO @UserViewCategories SELECT [CategoryID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryList] WHERE PortalID = @PortalID;
			END
			ELSE
			BEGIN
				INSERT INTO @UserViewCategories
				SELECT rpsc.[CategoryID] FROM  {databaseOwner}[{objectQualifier}EasyDNNNewsRolePremissionsShowCategories] AS rpsc 
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsRolePremissionSettings] AS rps ON rps.PremissionSettingsID = rpsc.PremissionSettingsID
				WHERE rps.PortalID = @PortalID  AND rps.ModuleID IS NULL AND rps.RoleID IS NULL;
			END
		END
		ELSE
		BEGIN
			IF EXISTS (SELECT ShowAllCategories FROM {databaseOwner}[{objectQualifier}EasyDNNNewsRolePremissionSettings] AS rps WHERE rps.PortalID = @PortalID AND rps.ModuleID = @PermissionsModuleID AND rps.RoleID IS NULL AND rps.ShowAllCategories = 1)
			BEGIN
				INSERT INTO @UserViewCategories SELECT [CategoryID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryList] WHERE PortalID = @PortalID;
			END
			ELSE
			BEGIN
				INSERT INTO @UserViewCategories
				SELECT rpsc.[CategoryID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsRolePremissionsShowCategories] AS rpsc
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsRolePremissionSettings] AS rps ON rps.PremissionSettingsID = rpsc.PremissionSettingsID
				WHERE rps.PortalID = @PortalID AND rps.ModuleID = @PermissionsModuleID AND rps.RoleID IS NULL;
			END
		END
	END
END
ELSE -- registrirani korisnik
BEGIN
	IF @PermissionSettingsSource = 1 -- by portal
	BEGIN
		IF EXISTS (
				SELECT TOP (1) ShowAllCategories FROM {databaseOwner}[{objectQualifier}EasyDNNNewsRolePremissionSettings] AS rps
					INNER JOIN @UserInRoles AS uir ON rps.RoleID = uir.RoleID
					WHERE rps.PortalID = @PortalID AND rps.ModuleID IS NULL AND rps.ShowAllCategories = 1
				UNION
				SELECT ShowAllCategories FROM {databaseOwner}[{objectQualifier}EasyDNNNewsUserPremissionSettings] AS ups
				WHERE ups.UserID = @UserID AND ups.PortalID = @PortalID AND ups.ModuleID IS NULL AND ups.ShowAllCategories = 1
		)
		BEGIN
			INSERT INTO @UserViewCategories SELECT [CategoryID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryList] WHERE PortalID = @PortalID;
		END
		ELSE
		BEGIN
			INSERT INTO @UserViewCategories
			SELECT rpsc.[CategoryID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsRolePremissionsShowCategories] AS rpsc
			INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsRolePremissionSettings] AS rps ON rps.PremissionSettingsID = rpsc.PremissionSettingsID
			INNER JOIN @UserInRoles AS uir ON rps.RoleID = uir.RoleID
			WHERE rps.PortalID = @PortalID AND rps.ModuleID IS NULL GROUP BY rpsc.[CategoryID]
			UNION
			SELECT upsc.[CategoryID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsUserPremissionsShowCategories] AS upsc
			INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsUserPremissionSettings] AS ups ON ups.PremissionSettingsID = upsc.PremissionSettingsID
			WHERE ups.UserID = @UserID AND ups.PortalID = @PortalID AND ups.ModuleID IS NULL GROUP BY upsc.[CategoryID];
		END
	END
	ELSE -- by module
	BEGIN
		SELECT @SettingsSource = PermissionsPMSource FROM {databaseOwner}[{objectQualifier}EasyDNNNewsModuleSettings] WHERE ModuleID = @PermissionsModuleID;
		IF @SettingsSource = 1
		BEGIN
			IF EXISTS (
				SELECT TOP (1) ShowAllCategories FROM {databaseOwner}[{objectQualifier}EasyDNNNewsRolePremissionSettings] AS rps
					INNER JOIN @UserInRoles AS uir ON rps.RoleID = uir.RoleID
					WHERE rps.PortalID = @PortalID AND rps.ModuleID IS NULL AND rps.ShowAllCategories = 1
				UNION
				SELECT ShowAllCategories FROM {databaseOwner}[{objectQualifier}EasyDNNNewsUserPremissionSettings] AS ups
				WHERE ups.UserID = @UserID AND ups.PortalID = @PortalID AND ups.ModuleID IS NULL AND ups.ShowAllCategories = 1
			)
			BEGIN
				INSERT INTO @UserViewCategories SELECT [CategoryID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryList] WHERE PortalID = @PortalID;
			END
			ELSE
			BEGIN
				INSERT INTO @UserViewCategories
				SELECT rpsc.[CategoryID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsRolePremissionsShowCategories] AS rpsc
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsRolePremissionSettings] AS rps ON rps.PremissionSettingsID = rpsc.PremissionSettingsID
				INNER JOIN @UserInRoles AS uir ON rps.RoleID = uir.RoleID
				WHERE rps.PortalID = @PortalID AND rps.ModuleID IS NULL GROUP BY rpsc.[CategoryID]
				UNION
				SELECT upsc.[CategoryID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsUserPremissionsShowCategories] AS upsc
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsUserPremissionSettings] AS ups ON ups.PremissionSettingsID = upsc.PremissionSettingsID
				WHERE ups.UserID = @UserID AND ups.PortalID = @PortalID AND ups.ModuleID IS NULL GROUP BY upsc.[CategoryID];
			END
		END
		ELSE
		BEGIN
			IF EXISTS (
				SELECT TOP (1) ShowAllCategories FROM {databaseOwner}[{objectQualifier}EasyDNNNewsRolePremissionSettings] AS rps
					INNER JOIN @UserInRoles AS uir ON rps.RoleID = uir.RoleID
					WHERE rps.PortalID = @PortalID AND rps.ModuleID = @PermissionsModuleID AND rps.ShowAllCategories = 1
				UNION
				SELECT ShowAllCategories FROM {databaseOwner}[{objectQualifier}EasyDNNNewsUserPremissionSettings] AS ups
				WHERE ups.UserID = @UserID AND ups.PortalID = @PortalID AND ups.ModuleID = @PermissionsModuleID AND ups.ShowAllCategories = 1
			)
			BEGIN
				INSERT INTO @UserViewCategories SELECT [CategoryID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryList] WHERE PortalID = @PortalID;
			END
			ELSE
			BEGIN
				INSERT INTO @UserViewCategories
				SELECT rpsc.[CategoryID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsRolePremissionsShowCategories] AS rpsc
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsRolePremissionSettings] AS rps ON rps.PremissionSettingsID = rpsc.PremissionSettingsID
				INNER JOIN @UserInRoles AS uir ON rps.RoleID = uir.RoleID
				WHERE rps.PortalID = @PortalID AND rps.ModuleID = @PermissionsModuleID GROUP BY rpsc.[CategoryID]
				UNION
				SELECT upsc.[CategoryID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsUserPremissionsShowCategories] AS upsc
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsUserPremissionSettings] AS ups ON ups.PremissionSettingsID = upsc.PremissionSettingsID
				WHERE ups.UserID = @UserID AND ups.PortalID = @PortalID AND ups.ModuleID = @PermissionsModuleID GROUP BY upsc.[CategoryID];
			END
		END
	END
END

IF @OnlyOneCategory <> 0 -- filtrira se po jednoj kategoriji
BEGIN
	INSERT INTO @UserViewCategoriesWithFilter SELECT [CategoryID] FROM @UserViewCategories WHERE CategoryID = @OnlyOneCategory;
	INSERT INTO @FiltredByCategories SELECT @OnlyOneCategory;
END
ELSE
BEGIN
	IF @CategoryFilterType = 0 -- 0 All categories
	BEGIN
		INSERT INTO @UserViewCategoriesWithFilter SELECT [CategoryID] FROM @UserViewCategories;
		INSERT INTO @FiltredByCategories SELECT [CategoryID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryList] WHERE PortalID = @PortalID;
	END
	ELSE IF @CategoryFilterType = 1 -- 1 - SELECTion
	BEGIN
			INSERT INTO @UserViewCategoriesWithFilter 
			SELECT cl.[CategoryID] FROM @UserViewCategories AS cl
			INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsModuleCategoryItems] AS mci ON mci.CategoryID = cl.CategoryID AND mci.ModuleID = @TagModuleID
			
			INSERT INTO @FiltredByCategories SELECT [CategoryID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsModuleCategoryItems] WHERE ModuleID = @TagModuleID;
	END
	ELSE IF @CategoryFilterType = 2 -- 2 - AutoAdd
	BEGIN
		WITH hierarchy AS(
			SELECT [CategoryID], [ParentCategory]
			FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryList] AS cl
			WHERE (cl.ParentCategory IN (SELECT [CategoryID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsModuleCategoryItems] WHERE ModuleID = @TagModuleID) OR cl.CategoryID IN (SELECT [CategoryID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsModuleCategoryItems] WHERE ModuleID = @TagModuleID)) AND PortalID = @PortalID
			UNION ALL
			SELECT c.[CategoryID], c.[ParentCategory]
			FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryList] AS c INNER JOIN hierarchy AS p ON c.ParentCategory = p.CategoryID WHERE c.PortalID = @PortalID
			)
			INSERT INTO @FiltredByCategories SELECT DISTINCT CategoryID FROM hierarchy;	
			INSERT INTO @UserViewCategoriesWithFilter SELECT uvc.CategoryID FROM @FiltredByCategories AS nfc INNER JOIN @UserViewCategories AS uvc ON uvc.CategoryID = nfc.CategoryID;
	END
END
DECLARE @FilterBySocialGroup bit;
SET @FilterBySocialGroup = 0;
DECLARE @FilterAuthorOrAuthors bit;
SET @FilterAuthorOrAuthors = 0;

DECLARE @TempAuthorsIDList TABLE (UserID int NOT NULL PRIMARY KEY);
IF @IsSocialInstance = 1
	BEGIN
		IF @FilterByDNNGroupID <> 0
		BEGIN	
			SET @FilterBySocialGroup = 1;
		END
	END
ELSE
BEGIN
	IF @ShowAllAuthors = 0
	BEGIN
		SET @FilterAuthorOrAuthors = 1;
		INSERT INTO @TempAuthorsIDList
		SELECT [UserID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsModuleAuthorsItems] AS mai WHERE mai.ModuleID = @TagModuleID
		UNION 
		SELECT [UserID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsAuthorProfile] AS ap 
			INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsAutorGroupItems] AS agi ON ap.AuthorProfileID = agi.AuthorProfileID
			INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsModuleGroupItems] AS mgi ON mgi.GroupID = agi.GroupID
			WHERE mgi.ModuleID = @TagModuleID
	END
END

IF @LocaleCode = ''''
BEGIN
	IF @RowCount <> 0
	BEGIN
		SET ROWCOUNT @RowCount;
	END
	
	IF @IsSocialInstance = 0
	BEGIN
		SELECT * FROM (SELECT nt.TagID, COUNT(*) AS ''Size'', nt.[Name] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsTagsItems] AS ti
			INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsNewTags] AS nt ON nt.TagID = ti.TagID
		WHERE nt.PortalID = @PortalID AND ti.ArticleID IN (SELECT DISTINCT [ArticleID] FROM(	
			SELECT DISTINCT na.[ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS na
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS cat ON na.ArticleID = cat.ArticleID
				INNER JOIN @UserViewCategoriesWithFilter AS uvcwf ON uvcwf.CategoryID = cat.CategoryID
			WHERE na.PortalID=@PortalID
				AND ((@AdminOrSuperUser = 1) OR ((@UserCanApprove = 1 OR na.Approved=1) AND (na.Active=1 OR na.UserID=@UserID)))
				AND na.HasPermissions = 0
				AND na.HideDefaultLocale = 0
				AND na.PublishDate <= @CurrentDate
				AND na.ExpireDate >= @CurrentDate
				AND ((@FilterAuthorOrAuthors = 1 AND na.UserID IN (SELECT UserID FROM @TempAuthorsIDList)) OR (@FilterAuthorOrAuthors = 0))
			UNION ALL
			SELECT DISTINCT na.[ArticleID] from {databaseOwner}[{objectQualifier}EasyDNNNews] AS na
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsArticleUserPermissions] AS aup ON na.ArticleID = aup.ArticleID 
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS cat ON na.ArticleID = cat.ArticleID
				INNER JOIN @FiltredByCategories AS fbc ON fbc.CategoryID = cat.CategoryID
			WHERE na.PortalID=@PortalID
				AND ((@AdminOrSuperUser = 1) OR (((@UserID = -1 AND aup.UserID IS NULL) OR (aup.UserID = @UserID))
					AND aup.Show = 1 AND ((@UserCanApprove = 1) OR (na.Approved=1)) AND (na.Active=1 OR na.UserID=@UserID)
				))
				AND na.HasPermissions = 1
				AND na.HideDefaultLocale = 0
				AND na.PublishDate <= @CurrentDate
				AND na.ExpireDate >= @CurrentDate
				AND ((@FilterAuthorOrAuthors = 1 AND na.UserID IN (SELECT UserID FROM @TempAuthorsIDList)) OR (@FilterAuthorOrAuthors = 0))
			UNION
			SELECT DISTINCT na.[ArticleID] from {databaseOwner}[{objectQualifier}EasyDNNNews] AS na
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsArticleRolePermissions] AS arp ON na.ArticleID = arp.ArticleID
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS cat ON na.ArticleID = cat.ArticleID
				INNER JOIN @FiltredByCategories AS fbc ON fbc.CategoryID = cat.CategoryID
			WHERE na.PortalID=@PortalID
				AND ((@AdminOrSuperUser = 1) OR (((@UserCanApprove = 1) OR (na.Approved=1))
					AND (na.Active=1 OR na.UserID=@UserID) AND arp.Show = 1 AND arp.RoleID IN (SELECT [RoleID] FROM @UserInRoles)
				))
				AND na.HasPermissions = 1
				AND na.HideDefaultLocale = 0
				AND na.PublishDate <= @CurrentDate
				AND na.ExpireDate >= @CurrentDate
				AND ((@FilterAuthorOrAuthors = 1 AND na.UserID IN (SELECT UserID FROM @TempAuthorsIDList)) OR (@FilterAuthorOrAuthors = 0))
			) as final
		)
		GROUP BY ti.TagID, nt.TagID, nt.Name) AS Result ORDER BY 
		CASE WHEN @OrderBy =''Name ASC'' THEN Name END,
		CASE WHEN @OrderBy =''Size DESC'' THEN Size END DESC,
		CASE WHEN @OrderBy =''Name DESC'' THEN Name END DESC,
		CASE WHEN @OrderBy =''Size ASC'' THEN Size END
	END
	ELSE IF @FilterBySocialGroup = 1
	BEGIN
		SELECT * FROM (SELECT nt.TagID, COUNT(*) AS ''Size'', nt.[Name] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsTagsItems] AS ti
			INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsNewTags] AS nt ON nt.TagID = ti.TagID
		WHERE nt.PortalID = @PortalID AND ti.ArticleID IN (SELECT DISTINCT [ArticleID] FROM(	
			SELECT DISTINCT na.[ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS na
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS cat ON na.ArticleID = cat.ArticleID
				INNER JOIN @UserViewCategoriesWithFilter AS uvcwf ON uvcwf.CategoryID = cat.CategoryID
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = na.ArticleID
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialGroupItems] AS sgi ON sgi.ArticleID = na.ArticleID AND sgi.RoleID = @FilterByDNNGroupID
				INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserID, @FilterByDNNGroupID) AS t ON t.seckey = nss.SecurityKey
			WHERE na.PortalID=@PortalID
				AND ((@AdminOrSuperUser = 1) OR ((@UserCanApprove = 1 OR na.Approved=1) AND (na.Active=1 OR na.UserID=@UserID)))
				AND na.HasPermissions = 0
				AND na.HideDefaultLocale = 0
				AND na.PublishDate <= @CurrentDate
				AND na.ExpireDate >= @CurrentDate
			UNION ALL
			SELECT DISTINCT na.[ArticleID] from {databaseOwner}[{objectQualifier}EasyDNNNews] AS na
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsArticleUserPermissions] AS aup ON na.ArticleID = aup.ArticleID 
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS cat ON na.ArticleID = cat.ArticleID
				INNER JOIN @FiltredByCategories AS fbc ON fbc.CategoryID = cat.CategoryID
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = na.ArticleID
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialGroupItems] AS sgi ON sgi.ArticleID = na.ArticleID AND sgi.RoleID = @FilterByDNNGroupID
				INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserID, @FilterByDNNGroupID) AS t ON t.seckey = nss.SecurityKey
			WHERE na.PortalID=@PortalID
				AND ((@AdminOrSuperUser = 1) OR (((@UserID = -1 AND aup.UserID IS NULL) OR (aup.UserID = @UserID))
					AND aup.Show = 1 AND ((@UserCanApprove = 1) OR (na.Approved=1)) AND (na.Active=1 OR na.UserID=@UserID)
				))
				AND na.HasPermissions = 1
				AND na.HideDefaultLocale = 0
				AND na.PublishDate <= @CurrentDate
				AND na.ExpireDate >= @CurrentDate
			UNION
			SELECT DISTINCT na.[ArticleID] from {databaseOwner}[{objectQualifier}EasyDNNNews] AS na
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsArticleRolePermissions] AS arp ON na.ArticleID = arp.ArticleID
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS cat ON na.ArticleID = cat.ArticleID
				INNER JOIN @FiltredByCategories AS fbc ON fbc.CategoryID = cat.CategoryID
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = na.ArticleID
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialGroupItems] AS sgi ON sgi.ArticleID = na.ArticleID AND sgi.RoleID = @FilterByDNNGroupID
				INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserID, @FilterByDNNGroupID) AS t ON t.seckey = nss.SecurityKey
			WHERE na.PortalID=@PortalID
				AND ((@AdminOrSuperUser = 1) OR (((@UserCanApprove = 1) OR (na.Approved=1))
					AND (na.Active=1 OR na.UserID=@UserID) AND arp.Show = 1 AND arp.RoleID IN (SELECT [RoleID] FROM @UserInRoles)
				))
				AND na.HasPermissions = 1
				AND na.HideDefaultLocale = 0
				AND na.PublishDate <= @CurrentDate
				AND na.ExpireDate >= @CurrentDate
			)as final
		)
		GROUP BY ti.TagID, nt.TagID, nt.Name) AS Result ORDER BY 
		CASE WHEN @OrderBy =''Name ASC'' THEN Name END,
		CASE WHEN @OrderBy =''Size DESC'' THEN Size END DESC,
		CASE WHEN @OrderBy =''Name DESC'' THEN Name END DESC,
		CASE WHEN @OrderBy =''Size ASC'' THEN Size END
	END
	ELSE IF @FilterByDNNUserID <> 0
	BEGIN
		SELECT * FROM (SELECT nt.TagID, COUNT(*) AS ''Size'', nt.[Name] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsTagsItems] AS ti
			INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsNewTags] AS nt ON nt.TagID = ti.TagID
		WHERE nt.PortalID = @PortalID AND ti.ArticleID IN (SELECT DISTINCT [ArticleID] FROM(	
			SELECT DISTINCT na.[ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS na
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS cat ON na.ArticleID = cat.ArticleID
				INNER JOIN @UserViewCategoriesWithFilter AS uvcwf ON uvcwf.CategoryID = cat.CategoryID
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = na.ArticleID
				INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserID, @FilterByDNNGroupID) AS t ON t.seckey = nss.SecurityKey
			WHERE na.PortalID=@PortalID
				AND ((@AdminOrSuperUser = 1) OR ((@UserCanApprove = 1 OR na.Approved=1) AND (na.Active=1 OR na.UserID=@UserID)))
				AND na.HasPermissions = 0
				AND na.HideDefaultLocale = 0
				AND na.PublishDate <= @CurrentDate
				AND na.ExpireDate >= @CurrentDate
				AND na.UserID = @FilterByDNNUserID
			UNION ALL
			SELECT DISTINCT na.[ArticleID] from {databaseOwner}[{objectQualifier}EasyDNNNews] AS na
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsArticleUserPermissions] AS aup ON na.ArticleID = aup.ArticleID 
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS cat ON na.ArticleID = cat.ArticleID
				INNER JOIN @FiltredByCategories AS fbc ON fbc.CategoryID = cat.CategoryID
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = na.ArticleID
				INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserID, @FilterByDNNGroupID) AS t ON t.seckey = nss.SecurityKey
			WHERE na.PortalID=@PortalID
				AND ((@AdminOrSuperUser = 1) OR (((@UserID = -1 AND aup.UserID IS NULL) OR (aup.UserID = @UserID))
					AND aup.Show = 1  AND ((@UserCanApprove = 1) OR (na.Approved=1)) AND (na.Active=1 OR na.UserID=@UserID)
				))
				AND na.HasPermissions = 1
				AND na.HideDefaultLocale = 0
				AND na.PublishDate <= @CurrentDate
				AND na.ExpireDate >= @CurrentDate
				AND na.UserID = @FilterByDNNUserID
			UNION
			SELECT DISTINCT na.[ArticleID] from {databaseOwner}[{objectQualifier}EasyDNNNews] AS na
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsArticleRolePermissions] AS arp ON na.ArticleID = arp.ArticleID
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS cat ON na.ArticleID = cat.ArticleID
				INNER JOIN @FiltredByCategories AS fbc ON fbc.CategoryID = cat.CategoryID
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = na.ArticleID
				INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserID, @FilterByDNNGroupID) AS t ON t.seckey = nss.SecurityKey
			WHERE na.PortalID=@PortalID
				AND ((@AdminOrSuperUser = 1) OR (((@UserCanApprove = 1) OR (na.Approved=1))
					AND (na.Active=1 OR na.UserID=@UserID) AND arp.Show = 1 AND arp.RoleID IN (SELECT [RoleID] FROM @UserInRoles)
				))
				AND na.HasPermissions = 1
				AND na.HideDefaultLocale = 0
				AND na.PublishDate <= @CurrentDate
				AND na.ExpireDate >= @CurrentDate
				AND na.UserID = @FilterByDNNUserID
			)as final
		)
		GROUP BY ti.TagID, nt.TagID, nt.Name) AS Result ORDER BY 
		CASE WHEN @OrderBy =''Name ASC'' THEN Name END,
		CASE WHEN @OrderBy =''Size DESC'' THEN Size END DESC,
		CASE WHEN @OrderBy =''Name DESC'' THEN Name END DESC,
		CASE WHEN @OrderBy =''Size ASC'' THEN Size END
	END
  
	IF @RowCount <> 0
	BEGIN
		SET ROWCOUNT 0;
	END
END
ELSE
BEGIN
	IF @RowCount = 0
	BEGIN
		SET @RowCount = 500;
	END;
	
	IF @IsSocialInstance = 0
	BEGIN	
		WITH AllTags(TagID, Size, Name) AS (
		SELECT TOP(@RowCount) * FROM (
			SELECT nt.TagID, COUNT(*) AS ''Size'', nt.[Name] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsTagsItems] AS ti
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsNewTags] AS nt ON nt.TagID = ti.TagID
			WHERE nt.PortalID = @PortalID AND ti.ArticleID IN (SELECT DISTINCT [ArticleID] FROM(	
				SELECT DISTINCT na.[ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS na
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS cat ON na.ArticleID = cat.ArticleID
					INNER JOIN @UserViewCategoriesWithFilter AS uvcwf ON uvcwf.CategoryID = cat.CategoryID
					LEFT OUTER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsContentLocalization] AS ncl ON ncl.ArticleID = na.ArticleID
				WHERE na.PortalID=@PortalID
					AND ((@AdminOrSuperUser = 1) OR ((@UserCanApprove = 1 OR na.Approved=1) AND (na.Active=1 OR na.UserID=@UserID)))
					AND na.HasPermissions = 0
					AND na.PublishDate <= @CurrentDate
					AND na.ExpireDate >= @CurrentDate
					AND ((@FilterAuthorOrAuthors = 1 AND na.UserID IN (SELECT UserID FROM @TempAuthorsIDList)) OR (@FilterAuthorOrAuthors = 0))
					AND ((@HideUnlocalizedItems = 1 AND ncl.ArticleID IS NOT NULL AND ncl.LocaleCode = @LocaleCode) OR (@HideUnlocalizedItems = 0))
				UNION ALL
				SELECT DISTINCT na.[ArticleID] from {databaseOwner}[{objectQualifier}EasyDNNNews] AS na
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsArticleUserPermissions] AS aup ON na.ArticleID = aup.ArticleID 
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS cat ON na.ArticleID = cat.ArticleID
					INNER JOIN @FiltredByCategories AS fbc ON fbc.CategoryID = cat.CategoryID
					LEFT OUTER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsContentLocalization] AS ncl ON ncl.ArticleID = na.ArticleID
				WHERE na.PortalID=@PortalID
					AND ((@AdminOrSuperUser = 1) OR (((@UserID = -1 AND aup.UserID IS NULL) OR (aup.UserID = @UserID))
						AND aup.Show = 1 AND ((@UserCanApprove = 1) OR (na.Approved=1)) AND (na.Active=1 OR na.UserID=@UserID)
					))
					AND na.HasPermissions = 1
					AND na.PublishDate <= @CurrentDate
					AND na.ExpireDate >= @CurrentDate
					AND ((@FilterAuthorOrAuthors = 1 AND na.UserID IN (SELECT UserID FROM @TempAuthorsIDList)) OR (@FilterAuthorOrAuthors = 0))
					AND ((@HideUnlocalizedItems = 1 AND ncl.ArticleID IS NOT NULL AND ncl.LocaleCode = @LocaleCode) OR (@HideUnlocalizedItems = 0))
				UNION
				SELECT DISTINCT na.[ArticleID] from {databaseOwner}[{objectQualifier}EasyDNNNews] AS na
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsArticleRolePermissions] AS arp ON na.ArticleID = arp.ArticleID
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS cat ON na.ArticleID = cat.ArticleID
					INNER JOIN @FiltredByCategories AS fbc ON fbc.CategoryID = cat.CategoryID
					LEFT OUTER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsContentLocalization] AS ncl ON ncl.ArticleID = na.ArticleID
				WHERE na.PortalID=@PortalID
					AND ((@AdminOrSuperUser = 1) OR (((@UserCanApprove = 1) OR (na.Approved=1))
						AND (na.Active=1 OR na.UserID=@UserID) AND arp.Show = 1 AND arp.RoleID IN (SELECT [RoleID] FROM @UserInRoles)
					))
					AND na.HasPermissions = 1
					AND na.PublishDate <= @CurrentDate
					AND na.ExpireDate >= @CurrentDate
					AND ((@FilterAuthorOrAuthors = 1 AND na.UserID IN (SELECT UserID FROM @TempAuthorsIDList)) OR (@FilterAuthorOrAuthors = 0))
					AND ((@HideUnlocalizedItems = 1 AND ncl.ArticleID IS NOT NULL AND ncl.LocaleCode = @LocaleCode) OR (@HideUnlocalizedItems = 0))
				) AS final
			)
			GROUP BY ti.TagID, nt.TagID, nt.Name) AS Result ORDER BY 
				CASE WHEN @OrderBy =''Name ASC'' THEN Name END,
				CASE WHEN @OrderBy =''Size DESC'' THEN Size END DESC,
				CASE WHEN @OrderBy =''Name DESC'' THEN Name END DESC,
				CASE WHEN @OrderBy =''Size ASC'' THEN Size END
	),
	LocalizedTags(TagID, Size, Name) AS (
		SELECT t.[TagID],t.[Size],ntl.[Name] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsTagsLocalization] AS ntl INNER JOIN AllTags AS t on ntl.TagID = t.TagID WHERE ntl.LocaleCode = @LocaleCode
	),
	NotLocalizedTags(TagID, Size, Name) AS(
		SELECT [TagID],[Size],[Name] FROM AllTags WHERE TagID NOT IN (SELECT TagID FROM LocalizedTags)
	)
	SELECT TagID, Size, Name FROM (SELECT TagID, Size, Name FROM LocalizedTags UNION SELECT TagID, Size, Name FROM NotLocalizedTags) AS result ORDER BY 
		CASE WHEN @OrderBy =''Name ASC'' THEN Name END,
		CASE WHEN @OrderBy =''Size DESC'' THEN Size END DESC,
		CASE WHEN @OrderBy =''Name DESC'' THEN Name END DESC,
		CASE WHEN @OrderBy =''Size ASC'' THEN Size END;
	END
	ELSE IF @FilterBySocialGroup = 1
	BEGIN
		WITH AllTags(TagID, Size, Name) AS (
		SELECT TOP(@RowCount) * FROM (SELECT nt.TagID, COUNT(*) AS ''Size'', nt.[Name]
			FROM {databaseOwner}[{objectQualifier}EasyDNNNewsTagsItems] AS ti
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsNewTags] AS nt ON nt.TagID = ti.TagID
			WHERE nt.PortalID = @PortalID AND ti.ArticleID IN (SELECT DISTINCT [ArticleID] FROM(	
				SELECT DISTINCT na.[ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS na
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS cat ON na.ArticleID = cat.ArticleID
					INNER JOIN @UserViewCategoriesWithFilter AS uvcwf ON uvcwf.CategoryID = cat.CategoryID
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = na.ArticleID
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialGroupItems] AS sgi ON sgi.ArticleID = na.ArticleID AND sgi.RoleID = @FilterByDNNGroupID
					INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserID, @FilterByDNNGroupID) AS t ON t.seckey = nss.SecurityKey
					LEFT OUTER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsContentLocalization] AS ncl ON ncl.ArticleID = na.ArticleID
				WHERE na.PortalID=@PortalID 
					AND ((@AdminOrSuperUser = 1) OR ((@UserCanApprove = 1 OR na.Approved=1) AND (na.Active=1 OR na.UserID=@UserID)))
					AND na.HasPermissions = 0
					AND na.PublishDate <= @CurrentDate
					AND na.ExpireDate >= @CurrentDate
					AND ((@HideUnlocalizedItems = 1 AND ncl.ArticleID IS NOT NULL AND ncl.LocaleCode = @LocaleCode) OR (@HideUnlocalizedItems = 0))
				UNION ALL
				SELECT DISTINCT na.[ArticleID] from {databaseOwner}[{objectQualifier}EasyDNNNews] AS na
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsArticleUserPermissions] AS aup ON na.ArticleID = aup.ArticleID 
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS cat ON na.ArticleID = cat.ArticleID
					INNER JOIN @FiltredByCategories AS fbc ON fbc.CategoryID = cat.CategoryID
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = na.ArticleID
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialGroupItems] AS sgi ON sgi.ArticleID = na.ArticleID AND sgi.RoleID = @FilterByDNNGroupID
					INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserID, @FilterByDNNGroupID) AS t ON t.seckey = nss.SecurityKey
					LEFT OUTER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsContentLocalization] AS ncl ON ncl.ArticleID = na.ArticleID
				WHERE na.PortalID=@PortalID
					AND ((@AdminOrSuperUser = 1) OR (((@UserID = -1 AND aup.UserID IS NULL) OR (aup.UserID = @UserID))
						AND aup.Show = 1 AND ((@UserCanApprove = 1) OR (na.Approved=1)) AND (na.Active=1 OR na.UserID=@UserID)
					))
					AND na.HasPermissions = 1
					AND na.PublishDate <= @CurrentDate
					AND na.ExpireDate >= @CurrentDate
					AND ((@HideUnlocalizedItems = 1 AND ncl.ArticleID IS NOT NULL AND ncl.LocaleCode = @LocaleCode) OR (@HideUnlocalizedItems = 0))
				UNION
				SELECT DISTINCT na.[ArticleID] from {databaseOwner}[{objectQualifier}EasyDNNNews] AS na
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsArticleRolePermissions] AS arp ON na.ArticleID = arp.ArticleID
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS cat ON na.ArticleID = cat.ArticleID
					INNER JOIN @FiltredByCategories AS fbc ON fbc.CategoryID = cat.CategoryID
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = na.ArticleID
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialGroupItems] AS sgi ON sgi.ArticleID = na.ArticleID AND sgi.RoleID = @FilterByDNNGroupID
					INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserID, @FilterByDNNGroupID) AS t ON t.seckey = nss.SecurityKey
					LEFT OUTER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsContentLocalization] AS ncl ON ncl.ArticleID = na.ArticleID
				WHERE na.PortalID=@PortalID
					AND ((@AdminOrSuperUser = 1) OR (((@UserCanApprove = 1) OR (na.Approved=1))
						AND (na.Active=1 OR na.UserID=@UserID) AND arp.Show = 1 AND arp.RoleID IN (SELECT [RoleID] FROM @UserInRoles)
					))
					AND na.HasPermissions = 1
					AND na.PublishDate <= @CurrentDate
					AND na.ExpireDate >= @CurrentDate
					AND ((@HideUnlocalizedItems = 1 AND ncl.ArticleID IS NOT NULL AND ncl.LocaleCode = @LocaleCode) OR (@HideUnlocalizedItems = 0))
				) AS final
			)
			GROUP BY ti.TagID, nt.TagID, nt.Name) AS Result ORDER BY 
				CASE WHEN @OrderBy =''Name ASC'' THEN Name END,
				CASE WHEN @OrderBy =''Size DESC'' THEN Size END DESC,
				CASE WHEN @OrderBy =''Name DESC'' THEN Name END DESC,
				CASE WHEN @OrderBy =''Size ASC'' THEN Size END
	),
	LocalizedTags(TagID, Size, Name) AS (
		SELECT t.[TagID],t.[Size],ntl.[Name] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsTagsLocalization] AS ntl INNER JOIN AllTags AS t on ntl.TagID = t.TagID WHERE ntl.LocaleCode = @LocaleCode
	),
	NotLocalizedTags(TagID, Size, Name) AS(
		SELECT [TagID],[Size],[Name] FROM AllTags WHERE TagID NOT IN (SELECT TagID FROM LocalizedTags)
	)
	SELECT TagID, Size, Name FROM (SELECT TagID, Size, Name FROM LocalizedTags UNION SELECT TagID, Size, Name FROM NotLocalizedTags) AS result ORDER BY 
		CASE WHEN @OrderBy =''Name ASC'' THEN Name END,
		CASE WHEN @OrderBy =''Size DESC'' THEN Size END DESC,
		CASE WHEN @OrderBy =''Name DESC'' THEN Name END DESC,
		CASE WHEN @OrderBy =''Size ASC'' THEN Size END;
	END
	ELSE IF @FilterByDNNUserID <> 0
	BEGIN
		WITH AllTags(TagID, Size, Name) AS (
		SELECT TOP(@RowCount) * FROM (SELECT nt.TagID, COUNT(*) AS ''Size'', nt.[Name]
			FROM {databaseOwner}[{objectQualifier}EasyDNNNewsTagsItems] AS ti
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsNewTags] AS nt ON nt.TagID = ti.TagID
			WHERE nt.PortalID = @PortalID AND ti.ArticleID IN (SELECT DISTINCT [ArticleID] FROM(	
				SELECT DISTINCT na.[ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS na
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS cat ON na.ArticleID = cat.ArticleID
					INNER JOIN @UserViewCategoriesWithFilter AS uvcwf ON uvcwf.CategoryID = cat.CategoryID
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = na.ArticleID
					INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserID, @FilterByDNNGroupID) AS t ON t.seckey = nss.SecurityKey
					LEFT OUTER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsContentLocalization] AS ncl ON ncl.ArticleID = na.ArticleID
				WHERE na.PortalID=@PortalID
					AND ((@AdminOrSuperUser = 1) OR ((@UserCanApprove = 1 OR na.Approved=1) AND (na.Active=1 OR na.UserID=@UserID)))
					AND na.HasPermissions = 0
					AND na.PublishDate <= @CurrentDate
					AND na.ExpireDate >= @CurrentDate
					AND na.UserID = @FilterByDNNUserID
					AND ((@HideUnlocalizedItems = 1 AND ncl.ArticleID IS NOT NULL AND ncl.LocaleCode = @LocaleCode) OR (@HideUnlocalizedItems = 0))
				UNION ALL
				SELECT DISTINCT na.[ArticleID] from {databaseOwner}[{objectQualifier}EasyDNNNews] AS na
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsArticleUserPermissions] AS aup ON na.ArticleID = aup.ArticleID 
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS cat ON na.ArticleID = cat.ArticleID
					INNER JOIN @FiltredByCategories AS fbc ON fbc.CategoryID = cat.CategoryID
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = na.ArticleID
					INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserID, @FilterByDNNGroupID) AS t ON t.seckey = nss.SecurityKey
					LEFT OUTER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsContentLocalization] AS ncl ON ncl.ArticleID = na.ArticleID
				WHERE na.PortalID=@PortalID
					AND ((@AdminOrSuperUser = 1) OR (((@UserID = -1 AND aup.UserID IS NULL) OR (aup.UserID = @UserID))
						AND aup.Show = 1 AND ((@UserCanApprove = 1) OR (na.Approved=1)) AND (na.Active=1 OR na.UserID=@UserID)
					))
					AND na.HasPermissions = 1
					AND na.PublishDate <= @CurrentDate
					AND na.ExpireDate >= @CurrentDate
					AND na.UserID = @FilterByDNNUserID
					AND ((@HideUnlocalizedItems = 1 AND ncl.ArticleID IS NOT NULL AND ncl.LocaleCode = @LocaleCode) OR (@HideUnlocalizedItems = 0))
				UNION
				SELECT DISTINCT na.[ArticleID] from {databaseOwner}[{objectQualifier}EasyDNNNews] AS na
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsArticleRolePermissions] AS arp ON na.ArticleID = arp.ArticleID
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS cat ON na.ArticleID = cat.ArticleID
					INNER JOIN @FiltredByCategories AS fbc ON fbc.CategoryID = cat.CategoryID
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = na.ArticleID
					INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserID, @FilterByDNNGroupID) AS t ON t.seckey = nss.SecurityKey
					LEFT OUTER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsContentLocalization] AS ncl ON ncl.ArticleID = na.ArticleID
				WHERE na.PortalID=@PortalID
					AND ((@AdminOrSuperUser = 1) OR (((@UserCanApprove = 1) OR (na.Approved=1))
						AND (na.Active=1 OR na.UserID=@UserID) AND arp.Show = 1 AND arp.RoleID IN (SELECT [RoleID] FROM @UserInRoles)
					))
					AND na.HasPermissions = 1
					AND na.PublishDate <= @CurrentDate
					AND na.ExpireDate >= @CurrentDate
					AND na.UserID = @FilterByDNNUserID
					AND ((@HideUnlocalizedItems = 1 AND ncl.ArticleID IS NOT NULL AND ncl.LocaleCode = @LocaleCode) OR (@HideUnlocalizedItems = 0))
				) AS final
			)
			GROUP BY ti.TagID, nt.TagID, nt.Name) AS Result ORDER BY 
				CASE WHEN @OrderBy =''Name ASC'' THEN Name END,
				CASE WHEN @OrderBy =''Size DESC'' THEN Size END DESC,
				CASE WHEN @OrderBy =''Name DESC'' THEN Name END DESC,
				CASE WHEN @OrderBy =''Size ASC'' THEN Size END
	),
	LocalizedTags(TagID, Size, Name) AS (
		SELECT t.[TagID],t.[Size],ntl.[Name] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsTagsLocalization] AS ntl INNER JOIN AllTags AS t on ntl.TagID = t.TagID WHERE ntl.LocaleCode = @LocaleCode
	),
	NotLocalizedTags(TagID, Size, Name) AS(
		SELECT [TagID],[Size],[Name] FROM AllTags WHERE TagID NOT IN (SELECT TagID FROM LocalizedTags)
	)
	SELECT TagID, Size, Name FROM (SELECT TagID, Size, Name FROM LocalizedTags UNION SELECT TagID, Size, Name FROM NotLocalizedTags) AS result ORDER BY 
			CASE WHEN @OrderBy =''Name ASC'' THEN Name END,
			CASE WHEN @OrderBy =''Size DESC'' THEN Size END DESC,
			CASE WHEN @OrderBy =''Name DESC'' THEN Name END DESC,
			CASE WHEN @OrderBy =''Size ASC'' THEN Size END;
	END
	
	IF @RowCount <> 0
	BEGIN
		SET ROWCOUNT 0;
	END

END' 
END
GO
/****** Object:  StoredProcedure {databaseOwner}[{objectQualifier}EasyDNNNewsGetItemsForListDisplayOnlyEvents]    Script Date: 06/24/2013 16:39:07 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'{databaseOwner}[{objectQualifier}EasyDNNNewsGetItemsForListDisplayOnlyEvents]') AND type in (N'P', N'PC'))
BEGIN
EXEC dbo.sp_executesql @statement = N'CREATE PROCEDURE {databaseOwner}[{objectQualifier}EasyDNNNewsGetItemsForListDisplayOnlyEvents]
	@ViewType tinyint = 0, -- 0 - View, 1 - Editor
	@PortalID int, -- current Portal
	@ModuleID int, -- current Module, portal sharing isto sadrzi dobre kategorije, auto add i setingsi su snimljeni kod tog modula
	@UserID int,
	@CurrentDate Datetime, -- = GetUTCDate,
	@OrderBy nvarchar(20) = ''PublishDate DESC'',
	@ItemsFrom int = 1,
	@ItemsTo int = 5,
	@DateRange bit = 0,
	@FromDate DateTime = ''2012-01-01 00:00:00'', -- ovo ne treba za only events
	@ToDate DateTime = ''2012-01-01 00:00:00'', -- ovo ne treba za only events
	/* od tud ide filter */
	@Featured bit = 0,
	@ShowAllAuthors bit = 1, -- gleda se filtriranje autora po modulu ili portalu
	@FilterByAuthor int = 0,
	@FilterByGroupID int = 0,
	@FilterByTags bit = 0,
	/*@FilterByArticles bit = 0,*/ -- ovoga nema tu !!
	@FilterByDNNUserID int = 0, -- filter by some UserID / not current user ID
	@FilterByDNNGroupID int = 0, -- filter by DNNGroup/RoleID / not profile GroupID
	@EditOnlyAsOwner bit = 0, -- news settings
	@UserCanApprove bit = 0, -- news settings
	@LocaleCode nvarchar(20) = '''',
	@IsSocialInstance bit = 0,	
	@FirstOrderBy nvarchar(20) = '''',--''Featured DESC'', -- featured articles on top	
	@Perm_ViewAllCategores bit = 0, -- permission settings View all categories
	@Perm_EditAllCategores bit = 0, -- permission settings Edit all categories
	@AdminOrSuperUser bit = 0,
	@CategoryFilterType tinyint = 1, -- 0 All categories, 1 - SELECTion, 2 - AutoAdd
	@PermissionSettingsSource bit = 0, -- 0 portal, 1 module
	@FillterSettingsSource bit = 0, -- 0 portal, 1 module
	@StartDate DateTime = ''2012-01-01 00:00:00'',
	@OuterModuleID int = 0,
	@HideUnlocalizedItems bit = 0
AS
SET NOCOUNT ON;
DECLARE @EditPermission tinyint;
SET @EditPermission = 0;
IF @OuterModuleID = 0 AND @FilterByTags = 1
BEGIN
	DECLARE @FilterTagsTable TABLE (TagID int NOT NULL PRIMARY KEY);
	IF @FillterSettingsSource = 1 -- portal settings
		BEGIN
			INSERT INTO @FilterTagsTable SELECT TagID FROM {databaseOwner}[{objectQualifier}EasyDNNNewsPortalFilterByTagID] WHERE FilterPortalID = @PortalID;
		END
	ELSE
		BEGIN
			INSERT INTO @FilterTagsTable SELECT TagID FROM {databaseOwner}[{objectQualifier}EasyDNNNewsFilterByTagID] WHERE FilterModuleID = @ModuleID;
		END
END
DECLARE @UserInRoles TABLE (RoleID int NOT NULL PRIMARY KEY);
INSERT INTO @UserInRoles SELECT DISTINCT ur.[RoleID] FROM {databaseOwner}[{objectQualifier}UserRoles] AS ur INNER JOIN {databaseOwner}[{objectQualifier}Roles] AS r ON ur.RoleID = r.RoleID WHERE ur.UserID = @UserID AND r.PortalID = @PortalID AND (ur.ExpiryDate IS NULL OR ur.ExpiryDate > GETUTCDATE()) AND (ur.EffectiveDate IS NULL OR ur.EffectiveDate < GETUTCDATE());

DECLARE @UserViewCategories TABLE (CategoryID int NOT NULL PRIMARY KEY); -- all categories which user can see based on permissions
DECLARE @UserEditCategories TABLE (CategoryID int NOT NULL PRIMARY KEY); -- all categories which user can edit based on permissions
DECLARE @UserViewCategoriesWithFilter TABLE (CategoryID int NOT NULL PRIMARY KEY); -- all categories which user can see based on permissions and Module filter
DECLARE @FiltredByCategories TABLE (CategoryID int NOT NULL PRIMARY KEY); -- all categories that are filtred by module or portal

IF @UserID = -1
BEGIN	
	IF @Perm_ViewAllCategores = 1
	BEGIN
		INSERT INTO @UserViewCategories SELECT [CategoryID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryList] WHERE PortalID = @PortalID;
	END
	ELSE -- SELECTion by permission
	BEGIN
		IF @PermissionSettingsSource = 1 -- by portal
		BEGIN
			INSERT INTO @UserViewCategories
			SELECT rpsc.[CategoryID] FROM  {databaseOwner}[{objectQualifier}EasyDNNNewsRolePremissionsShowCategories] AS rpsc 
			INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsRolePremissionSettings] AS rps ON rps.PremissionSettingsID = rpsc.PremissionSettingsID
			WHERE rps.PortalID = @PortalID  AND rps.ModuleID IS NULL AND rps.RoleID IS NULL;
		END
		ELSE -- by module
		BEGIN
		INSERT INTO @UserViewCategories
			SELECT rpsc.[CategoryID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsRolePremissionsShowCategories] AS rpsc
			INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsRolePremissionSettings] AS rps ON rps.PremissionSettingsID = rpsc.PremissionSettingsID
			WHERE rps.PortalID = @PortalID AND rps.ModuleID = @ModuleID AND rps.RoleID IS NULL;
		END
	END
END
ELSE IF @AdminOrSuperUser = 1
BEGIN
	INSERT INTO @UserViewCategories SELECT [CategoryID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryList] WHERE PortalID = @PortalID;
END
ELSE -- registrirani korisnik
BEGIN
	IF @Perm_ViewAllCategores = 1
	BEGIN
		INSERT INTO @UserViewCategories SELECT [CategoryID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryList] WHERE PortalID = @PortalID;
	END
	ELSE
	BEGIN
		IF @PermissionSettingsSource = 1 -- by portal
		BEGIN
			INSERT INTO @UserViewCategories
			SELECT rpsc.[CategoryID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsRolePremissionsShowCategories] AS rpsc
			INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsRolePremissionSettings] AS rps ON rps.PremissionSettingsID = rpsc.PremissionSettingsID
			INNER JOIN @UserInRoles AS uir ON rps.RoleID = uir.RoleID
			WHERE rps.PortalID = @PortalID AND rps.ModuleID IS NULL GROUP BY rpsc.[CategoryID]
			UNION
			SELECT upsc.[CategoryID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsUserPremissionsShowCategories] AS upsc
			INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsUserPremissionSettings] AS ups ON ups.PremissionSettingsID = upsc.PremissionSettingsID
			WHERE ups.UserID = @UserID AND ups.PortalID = @PortalID AND ups.ModuleID IS NULL GROUP BY upsc.[CategoryID];
		END
		ELSE -- by module
		BEGIN
			INSERT INTO @UserViewCategories
			SELECT rpsc.[CategoryID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsRolePremissionsShowCategories] AS rpsc
			INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsRolePremissionSettings] AS rps ON rps.PremissionSettingsID = rpsc.PremissionSettingsID
			INNER JOIN @UserInRoles AS uir ON rps.RoleID = uir.RoleID
			WHERE rps.PortalID = @PortalID AND rps.ModuleID = @ModuleID GROUP BY rpsc.[CategoryID]
			UNION
			SELECT upsc.[CategoryID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsUserPremissionsShowCategories] AS upsc
			INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsUserPremissionSettings] AS ups ON ups.PremissionSettingsID = upsc.PremissionSettingsID
			WHERE ups.UserID = @UserID AND ups.PortalID = @PortalID AND ups.ModuleID = @ModuleID GROUP BY upsc.[CategoryID];
		END
	END
END

IF @OuterModuleID <> 0
BEGIN
	IF @CategoryFilterType = 0 -- 0 All categories
	BEGIN
		INSERT INTO @UserViewCategoriesWithFilter SELECT [CategoryID] FROM @UserViewCategories;
		INSERT INTO @FiltredByCategories SELECT [CategoryID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryList] WHERE PortalID = @PortalID;
	END
	ELSE IF @CategoryFilterType = 1 -- 1 - SELECTion
	BEGIN
		INSERT INTO @UserViewCategoriesWithFilter 
		SELECT cl.[CategoryID] FROM @UserViewCategories AS cl
		INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsModuleCategoryItems] AS mci ON mci.CategoryID = cl.CategoryID AND mci.ModuleID = @OuterModuleID
			
		INSERT INTO @FiltredByCategories SELECT [CategoryID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsModuleCategoryItems] WHERE ModuleID = @OuterModuleID;
	END
	ELSE IF @CategoryFilterType = 2 -- 2 - AutoAdd
	BEGIN
		WITH hierarchy AS(
			SELECT [CategoryID], [ParentCategory]
			FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryList] AS cl
			WHERE (cl.ParentCategory IN (SELECT [CategoryID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsModuleCategoryItems] WHERE ModuleID = @OuterModuleID) OR cl.CategoryID IN (SELECT [CategoryID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsModuleCategoryItems] WHERE ModuleID = @OuterModuleID)) AND PortalID = @PortalID
			UNION ALL
			SELECT c.[CategoryID], c.[ParentCategory]
			FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryList] AS c INNER JOIN hierarchy AS p ON c.ParentCategory = p.CategoryID WHERE c.PortalID = @PortalID
			)
		INSERT INTO @FiltredByCategories SELECT DISTINCT CategoryID FROM hierarchy;	
		INSERT INTO @UserViewCategoriesWithFilter SELECT uvc.CategoryID FROM @FiltredByCategories AS nfc INNER JOIN @UserViewCategories AS uvc ON uvc.CategoryID = nfc.CategoryID;
	END
END
ELSE
BEGIN
	IF @CategoryFilterType = 0 -- 0 All categories
	BEGIN
		INSERT INTO @UserViewCategoriesWithFilter SELECT [CategoryID] FROM @UserViewCategories;
		INSERT INTO @FiltredByCategories SELECT [CategoryID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryList] WHERE PortalID = @PortalID;
	END
	ELSE IF @CategoryFilterType = 1 -- 1 - SELECTion
	BEGIN
		IF @FillterSettingsSource = 1 -- portal
		BEGIN
			INSERT INTO @UserViewCategoriesWithFilter 
			SELECT cl.[CategoryID] FROM @UserViewCategories AS cl
			INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsPortalCategoryItems] AS pci ON pci.CategoryID = cl.CategoryID AND pci.PortalID = @PortalID
			
			INSERT INTO @FiltredByCategories SELECT [CategoryID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsPortalCategoryItems] WHERE PortalID = @PortalID;
		END
		ELSE -- module
		BEGIN
			INSERT INTO @UserViewCategoriesWithFilter 
			SELECT cl.[CategoryID] FROM @UserViewCategories AS cl
			INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsModuleCategoryItems] AS mci ON mci.CategoryID = cl.CategoryID AND mci.ModuleID = @ModuleID
			
			INSERT INTO @FiltredByCategories SELECT [CategoryID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsModuleCategoryItems] WHERE ModuleID = @ModuleID;
		END
	END
	ELSE IF @CategoryFilterType = 2 -- 2 - AutoAdd
	BEGIN
		IF @FillterSettingsSource = 1 -- portal
		BEGIN
			WITH hierarchy AS(
				SELECT [CategoryID], [ParentCategory]
				FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryList] AS cl
				WHERE (cl.ParentCategory IN (SELECT [CategoryID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsPortalCategoryItems] WHERE PortalID = @PortalID) OR cl.CategoryID IN (SELECT [CategoryID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsPortalCategoryItems] WHERE PortalID = @PortalID)) AND PortalID = @PortalID
				UNION ALL
				SELECT c.[CategoryID], c.[ParentCategory]
				FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryList] AS c INNER JOIN hierarchy AS p ON c.ParentCategory = p.CategoryID WHERE c.PortalID = @PortalID
				)
			INSERT INTO @FiltredByCategories SELECT DISTINCT CategoryID FROM hierarchy;	
			INSERT INTO @UserViewCategoriesWithFilter SELECT uvc.CategoryID FROM @FiltredByCategories AS nfc INNER JOIN @UserViewCategories AS uvc ON uvc.CategoryID = nfc.CategoryID;			
		END
		ELSE -- module
		BEGIN
			WITH hierarchy AS(
				SELECT [CategoryID], [ParentCategory]
				FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryList] AS cl
				WHERE (cl.ParentCategory IN (SELECT [CategoryID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsModuleCategoryItems] WHERE ModuleID = @ModuleID) OR cl.CategoryID IN (SELECT [CategoryID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsModuleCategoryItems] WHERE ModuleID = @ModuleID)) AND PortalID = @PortalID
				UNION ALL
				SELECT c.[CategoryID], c.[ParentCategory]
				FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryList] AS c INNER JOIN hierarchy AS p ON c.ParentCategory = p.CategoryID WHERE c.PortalID = @PortalID
				)
			INSERT INTO @FiltredByCategories SELECT DISTINCT CategoryID FROM hierarchy;	
			INSERT INTO @UserViewCategoriesWithFilter SELECT uvc.CategoryID FROM @FiltredByCategories AS nfc INNER JOIN @UserViewCategories AS uvc ON uvc.CategoryID = nfc.CategoryID;
		END
	END
END

DECLARE @FilterBySocialGroup bit;
SET @FilterBySocialGroup = 0;
DECLARE @FilterAuthorOrAuthors bit;
SET @FilterAuthorOrAuthors = 0;

DECLARE @TempAuthorsIDList TABLE (UserID int NOT NULL PRIMARY KEY);
IF @IsSocialInstance = 1
	BEGIN
		IF @FilterByDNNGroupID <> 0
		BEGIN	
			SET @FilterBySocialGroup = 1;
			IF @FilterByAuthor <> 0
			BEGIN
				SET @FilterAuthorOrAuthors = 1;
				SELECT @FilterByAuthor = UserID FROM {databaseOwner}[{objectQualifier}EasyDNNNewsAuthorProfile] WHERE [AuthorProfileID] = @FilterByAuthor;
			END
		END
	END
ELSE
BEGIN
-- ovaj dio odnosi se na filtriranje autora
	IF @OuterModuleID <> 0 AND @ShowAllAuthors = 0 -- filter iu other modula
	BEGIN
		SET @FilterAuthorOrAuthors = 1;
		INSERT INTO @TempAuthorsIDList
			SELECT [UserID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsModuleAuthorsItems] AS mai WHERE mai.ModuleID = @OuterModuleID
			UNION 
			SELECT [UserID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsAuthorProfile] AS ap 
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsAutorGroupItems] AS agi ON ap.AuthorProfileID = agi.AuthorProfileID
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsModuleGroupItems] AS mgi ON mgi.GroupID = agi.GroupID
			WHERE mgi.ModuleID = @OuterModuleID
	END
	ELSE
	BEGIN
		IF @FilterByAuthor = 0 AND @FilterByGroupID = 0 AND @ShowAllAuthors = 0 -- filter glavnog newsa
		BEGIN
			SET @FilterAuthorOrAuthors = 1;
			IF @FillterSettingsSource = 1 -- by portal
			BEGIN
				INSERT INTO @TempAuthorsIDList
				SELECT [UserID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsPortalAuthorsItems] AS pai WHERE pai.PortalID = @PortalID
				UNION 
				SELECT [UserID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsAuthorProfile] AS ap 
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsAutorGroupItems] AS agi ON ap.AuthorProfileID = agi.AuthorProfileID
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsPortalGroupItems] AS pgi ON pgi.GroupID = agi.GroupID
					WHERE pgi.PortalID = @PortalID
			END
			ELSE -- by modul
			BEGIN
				INSERT INTO @TempAuthorsIDList
				SELECT [UserID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsModuleAuthorsItems] AS mai WHERE mai.ModuleID = @ModuleID
				UNION 
				SELECT [UserID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsAuthorProfile] AS ap 
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsAutorGroupItems] AS agi ON ap.AuthorProfileID = agi.AuthorProfileID
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsModuleGroupItems] AS mgi ON mgi.GroupID = agi.GroupID
					WHERE mgi.ModuleID = @ModuleID
			END
		END
		ELSE IF @FilterByAuthor <> 0
		BEGIN
			SET @FilterAuthorOrAuthors = 1;
			INSERT INTO @TempAuthorsIDList SELECT [UserID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsAuthorProfile] WHERE [AuthorProfileID] = @FilterByAuthor;
		END
		ELSE IF @FilterByGroupID <> 0
		BEGIN
			SET @FilterAuthorOrAuthors = 1;
			INSERT INTO @TempAuthorsIDList
			SELECT [UserID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsAuthorProfile] AS ap 
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsAutorGroupItems] AS agi ON ap.AuthorProfileID = agi.AuthorProfileID	
				WHERE agi.GroupID = @FilterByGroupID
		END
	END
END
-- kategorije sa edit pravima
IF @AdminOrSuperUser = 1 OR @Perm_EditAllCategores = 1
BEGIN	
	INSERT INTO @UserEditCategories SELECT CategoryID FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryList] WHERE PortalID = @PortalID;
	SET @EditPermission = 1;
END
ELSE
BEGIN
	IF @UserID = -1
	BEGIN
		IF @PermissionSettingsSource = 1 -- by portal
		BEGIN
			INSERT INTO @UserEditCategories
			SELECT rpatc.[CategoryID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsRolePremissionsAddToCategories] AS rpatc
			INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsRolePremissionSettings] AS rps ON rps.PremissionSettingsID = rpatc.PremissionSettingsID
			WHERE rps.PortalID = @PortalID AND rps.ModuleID IS NULL AND rps.RoleID IS NULL;
		END
		ELSE -- by module
		BEGIN
		INSERT INTO @UserEditCategories
			SELECT rpatc.[CategoryID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsRolePremissionsAddToCategories] AS rpatc
			INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsRolePremissionSettings] AS rps ON rps.PremissionSettingsID = rpatc.PremissionSettingsID
			WHERE rps.RoleID IS NULL AND rps.PortalID = @PortalID AND rps.ModuleID = @ModuleID;
		END
	END
	ELSE -- registrirani korisnik
	BEGIN
		IF @PermissionSettingsSource = 1 -- by portal
		BEGIN
			INSERT INTO @UserEditCategories
			SELECT rpatc.[CategoryID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsRolePremissionsAddToCategories] AS rpatc
			INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsRolePremissionSettings] AS rps ON rps.PremissionSettingsID = rpatc.PremissionSettingsID
			INNER JOIN @UserInRoles AS uir ON rps.RoleID = uir.RoleID
			WHERE rps.PortalID = @PortalID AND rps.ModuleID IS NULL GROUP BY rpatc.[CategoryID]
			UNION
			SELECT upatc.[CategoryID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsUserPremissionsAddToCategories] AS upatc
			INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsUserPremissionSettings] AS ups ON ups.PremissionSettingsID = upatc.PremissionSettingsID
			WHERE ups.UserID = @UserID AND ups.PortalID = @PortalID AND ups.ModuleID IS NULL GROUP BY upatc.[CategoryID];
		END
		ELSE -- by module
		BEGIN
			INSERT INTO @UserEditCategories
			SELECT rpatc.[CategoryID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsRolePremissionsAddToCategories] AS rpatc
			INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsRolePremissionSettings] AS rps ON rps.PremissionSettingsID = rpatc.PremissionSettingsID
			INNER JOIN @UserInRoles AS uir ON rps.RoleID = uir.RoleID
			WHERE rps.PortalID = @PortalID AND rps.ModuleID = @ModuleID GROUP BY rpatc.[CategoryID]
			UNION
			SELECT upatc.[CategoryID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsUserPremissionsAddToCategories] AS upatc
			INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsUserPremissionSettings] AS ups ON ups.PremissionSettingsID = upatc.PremissionSettingsID
			WHERE ups.UserID = @UserID AND ups.PortalID = @PortalID AND ups.ModuleID = @ModuleID GROUP BY upatc.[CategoryID];
		END	
	END
	IF EXISTS(SELECT * FROM @UserEditCategories) BEGIN SET @EditPermission = 2; END
END

DECLARE @LocalizedCategories TABLE (ID int NOT NULL PRIMARY KEY, Name nvarchar(200), Position int, CategoryURL nvarchar(1500));
IF @LocaleCode <> ''''
BEGIN
	WITH LocCategories(ID, Name, Position, CategoryURL) AS (
		SELECT Cat.CategoryID AS ID, cl.Title AS Name, Cat.Position, Cat.CategoryURL FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryList] AS Cat INNER JOIN @UserViewCategories AS uvc ON uvc.CategoryID = Cat.CategoryID INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryLocalization] AS cl ON uvc.CategoryID = cl.CategoryID WHERE Cat.PortalID = @PortalID AND cl.LocaleCode = @LocaleCode
	),
	NotLocCategories(ID, Name, Position, CategoryURL) AS (
		SELECT Cat.CategoryID AS ID, Cat.CategoryName AS Name, Cat.Position, Cat.CategoryURL FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryList] AS Cat INNER JOIN @UserViewCategories AS uvc ON uvc.CategoryID = Cat.CategoryID WHERE Cat.PortalID = @PortalID AND Cat.CategoryID NOT IN (SELECT ID FROM LocCategories)
	)
	INSERT INTO @LocalizedCategories SELECT ID, Name, Position, CategoryURL FROM (SELECT ID, Name, Position, CategoryURL FROM LocCategories UNION ALL SELECT ID, Name, Position, CategoryURL FROM NotLocCategories) AS ArticleCategories
END
ELSE
BEGIN
	INSERT INTO @LocalizedCategories SELECT Cat.CategoryID AS ID, Cat.CategoryName AS Name, Cat.Position, Cat.CategoryURL FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryList] AS Cat INNER JOIN @UserViewCategories AS uvc ON uvc.CategoryID = cat.CategoryID WHERE Cat.PortalID = @PortalID
END

IF @IsSocialInstance = 0
BEGIN
	IF @LocaleCode <> ''''
	BEGIN
		WITH FinalArticleIDsSet (ArticleID,StartDate) AS(
			SELECT TOP (@ItemsTo - @ItemsFrom + 1) ArticleID, StartDate FROM (SELECT n.*, ned.StartDate, ROW_NUMBER() OVER (ORDER BY 
				CASE WHEN @FirstOrderBy =''Featured DESC'' THEN Featured END DESC,
				CASE WHEN @OrderBy =''PublishDate ASC'' THEN PublishDate END,
				CASE WHEN @OrderBy =''PublishDate DESC'' THEN PublishDate END DESC,
				CASE WHEN @OrderBy =''NumberOfViews ASC'' THEN NumberOfViews END,
				CASE WHEN @OrderBy =''NumberOfViews DESC'' THEN NumberOfViews END DESC,
				CASE WHEN @OrderBy =''RatingValue ASC'' THEN RatingValue END,
				CASE WHEN @OrderBy =''RatingValue DESC'' THEN RatingValue END DESC,
				CASE WHEN @OrderBy =''DateAdded ASC'' THEN DateAdded END,
				CASE WHEN @OrderBy =''DateAdded DESC'' THEN DateAdded END DESC,
				CASE WHEN @OrderBy =''ExpireDate ASC'' THEN ExpireDate END,
				CASE WHEN @OrderBy =''ExpireDate DESC'' THEN ExpireDate END DESC,
				CASE WHEN @OrderBy =''LastModified ASC'' THEN LastModified END,
				CASE WHEN @OrderBy =''LastModified DESC'' THEN LastModified END DESC,
				CASE WHEN @OrderBy =''NumberOfComments ASC'' THEN NumberOfComments END,
				CASE WHEN @OrderBy =''NumberOfComments DESC'' THEN NumberOfComments END DESC,
				CASE WHEN @OrderBy =''Title ASC'' THEN Title END,
				CASE WHEN @OrderBy =''Title DESC'' THEN Title END DESC,
				CASE WHEN @OrderBy =''StartDate ASC'' THEN ned.StartDate END,
				CASE WHEN @OrderBy =''StartDate DESC'' THEN ned.StartDate END DESC) AS Kulike
			FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS n INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsEventsData] AS ned ON n.ArticleID = ned.ArticleID WHERE n.ArticleID IN(
				SELECT DISTINCT na.[ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS na
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS cat ON na.ArticleID = cat.ArticleID
					INNER JOIN @UserViewCategoriesWithFilter  AS uvcwf ON uvcwf.CategoryID = cat.CategoryID
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsEventsData] AS ne ON ne.ArticleID = na.ArticleID
					LEFT OUTER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsTagsItems] AS ti ON na.ArticleID = ti.ArticleID
					LEFT OUTER JOIN @FilterTagsTable AS fbt ON ti.TagID = fbt.TagID
					LEFT OUTER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsContentLocalization] AS ncl ON ncl.ArticleID = na.ArticleID 	
				WHERE na.PortalID=@PortalID
					AND ((@EditPermission = 1) OR ((@UserCanApprove = 1 OR na.Approved=1) AND (na.Active=1 OR na.UserID=@UserID)))
					AND na.HasPermissions = 0
					AND (
						(@DateRange = 0 AND ne.StartDate >= @StartDate) OR -- kada nije zadan date range, odnosi se na main news
						(@DateRange = 1 AND (ne.StartDate <= @ToDate AND ne.EndDate >= @FromDate)) -- odnosi se na date range zadanao iz outer modula	   
						) 
					AND ((@Featured = 1 AND na.Featured = 1) OR (@Featured = 0))
					AND na.PublishDate <= @CurrentDate AND na.ExpireDate >= @CurrentDate
					AND ((@FilterAuthorOrAuthors = 1 AND na.UserID IN (SELECT UserID FROM @TempAuthorsIDList)) OR (@FilterAuthorOrAuthors = 0))
					AND ((@FilterByTags = 1 AND fbt.TagID IS NOT NULL) OR (@FilterByTags = 0))
					AND ((@HideUnlocalizedItems = 1 AND ncl.ArticleID IS NOT NULL AND ncl.LocaleCode = @LocaleCode) OR (@HideUnlocalizedItems = 0))
				UNION ALL
				SELECT na.[ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS na
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsArticleUserPermissions] AS aup ON na.ArticleID = aup.ArticleID
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS cat ON na.ArticleID = cat.ArticleID
					INNER JOIN @FiltredByCategories AS fbc ON fbc.CategoryID = cat.CategoryID
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsEventsData] AS ne ON ne.ArticleID = na.ArticleID
					LEFT OUTER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsTagsItems] AS ti ON na.ArticleID = ti.ArticleID
					LEFT OUTER JOIN @FilterTagsTable AS fbt ON ti.TagID = fbt.TagID
					LEFT OUTER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsContentLocalization] AS ncl ON ncl.ArticleID = na.ArticleID 	
				WHERE na.PortalID=@PortalID
					AND ((@EditPermission = 1) OR (((@UserID = -1 AND aup.UserID IS NULL) OR (aup.UserID = @UserID))
						AND aup.Show = 1 AND ((@UserCanApprove = 1) OR (na.Approved=1)) AND (na.Active=1 OR na.UserID=@UserID)
					))
					AND na.HasPermissions = 1
					AND (
					  (@DateRange = 0 AND ne.StartDate >= @StartDate) OR
					  (@DateRange = 1 AND (ne.StartDate <= @ToDate AND ne.EndDate >= @FromDate))  
					  ) 
					AND ((@Featured = 1 AND na.Featured = 1) OR (@Featured = 0))
					AND na.PublishDate <= @CurrentDate AND na.ExpireDate >= @CurrentDate
					AND ((@FilterAuthorOrAuthors = 1 AND na.UserID IN (SELECT UserID FROM @TempAuthorsIDList)) OR (@FilterAuthorOrAuthors = 0))
					AND ((@FilterByTags = 1 AND fbt.TagID IS NOT NULL) OR (@FilterByTags = 0))
					AND ((@HideUnlocalizedItems = 1 AND ncl.ArticleID IS NOT NULL AND ncl.LocaleCode = @LocaleCode) OR (@HideUnlocalizedItems = 0))
				UNION
				SELECT DISTINCT na.[ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS na
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsArticleRolePermissions] AS arp ON na.ArticleID = arp.ArticleID
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS cat ON na.ArticleID = cat.ArticleID
					INNER JOIN @FiltredByCategories AS fbc ON fbc.CategoryID = cat.CategoryID
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsEventsData] AS ne ON ne.ArticleID = na.ArticleID
					LEFT OUTER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsTagsItems] AS ti ON na.ArticleID = ti.ArticleID
					LEFT OUTER JOIN @FilterTagsTable AS fbt ON ti.TagID = fbt.TagID
					LEFT OUTER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsContentLocalization] AS ncl ON ncl.ArticleID = na.ArticleID 	
				WHERE na.PortalID=@PortalID
					AND ((@EditPermission = 1) OR (((@UserCanApprove = 1) OR (na.Approved=1))
						AND (na.Active=1 OR na.UserID=@UserID) AND arp.Show = 1 AND arp.RoleID IN (SELECT [RoleID] FROM @UserInRoles)
					))
					AND na.HasPermissions = 1
					AND (
					  (@DateRange = 0 AND ne.StartDate >= @StartDate) OR
					  (@DateRange = 1 AND (ne.StartDate <= @ToDate AND ne.EndDate >= @FromDate))  
					  ) 
					AND ((@Featured = 1 AND na.Featured = 1) OR (@Featured = 0))
					AND na.PublishDate <= @CurrentDate AND na.ExpireDate >= @CurrentDate
					AND ((@FilterAuthorOrAuthors = 1 AND na.UserID IN (SELECT UserID FROM @TempAuthorsIDList)) OR (@FilterAuthorOrAuthors = 0))	 
					AND ((@FilterByTags = 1 AND fbt.TagID IS NOT NULL) OR (@FilterByTags = 0))
					AND ((@HideUnlocalizedItems = 1 AND ncl.ArticleID IS NOT NULL AND ncl.LocaleCode = @LocaleCode) OR (@HideUnlocalizedItems = 0))
					)
			) AS Result WHERE Kulike BETWEEN @ItemsFrom AND @ItemsTo ORDER BY
				CASE WHEN @FirstOrderBy =''Featured DESC'' THEN Featured END DESC,
				CASE WHEN @OrderBy =''PublishDate ASC'' THEN PublishDate END,
				CASE WHEN @OrderBy =''PublishDate DESC'' THEN PublishDate END DESC,
				CASE WHEN @OrderBy =''NumberOfViews ASC'' THEN NumberOfViews END,
				CASE WHEN @OrderBy =''NumberOfViews DESC'' THEN NumberOfViews END DESC,
				CASE WHEN @OrderBy =''RatingValue ASC'' THEN RatingValue END,
				CASE WHEN @OrderBy =''RatingValue DESC'' THEN RatingValue END DESC,
				CASE WHEN @OrderBy =''DateAdded ASC'' THEN DateAdded END,
				CASE WHEN @OrderBy =''DateAdded DESC'' THEN DateAdded END DESC,
				CASE WHEN @OrderBy =''ExpireDate ASC'' THEN ExpireDate END,
				CASE WHEN @OrderBy =''ExpireDate DESC'' THEN ExpireDate END DESC,
				CASE WHEN @OrderBy =''LastModified ASC'' THEN LastModified END,
				CASE WHEN @OrderBy =''LastModified DESC'' THEN LastModified END DESC,
				CASE WHEN @OrderBy =''NumberOfComments ASC'' THEN NumberOfComments END,
				CASE WHEN @OrderBy =''NumberOfComments DESC'' THEN NumberOfComments END DESC,
				CASE WHEN @OrderBy =''Title ASC'' THEN Title END,
				CASE WHEN @OrderBy =''Title DESC'' THEN Title END DESC,
				CASE WHEN @OrderBy =''StartDate ASC'' THEN StartDate END,
				CASE WHEN @OrderBy =''StartDate DESC'' THEN StartDate END DESC
		),
		FinalLocalizedArticleIDsSet (ArticleID,Title,SubTitle,Summary,Article,DetailTypeData,TitleLink,MetaDecription,MetaKeywords,MainImageTitle,MainImageDescription) AS(
			SELECT ArticleID,Title,SubTitle,Summary,Article,DetailTypeData,clTitleLink AS TitleLink ,MetaDecription,MetaKeywords,MainImageTitle,MainImageDescription FROM {databaseOwner}[{objectQualifier}EasyDNNNewsContentLocalization] WHERE ArticleID IN (SELECT ArticleID FROM FinalArticleIDsSet) AND LocaleCode = @LocaleCode
		)
		SELECT *,
			CASE @EditPermission 
				WHEN 0 THEN 0
				WHEN 1 THEN 1
				WHEN 2 THEN
				CASE @EditOnlyAsOwner
					WHEN 0 THEN			
						CASE WHEN EXISTS(SELECT CategoryID FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS c WHERE c.ArticleID = Result.ArticleID AND c.CategoryID IN (SELECT CategoryID FROM @UserEditCategories))
							THEN 1
							ELSE
								CASE WHEN EXISTS(SELECT [ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsArticleRolePermissions] AS arp WHERE arp.ArticleID = Result.ArticleID AND arp.Edit = 1 AND arp.RoleID IN(SELECT RoleID FROM @UserInRoles))
								THEN 1
								ELSE
									CASE WHEN EXISTS (SELECT [ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsArticleUserPermissions] AS aup WHERE aup.ArticleID = Result.ArticleID AND aup.Edit = 1 AND aup.UserID = @UserID)
										THEN 1
										ELSE 0
									END
								END
						END  			
					WHEN 1 THEN
						CASE WHEN EXISTS(SELECT CategoryID FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS c WHERE Result.UserID = @UserID AND c.ArticleID = Result.ArticleID AND c.CategoryID IN (SELECT CategoryID FROM @UserEditCategories))
							THEN 1
							ELSE
								CASE WHEN EXISTS(SELECT [ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsArticleRolePermissions] AS arp WHERE arp.ArticleID = Result.ArticleID AND arp.Edit = 1 AND arp.RoleID IN(SELECT RoleID FROM @UserInRoles))
								THEN 1
								ELSE
									CASE WHEN EXISTS (SELECT [ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsArticleUserPermissions] AS aup WHERE aup.ArticleID = Result.ArticleID AND aup.Edit = 1 AND aup.UserID = @UserID)
										THEN 1
										ELSE 0
									END
								END 
						END
				END
				WHEN 3 THEN
					CASE WHEN EXISTS(SELECT [ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsArticleRolePermissions] AS arp WHERE arp.ArticleID = Result.ArticleID AND arp.Edit = 1 AND arp.RoleID IN(SELECT RoleID FROM @UserInRoles))
						THEN 1
						ELSE
						CASE WHEN EXISTS (SELECT [ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsArticleUserPermissions] AS aup WHERE aup.ArticleID = Result.ArticleID AND aup.Edit = 1 AND aup.UserID = @UserID)
							THEN 1
							ELSE 0
							END
						END 
			END AS ''CanEdit'',
			(SELECT cat.ID, cat.Name, cat.CategoryURL FROM @LocalizedCategories AS Cat INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS c ON c.CategoryID = Cat.ID WHERE c.ArticleID = Result.ArticleID ORDER BY Position FOR XML AUTO, ROOT(''root'')) AS ''CatToShow'',
			 CASE Result.Active
				WHEN 1 THEN 0
				WHEN 0 THEN 1
			 END AS ''Published'',
			 CASE @UserCanApprove
				WHEN 0 THEN 0
				WHEN 1 THEN
					CASE Result.Approved
					 WHEN 1 THEN 0
					 WHEN 0 THEN
						 CASE Result.Active
							WHEN 1 THEN 1
							WHEN 0 THEN 0
						END
					END
			 END AS ''Approve''
			 FROM (
				SELECT n.[ArticleID],n.[UserID],n.[Title],n.[SubTitle],n.[Summary],n.[Article],n.[ArticleImage],n.[DateAdded],n.[LastModified],n.[PublishDate]
					,n.[ExpireDate],n.[Approved],n.[Featured],n.[NumberOfViews],n.[RatingValue],n.[RatingCount],n.[AllowComments],n.[Active]
					,n.[TitleLink],n.[DetailType],n.[DetailTypeData],n.[DetailsTemplate],n.[DetailsTheme],n.[GalleryPosition],n.[GalleryDisplayType]
					,n.[ShowMainImage],n.[ShowMainImageFront],n.[CommentsTheme],n.[ArticleImageFolder],n.[NumberOfComments]
					,n.[ArticleImageSet],n.[MetaDecription],n.[MetaKeywords],n.[DisplayStyle],n.[DetailTarget]
					,n.[ArticleFromRSS],n.[HasPermissions],n.[EventArticle],n.[DetailMediaType],n.[DetailMediaData],n.[AuthorAliasName],n.[ShowGallery],n.[ArticleGalleryID],n.[MainImageTitle],n.[MainImageDescription], ned.StartDate
					FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS n INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsEventsData] AS ned ON n.ArticleID = ned.ArticleID WHERE n.ArticleID IN (SELECT ArticleID FROM FinalArticleIDsSet WHERE ArticleID NOT IN (SELECT ArticleID FROM FinalLocalizedArticleIDsSet))
				UNION ALL
				SELECT n.[ArticleID],n.[UserID],fla.[Title],fla.[SubTitle],fla.[Summary],fla.[Article],n.[ArticleImage],n.[DateAdded],n.[LastModified],n.[PublishDate]
					,n.[ExpireDate],n.[Approved],n.[Featured],n.[NumberOfViews],n.[RatingValue],n.[RatingCount],n.[AllowComments],n.[Active]
					,fla.[TitleLink],n.[DetailType],fla.[DetailTypeData],n.[DetailsTemplate],n.[DetailsTheme],n.[GalleryPosition],n.[GalleryDisplayType]
					,n.[ShowMainImage],n.[ShowMainImageFront],n.[CommentsTheme],n.[ArticleImageFolder],n.[NumberOfComments]
					,n.[ArticleImageSet],fla.[MetaDecription],fla.[MetaKeywords],n.[DisplayStyle],n.[DetailTarget]
					,n.[ArticleFromRSS],n.[HasPermissions],n.[EventArticle],n.[DetailMediaType],n.[DetailMediaData],n.[AuthorAliasName],n.[ShowGallery],n.[ArticleGalleryID],fla.[MainImageTitle],fla.[MainImageDescription], ned.StartDate
				FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS n INNER JOIN FinalLocalizedArticleIDsSet AS fla ON fla.ArticleID = n.ArticleID INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsEventsData] AS ned ON fla.ArticleID = ned.ArticleID) As Result		 
			ORDER BY
			 CASE WHEN @FirstOrderBy =''Featured DESC'' THEN Featured END DESC,
			 CASE WHEN @OrderBy =''PublishDate ASC'' THEN PublishDate END,
			 CASE WHEN @OrderBy =''PublishDate DESC'' THEN PublishDate END DESC,
			 CASE WHEN @OrderBy =''NumberOfViews ASC'' THEN NumberOfViews END,
			 CASE WHEN @OrderBy =''NumberOfViews DESC'' THEN NumberOfViews END DESC,
			 CASE WHEN @OrderBy =''RatingValue ASC'' THEN RatingValue END,
			 CASE WHEN @OrderBy =''RatingValue DESC'' THEN RatingValue END DESC,
			 CASE WHEN @OrderBy =''DateAdded ASC'' THEN DateAdded END,
			 CASE WHEN @OrderBy =''DateAdded DESC'' THEN DateAdded END DESC,
			 CASE WHEN @OrderBy =''ExpireDate ASC'' THEN ExpireDate END,
			 CASE WHEN @OrderBy =''ExpireDate DESC'' THEN ExpireDate END DESC,
			 CASE WHEN @OrderBy =''LastModified ASC'' THEN LastModified END,
			 CASE WHEN @OrderBy =''LastModified DESC'' THEN LastModified END DESC,
			 CASE WHEN @OrderBy =''NumberOfComments ASC'' THEN NumberOfComments END,
			 CASE WHEN @OrderBy =''NumberOfComments DESC'' THEN NumberOfComments END DESC,
			 CASE WHEN @OrderBy =''Title ASC'' THEN Title END,
			 CASE WHEN @OrderBy =''Title DESC'' THEN Title END DESC,
			 CASE WHEN @OrderBy =''StartDate ASC'' THEN StartDate END,
			 CASE WHEN @OrderBy =''StartDate DESC'' THEN StartDate END DESC;
	END
	ELSE
	BEGIN
		SELECT *,
		CASE @EditPermission 
			WHEN 0 THEN 0
			WHEN 1 THEN 1
			WHEN 2 THEN
			CASE @EditOnlyAsOwner
				WHEN 0 THEN			
					CASE WHEN EXISTS(SELECT CategoryID FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS c WHERE c.ArticleID = Result.ArticleID AND c.CategoryID IN (SELECT CategoryID FROM @UserEditCategories))
						THEN 1
						ELSE
							CASE WHEN EXISTS(SELECT [ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsArticleRolePermissions] AS arp WHERE arp.ArticleID = Result.ArticleID AND arp.Edit = 1 AND arp.RoleID IN(SELECT RoleID FROM @UserInRoles))
							THEN 1
							ELSE
								CASE WHEN EXISTS (SELECT [ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsArticleUserPermissions] AS aup WHERE aup.ArticleID = Result.ArticleID AND aup.Edit = 1 AND aup.UserID = @UserID)
									THEN 1
									ELSE 0
								END
							END
					END  			
				WHEN 1 THEN
					CASE WHEN EXISTS(SELECT CategoryID FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS c WHERE Result.UserID = @UserID AND c.ArticleID = Result.ArticleID AND c.CategoryID IN (SELECT CategoryID FROM @UserEditCategories))
						THEN 1
						ELSE
							CASE WHEN EXISTS(SELECT [ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsArticleRolePermissions] AS arp WHERE arp.ArticleID = Result.ArticleID AND arp.Edit = 1 AND arp.RoleID IN(SELECT RoleID FROM @UserInRoles))
							THEN 1
							ELSE
								CASE WHEN EXISTS (SELECT [ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsArticleUserPermissions] AS aup WHERE aup.ArticleID = Result.ArticleID AND aup.Edit = 1 AND aup.UserID = @UserID)
									THEN 1
									ELSE 0
								END
							END 
					END
			END
			WHEN 3 THEN
				CASE WHEN EXISTS(SELECT [ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsArticleRolePermissions] AS arp WHERE arp.ArticleID = Result.ArticleID AND arp.Edit = 1 AND arp.RoleID IN(SELECT RoleID FROM @UserInRoles))
					THEN 1
					ELSE
					CASE WHEN EXISTS (SELECT [ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsArticleUserPermissions] AS aup WHERE aup.ArticleID = Result.ArticleID AND aup.Edit = 1 AND aup.UserID = @UserID)
						THEN 1
						ELSE 0
						END
					END 
		END AS ''CanEdit'',
		(SELECT cat.ID, cat.Name, cat.CategoryURL FROM @LocalizedCategories AS Cat INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS c ON c.CategoryID = Cat.ID WHERE c.ArticleID = Result.ArticleID ORDER BY Position FOR XML AUTO, ROOT(''root'')) AS ''CatToShow'',
		 CASE Result.Active
			WHEN 1 THEN 0
			WHEN 0 THEN 1
		 END AS ''Published'',
		 CASE @UserCanApprove
			WHEN 0 THEN 0
			WHEN 1 THEN
				CASE Result.Approved
				 WHEN 1 THEN 0
				 WHEN 0 THEN
					 CASE Result.Active
						WHEN 1 THEN 1
						WHEN 0 THEN 0
					END
				END
		 END AS ''Approve''
		 FROM (SELECT
		 n.[ArticleID],n.[UserID],n.[Title],n.[SubTitle],n.[Summary],n.[Article],n.[ArticleImage],n.[DateAdded],n.[LastModified],n.[PublishDate]
		,n.[ExpireDate],n.[Approved],n.[Featured],n.[NumberOfViews],n.[RatingValue],n.[RatingCount],n.[AllowComments],n.[Active]
		,n.[TitleLink],n.[DetailType],n.[DetailTypeData],n.[DetailsTemplate],n.[DetailsTheme],n.[GalleryPosition],n.[GalleryDisplayType]
		,n.[ShowMainImage],n.[ShowMainImageFront],n.[CommentsTheme],n.[ArticleImageFolder],n.[NumberOfComments]
		,n.[ArticleImageSet],n.[MetaDecription],n.[MetaKeywords],n.[DisplayStyle],n.[DetailTarget]
		,n.[ArticleFromRSS],n.[HasPermissions],n.[EventArticle],n.[DetailMediaType],n.[DetailMediaData],n.[AuthorAliasName],n.[ShowGallery],n.[ArticleGalleryID],n.[MainImageTitle],n.[MainImageDescription],
		 ned.StartDate, ROW_NUMBER() OVER (ORDER BY 
		 CASE WHEN @FirstOrderBy =''Featured DESC'' THEN Featured END DESC, 
		 CASE WHEN @OrderBy =''PublishDate ASC'' THEN PublishDate END,
		 CASE WHEN @OrderBy =''PublishDate DESC'' THEN PublishDate END DESC,
		 CASE WHEN @OrderBy =''NumberOfViews ASC'' THEN NumberOfViews END,
		 CASE WHEN @OrderBy =''NumberOfViews DESC'' THEN NumberOfViews END DESC,
		 CASE WHEN @OrderBy =''RatingValue ASC'' THEN RatingValue END,
		 CASE WHEN @OrderBy =''RatingValue DESC'' THEN RatingValue END DESC,
		 CASE WHEN @OrderBy =''DateAdded ASC'' THEN DateAdded END,
		 CASE WHEN @OrderBy =''DateAdded DESC'' THEN DateAdded END DESC,
		 CASE WHEN @OrderBy =''ExpireDate ASC'' THEN ExpireDate END,
		 CASE WHEN @OrderBy =''ExpireDate DESC'' THEN ExpireDate END DESC,
		 CASE WHEN @OrderBy =''LastModified ASC'' THEN LastModified END,
		 CASE WHEN @OrderBy =''LastModified DESC'' THEN LastModified END DESC,
		 CASE WHEN @OrderBy =''NumberOfComments ASC'' THEN NumberOfComments END,
		 CASE WHEN @OrderBy =''NumberOfComments DESC'' THEN NumberOfComments END DESC,
		 CASE WHEN @OrderBy =''Title ASC'' THEN Title END,
		 CASE WHEN @OrderBy =''Title DESC'' THEN Title END DESC,
		 CASE WHEN @OrderBy =''StartDate ASC'' THEN ned.StartDate END,
		 CASE WHEN @OrderBy =''StartDate DESC'' THEN ned.StartDate END DESC) AS Kulike
		 FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS n INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsEventsData] AS ned ON n.ArticleID = ned.ArticleID WHERE n.ArticleID IN(
			SELECT DISTINCT na.[ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS na
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS cat ON na.ArticleID = cat.ArticleID
				INNER JOIN @UserViewCategoriesWithFilter  AS uvcwf ON uvcwf.CategoryID = cat.CategoryID
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsEventsData] AS ne ON ne.ArticleID = na.ArticleID
				LEFT OUTER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsTagsItems] AS ti ON na.ArticleID = ti.ArticleID
				LEFT OUTER JOIN @FilterTagsTable AS fbt ON ti.TagID = fbt.TagID
			WHERE na.PortalID=@PortalID
				AND ((@EditPermission = 1) OR ((@UserCanApprove = 1 OR na.Approved=1) AND (na.Active=1 OR na.UserID=@UserID)))
				AND na.HasPermissions = 0
				AND na.HideDefaultLocale = 0
				AND (
					(@DateRange = 0 AND ne.StartDate >= @StartDate) OR
					(@DateRange = 1 AND (ne.StartDate <= @ToDate AND ne.EndDate >= @FromDate))  
					) 
				AND ((@Featured = 1 AND na.Featured = 1) OR (@Featured = 0))
				AND na.PublishDate <= @CurrentDate AND na.ExpireDate >= @CurrentDate
				AND ((@FilterAuthorOrAuthors = 1 AND na.UserID IN (SELECT UserID FROM @TempAuthorsIDList)) OR (@FilterAuthorOrAuthors = 0))
				AND ((@FilterByTags = 1 AND fbt.TagID IS NOT NULL) OR (@FilterByTags = 0))
			UNION ALL
			SELECT na.[ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS na
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsArticleUserPermissions] AS aup ON na.ArticleID = aup.ArticleID
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS cat ON na.ArticleID = cat.ArticleID
				INNER JOIN @FiltredByCategories AS fbc ON fbc.CategoryID = cat.CategoryID
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsEventsData] AS ne ON ne.ArticleID = na.ArticleID
				LEFT OUTER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsTagsItems] AS ti ON na.ArticleID = ti.ArticleID
				LEFT OUTER JOIN @FilterTagsTable AS fbt ON ti.TagID = fbt.TagID 	
			WHERE na.PortalID=@PortalID
				AND ((@EditPermission = 1) OR (((@UserID = -1 AND aup.UserID IS NULL) OR (aup.UserID = @UserID))
					AND aup.Show = 1 AND ((@UserCanApprove = 1) OR (na.Approved=1)) AND (na.Active=1 OR na.UserID=@UserID)
				))
				AND na.HasPermissions = 1
				AND na.HideDefaultLocale = 0
				AND (
					(@DateRange = 0 AND ne.StartDate >= @StartDate) OR
					(@DateRange = 1 AND (ne.StartDate <= @ToDate AND ne.EndDate >= @FromDate))  
					) 
				AND((@Featured = 1 AND na.Featured = 1) OR (@Featured = 0))
				AND na.PublishDate <= @CurrentDate AND na.ExpireDate >= @CurrentDate
				AND((@FilterAuthorOrAuthors = 1 AND na.UserID IN (SELECT UserID FROM @TempAuthorsIDList)) OR (@FilterAuthorOrAuthors = 0))
				AND ((@FilterByTags = 1 AND fbt.TagID IS NOT NULL) OR (@FilterByTags = 0))
			UNION
			SELECT DISTINCT na.[ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS na
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsArticleRolePermissions] AS arp ON na.ArticleID = arp.ArticleID
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS cat ON na.ArticleID = cat.ArticleID
				INNER JOIN @FiltredByCategories AS fbc ON fbc.CategoryID = cat.CategoryID
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsEventsData] AS ne ON ne.ArticleID = na.ArticleID
				LEFT OUTER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsTagsItems] AS ti ON na.ArticleID = ti.ArticleID
				LEFT OUTER JOIN @FilterTagsTable AS fbt ON ti.TagID = fbt.TagID 	
			WHERE na.PortalID=@PortalID
				AND ((@EditPermission = 1) OR (((@UserCanApprove = 1) OR (na.Approved=1))
					AND (na.Active=1 OR na.UserID=@UserID) AND arp.Show = 1 AND arp.RoleID IN (SELECT [RoleID] FROM @UserInRoles)
					))
				AND na.HasPermissions = 1
				AND na.HideDefaultLocale = 0
				AND (
					(@DateRange = 0 AND ne.StartDate >= @StartDate) OR
					(@DateRange = 1 AND (ne.StartDate <= @ToDate AND ne.EndDate >= @FromDate))  
					) 
				AND((@Featured = 1 AND na.Featured = 1) OR (@Featured = 0))
				AND na.PublishDate <= @CurrentDate AND na.ExpireDate >= @CurrentDate
				AND((@FilterAuthorOrAuthors = 1 AND na.UserID IN (SELECT UserID FROM @TempAuthorsIDList)) OR (@FilterAuthorOrAuthors = 0))	 
				AND ((@FilterByTags = 1 AND fbt.TagID IS NOT NULL) OR (@FilterByTags = 0))
			)
		 ) AS Result WHERE Kulike BETWEEN @ItemsFrom AND @ItemsTo ORDER BY
			CASE WHEN @FirstOrderBy =''Featured DESC'' THEN Featured END DESC,
			CASE WHEN @OrderBy =''PublishDate ASC'' THEN PublishDate END,
			CASE WHEN @OrderBy =''PublishDate DESC'' THEN PublishDate END DESC,
			CASE WHEN @OrderBy =''NumberOfViews ASC'' THEN NumberOfViews END,
			CASE WHEN @OrderBy =''NumberOfViews DESC'' THEN NumberOfViews END DESC,
			CASE WHEN @OrderBy =''RatingValue ASC'' THEN RatingValue END,
			CASE WHEN @OrderBy =''RatingValue DESC'' THEN RatingValue END DESC,
			CASE WHEN @OrderBy =''DateAdded ASC'' THEN DateAdded END,
			CASE WHEN @OrderBy =''DateAdded DESC'' THEN DateAdded END DESC,
			CASE WHEN @OrderBy =''ExpireDate ASC'' THEN ExpireDate END,
			CASE WHEN @OrderBy =''ExpireDate DESC'' THEN ExpireDate END DESC,
			CASE WHEN @OrderBy =''LastModified ASC'' THEN LastModified END,
			CASE WHEN @OrderBy =''LastModified DESC'' THEN LastModified END DESC,
			CASE WHEN @OrderBy =''NumberOfComments ASC'' THEN NumberOfComments END,
			CASE WHEN @OrderBy =''NumberOfComments DESC'' THEN NumberOfComments END DESC,
			CASE WHEN @OrderBy =''Title ASC'' THEN Title END,
			CASE WHEN @OrderBy =''Title DESC'' THEN Title END DESC,
			CASE WHEN @OrderBy =''StartDate ASC'' THEN StartDate END,
			CASE WHEN @OrderBy =''StartDate DESC'' THEN StartDate END DESC;
	END
END
ELSE IF @FilterBySocialGroup = 1
BEGIN
	IF @LocaleCode <> ''''
	BEGIN
		WITH FinalArticleIDsSet (ArticleID,StartDate) AS(
			SELECT TOP (@ItemsTo - @ItemsFrom + 1) ArticleID, StartDate FROM (SELECT n.*, ned.StartDate, ROW_NUMBER() OVER (ORDER BY 
				CASE WHEN @FirstOrderBy =''Featured DESC'' THEN Featured END DESC,
				CASE WHEN @OrderBy =''PublishDate ASC'' THEN PublishDate END,
				CASE WHEN @OrderBy =''PublishDate DESC'' THEN PublishDate END DESC,
				CASE WHEN @OrderBy =''NumberOfViews ASC'' THEN NumberOfViews END,
				CASE WHEN @OrderBy =''NumberOfViews DESC'' THEN NumberOfViews END DESC,
				CASE WHEN @OrderBy =''RatingValue ASC'' THEN RatingValue END,
				CASE WHEN @OrderBy =''RatingValue DESC'' THEN RatingValue END DESC,
				CASE WHEN @OrderBy =''DateAdded ASC'' THEN DateAdded END,
				CASE WHEN @OrderBy =''DateAdded DESC'' THEN DateAdded END DESC,
				CASE WHEN @OrderBy =''ExpireDate ASC'' THEN ExpireDate END,
				CASE WHEN @OrderBy =''ExpireDate DESC'' THEN ExpireDate END DESC,
				CASE WHEN @OrderBy =''LastModified ASC'' THEN LastModified END,
				CASE WHEN @OrderBy =''LastModified DESC'' THEN LastModified END DESC,
				CASE WHEN @OrderBy =''NumberOfComments ASC'' THEN NumberOfComments END,
				CASE WHEN @OrderBy =''NumberOfComments DESC'' THEN NumberOfComments END DESC,
				CASE WHEN @OrderBy =''Title ASC'' THEN Title END,
				CASE WHEN @OrderBy =''Title DESC'' THEN Title END DESC,
				CASE WHEN @OrderBy =''StartDate ASC'' THEN ned.StartDate END,
				CASE WHEN @OrderBy =''StartDate DESC'' THEN ned.StartDate END DESC) AS Kulike
			FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS n INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsEventsData] AS ned ON n.ArticleID = ned.ArticleID WHERE n.ArticleID IN(
				SELECT DISTINCT na.[ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS na
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS cat ON na.ArticleID = cat.ArticleID
					INNER JOIN @UserViewCategoriesWithFilter  AS uvcwf ON uvcwf.CategoryID = cat.CategoryID
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsEventsData] AS ne ON ne.ArticleID = na.ArticleID
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = na.ArticleID
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialGroupItems] AS sgi ON sgi.ArticleID = na.ArticleID AND sgi.RoleID = @FilterByDNNGroupID
					INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserID, @FilterByDNNGroupID) AS t ON t.seckey = nss.SecurityKey
					LEFT OUTER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsTagsItems] AS ti ON na.ArticleID = ti.ArticleID
					LEFT OUTER JOIN @FilterTagsTable AS fbt ON ti.TagID = fbt.TagID
					LEFT OUTER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsContentLocalization] AS ncl ON ncl.ArticleID = na.ArticleID 	
				WHERE na.PortalID=@PortalID
					AND ((@EditPermission = 1) OR ((@UserCanApprove = 1 OR na.Approved=1) AND (na.Active=1 OR na.UserID=@UserID)))
					AND na.HasPermissions = 0
					AND ne.StartDate >= @StartDate
					AND((@Featured = 1 AND na.Featured = 1) OR (@Featured = 0))
					AND((@DateRange = 0 AND na.PublishDate <= @CurrentDate AND na.ExpireDate >= @CurrentDate) OR (@DateRange = 1 AND ((PublishDate >= @FromDate AND PublishDate <= @ToDate) AND (ExpireDate >= @CurrentDate))))
					AND((@FilterAuthorOrAuthors = 1 AND na.UserID = @FilterByAuthor) OR (@FilterAuthorOrAuthors = 0))
					AND ((@FilterByTags = 1 AND fbt.TagID IS NOT NULL) OR (@FilterByTags = 0))
					AND ((@HideUnlocalizedItems = 1 AND ncl.ArticleID IS NOT NULL AND ncl.LocaleCode = @LocaleCode) OR (@HideUnlocalizedItems = 0))
				UNION ALL
				SELECT na.[ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS na
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsArticleUserPermissions] AS aup ON na.ArticleID = aup.ArticleID
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS cat ON na.ArticleID = cat.ArticleID
					INNER JOIN @FiltredByCategories AS fbc ON fbc.CategoryID = cat.CategoryID
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsEventsData] AS ne ON ne.ArticleID = na.ArticleID
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = na.ArticleID
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialGroupItems] AS sgi ON sgi.ArticleID = na.ArticleID AND sgi.RoleID = @FilterByDNNGroupID
					INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserID, @FilterByDNNGroupID) AS t ON t.seckey = nss.SecurityKey
					LEFT OUTER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsTagsItems] AS ti ON na.ArticleID = ti.ArticleID
					LEFT OUTER JOIN @FilterTagsTable AS fbt ON ti.TagID = fbt.TagID
					LEFT OUTER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsContentLocalization] AS ncl ON ncl.ArticleID = na.ArticleID 	
				WHERE na.PortalID=@PortalID
					AND ((@EditPermission = 1) OR (((@UserID = -1 AND aup.UserID IS NULL) OR (aup.UserID = @UserID))
						AND aup.Show = 1 AND ((@UserCanApprove = 1) OR (na.Approved=1)) AND (na.Active=1 OR na.UserID=@UserID)
					))
					AND na.HasPermissions = 1
					AND (
						(@DateRange = 0 AND ne.StartDate >= @StartDate) OR
						(@DateRange = 1 AND (ne.StartDate <= @ToDate AND ne.EndDate >= @FromDate))  
						) 
					AND ((@Featured = 1 AND na.Featured = 1) OR (@Featured = 0))
					AND na.PublishDate <= @CurrentDate AND na.ExpireDate >= @CurrentDate
					AND ((@FilterAuthorOrAuthors = 1 AND na.UserID = @FilterByAuthor) OR (@FilterAuthorOrAuthors = 0))
					AND ((@FilterByTags = 1 AND fbt.TagID IS NOT NULL) OR (@FilterByTags = 0))
					AND ((@HideUnlocalizedItems = 1 AND ncl.ArticleID IS NOT NULL AND ncl.LocaleCode = @LocaleCode) OR (@HideUnlocalizedItems = 0))
				UNION
				SELECT DISTINCT na.[ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS na
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsArticleRolePermissions] AS arp ON na.ArticleID = arp.ArticleID
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS cat ON na.ArticleID = cat.ArticleID
					INNER JOIN @FiltredByCategories AS fbc ON fbc.CategoryID = cat.CategoryID
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsEventsData] AS ne ON ne.ArticleID = na.ArticleID
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = na.ArticleID
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialGroupItems] AS sgi ON sgi.ArticleID = na.ArticleID AND sgi.RoleID = @FilterByDNNGroupID
					INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserID, @FilterByDNNGroupID) AS t ON t.seckey = nss.SecurityKey
					LEFT OUTER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsTagsItems] AS ti ON na.ArticleID = ti.ArticleID
					LEFT OUTER JOIN @FilterTagsTable AS fbt ON ti.TagID = fbt.TagID
					LEFT OUTER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsContentLocalization] AS ncl ON ncl.ArticleID = na.ArticleID 	
				WHERE na.PortalID=@PortalID
					AND ((@EditPermission = 1) OR (((@UserCanApprove = 1) OR (na.Approved=1))
					AND (na.Active=1 OR na.UserID=@UserID) AND arp.Show = 1 AND arp.RoleID IN (SELECT [RoleID] FROM @UserInRoles)
						))
					AND na.HasPermissions = 1
					AND (
						(@DateRange = 0 AND ne.StartDate >= @StartDate) OR
						(@DateRange = 1 AND (ne.StartDate <= @ToDate AND ne.EndDate >= @FromDate))  
						) 
					AND ((@Featured = 1 AND na.Featured = 1) OR (@Featured = 0))
					AND na.PublishDate <= @CurrentDate AND na.ExpireDate >= @CurrentDate
					AND ((@FilterAuthorOrAuthors = 1 AND na.UserID = @FilterByAuthor) OR (@FilterAuthorOrAuthors = 0))
					AND ((@FilterByTags = 1 AND fbt.TagID IS NOT NULL) OR (@FilterByTags = 0))
					AND ((@HideUnlocalizedItems = 1 AND ncl.ArticleID IS NOT NULL AND ncl.LocaleCode = @LocaleCode) OR (@HideUnlocalizedItems = 0))
					)
			) AS Result WHERE Kulike BETWEEN @ItemsFrom AND @ItemsTo ORDER BY
				CASE WHEN @FirstOrderBy =''Featured DESC'' THEN Featured END DESC,
				CASE WHEN @OrderBy =''PublishDate ASC'' THEN PublishDate END,
				CASE WHEN @OrderBy =''PublishDate DESC'' THEN PublishDate END DESC,
				CASE WHEN @OrderBy =''NumberOfViews ASC'' THEN NumberOfViews END,
				CASE WHEN @OrderBy =''NumberOfViews DESC'' THEN NumberOfViews END DESC,
				CASE WHEN @OrderBy =''RatingValue ASC'' THEN RatingValue END,
				CASE WHEN @OrderBy =''RatingValue DESC'' THEN RatingValue END DESC,
				CASE WHEN @OrderBy =''DateAdded ASC'' THEN DateAdded END,
				CASE WHEN @OrderBy =''DateAdded DESC'' THEN DateAdded END DESC,
				CASE WHEN @OrderBy =''ExpireDate ASC'' THEN ExpireDate END,
				CASE WHEN @OrderBy =''ExpireDate DESC'' THEN ExpireDate END DESC,
				CASE WHEN @OrderBy =''LastModified ASC'' THEN LastModified END,
				CASE WHEN @OrderBy =''LastModified DESC'' THEN LastModified END DESC,
				CASE WHEN @OrderBy =''NumberOfComments ASC'' THEN NumberOfComments END,
				CASE WHEN @OrderBy =''NumberOfComments DESC'' THEN NumberOfComments END DESC,
				CASE WHEN @OrderBy =''Title ASC'' THEN Title END,
				CASE WHEN @OrderBy =''Title DESC'' THEN Title END DESC,
				CASE WHEN @OrderBy =''StartDate ASC'' THEN StartDate END,
				CASE WHEN @OrderBy =''StartDate DESC'' THEN StartDate END DESC
			),
			FinalLocalizedArticleIDsSet (ArticleID,Title,SubTitle,Summary,Article,DetailTypeData,TitleLink,MetaDecription,MetaKeywords,MainImageTitle,MainImageDescription) AS(
				SELECT ArticleID,Title,SubTitle,Summary,Article,DetailTypeData,clTitleLink AS TitleLink ,MetaDecription,MetaKeywords,MainImageTitle,MainImageDescription FROM {databaseOwner}[{objectQualifier}EasyDNNNewsContentLocalization] WHERE ArticleID IN (SELECT ArticleID FROM FinalArticleIDsSet) AND LocaleCode = @LocaleCode
			)
			SELECT *,
				CASE @EditPermission 
					WHEN 0 THEN 0
					WHEN 1 THEN 1
					WHEN 2 THEN
					CASE @EditOnlyAsOwner
						WHEN 0 THEN			
							CASE WHEN EXISTS(SELECT CategoryID FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS c WHERE c.ArticleID = Result.ArticleID AND c.CategoryID IN (SELECT CategoryID FROM @UserEditCategories))
								THEN 1
								ELSE
									CASE WHEN EXISTS(SELECT [ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsArticleRolePermissions] AS arp WHERE arp.ArticleID = Result.ArticleID AND arp.Edit = 1 AND arp.RoleID IN(SELECT RoleID FROM @UserInRoles))
									THEN 1
									ELSE
										CASE WHEN EXISTS (SELECT [ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsArticleUserPermissions] AS aup WHERE aup.ArticleID = Result.ArticleID AND aup.Edit = 1 AND aup.UserID = @UserID)
											THEN 1
											ELSE 0
										END
									END
							END  			
						WHEN 1 THEN
							CASE WHEN EXISTS(SELECT CategoryID FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS c WHERE Result.UserID = @UserID AND c.ArticleID = Result.ArticleID AND c.CategoryID IN (SELECT CategoryID FROM @UserEditCategories))
								THEN 1
								ELSE
									CASE WHEN EXISTS(SELECT [ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsArticleRolePermissions] AS arp WHERE arp.ArticleID = Result.ArticleID AND arp.Edit = 1 AND arp.RoleID IN(SELECT RoleID FROM @UserInRoles))
									THEN 1
									ELSE
										CASE WHEN EXISTS (SELECT [ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsArticleUserPermissions] AS aup WHERE aup.ArticleID = Result.ArticleID AND aup.Edit = 1 AND aup.UserID = @UserID)
											THEN 1
											ELSE 0
										END
									END 
							END
					END
					WHEN 3 THEN
						CASE WHEN EXISTS(SELECT [ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsArticleRolePermissions] AS arp WHERE arp.ArticleID = Result.ArticleID AND arp.Edit = 1 AND arp.RoleID IN(SELECT RoleID FROM @UserInRoles))
							THEN 1
							ELSE
							CASE WHEN EXISTS (SELECT [ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsArticleUserPermissions] AS aup WHERE aup.ArticleID = Result.ArticleID AND aup.Edit = 1 AND aup.UserID = @UserID)
								THEN 1
								ELSE 0
								END
							END 
				END AS ''CanEdit'',
				(SELECT cat.ID, cat.Name, cat.CategoryURL FROM @LocalizedCategories AS Cat INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS c ON c.CategoryID = Cat.ID WHERE c.ArticleID = Result.ArticleID ORDER BY Position FOR XML AUTO, ROOT(''root'')) AS ''CatToShow'',
				 CASE Result.Active
					WHEN 1 THEN 0
					WHEN 0 THEN 1
				 END AS ''Published'',
				 CASE @UserCanApprove
					WHEN 0 THEN 0
					WHEN 1 THEN
						CASE Result.Approved
						 WHEN 1 THEN 0
						 WHEN 0 THEN
							 CASE Result.Active
								WHEN 1 THEN 1
								WHEN 0 THEN 0
							END
						END
				 END AS ''Approve''
				 FROM (
					SELECT n.[ArticleID],n.[UserID],n.[Title],n.[SubTitle],n.[Summary],n.[Article],n.[ArticleImage],n.[DateAdded],n.[LastModified],n.[PublishDate]
						,n.[ExpireDate],n.[Approved],n.[Featured],n.[NumberOfViews],n.[RatingValue],n.[RatingCount],n.[AllowComments],n.[Active]
						,n.[TitleLink],n.[DetailType],n.[DetailTypeData],n.[DetailsTemplate],n.[DetailsTheme],n.[GalleryPosition],n.[GalleryDisplayType]
						,n.[ShowMainImage],n.[ShowMainImageFront],n.[CommentsTheme],n.[ArticleImageFolder],n.[NumberOfComments]
						,n.[ArticleImageSet],n.[MetaDecription],n.[MetaKeywords],n.[DisplayStyle],n.[DetailTarget]
						,n.[ArticleFromRSS],n.[HasPermissions],n.[EventArticle],n.[DetailMediaType],n.[DetailMediaData],n.[AuthorAliasName],n.[ShowGallery],n.[ArticleGalleryID],n.[MainImageTitle],n.[MainImageDescription], ned.StartDate
						FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS n INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsEventsData] AS ned ON n.ArticleID = ned.ArticleID WHERE n.ArticleID IN (SELECT ArticleID FROM FinalArticleIDsSet WHERE ArticleID NOT IN (SELECT ArticleID FROM FinalLocalizedArticleIDsSet))
					UNION ALL
					SELECT n.[ArticleID],n.[UserID],fla.[Title],fla.[SubTitle],fla.[Summary],fla.[Article],n.[ArticleImage],n.[DateAdded],n.[LastModified],n.[PublishDate]
						,n.[ExpireDate],n.[Approved],n.[Featured],n.[NumberOfViews],n.[RatingValue],n.[RatingCount],n.[AllowComments],n.[Active]
						,fla.[TitleLink],n.[DetailType],fla.[DetailTypeData],n.[DetailsTemplate],n.[DetailsTheme],n.[GalleryPosition],n.[GalleryDisplayType]
						,n.[ShowMainImage],n.[ShowMainImageFront],n.[CommentsTheme],n.[ArticleImageFolder],n.[NumberOfComments]
						,n.[ArticleImageSet],fla.[MetaDecription],fla.[MetaKeywords],n.[DisplayStyle],n.[DetailTarget]
						,n.[ArticleFromRSS],n.[HasPermissions],n.[EventArticle],n.[DetailMediaType],n.[DetailMediaData],n.[AuthorAliasName],n.[ShowGallery],n.[ArticleGalleryID],fla.[MainImageTitle],fla.[MainImageDescription], ned.StartDate
					FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS n INNER JOIN FinalLocalizedArticleIDsSet AS fla ON fla.ArticleID = n.ArticleID INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsEventsData] AS ned ON fla.ArticleID = ned.ArticleID) As Result		 
				ORDER BY
					CASE WHEN @FirstOrderBy =''Featured DESC'' THEN Featured END DESC,
					CASE WHEN @OrderBy =''PublishDate ASC'' THEN PublishDate END,
					CASE WHEN @OrderBy =''PublishDate DESC'' THEN PublishDate END DESC,
					CASE WHEN @OrderBy =''NumberOfViews ASC'' THEN NumberOfViews END,
					CASE WHEN @OrderBy =''NumberOfViews DESC'' THEN NumberOfViews END DESC,
					CASE WHEN @OrderBy =''RatingValue ASC'' THEN RatingValue END,
					CASE WHEN @OrderBy =''RatingValue DESC'' THEN RatingValue END DESC,
					CASE WHEN @OrderBy =''DateAdded ASC'' THEN DateAdded END,
					CASE WHEN @OrderBy =''DateAdded DESC'' THEN DateAdded END DESC,
					CASE WHEN @OrderBy =''ExpireDate ASC'' THEN ExpireDate END,
					CASE WHEN @OrderBy =''ExpireDate DESC'' THEN ExpireDate END DESC,
					CASE WHEN @OrderBy =''LastModified ASC'' THEN LastModified END,
					CASE WHEN @OrderBy =''LastModified DESC'' THEN LastModified END DESC,
					CASE WHEN @OrderBy =''NumberOfComments ASC'' THEN NumberOfComments END,
					CASE WHEN @OrderBy =''NumberOfComments DESC'' THEN NumberOfComments END DESC,
					CASE WHEN @OrderBy =''Title ASC'' THEN Title END,
					CASE WHEN @OrderBy =''Title DESC'' THEN Title END DESC,
					CASE WHEN @OrderBy =''StartDate ASC'' THEN StartDate END,
					CASE WHEN @OrderBy =''StartDate DESC'' THEN StartDate END DESC;
	END
	ELSE
	BEGIN
		SELECT *,
		CASE @EditPermission 
			WHEN 0 THEN 0
			WHEN 1 THEN 1
			WHEN 2 THEN
			CASE @EditOnlyAsOwner
				WHEN 0 THEN			
					CASE WHEN EXISTS(SELECT CategoryID FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS c WHERE c.ArticleID = Result.ArticleID AND c.CategoryID IN (SELECT CategoryID FROM @UserEditCategories))
						THEN 1
						ELSE
							CASE WHEN EXISTS(SELECT [ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsArticleRolePermissions] AS arp WHERE arp.ArticleID = Result.ArticleID AND arp.Edit = 1 AND arp.RoleID IN(SELECT RoleID FROM @UserInRoles))
							THEN 1
							ELSE
								CASE WHEN EXISTS (SELECT [ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsArticleUserPermissions] AS aup WHERE aup.ArticleID = Result.ArticleID AND aup.Edit = 1 AND aup.UserID = @UserID)
									THEN 1
									ELSE 0
								END
							END
					END  			
				WHEN 1 THEN
					CASE WHEN EXISTS(SELECT CategoryID FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS c WHERE Result.UserID = @UserID AND c.ArticleID = Result.ArticleID AND c.CategoryID IN (SELECT CategoryID FROM @UserEditCategories))
						THEN 1
						ELSE
							CASE WHEN EXISTS(SELECT [ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsArticleRolePermissions] AS arp WHERE arp.ArticleID = Result.ArticleID AND arp.Edit = 1 AND arp.RoleID IN(SELECT RoleID FROM @UserInRoles))
							THEN 1
							ELSE
								CASE WHEN EXISTS (SELECT [ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsArticleUserPermissions] AS aup WHERE aup.ArticleID = Result.ArticleID AND aup.Edit = 1 AND aup.UserID = @UserID)
									THEN 1
									ELSE 0
								END
							END 
					END
			END
			WHEN 3 THEN
				CASE WHEN EXISTS(SELECT [ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsArticleRolePermissions] AS arp WHERE arp.ArticleID = Result.ArticleID AND arp.Edit = 1 AND arp.RoleID IN(SELECT RoleID FROM @UserInRoles))
					THEN 1
					ELSE
					CASE WHEN EXISTS (SELECT [ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsArticleUserPermissions] AS aup WHERE aup.ArticleID = Result.ArticleID AND aup.Edit = 1 AND aup.UserID = @UserID)
						THEN 1
						ELSE 0
						END
					END 
		END AS ''CanEdit'',
		(SELECT cat.ID, cat.Name, cat.CategoryURL FROM @LocalizedCategories AS Cat INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS c ON c.CategoryID = Cat.ID WHERE c.ArticleID = Result.ArticleID ORDER BY Position FOR XML AUTO, ROOT(''root'')) AS ''CatToShow'',
		 CASE Result.Active
			WHEN 1 THEN 0
			WHEN 0 THEN 1
		 END AS ''Published'',
		 CASE @UserCanApprove
			WHEN 0 THEN 0
			WHEN 1 THEN
				CASE Result.Approved
				 WHEN 1 THEN 0
				 WHEN 0 THEN
					 CASE Result.Active
						WHEN 1 THEN 1
						WHEN 0 THEN 0
					END
				END
		 END AS ''Approve''
		FROM (SELECT
		n.[ArticleID],n.[UserID],n.[Title],n.[SubTitle],n.[Summary],n.[Article],n.[ArticleImage],n.[DateAdded],n.[LastModified],n.[PublishDate]
		,n.[ExpireDate],n.[Approved],n.[Featured],n.[NumberOfViews],n.[RatingValue],n.[RatingCount],n.[AllowComments],n.[Active]
		,n.[TitleLink],n.[DetailType],n.[DetailTypeData],n.[DetailsTemplate],n.[DetailsTheme],n.[GalleryPosition],n.[GalleryDisplayType]
		,n.[ShowMainImage],n.[ShowMainImageFront],n.[CommentsTheme],n.[ArticleImageFolder],n.[NumberOfComments]
		,n.[ArticleImageSet],n.[MetaDecription],n.[MetaKeywords],n.[DisplayStyle],n.[DetailTarget]
		,n.[ArticleFromRSS],n.[HasPermissions],n.[EventArticle],n.[DetailMediaType],n.[DetailMediaData],n.[AuthorAliasName],n.[ShowGallery],n.[ArticleGalleryID],n.[MainImageTitle],n.[MainImageDescription],
		 ned.StartDate, ROW_NUMBER() OVER (ORDER BY 
		CASE WHEN @FirstOrderBy =''Featured DESC'' THEN Featured END DESC,
		CASE WHEN @OrderBy =''PublishDate ASC'' THEN PublishDate END,
		CASE WHEN @OrderBy =''PublishDate DESC'' THEN PublishDate END DESC,
		CASE WHEN @OrderBy =''NumberOfViews ASC'' THEN NumberOfViews END,
		CASE WHEN @OrderBy =''NumberOfViews DESC'' THEN NumberOfViews END DESC,
		CASE WHEN @OrderBy =''RatingValue ASC'' THEN RatingValue END,
		CASE WHEN @OrderBy =''RatingValue DESC'' THEN RatingValue END DESC,
		CASE WHEN @OrderBy =''DateAdded ASC'' THEN DateAdded END,
		CASE WHEN @OrderBy =''DateAdded DESC'' THEN DateAdded END DESC,
		CASE WHEN @OrderBy =''ExpireDate ASC'' THEN ExpireDate END,
		CASE WHEN @OrderBy =''ExpireDate DESC'' THEN ExpireDate END DESC,
		CASE WHEN @OrderBy =''LastModified ASC'' THEN LastModified END,
		CASE WHEN @OrderBy =''LastModified DESC'' THEN LastModified END DESC,
		CASE WHEN @OrderBy =''NumberOfComments ASC'' THEN NumberOfComments END,
		CASE WHEN @OrderBy =''NumberOfComments DESC'' THEN NumberOfComments END DESC,
		CASE WHEN @OrderBy =''Title ASC'' THEN Title END,
		CASE WHEN @OrderBy =''Title DESC'' THEN Title END DESC,
		CASE WHEN @OrderBy =''StartDate ASC'' THEN ned.StartDate END,
		CASE WHEN @OrderBy =''StartDate DESC'' THEN ned.StartDate END DESC) AS Kulike
		FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS n INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsEventsData] AS ned ON n.ArticleID = ned.ArticleID WHERE n.ArticleID IN(
			SELECT DISTINCT na.[ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS na
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS cat ON na.ArticleID = cat.ArticleID
				INNER JOIN @UserViewCategoriesWithFilter  AS uvcwf ON uvcwf.CategoryID = cat.CategoryID
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsEventsData] AS ne ON ne.ArticleID = na.ArticleID
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = na.ArticleID
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialGroupItems] AS sgi ON sgi.ArticleID = na.ArticleID AND sgi.RoleID = @FilterByDNNGroupID
				INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserID, @FilterByDNNGroupID) AS t ON t.seckey = nss.SecurityKey
				LEFT OUTER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsTagsItems] AS ti ON na.ArticleID = ti.ArticleID
				LEFT OUTER JOIN @FilterTagsTable AS fbt ON ti.TagID = fbt.TagID 	
			WHERE na.PortalID=@PortalID
				AND ((@EditPermission = 1) OR ((@UserCanApprove = 1 OR na.Approved=1) AND (na.Active=1 OR na.UserID=@UserID)))
				AND na.HasPermissions = 0
				AND na.HideDefaultLocale = 0
				AND (
					(@DateRange = 0 AND ne.StartDate >= @StartDate) OR
					(@DateRange = 1 AND (ne.StartDate <= @ToDate AND ne.EndDate >= @FromDate))  
				) 
				AND ((@Featured = 1 AND na.Featured = 1) OR (@Featured = 0))
				AND na.PublishDate <= @CurrentDate AND na.ExpireDate >= @CurrentDate
				AND ((@FilterAuthorOrAuthors = 1 AND na.UserID = @FilterByAuthor) OR (@FilterAuthorOrAuthors = 0))
				AND ((@FilterByTags = 1 AND fbt.TagID IS NOT NULL) OR (@FilterByTags = 0))
			UNION ALL
			SELECT na.[ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS na
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsArticleUserPermissions] AS aup ON na.ArticleID = aup.ArticleID
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS cat ON na.ArticleID = cat.ArticleID
				INNER JOIN @FiltredByCategories AS fbc ON fbc.CategoryID = cat.CategoryID
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsEventsData] AS ne ON ne.ArticleID = na.ArticleID
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = na.ArticleID
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialGroupItems] AS sgi ON sgi.ArticleID = na.ArticleID AND sgi.RoleID = @FilterByDNNGroupID
				INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserID, @FilterByDNNGroupID) AS t ON t.seckey = nss.SecurityKey
				LEFT OUTER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsTagsItems] AS ti ON na.ArticleID = ti.ArticleID
				LEFT OUTER JOIN @FilterTagsTable AS fbt ON ti.TagID = fbt.TagID 	
			WHERE na.PortalID=@PortalID
				AND ((@EditPermission = 1) OR (((@UserID = -1 AND aup.UserID IS NULL) OR (aup.UserID = @UserID))
					AND aup.Show = 1 AND ((@UserCanApprove = 1) OR (na.Approved=1)) AND (na.Active=1 OR na.UserID=@UserID)
				))
				AND na.HasPermissions = 1
				AND na.HideDefaultLocale = 0
				AND (
					(@DateRange = 0 AND ne.StartDate >= @StartDate) OR
					(@DateRange = 1 AND (ne.StartDate <= @ToDate AND ne.EndDate >= @FromDate))  
					) 
				AND ((@Featured = 1 AND na.Featured = 1) OR (@Featured = 0))
				AND na.PublishDate <= @CurrentDate AND na.ExpireDate >= @CurrentDate
				AND ((@FilterAuthorOrAuthors = 1 AND na.UserID = @FilterByAuthor) OR (@FilterAuthorOrAuthors = 0))
				AND ((@FilterByTags = 1 AND fbt.TagID IS NOT NULL) OR (@FilterByTags = 0))
			UNION
			SELECT DISTINCT na.[ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS na
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsArticleRolePermissions] AS arp ON na.ArticleID = arp.ArticleID
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS cat ON na.ArticleID = cat.ArticleID
				INNER JOIN @FiltredByCategories AS fbc ON fbc.CategoryID = cat.CategoryID
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsEventsData] AS ne ON ne.ArticleID = na.ArticleID
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = na.ArticleID
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialGroupItems] AS sgi ON sgi.ArticleID = na.ArticleID AND sgi.RoleID = @FilterByDNNGroupID
				INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserID, @FilterByDNNGroupID) AS t ON t.seckey = nss.SecurityKey
				LEFT OUTER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsTagsItems] AS ti ON na.ArticleID = ti.ArticleID
				LEFT OUTER JOIN @FilterTagsTable AS fbt ON ti.TagID = fbt.TagID 	
			WHERE na.PortalID=@PortalID
				AND ((@EditPermission = 1) OR (((@UserCanApprove = 1) OR (na.Approved=1))
					AND (na.Active=1 OR na.UserID=@UserID) AND arp.Show = 1 AND arp.RoleID IN (SELECT [RoleID] FROM @UserInRoles)
					))
				AND na.HasPermissions = 1
				AND na.HideDefaultLocale = 0
				AND (
					(@DateRange = 0 AND ne.StartDate >= @StartDate) OR
					(@DateRange = 1 AND (ne.StartDate <= @ToDate AND ne.EndDate >= @FromDate))  
					) 
				AND ((@Featured = 1 AND na.Featured = 1) OR (@Featured = 0))
				AND na.PublishDate <= @CurrentDate AND na.ExpireDate >= @CurrentDate
				AND ((@FilterAuthorOrAuthors = 1 AND na.UserID = @FilterByAuthor) OR (@FilterAuthorOrAuthors = 0))
				AND ((@FilterByTags = 1 AND fbt.TagID IS NOT NULL) OR (@FilterByTags = 0))
			)
		 ) AS Result WHERE Kulike BETWEEN @ItemsFrom AND @ItemsTo ORDER BY
		 CASE WHEN @FirstOrderBy =''Featured DESC'' THEN Featured END DESC,
		 CASE WHEN @OrderBy =''PublishDate ASC'' THEN PublishDate END,
		 CASE WHEN @OrderBy =''PublishDate DESC'' THEN PublishDate END DESC,
		 CASE WHEN @OrderBy =''NumberOfViews ASC'' THEN NumberOfViews END,
		 CASE WHEN @OrderBy =''NumberOfViews DESC'' THEN NumberOfViews END DESC,
		 CASE WHEN @OrderBy =''RatingValue ASC'' THEN RatingValue END,
		 CASE WHEN @OrderBy =''RatingValue DESC'' THEN RatingValue END DESC,
		 CASE WHEN @OrderBy =''DateAdded ASC'' THEN DateAdded END,
		 CASE WHEN @OrderBy =''DateAdded DESC'' THEN DateAdded END DESC,
		 CASE WHEN @OrderBy =''ExpireDate ASC'' THEN ExpireDate END,
		 CASE WHEN @OrderBy =''ExpireDate DESC'' THEN ExpireDate END DESC,
		 CASE WHEN @OrderBy =''LastModified ASC'' THEN LastModified END,
		 CASE WHEN @OrderBy =''LastModified DESC'' THEN LastModified END DESC,
		 CASE WHEN @OrderBy =''NumberOfComments ASC'' THEN NumberOfComments END,
		 CASE WHEN @OrderBy =''NumberOfComments DESC'' THEN NumberOfComments END DESC,
		 CASE WHEN @OrderBy =''Title ASC'' THEN Title END,
		 CASE WHEN @OrderBy =''Title DESC'' THEN Title END DESC,
		 CASE WHEN @OrderBy =''StartDate ASC'' THEN StartDate END,
		 CASE WHEN @OrderBy =''StartDate DESC'' THEN StartDate END DESC;
	END
END
ELSE IF @FilterByDNNUserID <> 0
BEGIN
	IF @LocaleCode <> ''''
	BEGIN
		WITH FinalArticleIDsSet (ArticleID,StartDate) AS(
			SELECT TOP (@ItemsTo - @ItemsFrom + 1) ArticleID, StartDate FROM (SELECT n.*, ned.StartDate, ROW_NUMBER() OVER (ORDER BY 
				CASE WHEN @FirstOrderBy =''Featured DESC'' THEN Featured END DESC,
				CASE WHEN @OrderBy =''PublishDate ASC'' THEN PublishDate END,
				CASE WHEN @OrderBy =''PublishDate DESC'' THEN PublishDate END DESC,
				CASE WHEN @OrderBy =''NumberOfViews ASC'' THEN NumberOfViews END,
				CASE WHEN @OrderBy =''NumberOfViews DESC'' THEN NumberOfViews END DESC,
				CASE WHEN @OrderBy =''RatingValue ASC'' THEN RatingValue END,
				CASE WHEN @OrderBy =''RatingValue DESC'' THEN RatingValue END DESC,
				CASE WHEN @OrderBy =''DateAdded ASC'' THEN DateAdded END,
				CASE WHEN @OrderBy =''DateAdded DESC'' THEN DateAdded END DESC,
				CASE WHEN @OrderBy =''ExpireDate ASC'' THEN ExpireDate END,
				CASE WHEN @OrderBy =''ExpireDate DESC'' THEN ExpireDate END DESC,
				CASE WHEN @OrderBy =''LastModified ASC'' THEN LastModified END,
				CASE WHEN @OrderBy =''LastModified DESC'' THEN LastModified END DESC,
				CASE WHEN @OrderBy =''NumberOfComments ASC'' THEN NumberOfComments END,
				CASE WHEN @OrderBy =''NumberOfComments DESC'' THEN NumberOfComments END DESC,
				CASE WHEN @OrderBy =''Title ASC'' THEN Title END,
				CASE WHEN @OrderBy =''Title DESC'' THEN Title END DESC,
				CASE WHEN @OrderBy =''StartDate ASC'' THEN ned.StartDate END,
				CASE WHEN @OrderBy =''StartDate DESC'' THEN ned.StartDate END DESC) AS Kulike
				FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS n INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsEventsData] AS ned ON n.ArticleID = ned.ArticleID WHERE n.ArticleID IN(
					SELECT DISTINCT na.[ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS na
						INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS cat ON na.ArticleID = cat.ArticleID
						INNER JOIN @UserViewCategoriesWithFilter  AS uvcwf ON uvcwf.CategoryID = cat.CategoryID
						INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsEventsData] AS ne ON ne.ArticleID = na.ArticleID
						INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = na.ArticleID
						INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserID, @FilterByDNNGroupID) AS t ON t.seckey = nss.SecurityKey
						LEFT OUTER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsTagsItems] AS ti ON na.ArticleID = ti.ArticleID
						LEFT OUTER JOIN @FilterTagsTable AS fbt ON ti.TagID = fbt.TagID
						LEFT OUTER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsContentLocalization] AS ncl ON ncl.ArticleID = na.ArticleID 	
					WHERE na.PortalID=@PortalID
						AND ((@EditPermission = 1) OR ((@UserCanApprove = 1 OR na.Approved=1) AND (na.Active=1 OR na.UserID=@UserID)))
						AND na.HasPermissions = 0
						AND (
							(@DateRange = 0 AND ne.StartDate >= @StartDate) OR
							(@DateRange = 1 AND (ne.StartDate <= @ToDate AND ne.EndDate >= @FromDate))  
							) 
						AND((@Featured = 1 AND na.Featured = 1) OR (@Featured = 0))
						AND na.PublishDate <= @CurrentDate AND na.ExpireDate >= @CurrentDate
						AND na.UserID = @FilterByDNNUserID
						AND ((@FilterByTags = 1 AND fbt.TagID IS NOT NULL) OR (@FilterByTags = 0))
						AND ((@HideUnlocalizedItems = 1 AND ncl.ArticleID IS NOT NULL AND ncl.LocaleCode = @LocaleCode) OR (@HideUnlocalizedItems = 0))
					UNION ALL
					SELECT na.[ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS na
						INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsArticleUserPermissions] AS aup ON na.ArticleID = aup.ArticleID
						INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS cat ON na.ArticleID = cat.ArticleID
						INNER JOIN @FiltredByCategories AS fbc ON fbc.CategoryID = cat.CategoryID
						INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsEventsData] AS ne ON ne.ArticleID = na.ArticleID
						INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = na.ArticleID
						INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserID, @FilterByDNNGroupID) AS t ON t.seckey = nss.SecurityKey
						LEFT OUTER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsTagsItems] AS ti ON na.ArticleID = ti.ArticleID
						LEFT OUTER JOIN @FilterTagsTable AS fbt ON ti.TagID = fbt.TagID
						LEFT OUTER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsContentLocalization] AS ncl ON ncl.ArticleID = na.ArticleID 	
					WHERE na.PortalID=@PortalID
						AND ((@EditPermission = 1) OR (((@UserID = -1 AND aup.UserID IS NULL) OR (aup.UserID = @UserID))
							AND aup.Show = 1  AND ((@UserCanApprove = 1) OR (na.Approved=1))AND (na.Active=1 OR na.UserID=@UserID)
						))
						AND na.HasPermissions = 1
						AND (
							(@DateRange = 0 AND ne.StartDate >= @StartDate) OR
							(@DateRange = 1 AND (ne.StartDate <= @ToDate AND ne.EndDate >= @FromDate))  
							) 
						AND((@Featured = 1 AND na.Featured = 1) OR (@Featured = 0))
						AND na.PublishDate <= @CurrentDate AND na.ExpireDate >= @CurrentDate
						AND na.UserID = @FilterByDNNUserID
						AND ((@FilterByTags = 1 AND fbt.TagID IS NOT NULL) OR (@FilterByTags = 0))
						AND ((@HideUnlocalizedItems = 1 AND ncl.ArticleID IS NOT NULL AND ncl.LocaleCode = @LocaleCode) OR (@HideUnlocalizedItems = 0))
					UNION
					SELECT DISTINCT na.[ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS na
						INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsArticleRolePermissions] AS arp ON na.ArticleID = arp.ArticleID
						INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS cat ON na.ArticleID = cat.ArticleID
						INNER JOIN @FiltredByCategories AS fbc ON fbc.CategoryID = cat.CategoryID
						INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsEventsData] AS ne ON ne.ArticleID = na.ArticleID
						INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = na.ArticleID
						INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserID, @FilterByDNNGroupID) AS t ON t.seckey = nss.SecurityKey
						LEFT OUTER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsTagsItems] AS ti ON na.ArticleID = ti.ArticleID
						LEFT OUTER JOIN @FilterTagsTable AS fbt ON ti.TagID = fbt.TagID
						LEFT OUTER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsContentLocalization] AS ncl ON ncl.ArticleID = na.ArticleID 	
					WHERE na.PortalID=@PortalID
						AND ((@EditPermission = 1) OR (((@UserCanApprove = 1) OR (na.Approved=1))
							AND (na.Active=1 OR na.UserID=@UserID) AND arp.Show = 1 AND arp.RoleID IN (SELECT [RoleID] FROM @UserInRoles)
						))
						AND na.HasPermissions = 1
						AND (
							(@DateRange = 0 AND ne.StartDate >= @StartDate) OR
							(@DateRange = 1 AND (ne.StartDate <= @ToDate AND ne.EndDate >= @FromDate))  
							) 
						AND((@Featured = 1 AND na.Featured = 1) OR (@Featured = 0))
						AND na.PublishDate <= @CurrentDate AND na.ExpireDate >= @CurrentDate
						AND na.UserID = @FilterByDNNUserID
						AND ((@FilterByTags = 1 AND fbt.TagID IS NOT NULL) OR (@FilterByTags = 0))
						AND ((@HideUnlocalizedItems = 1 AND ncl.ArticleID IS NOT NULL AND ncl.LocaleCode = @LocaleCode) OR (@HideUnlocalizedItems = 0))
				)
			 ) AS Result WHERE Kulike BETWEEN @ItemsFrom AND @ItemsTo ORDER BY
				CASE WHEN @FirstOrderBy =''Featured DESC'' THEN Featured END DESC,
				CASE WHEN @OrderBy =''PublishDate ASC'' THEN PublishDate END,
				CASE WHEN @OrderBy =''PublishDate DESC'' THEN PublishDate END DESC,
				CASE WHEN @OrderBy =''NumberOfViews ASC'' THEN NumberOfViews END,
				CASE WHEN @OrderBy =''NumberOfViews DESC'' THEN NumberOfViews END DESC,
				CASE WHEN @OrderBy =''RatingValue ASC'' THEN RatingValue END,
				CASE WHEN @OrderBy =''RatingValue DESC'' THEN RatingValue END DESC,
				CASE WHEN @OrderBy =''DateAdded ASC'' THEN DateAdded END,
				CASE WHEN @OrderBy =''DateAdded DESC'' THEN DateAdded END DESC,
				CASE WHEN @OrderBy =''ExpireDate ASC'' THEN ExpireDate END,
				CASE WHEN @OrderBy =''ExpireDate DESC'' THEN ExpireDate END DESC,
				CASE WHEN @OrderBy =''LastModified ASC'' THEN LastModified END,
				CASE WHEN @OrderBy =''LastModified DESC'' THEN LastModified END DESC,
				CASE WHEN @OrderBy =''NumberOfComments ASC'' THEN NumberOfComments END,
				CASE WHEN @OrderBy =''NumberOfComments DESC'' THEN NumberOfComments END DESC,
				CASE WHEN @OrderBy =''Title ASC'' THEN Title END,
				CASE WHEN @OrderBy =''Title DESC'' THEN Title END DESC,
				CASE WHEN @OrderBy =''StartDate ASC'' THEN StartDate END,
				CASE WHEN @OrderBy =''StartDate DESC'' THEN StartDate END DESC
		),
		FinalLocalizedArticleIDsSet (ArticleID,Title,SubTitle,Summary,Article,DetailTypeData,TitleLink,MetaDecription,MetaKeywords,MainImageTitle,MainImageDescription) AS(
			SELECT ArticleID,Title,SubTitle,Summary,Article,DetailTypeData,clTitleLink AS TitleLink ,MetaDecription,MetaKeywords,MainImageTitle,MainImageDescription FROM {databaseOwner}[{objectQualifier}EasyDNNNewsContentLocalization] WHERE ArticleID IN (SELECT ArticleID FROM FinalArticleIDsSet) AND LocaleCode = @LocaleCode
		)
		SELECT *,
			CASE @EditPermission 
				WHEN 0 THEN 0
				WHEN 1 THEN 1
				WHEN 2 THEN
				CASE @EditOnlyAsOwner
					WHEN 0 THEN			
						CASE WHEN EXISTS(SELECT CategoryID FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS c WHERE c.ArticleID = Result.ArticleID AND c.CategoryID IN (SELECT CategoryID FROM @UserEditCategories))
							THEN 1
							ELSE
								CASE WHEN EXISTS(SELECT [ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsArticleRolePermissions] AS arp WHERE arp.ArticleID = Result.ArticleID AND arp.Edit = 1 AND arp.RoleID IN(SELECT RoleID FROM @UserInRoles))
								THEN 1
								ELSE
									CASE WHEN EXISTS (SELECT [ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsArticleUserPermissions] AS aup WHERE aup.ArticleID = Result.ArticleID AND aup.Edit = 1 AND aup.UserID = @UserID)
										THEN 1
										ELSE 0
									END
								END
						END  			
					WHEN 1 THEN
						CASE WHEN EXISTS(SELECT CategoryID FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS c WHERE Result.UserID = @UserID AND c.ArticleID = Result.ArticleID AND c.CategoryID IN (SELECT CategoryID FROM @UserEditCategories))
							THEN 1
							ELSE
								CASE WHEN EXISTS(SELECT [ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsArticleRolePermissions] AS arp WHERE arp.ArticleID = Result.ArticleID AND arp.Edit = 1 AND arp.RoleID IN(SELECT RoleID FROM @UserInRoles))
								THEN 1
								ELSE
									CASE WHEN EXISTS (SELECT [ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsArticleUserPermissions] AS aup WHERE aup.ArticleID = Result.ArticleID AND aup.Edit = 1 AND aup.UserID = @UserID)
										THEN 1
										ELSE 0
									END
								END 
						END
				END
				WHEN 3 THEN
					CASE WHEN EXISTS(SELECT [ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsArticleRolePermissions] AS arp WHERE arp.ArticleID = Result.ArticleID AND arp.Edit = 1 AND arp.RoleID IN(SELECT RoleID FROM @UserInRoles))
						THEN 1
						ELSE
						CASE WHEN EXISTS (SELECT [ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsArticleUserPermissions] AS aup WHERE aup.ArticleID = Result.ArticleID AND aup.Edit = 1 AND aup.UserID = @UserID)
							THEN 1
							ELSE 0
							END
						END 
			END AS ''CanEdit'',
			(SELECT cat.ID, cat.Name, cat.CategoryURL FROM @LocalizedCategories AS Cat INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS c ON c.CategoryID = Cat.ID WHERE c.ArticleID = Result.ArticleID ORDER BY Position FOR XML AUTO, ROOT(''root'')) AS ''CatToShow'',
			 CASE Result.Active
				WHEN 1 THEN 0
				WHEN 0 THEN 1
			 END AS ''Published'',
			 CASE @UserCanApprove
				WHEN 0 THEN 0
				WHEN 1 THEN
					CASE Result.Approved
					 WHEN 1 THEN 0
					 WHEN 0 THEN
						 CASE Result.Active
							WHEN 1 THEN 1
							WHEN 0 THEN 0
						END
					END
			 END AS ''Approve''
			 FROM (
				SELECT n.[ArticleID],n.[UserID],n.[Title],n.[SubTitle],n.[Summary],n.[Article],n.[ArticleImage],n.[DateAdded],n.[LastModified],n.[PublishDate]
					,n.[ExpireDate],n.[Approved],n.[Featured],n.[NumberOfViews],n.[RatingValue],n.[RatingCount],n.[AllowComments],n.[Active]
					,n.[TitleLink],n.[DetailType],n.[DetailTypeData],n.[DetailsTemplate],n.[DetailsTheme],n.[GalleryPosition],n.[GalleryDisplayType]
					,n.[ShowMainImage],n.[ShowMainImageFront],n.[CommentsTheme],n.[ArticleImageFolder],n.[NumberOfComments]
					,n.[ArticleImageSet],n.[MetaDecription],n.[MetaKeywords],n.[DisplayStyle],n.[DetailTarget]
					,n.[ArticleFromRSS],n.[HasPermissions],n.[EventArticle],n.[DetailMediaType],n.[DetailMediaData],n.[AuthorAliasName],n.[ShowGallery],n.[ArticleGalleryID],n.[MainImageTitle],n.[MainImageDescription], ned.StartDate
					FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS n INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsEventsData] AS ned ON n.ArticleID = ned.ArticleID WHERE n.ArticleID IN (SELECT ArticleID FROM FinalArticleIDsSet WHERE ArticleID NOT IN (SELECT ArticleID FROM FinalLocalizedArticleIDsSet))
				UNION ALL
				SELECT n.[ArticleID],n.[UserID],fla.[Title],fla.[SubTitle],fla.[Summary],fla.[Article],n.[ArticleImage],n.[DateAdded],n.[LastModified],n.[PublishDate]
					,n.[ExpireDate],n.[Approved],n.[Featured],n.[NumberOfViews],n.[RatingValue],n.[RatingCount],n.[AllowComments],n.[Active]
					,fla.[TitleLink],n.[DetailType],fla.[DetailTypeData],n.[DetailsTemplate],n.[DetailsTheme],n.[GalleryPosition],n.[GalleryDisplayType]
					,n.[ShowMainImage],n.[ShowMainImageFront],n.[CommentsTheme],n.[ArticleImageFolder],n.[NumberOfComments]
					,n.[ArticleImageSet],fla.[MetaDecription],fla.[MetaKeywords],n.[DisplayStyle],n.[DetailTarget]
					,n.[ArticleFromRSS],n.[HasPermissions],n.[EventArticle],n.[DetailMediaType],n.[DetailMediaData],n.[AuthorAliasName],n.[ShowGallery],n.[ArticleGalleryID],fla.[MainImageTitle],fla.[MainImageDescription], ned.StartDate
				FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS n INNER JOIN FinalLocalizedArticleIDsSet AS fla ON fla.ArticleID = n.ArticleID INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsEventsData] AS ned ON fla.ArticleID = ned.ArticleID) As Result		 
			ORDER BY
				CASE WHEN @FirstOrderBy =''Featured DESC'' THEN Featured END DESC,
				CASE WHEN @OrderBy =''PublishDate ASC'' THEN PublishDate END,
				CASE WHEN @OrderBy =''PublishDate DESC'' THEN PublishDate END DESC,
				CASE WHEN @OrderBy =''NumberOfViews ASC'' THEN NumberOfViews END,
				CASE WHEN @OrderBy =''NumberOfViews DESC'' THEN NumberOfViews END DESC,
				CASE WHEN @OrderBy =''RatingValue ASC'' THEN RatingValue END,
				CASE WHEN @OrderBy =''RatingValue DESC'' THEN RatingValue END DESC,
				CASE WHEN @OrderBy =''DateAdded ASC'' THEN DateAdded END,
				CASE WHEN @OrderBy =''DateAdded DESC'' THEN DateAdded END DESC,
				CASE WHEN @OrderBy =''ExpireDate ASC'' THEN ExpireDate END,
				CASE WHEN @OrderBy =''ExpireDate DESC'' THEN ExpireDate END DESC,
				CASE WHEN @OrderBy =''LastModified ASC'' THEN LastModified END,
				CASE WHEN @OrderBy =''LastModified DESC'' THEN LastModified END DESC,
				CASE WHEN @OrderBy =''NumberOfComments ASC'' THEN NumberOfComments END,
				CASE WHEN @OrderBy =''NumberOfComments DESC'' THEN NumberOfComments END DESC,
				CASE WHEN @OrderBy =''Title ASC'' THEN Title END,
				CASE WHEN @OrderBy =''Title DESC'' THEN Title END DESC,
				CASE WHEN @OrderBy =''StartDate ASC'' THEN StartDate END,
				CASE WHEN @OrderBy =''StartDate DESC'' THEN StartDate END DESC;
	END
	ELSE
	BEGIN
		SELECT *,
		CASE @EditPermission 
			WHEN 0 THEN 0
			WHEN 1 THEN 1
			WHEN 2 THEN
			CASE @EditOnlyAsOwner
				WHEN 0 THEN			
					CASE WHEN EXISTS(SELECT CategoryID FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS c WHERE c.ArticleID = Result.ArticleID AND c.CategoryID IN (SELECT CategoryID FROM @UserEditCategories))
						THEN 1
						ELSE
							CASE WHEN EXISTS(SELECT [ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsArticleRolePermissions] AS arp WHERE arp.ArticleID = Result.ArticleID AND arp.Edit = 1 AND arp.RoleID IN(SELECT RoleID FROM @UserInRoles))
							THEN 1
							ELSE
								CASE WHEN EXISTS (SELECT [ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsArticleUserPermissions] AS aup WHERE aup.ArticleID = Result.ArticleID AND aup.Edit = 1 AND aup.UserID = @UserID)
									THEN 1
									ELSE 0
								END
							END
					END  			
				WHEN 1 THEN
					CASE WHEN EXISTS(SELECT CategoryID FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS c WHERE Result.UserID = @UserID AND c.ArticleID = Result.ArticleID AND c.CategoryID IN (SELECT CategoryID FROM @UserEditCategories))
						THEN 1
						ELSE
							CASE WHEN EXISTS(SELECT [ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsArticleRolePermissions] AS arp WHERE arp.ArticleID = Result.ArticleID AND arp.Edit = 1 AND arp.RoleID IN(SELECT RoleID FROM @UserInRoles))
							THEN 1
							ELSE
								CASE WHEN EXISTS (SELECT [ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsArticleUserPermissions] AS aup WHERE aup.ArticleID = Result.ArticleID AND aup.Edit = 1 AND aup.UserID = @UserID)
									THEN 1
									ELSE 0
								END
							END 
					END
			END
			WHEN 3 THEN
				CASE WHEN EXISTS(SELECT [ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsArticleRolePermissions] AS arp WHERE arp.ArticleID = Result.ArticleID AND arp.Edit = 1 AND arp.RoleID IN(SELECT RoleID FROM @UserInRoles))
					THEN 1
					ELSE
					CASE WHEN EXISTS (SELECT [ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsArticleUserPermissions] AS aup WHERE aup.ArticleID = Result.ArticleID AND aup.Edit = 1 AND aup.UserID = @UserID)
						THEN 1
						ELSE 0
						END
					END 
		END AS ''CanEdit'',
		(SELECT cat.ID, cat.Name, cat.CategoryURL FROM @LocalizedCategories AS Cat INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS c ON c.CategoryID = Cat.ID WHERE c.ArticleID = Result.ArticleID ORDER BY Position FOR XML AUTO, ROOT(''root'')) AS ''CatToShow'',
		 CASE Result.Active
			WHEN 1 THEN 0
			WHEN 0 THEN 1
		 END AS ''Published'',
		 CASE @UserCanApprove
			WHEN 0 THEN 0
			WHEN 1 THEN
				CASE Result.Approved
				 WHEN 1 THEN 0
				 WHEN 0 THEN
					 CASE Result.Active
						WHEN 1 THEN 1
						WHEN 0 THEN 0
					END
				END
		 END AS ''Approve''
		FROM (SELECT
		n.[ArticleID],n.[UserID],n.[Title],n.[SubTitle],n.[Summary],n.[Article],n.[ArticleImage],n.[DateAdded],n.[LastModified],n.[PublishDate]
		,n.[ExpireDate],n.[Approved],n.[Featured],n.[NumberOfViews],n.[RatingValue],n.[RatingCount],n.[AllowComments],n.[Active]
		,n.[TitleLink],n.[DetailType],n.[DetailTypeData],n.[DetailsTemplate],n.[DetailsTheme],n.[GalleryPosition],n.[GalleryDisplayType]
		,n.[ShowMainImage],n.[ShowMainImageFront],n.[CommentsTheme],n.[ArticleImageFolder],n.[NumberOfComments]
		,n.[ArticleImageSet],n.[MetaDecription],n.[MetaKeywords],n.[DisplayStyle],n.[DetailTarget]
		,n.[ArticleFromRSS],n.[HasPermissions],n.[EventArticle],n.[DetailMediaType],n.[DetailMediaData],n.[AuthorAliasName],n.[ShowGallery],n.[ArticleGalleryID],n.[MainImageTitle],n.[MainImageDescription],
		 ned.StartDate, ROW_NUMBER() OVER (ORDER BY 
		CASE WHEN @FirstOrderBy =''Featured DESC'' THEN Featured END DESC,
		CASE WHEN @OrderBy =''PublishDate ASC'' THEN PublishDate END,
		CASE WHEN @OrderBy =''PublishDate DESC'' THEN PublishDate END DESC,
		CASE WHEN @OrderBy =''NumberOfViews ASC'' THEN NumberOfViews END,
		CASE WHEN @OrderBy =''NumberOfViews DESC'' THEN NumberOfViews END DESC,
		CASE WHEN @OrderBy =''RatingValue ASC'' THEN RatingValue END,
		CASE WHEN @OrderBy =''RatingValue DESC'' THEN RatingValue END DESC,
		CASE WHEN @OrderBy =''DateAdded ASC'' THEN DateAdded END,
		CASE WHEN @OrderBy =''DateAdded DESC'' THEN DateAdded END DESC,
		CASE WHEN @OrderBy =''ExpireDate ASC'' THEN ExpireDate END,
		CASE WHEN @OrderBy =''ExpireDate DESC'' THEN ExpireDate END DESC,
		CASE WHEN @OrderBy =''LastModified ASC'' THEN LastModified END,
		CASE WHEN @OrderBy =''LastModified DESC'' THEN LastModified END DESC,
		CASE WHEN @OrderBy =''NumberOfComments ASC'' THEN NumberOfComments END,
		CASE WHEN @OrderBy =''NumberOfComments DESC'' THEN NumberOfComments END DESC,
		CASE WHEN @OrderBy =''Title ASC'' THEN Title END,
		CASE WHEN @OrderBy =''Title DESC'' THEN Title END DESC,
		CASE WHEN @OrderBy =''StartDate ASC'' THEN ned.StartDate END,
		CASE WHEN @OrderBy =''StartDate DESC'' THEN ned.StartDate END DESC) AS Kulike
		FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS n INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsEventsData] AS ned ON n.ArticleID = ned.ArticleID WHERE n.ArticleID IN(
			SELECT DISTINCT na.[ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS na
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS cat ON na.ArticleID = cat.ArticleID
				INNER JOIN @UserViewCategoriesWithFilter  AS uvcwf ON uvcwf.CategoryID = cat.CategoryID
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsEventsData] AS ne ON ne.ArticleID = na.ArticleID
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = na.ArticleID
				INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserID, @FilterByDNNGroupID) AS t ON t.seckey = nss.SecurityKey
				LEFT OUTER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsTagsItems] AS ti ON na.ArticleID = ti.ArticleID
				LEFT OUTER JOIN @FilterTagsTable AS fbt ON ti.TagID = fbt.TagID 	
			WHERE na.PortalID=@PortalID
				AND ((@EditPermission = 1) OR ((@UserCanApprove = 1 OR na.Approved=1) AND (na.Active=1 OR na.UserID=@UserID)))
				AND na.HasPermissions = 0
				AND na.HideDefaultLocale = 0
				AND (
					(@DateRange = 0 AND ne.StartDate >= @StartDate) OR
					(@DateRange = 1 AND (ne.StartDate <= @ToDate AND ne.EndDate >= @FromDate))  
					) 
				AND((@Featured = 1 AND na.Featured = 1) OR (@Featured = 0))
				AND na.PublishDate <= @CurrentDate AND na.ExpireDate >= @CurrentDate
				AND na.UserID = @FilterByDNNUserID
				AND ((@FilterByTags = 1 AND fbt.TagID IS NOT NULL) OR (@FilterByTags = 0))
			UNION ALL
			SELECT na.[ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS na
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsArticleUserPermissions] AS aup ON na.ArticleID = aup.ArticleID
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS cat ON na.ArticleID = cat.ArticleID
				INNER JOIN @FiltredByCategories AS fbc ON fbc.CategoryID = cat.CategoryID
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsEventsData] AS ne ON ne.ArticleID = na.ArticleID
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = na.ArticleID
				INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserID, @FilterByDNNGroupID) AS t ON t.seckey = nss.SecurityKey
				LEFT OUTER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsTagsItems] AS ti ON na.ArticleID = ti.ArticleID
				LEFT OUTER JOIN @FilterTagsTable AS fbt ON ti.TagID = fbt.TagID 	
			WHERE na.PortalID=@PortalID
				AND ((@EditPermission = 1) OR (((@UserID = -1 AND aup.UserID IS NULL) OR (aup.UserID = @UserID))
					AND aup.Show = 1 AND ((@UserCanApprove = 1) OR (na.Approved=1)) AND (na.Active=1 OR na.UserID=@UserID)
				))
				AND na.HasPermissions = 1
				AND na.HideDefaultLocale = 0
				AND (
					(@DateRange = 0 AND ne.StartDate >= @StartDate) OR
					(@DateRange = 1 AND (ne.StartDate <= @ToDate AND ne.EndDate >= @FromDate))  
					) 
				AND((@Featured = 1 AND na.Featured = 1) OR (@Featured = 0))
				AND na.PublishDate <= @CurrentDate AND na.ExpireDate >= @CurrentDate
				AND na.UserID = @FilterByDNNUserID
				AND ((@FilterByTags = 1 AND fbt.TagID IS NOT NULL) OR (@FilterByTags = 0))
			UNION
			SELECT DISTINCT na.[ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS na
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsArticleRolePermissions] AS arp ON na.ArticleID = arp.ArticleID
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS cat ON na.ArticleID = cat.ArticleID
				INNER JOIN @FiltredByCategories AS fbc ON fbc.CategoryID = cat.CategoryID
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsEventsData] AS ne ON ne.ArticleID = na.ArticleID
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = na.ArticleID
				INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserID, @FilterByDNNGroupID) AS t ON t.seckey = nss.SecurityKey
				LEFT OUTER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsTagsItems] AS ti ON na.ArticleID = ti.ArticleID
				LEFT OUTER JOIN @FilterTagsTable AS fbt ON ti.TagID = fbt.TagID 	
			WHERE na.PortalID=@PortalID
				AND ((@EditPermission = 1) OR (((@UserCanApprove = 1) OR (na.Approved=1))
					AND (na.Active=1 OR na.UserID=@UserID) AND arp.Show = 1 AND arp.RoleID IN (SELECT [RoleID] FROM @UserInRoles)
				))
				AND na.HasPermissions = 1
				AND na.HideDefaultLocale = 0
				AND (
					(@DateRange = 0 AND ne.StartDate >= @StartDate) OR
					(@DateRange = 1 AND (ne.StartDate <= @ToDate AND ne.EndDate >= @FromDate))  
					) 
				AND((@Featured = 1 AND na.Featured = 1) OR (@Featured = 0))
				AND na.PublishDate <= @CurrentDate AND na.ExpireDate >= @CurrentDate
				AND na.UserID = @FilterByDNNUserID
				AND ((@FilterByTags = 1 AND fbt.TagID IS NOT NULL) OR (@FilterByTags = 0))
			)
		 ) AS Result WHERE Kulike BETWEEN @ItemsFrom AND @ItemsTo ORDER BY
			 CASE WHEN @FirstOrderBy =''Featured DESC'' THEN Featured END DESC,
			 CASE WHEN @OrderBy =''PublishDate ASC'' THEN PublishDate END,
			 CASE WHEN @OrderBy =''PublishDate DESC'' THEN PublishDate END DESC,
			 CASE WHEN @OrderBy =''NumberOfViews ASC'' THEN NumberOfViews END,
			 CASE WHEN @OrderBy =''NumberOfViews DESC'' THEN NumberOfViews END DESC,
			 CASE WHEN @OrderBy =''RatingValue ASC'' THEN RatingValue END,
			 CASE WHEN @OrderBy =''RatingValue DESC'' THEN RatingValue END DESC,
			 CASE WHEN @OrderBy =''DateAdded ASC'' THEN DateAdded END,
			 CASE WHEN @OrderBy =''DateAdded DESC'' THEN DateAdded END DESC,
			 CASE WHEN @OrderBy =''ExpireDate ASC'' THEN ExpireDate END,
			 CASE WHEN @OrderBy =''ExpireDate DESC'' THEN ExpireDate END DESC,
			 CASE WHEN @OrderBy =''LastModified ASC'' THEN LastModified END,
			 CASE WHEN @OrderBy =''LastModified DESC'' THEN LastModified END DESC,
			 CASE WHEN @OrderBy =''NumberOfComments ASC'' THEN NumberOfComments END,
			 CASE WHEN @OrderBy =''NumberOfComments DESC'' THEN NumberOfComments END DESC,
			 CASE WHEN @OrderBy =''Title ASC'' THEN Title END,
			 CASE WHEN @OrderBy =''Title DESC'' THEN Title END DESC,
			 CASE WHEN @OrderBy =''StartDate ASC'' THEN StartDate END,
			 CASE WHEN @OrderBy =''StartDate DESC'' THEN StartDate END DESC;
	END
END' 
END
GO
/****** Object:  StoredProcedure {databaseOwner}[{objectQualifier}EasyDNNNewsGetItemsForListDisplayByDateWithEventsRange]    Script Date: 06/24/2013 16:39:07 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'{databaseOwner}[{objectQualifier}EasyDNNNewsGetItemsForListDisplayByDateWithEventsRange]') AND type in (N'P', N'PC'))
BEGIN
EXEC dbo.sp_executesql @statement = N'CREATE PROCEDURE {databaseOwner}[{objectQualifier}EasyDNNNewsGetItemsForListDisplayByDateWithEventsRange]
	@ViewType tinyint = 0, -- 0 - View, 1 - Editor
	@PortalID int, -- current Portal
	@ModuleID int, -- current Module, portal sharing isto sadrzi dobre kategorije, auto add i setingsi su snimljeni kod tog modula
	@UserID int,
	@CurrentDate Datetime, -- = GetUTCDate,
	@OrderBy nvarchar(20) = ''PublishDate DESC'',
	@ItemsFrom int = 1,
	@ItemsTo int = 5,
	@FromDate DateTime = ''2012-01-01 00:00:00'', -- ovo ne treba za only events
	@ToDate DateTime = ''2012-01-01 00:00:00'', -- ovo ne treba za only events
	/* od tud ide filter */
	@Featured bit = 0,
	@ShowAllAuthors bit = 1, -- gleda se filtriranje autora po modulu ili portalu
	@FilterByAuthor int = 0,
	@FilterByGroupID int = 0,
--	@FilterByTags bit = 0,
	/*@FilterByArticles bit = 0,*/ -- ovoga nema tu !!
	@FilterByDNNUserID int = 0, -- filter by some UserID / not current user ID
	@FilterByDNNGroupID int = 0, -- filter by DNNGroup/RoleID / not profile GroupID
	@EditOnlyAsOwner bit = 0, -- news settings
	@UserCanApprove bit = 0, -- news settings
	@LocaleCode nvarchar(20) = '''',
	@IsSocialInstance bit = 0,	
	--@FirstOrderBy nvarchar(20) = '''',--''Featured DESC'', -- featured articles on top	
	@Perm_ViewAllCategores bit = 0, -- permission settings View all categories
	@Perm_EditAllCategores bit = 0, -- permission settings Edit all categories
	@AdminOrSuperUser bit = 0,
	@CategoryFilterType tinyint = 1, -- 0 All categories, 1 - SELECTion, 2 - AutoAdd
	@PermissionSettingsSource bit = 0, -- 0 portal, 1 module
	@FillterSettingsSource bit = 0, -- 0 portal, 1 module
	@OuterModuleID int = 0,
	@HideUnlocalizedItems bit = 0
AS
SET NOCOUNT ON;
DECLARE @EditPermission tinyint;
SET @EditPermission = 0;
DECLARE @UserInRoles TABLE (RoleID int NOT NULL PRIMARY KEY);
INSERT INTO @UserInRoles SELECT DISTINCT ur.[RoleID] FROM {databaseOwner}[{objectQualifier}UserRoles] AS ur INNER JOIN {databaseOwner}[{objectQualifier}Roles] AS r ON ur.RoleID = r.RoleID WHERE ur.UserID = @UserID AND r.PortalID = @PortalID AND (ur.ExpiryDate IS NULL OR ur.ExpiryDate > GETUTCDATE()) AND (ur.EffectiveDate IS NULL OR ur.EffectiveDate < GETUTCDATE());

DECLARE @UserViewCategories TABLE (CategoryID int NOT NULL PRIMARY KEY); -- all categories which user can see based on permissions
DECLARE @UserEditCategories TABLE (CategoryID int NOT NULL PRIMARY KEY); -- all categories which user can edit based on permissions
DECLARE @UserViewCategoriesWithFilter TABLE (CategoryID int NOT NULL PRIMARY KEY); -- all categories which user can see based on permissions and Module filter
DECLARE @FiltredByCategories TABLE (CategoryID int NOT NULL PRIMARY KEY); -- all categories that are filtred by module or portal

IF @AdminOrSuperUser = 1 OR @Perm_ViewAllCategores = 1
BEGIN
	INSERT INTO @UserViewCategories SELECT [CategoryID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryList] WHERE PortalID = @PortalID;
END
ELSE IF @UserID = -1
BEGIN	
	IF @PermissionSettingsSource = 1 -- by portal
	BEGIN
		INSERT INTO @UserViewCategories
		SELECT rpsc.[CategoryID] FROM  {databaseOwner}[{objectQualifier}EasyDNNNewsRolePremissionsShowCategories] AS rpsc 
		INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsRolePremissionSettings] AS rps ON rps.PremissionSettingsID = rpsc.PremissionSettingsID
		WHERE rps.PortalID = @PortalID  AND rps.ModuleID IS NULL AND rps.RoleID IS NULL;
	END
	ELSE -- by module
	BEGIN
	INSERT INTO @UserViewCategories
		SELECT rpsc.[CategoryID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsRolePremissionsShowCategories] AS rpsc
		INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsRolePremissionSettings] AS rps ON rps.PremissionSettingsID = rpsc.PremissionSettingsID
		WHERE rps.PortalID = @PortalID AND rps.ModuleID = @ModuleID AND rps.RoleID IS NULL;
	END
END
ELSE -- registrirani korisnik
BEGIN
	IF @PermissionSettingsSource = 1 -- by portal
	BEGIN
		INSERT INTO @UserViewCategories
		SELECT rpsc.[CategoryID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsRolePremissionsShowCategories] AS rpsc
		INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsRolePremissionSettings] AS rps ON rps.PremissionSettingsID = rpsc.PremissionSettingsID
		INNER JOIN @UserInRoles AS uir ON rps.RoleID = uir.RoleID
		WHERE rps.PortalID = @PortalID AND rps.ModuleID IS NULL GROUP BY rpsc.[CategoryID]
		UNION
		SELECT upsc.[CategoryID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsUserPremissionsShowCategories] AS upsc
		INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsUserPremissionSettings] AS ups ON ups.PremissionSettingsID = upsc.PremissionSettingsID
		WHERE ups.UserID = @UserID AND ups.PortalID = @PortalID AND ups.ModuleID IS NULL GROUP BY upsc.[CategoryID];
	END
	ELSE -- by module
	BEGIN
		INSERT INTO @UserViewCategories
		SELECT rpsc.[CategoryID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsRolePremissionsShowCategories] AS rpsc
		INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsRolePremissionSettings] AS rps ON rps.PremissionSettingsID = rpsc.PremissionSettingsID
		INNER JOIN @UserInRoles AS uir ON rps.RoleID = uir.RoleID
		WHERE rps.PortalID = @PortalID AND rps.ModuleID = @ModuleID GROUP BY rpsc.[CategoryID]
		UNION
		SELECT upsc.[CategoryID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsUserPremissionsShowCategories] AS upsc
		INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsUserPremissionSettings] AS ups ON ups.PremissionSettingsID = upsc.PremissionSettingsID
		WHERE ups.UserID = @UserID AND ups.PortalID = @PortalID AND ups.ModuleID = @ModuleID GROUP BY upsc.[CategoryID];
	END
END

IF @OuterModuleID <> 0
BEGIN
	IF @CategoryFilterType = 0 -- 0 All categories
	BEGIN
		INSERT INTO @UserViewCategoriesWithFilter SELECT [CategoryID] FROM @UserViewCategories;
		INSERT INTO @FiltredByCategories SELECT [CategoryID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryList] WHERE PortalID = @PortalID;
	END
	ELSE IF @CategoryFilterType = 1 -- 1 - SELECTion
	BEGIN
		INSERT INTO @UserViewCategoriesWithFilter 
		SELECT cl.[CategoryID] FROM @UserViewCategories AS cl
		INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsModuleCategoryItems] AS mci ON mci.CategoryID = cl.CategoryID AND mci.ModuleID = @OuterModuleID
			
		INSERT INTO @FiltredByCategories SELECT [CategoryID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsModuleCategoryItems] WHERE ModuleID = @OuterModuleID;
	END
	ELSE IF @CategoryFilterType = 2 -- 2 - AutoAdd
	BEGIN
		WITH hierarchy AS(
			SELECT [CategoryID], [ParentCategory]
			FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryList] AS cl
			WHERE (cl.ParentCategory IN (SELECT [CategoryID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsModuleCategoryItems] WHERE ModuleID = @OuterModuleID) OR cl.CategoryID IN (SELECT [CategoryID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsModuleCategoryItems] WHERE ModuleID = @OuterModuleID)) AND PortalID = @PortalID
			UNION ALL
			SELECT c.[CategoryID], c.[ParentCategory]
			FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryList] AS c INNER JOIN hierarchy AS p ON c.ParentCategory = p.CategoryID WHERE c.PortalID = @PortalID
			)
		INSERT INTO @FiltredByCategories SELECT DISTINCT CategoryID FROM hierarchy;	
		INSERT INTO @UserViewCategoriesWithFilter SELECT uvc.CategoryID FROM @FiltredByCategories AS nfc INNER JOIN @UserViewCategories AS uvc ON uvc.CategoryID = nfc.CategoryID;
	END
END
ELSE
BEGIN
	IF @CategoryFilterType = 0 -- 0 All categories
	BEGIN
		INSERT INTO @UserViewCategoriesWithFilter SELECT [CategoryID] FROM @UserViewCategories;
		INSERT INTO @FiltredByCategories SELECT [CategoryID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryList] WHERE PortalID = @PortalID;
	END
	ELSE IF @CategoryFilterType = 1 -- 1 - SELECTion
	BEGIN
		IF @FillterSettingsSource = 1 -- portal
		BEGIN
			INSERT INTO @UserViewCategoriesWithFilter 
			SELECT cl.[CategoryID] FROM @UserViewCategories AS cl
			INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsPortalCategoryItems] AS pci ON pci.CategoryID = cl.CategoryID AND pci.PortalID = @PortalID
			
			INSERT INTO @FiltredByCategories SELECT [CategoryID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsPortalCategoryItems] WHERE PortalID = @PortalID;
		END
		ELSE -- module
		BEGIN
			INSERT INTO @UserViewCategoriesWithFilter 
			SELECT cl.[CategoryID] FROM @UserViewCategories AS cl
			INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsModuleCategoryItems] AS mci ON mci.CategoryID = cl.CategoryID AND mci.ModuleID = @ModuleID
			
			INSERT INTO @FiltredByCategories SELECT [CategoryID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsModuleCategoryItems] WHERE ModuleID = @ModuleID;
		END
	END
	ELSE IF @CategoryFilterType = 2 -- 2 - AutoAdd
	BEGIN
		IF @FillterSettingsSource = 1 -- portal
		BEGIN
			WITH hierarchy AS(
				SELECT [CategoryID], [ParentCategory]
				FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryList] AS cl
				WHERE (cl.ParentCategory IN (SELECT [CategoryID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsPortalCategoryItems] WHERE PortalID = @PortalID) OR cl.CategoryID IN (SELECT [CategoryID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsPortalCategoryItems] WHERE PortalID = @PortalID)) AND PortalID = @PortalID
				UNION ALL
				SELECT c.[CategoryID], c.[ParentCategory]
				FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryList] AS c INNER JOIN hierarchy AS p ON c.ParentCategory = p.CategoryID WHERE c.PortalID = @PortalID
				)
			INSERT INTO @FiltredByCategories SELECT DISTINCT CategoryID FROM hierarchy;	
			INSERT INTO @UserViewCategoriesWithFilter SELECT uvc.CategoryID FROM @FiltredByCategories AS nfc INNER JOIN @UserViewCategories AS uvc ON uvc.CategoryID = nfc.CategoryID;			
		END
		ELSE -- module
		BEGIN
			WITH hierarchy AS(
				SELECT [CategoryID], [ParentCategory]
				FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryList] AS cl
				WHERE (cl.ParentCategory IN (SELECT [CategoryID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsModuleCategoryItems] WHERE ModuleID = @ModuleID) OR cl.CategoryID IN (SELECT [CategoryID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsModuleCategoryItems] WHERE ModuleID = @ModuleID)) AND PortalID = @PortalID
				UNION ALL
				SELECT c.[CategoryID], c.[ParentCategory]
				FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryList] AS c INNER JOIN hierarchy AS p ON c.ParentCategory = p.CategoryID WHERE c.PortalID = @PortalID
				)
			INSERT INTO @FiltredByCategories SELECT DISTINCT CategoryID FROM hierarchy;	
			INSERT INTO @UserViewCategoriesWithFilter SELECT uvc.CategoryID FROM @FiltredByCategories AS nfc INNER JOIN @UserViewCategories AS uvc ON uvc.CategoryID = nfc.CategoryID;
		END
	END
END

DECLARE @FilterBySocialGroup bit;
SET @FilterBySocialGroup = 0;
DECLARE @FilterAuthorOrAuthors bit;
SET @FilterAuthorOrAuthors = 0;

DECLARE @TempAuthorsIDList TABLE (UserID int NOT NULL PRIMARY KEY);
IF @IsSocialInstance = 1
	BEGIN
		IF @FilterByDNNGroupID <> 0
		BEGIN	
			SET @FilterBySocialGroup = 1;
			IF @FilterByAuthor <> 0
			BEGIN
				SET @FilterAuthorOrAuthors = 1;
				SELECT @FilterByAuthor = UserID FROM {databaseOwner}[{objectQualifier}EasyDNNNewsAuthorProfile] WHERE [AuthorProfileID] = @FilterByAuthor;
			END
		END
	END
ELSE
BEGIN
-- ovaj dio odnosi se na filtriranje autora
	IF @OuterModuleID <> 0 AND @ShowAllAuthors = 0 -- filter iz other modula
	BEGIN
		SET @FilterAuthorOrAuthors = 1;
		INSERT INTO @TempAuthorsIDList
			SELECT [UserID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsModuleAuthorsItems] AS mai WHERE mai.ModuleID = @OuterModuleID
			UNION 
			SELECT [UserID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsAuthorProfile] AS ap 
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsAutorGroupItems] AS agi ON ap.AuthorProfileID = agi.AuthorProfileID
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsModuleGroupItems] AS mgi ON mgi.GroupID = agi.GroupID
			WHERE mgi.ModuleID = @OuterModuleID
	END
	ELSE
	BEGIN
		IF @FilterByAuthor = 0 AND @FilterByGroupID = 0 AND @ShowAllAuthors = 0 -- filter glavnog newsa
		BEGIN
			SET @FilterAuthorOrAuthors = 1;
			IF @FillterSettingsSource = 1 -- by portal
			BEGIN
				INSERT INTO @TempAuthorsIDList
				SELECT [UserID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsPortalAuthorsItems] AS pai WHERE pai.PortalID = @PortalID
				UNION 
				SELECT [UserID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsAuthorProfile] AS ap 
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsAutorGroupItems] AS agi ON ap.AuthorProfileID = agi.AuthorProfileID
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsPortalGroupItems] AS pgi ON pgi.GroupID = agi.GroupID
					WHERE pgi.PortalID = @PortalID
			END
			ELSE -- by modul
			BEGIN
				INSERT INTO @TempAuthorsIDList
				SELECT [UserID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsModuleAuthorsItems] AS mai WHERE mai.ModuleID = @ModuleID
				UNION 
				SELECT [UserID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsAuthorProfile] AS ap 
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsAutorGroupItems] AS agi ON ap.AuthorProfileID = agi.AuthorProfileID
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsModuleGroupItems] AS mgi ON mgi.GroupID = agi.GroupID
					WHERE mgi.ModuleID = @ModuleID
			END
		END
		ELSE IF @FilterByAuthor <> 0
		BEGIN
			SET @FilterAuthorOrAuthors = 1;
			INSERT INTO @TempAuthorsIDList SELECT [UserID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsAuthorProfile] WHERE [AuthorProfileID] = @FilterByAuthor;
		END
		ELSE IF @FilterByGroupID <> 0
		BEGIN
			SET @FilterAuthorOrAuthors = 1;
			INSERT INTO @TempAuthorsIDList
			SELECT [UserID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsAuthorProfile] AS ap 
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsAutorGroupItems] AS agi ON ap.AuthorProfileID = agi.AuthorProfileID	
				WHERE agi.GroupID = @FilterByGroupID
		END
	END
END
-- kategorije sa edit pravima
IF @AdminOrSuperUser = 1 OR @Perm_EditAllCategores = 1
BEGIN	
	INSERT INTO @UserEditCategories SELECT CategoryID FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryList] WHERE PortalID = @PortalID;
	SET @EditPermission = 1;
END
ELSE
BEGIN
	IF @UserID = -1
	BEGIN
		IF @PermissionSettingsSource = 1 -- by portal
		BEGIN
			INSERT INTO @UserEditCategories
			SELECT rpatc.[CategoryID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsRolePremissionsAddToCategories] AS rpatc
			INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsRolePremissionSettings] AS rps ON rps.PremissionSettingsID = rpatc.PremissionSettingsID
			WHERE rps.PortalID = @PortalID AND rps.ModuleID IS NULL AND rps.RoleID IS NULL;
		END
		ELSE -- by module
		BEGIN
		INSERT INTO @UserEditCategories
			SELECT rpatc.[CategoryID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsRolePremissionsAddToCategories] AS rpatc
			INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsRolePremissionSettings] AS rps ON rps.PremissionSettingsID = rpatc.PremissionSettingsID
			WHERE rps.RoleID IS NULL AND rps.PortalID = @PortalID AND rps.ModuleID = @ModuleID;
		END
	END
	ELSE -- registrirani korisnik
	BEGIN
		IF @PermissionSettingsSource = 1 -- by portal
		BEGIN
			INSERT INTO @UserEditCategories
			SELECT rpatc.[CategoryID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsRolePremissionsAddToCategories] AS rpatc
			INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsRolePremissionSettings] AS rps ON rps.PremissionSettingsID = rpatc.PremissionSettingsID
			INNER JOIN @UserInRoles AS uir ON rps.RoleID = uir.RoleID
			WHERE rps.PortalID = @PortalID AND rps.ModuleID IS NULL GROUP BY rpatc.[CategoryID]
			UNION
			SELECT upatc.[CategoryID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsUserPremissionsAddToCategories] AS upatc
			INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsUserPremissionSettings] AS ups ON ups.PremissionSettingsID = upatc.PremissionSettingsID
			WHERE ups.UserID = @UserID AND ups.PortalID = @PortalID AND ups.ModuleID IS NULL GROUP BY upatc.[CategoryID];
		END
		ELSE -- by module
		BEGIN
			INSERT INTO @UserEditCategories
			SELECT rpatc.[CategoryID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsRolePremissionsAddToCategories] AS rpatc
			INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsRolePremissionSettings] AS rps ON rps.PremissionSettingsID = rpatc.PremissionSettingsID
			INNER JOIN @UserInRoles AS uir ON rps.RoleID = uir.RoleID
			WHERE rps.PortalID = @PortalID AND rps.ModuleID = @ModuleID GROUP BY rpatc.[CategoryID]
			UNION
			SELECT upatc.[CategoryID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsUserPremissionsAddToCategories] AS upatc
			INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsUserPremissionSettings] AS ups ON ups.PremissionSettingsID = upatc.PremissionSettingsID
			WHERE ups.UserID = @UserID AND ups.PortalID = @PortalID AND ups.ModuleID = @ModuleID GROUP BY upatc.[CategoryID];
		END	
	END
	IF EXISTS(SELECT * FROM @UserEditCategories) BEGIN SET @EditPermission = 2; END
END

DECLARE @LocalizedCategories TABLE (ID int NOT NULL PRIMARY KEY, Name nvarchar(200), Position int, CategoryURL nvarchar(1500));
IF @LocaleCode <> ''''
BEGIN
	WITH LocCategories(ID, Name, Position, CategoryURL) AS (
		SELECT Cat.CategoryID AS ID, cl.Title AS Name, Cat.Position, Cat.CategoryURL FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryList] AS Cat INNER JOIN @UserViewCategories  AS uvc ON uvc.CategoryID = Cat.CategoryID INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryLocalization] AS cl ON uvc.CategoryID = cl.CategoryID WHERE Cat.PortalID = @PortalID AND cl.LocaleCode = @LocaleCode
	),
	NotLocCategories(ID, Name, Position, CategoryURL) AS (
		SELECT Cat.CategoryID AS ID, Cat.CategoryName AS Name, Cat.Position, Cat.CategoryURL FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryList] AS Cat INNER JOIN @UserViewCategories AS uvc ON uvc.CategoryID = Cat.CategoryID WHERE Cat.PortalID = @PortalID AND Cat.CategoryID NOT IN (SELECT ID FROM LocCategories)
	)
	INSERT INTO @LocalizedCategories SELECT ID, Name, Position, CategoryURL FROM (SELECT ID, Name, Position, CategoryURL FROM LocCategories UNION ALL SELECT ID, Name, Position, CategoryURL FROM NotLocCategories) AS ArticleCategories
END
ELSE
BEGIN
	INSERT INTO @LocalizedCategories SELECT Cat.CategoryID AS ID, Cat.CategoryName AS Name, Cat.Position, Cat.CategoryURL FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryList] AS Cat INNER JOIN @UserViewCategories  AS uvc ON uvc.CategoryID = cat.CategoryID WHERE Cat.PortalID = @PortalID
END

IF @IsSocialInstance = 0
BEGIN
	IF @LocaleCode <> ''''
	BEGIN
		WITH FinalArticleIDsSet (ArticleID) AS(
			SELECT TOP (@ItemsTo - @ItemsFrom + 1) ArticleID FROM (SELECT *, ROW_NUMBER() OVER (ORDER BY 
				 CASE WHEN @OrderBy =''PublishDate ASC'' THEN PublishDate END,
				 CASE WHEN @OrderBy =''PublishDate DESC'' THEN PublishDate END DESC,
				 CASE WHEN @OrderBy =''NumberOfViews ASC'' THEN NumberOfViews END,
				 CASE WHEN @OrderBy =''NumberOfViews DESC'' THEN NumberOfViews END DESC,
				 CASE WHEN @OrderBy =''RatingValue ASC'' THEN RatingValue END,
				 CASE WHEN @OrderBy =''RatingValue DESC'' THEN RatingValue END DESC,
				 CASE WHEN @OrderBy =''DateAdded ASC'' THEN DateAdded END,
				 CASE WHEN @OrderBy =''DateAdded DESC'' THEN DateAdded END DESC,
				 CASE WHEN @OrderBy =''ExpireDate ASC'' THEN ExpireDate END,
				 CASE WHEN @OrderBy =''ExpireDate DESC'' THEN ExpireDate END DESC,
				 CASE WHEN @OrderBy =''LastModified ASC'' THEN LastModified END,
				 CASE WHEN @OrderBy =''LastModified DESC'' THEN LastModified END DESC,
				 CASE WHEN @OrderBy =''NumberOfComments ASC'' THEN NumberOfComments END,
				 CASE WHEN @OrderBy =''NumberOfComments DESC'' THEN NumberOfComments END DESC,
				 CASE WHEN @OrderBy =''Title ASC'' THEN Title END,
				 CASE WHEN @OrderBy =''Title DESC'' THEN Title END DESC) AS Kulike
			FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS n WHERE ArticleID IN(
				SELECT DISTINCT na.[ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS na
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS cat ON na.ArticleID = cat.ArticleID
					INNER JOIN @UserViewCategoriesWithFilter  AS uvcwf ON uvcwf.CategoryID = cat.CategoryID
					LEFT OUTER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsContentLocalization] AS ncl ON ncl.ArticleID = na.ArticleID 
				WHERE na.PortalID=@PortalID
					AND na.HasPermissions = 0
					AND na.PublishDate >= @FromDate AND na.PublishDate <= @ToDate AND ExpireDate >= @CurrentDate
					AND ((@EditPermission = 1) OR ((@UserCanApprove = 1 OR na.Approved=1) AND (na.Active=1 OR na.UserID=@UserID)))
					AND ((@Featured = 1 AND na.Featured = 1) OR (@Featured = 0))
					AND ((@FilterAuthorOrAuthors = 1 AND na.UserID IN (SELECT UserID FROM @TempAuthorsIDList)) OR (@FilterAuthorOrAuthors = 0))
					AND ((@HideUnlocalizedItems = 1 AND ncl.ArticleID IS NOT NULL AND ncl.LocaleCode = @LocaleCode) OR (@HideUnlocalizedItems = 0))
				UNION
				SELECT DISTINCT na.[ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS na
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS cat ON na.ArticleID = cat.ArticleID
					INNER JOIN @UserViewCategoriesWithFilter  AS uvcwf ON uvcwf.CategoryID = cat.CategoryID
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsEventsData] AS ne on na.ArticleID = ne.ArticleID
					LEFT OUTER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsContentLocalization] AS ncl ON ncl.ArticleID = na.ArticleID
			    WHERE na.PortalID=@PortalID
			    	AND na.HasPermissions = 0
			    	AND na.PublishDate <= @CurrentDate AND na.ExpireDate >= @CurrentDate
			    	AND ne.StartDate <= @ToDate AND ne.EndDate >= @FromDate
					AND ((@EditPermission = 1) OR ((@UserCanApprove = 1 OR na.Approved=1) AND (na.Active=1 OR na.UserID=@UserID)))
					AND ((@Featured = 1 AND na.Featured = 1) OR (@Featured = 0))
					AND ((@FilterAuthorOrAuthors = 1 AND na.UserID IN (SELECT UserID FROM @TempAuthorsIDList)) OR (@FilterAuthorOrAuthors = 0))
					AND ((@HideUnlocalizedItems = 1 AND ncl.ArticleID IS NOT NULL AND ncl.LocaleCode = @LocaleCode) OR (@HideUnlocalizedItems = 0))
				UNION ALL
				SELECT na.[ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS na
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsArticleUserPermissions] AS aup ON na.ArticleID = aup.ArticleID
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS cat ON na.ArticleID = cat.ArticleID
					INNER JOIN @FiltredByCategories AS fbc ON fbc.CategoryID = cat.CategoryID
					LEFT OUTER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsContentLocalization] AS ncl ON ncl.ArticleID = na.ArticleID
				WHERE na.PortalID=@PortalID
					AND na.HasPermissions = 1
					AND na.PublishDate >= @FromDate AND na.PublishDate <= @ToDate AND ExpireDate >= @CurrentDate
					AND ((@EditPermission = 1) OR (((@UserID = -1 AND aup.UserID IS NULL) OR (aup.UserID = @UserID))
						AND aup.Show = 1  AND ((@UserCanApprove = 1) OR (na.Approved=1)) AND (na.Active=1 OR na.UserID=@UserID)
					))
					AND ((@Featured = 1 AND na.Featured = 1) OR (@Featured = 0))
					AND ((@FilterAuthorOrAuthors = 1 AND na.UserID IN (SELECT UserID FROM @TempAuthorsIDList)) OR (@FilterAuthorOrAuthors = 0))
					AND ((@HideUnlocalizedItems = 1 AND ncl.ArticleID IS NOT NULL AND ncl.LocaleCode = @LocaleCode) OR (@HideUnlocalizedItems = 0))
				UNION
				SELECT na.[ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS na
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsArticleUserPermissions] AS aup ON na.ArticleID = aup.ArticleID
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS cat ON na.ArticleID = cat.ArticleID
					INNER JOIN @FiltredByCategories AS fbc ON fbc.CategoryID = cat.CategoryID
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsEventsData] AS ne on na.ArticleID = ne.ArticleID
					LEFT OUTER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsContentLocalization] AS ncl ON ncl.ArticleID = na.ArticleID
				WHERE na.PortalID=@PortalID
					AND na.HasPermissions = 1
					AND na.PublishDate <= @CurrentDate AND na.ExpireDate >= @CurrentDate
					AND ne.StartDate <= @ToDate AND ne.EndDate >= @FromDate
					AND ((@EditPermission = 1) OR (((@UserID = -1 AND aup.UserID IS NULL) OR (aup.UserID = @UserID))
						AND aup.Show = 1 AND ((@UserCanApprove = 1) OR (na.Approved=1))AND (na.Active=1 OR na.UserID=@UserID)
					))
					AND ((@Featured = 1 AND na.Featured = 1) OR (@Featured = 0))
					AND ((@FilterAuthorOrAuthors = 1 AND na.UserID IN (SELECT UserID FROM @TempAuthorsIDList)) OR (@FilterAuthorOrAuthors = 0))
					AND ((@HideUnlocalizedItems = 1 AND ncl.ArticleID IS NOT NULL AND ncl.LocaleCode = @LocaleCode) OR (@HideUnlocalizedItems = 0))
				UNION
				SELECT DISTINCT na.[ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS na
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsArticleRolePermissions] AS arp ON na.ArticleID = arp.ArticleID
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS cat ON na.ArticleID = cat.ArticleID
					INNER JOIN @FiltredByCategories AS fbc ON fbc.CategoryID = cat.CategoryID
					LEFT OUTER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsContentLocalization] AS ncl ON ncl.ArticleID = na.ArticleID
				WHERE na.PortalID=@PortalID
					AND na.HasPermissions = 1
					AND na.PublishDate >= @FromDate AND na.PublishDate <= @ToDate AND ExpireDate >= @CurrentDate
					AND ((@EditPermission = 1) OR (((@UserCanApprove = 1) OR (na.Approved=1))
						AND (na.Active=1 OR na.UserID=@UserID) AND arp.Show = 1 AND arp.RoleID IN (SELECT [RoleID] FROM @UserInRoles)
					))
					AND ((@Featured = 1 AND na.Featured = 1) OR (@Featured = 0))
					AND ((@FilterAuthorOrAuthors = 1 AND na.UserID IN (SELECT UserID FROM @TempAuthorsIDList)) OR (@FilterAuthorOrAuthors = 0))
					AND ((@HideUnlocalizedItems = 1 AND ncl.ArticleID IS NOT NULL AND ncl.LocaleCode = @LocaleCode) OR (@HideUnlocalizedItems = 0))	 
				UNION
				SELECT DISTINCT na.[ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS na
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsArticleRolePermissions] AS arp ON na.ArticleID = arp.ArticleID
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS cat ON na.ArticleID = cat.ArticleID
					INNER JOIN @FiltredByCategories AS fbc ON fbc.CategoryID = cat.CategoryID
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsEventsData] AS ne on na.ArticleID = ne.ArticleID
					LEFT OUTER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsContentLocalization] AS ncl ON ncl.ArticleID = na.ArticleID
				WHERE na.PortalID=@PortalID
					AND na.HasPermissions = 1
					AND na.PublishDate <= @CurrentDate AND na.ExpireDate >= @CurrentDate
					AND ne.StartDate <= @ToDate AND ne.EndDate >= @FromDate
					AND ((@EditPermission = 1) OR (((@UserCanApprove = 1) OR (na.Approved=1))
						AND (na.Active=1 OR na.UserID=@UserID)AND arp.Show = 1AND arp.RoleID IN (SELECT [RoleID] FROM @UserInRoles)
					))
					AND ((@Featured = 1 AND na.Featured = 1) OR (@Featured = 0))
					AND ((@FilterAuthorOrAuthors = 1 AND na.UserID IN (SELECT UserID FROM @TempAuthorsIDList)) OR (@FilterAuthorOrAuthors = 0))
					AND ((@HideUnlocalizedItems = 1 AND ncl.ArticleID IS NOT NULL AND ncl.LocaleCode = @LocaleCode) OR (@HideUnlocalizedItems = 0))
			)
			) AS Result WHERE Kulike BETWEEN @ItemsFrom AND @ItemsTo ORDER BY
				 CASE WHEN @OrderBy =''PublishDate ASC'' THEN PublishDate END,
				 CASE WHEN @OrderBy =''PublishDate DESC'' THEN PublishDate END DESC,
				 CASE WHEN @OrderBy =''NumberOfViews ASC'' THEN NumberOfViews END,
				 CASE WHEN @OrderBy =''NumberOfViews DESC'' THEN NumberOfViews END DESC,
				 CASE WHEN @OrderBy =''RatingValue ASC'' THEN RatingValue END,
				 CASE WHEN @OrderBy =''RatingValue DESC'' THEN RatingValue END DESC,
				 CASE WHEN @OrderBy =''DateAdded ASC'' THEN DateAdded END,
				 CASE WHEN @OrderBy =''DateAdded DESC'' THEN DateAdded END DESC,
				 CASE WHEN @OrderBy =''ExpireDate ASC'' THEN ExpireDate END,
				 CASE WHEN @OrderBy =''ExpireDate DESC'' THEN ExpireDate END DESC,
				 CASE WHEN @OrderBy =''LastModified ASC'' THEN LastModified END,
				 CASE WHEN @OrderBy =''LastModified DESC'' THEN LastModified END DESC,
				 CASE WHEN @OrderBy =''NumberOfComments ASC'' THEN NumberOfComments END,
				 CASE WHEN @OrderBy =''NumberOfComments DESC'' THEN NumberOfComments END DESC,
				 CASE WHEN @OrderBy =''Title ASC'' THEN Title END,
				 CASE WHEN @OrderBy =''Title DESC'' THEN Title END DESC
		),
		FinalLocalizedArticleIDsSet (ArticleID,Title,SubTitle,Summary,Article,DetailTypeData,TitleLink,MetaDecription,MetaKeywords,MainImageTitle,MainImageDescription) AS(
			SELECT ArticleID,Title,SubTitle,Summary,Article,DetailTypeData,clTitleLink AS TitleLink ,MetaDecription,MetaKeywords,MainImageTitle,MainImageDescription FROM {databaseOwner}[{objectQualifier}EasyDNNNewsContentLocalization] WHERE ArticleID IN (SELECT ArticleID FROM FinalArticleIDsSet) AND LocaleCode = @LocaleCode
		)
		SELECT *,
		CASE @EditPermission 
			WHEN 0 THEN 0
			WHEN 1 THEN 1
			WHEN 2 THEN
			CASE @EditOnlyAsOwner
				WHEN 0 THEN			
					CASE WHEN EXISTS(SELECT CategoryID FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS c WHERE c.ArticleID = Result.ArticleID AND c.CategoryID IN (SELECT CategoryID FROM @UserEditCategories))
						THEN 1
						ELSE
							CASE WHEN EXISTS(SELECT [ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsArticleRolePermissions] AS arp WHERE arp.ArticleID = Result.ArticleID AND arp.Edit = 1 AND arp.RoleID IN(SELECT RoleID FROM @UserInRoles))
							THEN 1
							ELSE
								CASE WHEN EXISTS (SELECT [ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsArticleUserPermissions] AS aup WHERE aup.ArticleID = Result.ArticleID AND aup.Edit = 1 AND aup.UserID = @UserID)
									THEN 1
									ELSE 0
								END
							END
					END  			
				WHEN 1 THEN
					CASE WHEN EXISTS(SELECT CategoryID FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS c WHERE Result.UserID = @UserID AND c.ArticleID = Result.ArticleID AND c.CategoryID IN (SELECT CategoryID FROM @UserEditCategories))
						THEN 1
						ELSE
							CASE WHEN EXISTS(SELECT [ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsArticleRolePermissions] AS arp WHERE arp.ArticleID = Result.ArticleID AND arp.Edit = 1 AND arp.RoleID IN(SELECT RoleID FROM @UserInRoles))
							THEN 1
							ELSE
								CASE WHEN EXISTS (SELECT [ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsArticleUserPermissions] AS aup WHERE aup.ArticleID = Result.ArticleID AND aup.Edit = 1 AND aup.UserID = @UserID)
									THEN 1
									ELSE 0
								END
							END 
					END
			END
			WHEN 3 THEN
				CASE WHEN EXISTS(SELECT [ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsArticleRolePermissions] AS arp WHERE arp.ArticleID = Result.ArticleID AND arp.Edit = 1 AND arp.RoleID IN(SELECT RoleID FROM @UserInRoles))
					THEN 1
					ELSE
					CASE WHEN EXISTS (SELECT [ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsArticleUserPermissions] AS aup WHERE aup.ArticleID = Result.ArticleID AND aup.Edit = 1 AND aup.UserID = @UserID)
						THEN 1
						ELSE 0
						END
					END 
		END AS ''CanEdit'',
		(SELECT cat.ID, cat.Name, cat.CategoryURL FROM @LocalizedCategories AS Cat INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS c ON c.CategoryID = Cat.ID WHERE c.ArticleID = Result.ArticleID ORDER BY Position FOR XML AUTO, ROOT(''root'')) AS ''CatToShow'',
		 CASE Result.Active
			WHEN 1 THEN 0
			WHEN 0 THEN 1
		 END AS ''Published'',
		 CASE @UserCanApprove
			WHEN 0 THEN 0
			WHEN 1 THEN
				CASE Result.Approved
				 WHEN 1 THEN 0
				 WHEN 0 THEN
					 CASE Result.Active
						WHEN 1 THEN 1
						WHEN 0 THEN 0
					END
				END
		 END AS ''Approve''
	 	 FROM (
			 SELECT n.[ArticleID],n.[UserID],n.[Title],n.[SubTitle],n.[Summary],n.[Article],n.[ArticleImage],n.[DateAdded],n.[LastModified],n.[PublishDate]
				  ,n.[ExpireDate],n.[Approved],n.[Featured],n.[NumberOfViews],n.[RatingValue],n.[RatingCount],n.[AllowComments],n.[Active]
				  ,n.[TitleLink],n.[DetailType],n.[DetailTypeData],n.[DetailsTemplate],n.[DetailsTheme],n.[GalleryPosition],n.[GalleryDisplayType]
				  ,n.[ShowMainImage],n.[ShowMainImageFront],n.[CommentsTheme],n.[ArticleImageFolder],n.[NumberOfComments]
				  ,n.[ArticleImageSet],n.[MetaDecription],n.[MetaKeywords],n.[DisplayStyle],n.[DetailTarget]
				  ,n.[ArticleFromRSS],n.[HasPermissions],n.[EventArticle],n.[DetailMediaType],n.[DetailMediaData],n.[AuthorAliasName],n.[ShowGallery],n.[ArticleGalleryID],n.[MainImageTitle],n.[MainImageDescription]
				   FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS n WHERE ArticleID IN (SELECT ArticleID FROM FinalArticleIDsSet WHERE ArticleID NOT IN (SELECT ArticleID FROM FinalLocalizedArticleIDsSet))
			 UNION ALL
			 SELECT n.[ArticleID],n.[UserID],fla.[Title],fla.[SubTitle],fla.[Summary],fla.[Article],n.[ArticleImage],n.[DateAdded],n.[LastModified],n.[PublishDate]
				  ,n.[ExpireDate],n.[Approved],n.[Featured],n.[NumberOfViews],n.[RatingValue],n.[RatingCount],n.[AllowComments],n.[Active]
				  ,fla.[TitleLink],n.[DetailType],fla.[DetailTypeData],n.[DetailsTemplate],n.[DetailsTheme],n.[GalleryPosition],n.[GalleryDisplayType]
				  ,n.[ShowMainImage],n.[ShowMainImageFront],n.[CommentsTheme],n.[ArticleImageFolder],n.[NumberOfComments]
				  ,n.[ArticleImageSet],fla.[MetaDecription],fla.[MetaKeywords],n.[DisplayStyle],n.[DetailTarget]
				  ,n.[ArticleFromRSS],n.[HasPermissions],n.[EventArticle],n.[DetailMediaType],n.[DetailMediaData],n.[AuthorAliasName],n.[ShowGallery],n.[ArticleGalleryID],fla.[MainImageTitle],fla.[MainImageDescription]
			  FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS n INNER JOIN FinalLocalizedArticleIDsSet AS fla ON fla.ArticleID = n.ArticleID) As Result
	  ORDER BY
		 CASE WHEN @OrderBy =''PublishDate ASC'' THEN PublishDate END,
		 CASE WHEN @OrderBy =''PublishDate DESC'' THEN PublishDate END DESC,
		 CASE WHEN @OrderBy =''NumberOfViews ASC'' THEN NumberOfViews END,
		 CASE WHEN @OrderBy =''NumberOfViews DESC'' THEN NumberOfViews END DESC,
		 CASE WHEN @OrderBy =''RatingValue ASC'' THEN RatingValue END,
		 CASE WHEN @OrderBy =''RatingValue DESC'' THEN RatingValue END DESC,
		 CASE WHEN @OrderBy =''DateAdded ASC'' THEN DateAdded END,
		 CASE WHEN @OrderBy =''DateAdded DESC'' THEN DateAdded END DESC,
		 CASE WHEN @OrderBy =''ExpireDate ASC'' THEN ExpireDate END,
		 CASE WHEN @OrderBy =''ExpireDate DESC'' THEN ExpireDate END DESC,
		 CASE WHEN @OrderBy =''LastModified ASC'' THEN LastModified END,
		 CASE WHEN @OrderBy =''LastModified DESC'' THEN LastModified END DESC,
		 CASE WHEN @OrderBy =''NumberOfComments ASC'' THEN NumberOfComments END,
		 CASE WHEN @OrderBy =''NumberOfComments DESC'' THEN NumberOfComments END DESC,
		 CASE WHEN @OrderBy =''Title ASC'' THEN Title END,
		 CASE WHEN @OrderBy =''Title DESC'' THEN Title END DESC;
	END
	ELSE
	BEGIN
		SELECT *,
		CASE @EditPermission 
			WHEN 0 THEN 0
			WHEN 1 THEN 1
			WHEN 2 THEN
			CASE @EditOnlyAsOwner
				WHEN 0 THEN			
					CASE WHEN EXISTS(SELECT CategoryID FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS c WHERE c.ArticleID = Result.ArticleID AND c.CategoryID IN (SELECT CategoryID FROM @UserEditCategories))
						THEN 1
						ELSE
							CASE WHEN EXISTS(SELECT [ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsArticleRolePermissions] AS arp WHERE arp.ArticleID = Result.ArticleID AND arp.Edit = 1 AND arp.RoleID IN(SELECT RoleID FROM @UserInRoles))
							THEN 1
							ELSE
								CASE WHEN EXISTS (SELECT [ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsArticleUserPermissions] AS aup WHERE aup.ArticleID = Result.ArticleID AND aup.Edit = 1 AND aup.UserID = @UserID)
									THEN 1
									ELSE 0
								END
							END
					END  			
				WHEN 1 THEN
					CASE WHEN EXISTS(SELECT CategoryID FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS c WHERE Result.UserID = @UserID AND c.ArticleID = Result.ArticleID AND c.CategoryID IN (SELECT CategoryID FROM @UserEditCategories))
						THEN 1
						ELSE
							CASE WHEN EXISTS(SELECT [ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsArticleRolePermissions] AS arp WHERE arp.ArticleID = Result.ArticleID AND arp.Edit = 1 AND arp.RoleID IN(SELECT RoleID FROM @UserInRoles))
							THEN 1
							ELSE
								CASE WHEN EXISTS (SELECT [ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsArticleUserPermissions] AS aup WHERE aup.ArticleID = Result.ArticleID AND aup.Edit = 1 AND aup.UserID = @UserID)
									THEN 1
									ELSE 0
								END
							END 
					END
			END
			WHEN 3 THEN
				CASE WHEN EXISTS(SELECT [ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsArticleRolePermissions] AS arp WHERE arp.ArticleID = Result.ArticleID AND arp.Edit = 1 AND arp.RoleID IN(SELECT RoleID FROM @UserInRoles))
					THEN 1
					ELSE
					CASE WHEN EXISTS (SELECT [ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsArticleUserPermissions] AS aup WHERE aup.ArticleID = Result.ArticleID AND aup.Edit = 1 AND aup.UserID = @UserID)
						THEN 1
						ELSE 0
						END
					END 
		END AS ''CanEdit'',
		(SELECT cat.ID, cat.Name, cat.CategoryURL FROM @LocalizedCategories AS Cat INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS c ON c.CategoryID = Cat.ID WHERE c.ArticleID = Result.ArticleID ORDER BY Position FOR XML AUTO, ROOT(''root'')) AS ''CatToShow'',
		 CASE Result.Active
			WHEN 1 THEN 0
			WHEN 0 THEN 1
		 END AS ''Published'',
		 CASE @UserCanApprove
			WHEN 0 THEN 0
			WHEN 1 THEN
				CASE Result.Approved
				 WHEN 1 THEN 0
				 WHEN 0 THEN
					 CASE Result.Active
						WHEN 1 THEN 1
						WHEN 0 THEN 0
					END
				END
		 END AS ''Approve''
		 FROM (SELECT
		  n.[ArticleID],n.[UserID],n.[Title],n.[SubTitle],n.[Summary],n.[Article],n.[ArticleImage],n.[DateAdded],n.[LastModified],n.[PublishDate]
		  ,n.[ExpireDate],n.[Approved],n.[Featured],n.[NumberOfViews],n.[RatingValue],n.[RatingCount],n.[AllowComments],n.[Active]
		  ,n.[TitleLink],n.[DetailType],n.[DetailTypeData],n.[DetailsTemplate],n.[DetailsTheme],n.[GalleryPosition],n.[GalleryDisplayType]
		  ,n.[ShowMainImage],n.[ShowMainImageFront],n.[CommentsTheme],n.[ArticleImageFolder],n.[NumberOfComments]
		  ,n.[ArticleImageSet],n.[MetaDecription],n.[MetaKeywords],n.[DisplayStyle],n.[DetailTarget]
		  ,n.[ArticleFromRSS],n.[HasPermissions],n.[EventArticle],n.[DetailMediaType],n.[DetailMediaData],n.[AuthorAliasName],n.[ShowGallery],n.[ArticleGalleryID],n.[MainImageTitle],n.[MainImageDescription], ROW_NUMBER() OVER (ORDER BY 
		 CASE WHEN @OrderBy =''PublishDate ASC'' THEN PublishDate END,
		 CASE WHEN @OrderBy =''PublishDate DESC'' THEN PublishDate END DESC,
		 CASE WHEN @OrderBy =''NumberOfViews ASC'' THEN NumberOfViews END,
		 CASE WHEN @OrderBy =''NumberOfViews DESC'' THEN NumberOfViews END DESC,
		 CASE WHEN @OrderBy =''RatingValue ASC'' THEN RatingValue END,
		 CASE WHEN @OrderBy =''RatingValue DESC'' THEN RatingValue END DESC,
		 CASE WHEN @OrderBy =''DateAdded ASC'' THEN DateAdded END,
		 CASE WHEN @OrderBy =''DateAdded DESC'' THEN DateAdded END DESC,
		 CASE WHEN @OrderBy =''ExpireDate ASC'' THEN ExpireDate END,
		 CASE WHEN @OrderBy =''ExpireDate DESC'' THEN ExpireDate END DESC,
		 CASE WHEN @OrderBy =''LastModified ASC'' THEN LastModified END,
		 CASE WHEN @OrderBy =''LastModified DESC'' THEN LastModified END DESC,
		 CASE WHEN @OrderBy =''NumberOfComments ASC'' THEN NumberOfComments END,
		 CASE WHEN @OrderBy =''NumberOfComments DESC'' THEN NumberOfComments END DESC,
		 CASE WHEN @OrderBy =''Title ASC'' THEN Title END,
		 CASE WHEN @OrderBy =''Title DESC'' THEN Title END DESC) AS Kulike
		 FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS n WHERE ArticleID IN(
			SELECT DISTINCT na.[ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS na
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS cat ON na.ArticleID = cat.ArticleID
				INNER JOIN @UserViewCategoriesWithFilter  AS uvcwf ON uvcwf.CategoryID = cat.CategoryID
			WHERE na.PortalID=@PortalID
				AND na.HasPermissions = 0
				AND na.HideDefaultLocale = 0
				AND na.PublishDate >= @FromDate AND na.PublishDate <= @ToDate AND ExpireDate >= @CurrentDate
				AND ((@EditPermission = 1) OR ((@UserCanApprove = 1 OR na.Approved=1) AND (na.Active=1 OR na.UserID=@UserID)))
				AND ((@Featured = 1 AND na.Featured = 1) OR (@Featured = 0))
				AND ((@FilterAuthorOrAuthors = 1 AND na.UserID IN (SELECT UserID FROM @TempAuthorsIDList)) OR (@FilterAuthorOrAuthors = 0))
			UNION
			SELECT DISTINCT na.[ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS na
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS cat ON na.ArticleID = cat.ArticleID
				INNER JOIN @UserViewCategoriesWithFilter  AS uvcwf ON uvcwf.CategoryID = cat.CategoryID
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsEventsData] AS ne on na.ArticleID = ne.ArticleID
			WHERE na.PortalID=@PortalID
				AND na.HasPermissions = 0
				AND na.HideDefaultLocale = 0
				AND na.PublishDate <= @CurrentDate AND na.ExpireDate >= @CurrentDate
				AND ne.StartDate <= @ToDate AND ne.EndDate >= @FromDate
				AND ((@EditPermission = 1) OR ((@UserCanApprove = 1 OR na.Approved=1) AND (na.Active=1 OR na.UserID=@UserID)))
				AND ((@Featured = 1 AND na.Featured = 1) OR (@Featured = 0))
				AND ((@FilterAuthorOrAuthors = 1 AND na.UserID IN (SELECT UserID FROM @TempAuthorsIDList)) OR (@FilterAuthorOrAuthors = 0))
			UNION ALL
			SELECT na.[ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS na
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsArticleUserPermissions] AS aup ON na.ArticleID = aup.ArticleID
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS cat ON na.ArticleID = cat.ArticleID
				INNER JOIN @FiltredByCategories AS fbc ON fbc.CategoryID = cat.CategoryID
			WHERE na.PortalID=@PortalID
				AND na.HasPermissions = 1
				AND na.HideDefaultLocale = 0
				AND na.PublishDate >= @FromDate AND na.PublishDate <= @ToDate AND ExpireDate >= @CurrentDate
				AND ((@EditPermission = 1) OR (((@UserID = -1 AND aup.UserID IS NULL) OR (aup.UserID = @UserID))
					AND aup.Show = 1 AND ((@UserCanApprove = 1) OR (na.Approved=1)) AND (na.Active=1 OR na.UserID=@UserID)
				))
				AND ((@Featured = 1 AND na.Featured = 1) OR (@Featured = 0))
				AND ((@FilterAuthorOrAuthors = 1 AND na.UserID IN (SELECT UserID FROM @TempAuthorsIDList)) OR (@FilterAuthorOrAuthors = 0))
			UNION
			SELECT na.[ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS na
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsArticleUserPermissions] AS aup ON na.ArticleID = aup.ArticleID
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS cat ON na.ArticleID = cat.ArticleID
				INNER JOIN @FiltredByCategories AS fbc ON fbc.CategoryID = cat.CategoryID
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsEventsData] AS ne on na.ArticleID = ne.ArticleID
			WHERE na.PortalID=@PortalID
				AND na.HasPermissions = 1
				AND na.HideDefaultLocale = 0
				AND na.PublishDate <= @CurrentDate AND na.ExpireDate >= @CurrentDate
				AND ne.StartDate <= @ToDate AND ne.EndDate >= @FromDate
				AND ((@EditPermission = 1) OR (((@UserID = -1 AND aup.UserID IS NULL) OR (aup.UserID = @UserID))
					AND aup.Show = 1 AND ((@UserCanApprove = 1) OR (na.Approved=1)) AND (na.Active=1 OR na.UserID=@UserID)
				))
				AND ((@Featured = 1 AND na.Featured = 1) OR (@Featured = 0))
				AND ((@FilterAuthorOrAuthors = 1 AND na.UserID IN (SELECT UserID FROM @TempAuthorsIDList)) OR (@FilterAuthorOrAuthors = 0))
			UNION
			SELECT DISTINCT na.[ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS na
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsArticleRolePermissions] AS arp ON na.ArticleID = arp.ArticleID
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS cat ON na.ArticleID = cat.ArticleID
				INNER JOIN @FiltredByCategories AS fbc ON fbc.CategoryID = cat.CategoryID
			WHERE na.PortalID=@PortalID
				AND na.HasPermissions = 1
				AND na.HideDefaultLocale = 0
				AND na.PublishDate >= @FromDate AND na.PublishDate <= @ToDate AND ExpireDate >= @CurrentDate
				AND ((@EditPermission = 1) OR (((@UserCanApprove = 1) OR (na.Approved=1))
					AND (na.Active=1 OR na.UserID=@UserID) AND arp.Show = 1 AND arp.RoleID IN (SELECT [RoleID] FROM @UserInRoles)
				))
				AND ((@Featured = 1 AND na.Featured = 1) OR (@Featured = 0))
				AND ((@FilterAuthorOrAuthors = 1 AND na.UserID IN (SELECT UserID FROM @TempAuthorsIDList)) OR (@FilterAuthorOrAuthors = 0))	 
			UNION
			SELECT DISTINCT na.[ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS na
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsArticleRolePermissions] AS arp ON na.ArticleID = arp.ArticleID
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS cat ON na.ArticleID = cat.ArticleID
				INNER JOIN @FiltredByCategories AS fbc ON fbc.CategoryID = cat.CategoryID
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsEventsData] AS ne on na.ArticleID = ne.ArticleID
			WHERE na.PortalID=@PortalID
				AND na.HasPermissions = 1
				AND na.HideDefaultLocale = 0
				AND na.PublishDate <= @CurrentDate AND na.ExpireDate >= @CurrentDate
				AND ne.StartDate <= @ToDate AND ne.EndDate >= @FromDate
				AND ((@EditPermission = 1) OR (((@UserCanApprove = 1) OR (na.Approved=1))
					AND (na.Active=1 OR na.UserID=@UserID) AND arp.Show = 1 AND arp.RoleID IN (SELECT [RoleID] FROM @UserInRoles)
				))
				AND ((@Featured = 1 AND na.Featured = 1) OR (@Featured = 0))
				AND((@FilterAuthorOrAuthors = 1 AND na.UserID IN (SELECT UserID FROM @TempAuthorsIDList)) OR (@FilterAuthorOrAuthors = 0))
			)
		 ) AS Result WHERE Kulike BETWEEN @ItemsFrom AND @ItemsTo ORDER BY
		 CASE WHEN @OrderBy =''PublishDate ASC'' THEN PublishDate END,
		 CASE WHEN @OrderBy =''PublishDate DESC'' THEN PublishDate END DESC,
		 CASE WHEN @OrderBy =''NumberOfViews ASC'' THEN NumberOfViews END,
		 CASE WHEN @OrderBy =''NumberOfViews DESC'' THEN NumberOfViews END DESC,
		 CASE WHEN @OrderBy =''RatingValue ASC'' THEN RatingValue END,
		 CASE WHEN @OrderBy =''RatingValue DESC'' THEN RatingValue END DESC,
		 CASE WHEN @OrderBy =''DateAdded ASC'' THEN DateAdded END,
		 CASE WHEN @OrderBy =''DateAdded DESC'' THEN DateAdded END DESC,
		 CASE WHEN @OrderBy =''ExpireDate ASC'' THEN ExpireDate END,
		 CASE WHEN @OrderBy =''ExpireDate DESC'' THEN ExpireDate END DESC,
		 CASE WHEN @OrderBy =''LastModified ASC'' THEN LastModified END,
		 CASE WHEN @OrderBy =''LastModified DESC'' THEN LastModified END DESC,
		 CASE WHEN @OrderBy =''NumberOfComments ASC'' THEN NumberOfComments END,
		 CASE WHEN @OrderBy =''NumberOfComments DESC'' THEN NumberOfComments END DESC,
		 CASE WHEN @OrderBy =''Title ASC'' THEN Title END,
		 CASE WHEN @OrderBy =''Title DESC'' THEN Title END DESC;
	END
END
ELSE IF @FilterBySocialGroup = 1
BEGIN
	IF @LocaleCode <> ''''
	BEGIN
		WITH FinalArticleIDsSet (ArticleID) AS(
			SELECT TOP (@ItemsTo - @ItemsFrom + 1) ArticleID FROM (SELECT *, ROW_NUMBER() OVER (ORDER BY 
				 CASE WHEN @OrderBy =''PublishDate ASC'' THEN PublishDate END,
				 CASE WHEN @OrderBy =''PublishDate DESC'' THEN PublishDate END DESC,
				 CASE WHEN @OrderBy =''NumberOfViews ASC'' THEN NumberOfViews END,
				 CASE WHEN @OrderBy =''NumberOfViews DESC'' THEN NumberOfViews END DESC,
				 CASE WHEN @OrderBy =''RatingValue ASC'' THEN RatingValue END,
				 CASE WHEN @OrderBy =''RatingValue DESC'' THEN RatingValue END DESC,
				 CASE WHEN @OrderBy =''DateAdded ASC'' THEN DateAdded END,
				 CASE WHEN @OrderBy =''DateAdded DESC'' THEN DateAdded END DESC,
				 CASE WHEN @OrderBy =''ExpireDate ASC'' THEN ExpireDate END,
				 CASE WHEN @OrderBy =''ExpireDate DESC'' THEN ExpireDate END DESC,
				 CASE WHEN @OrderBy =''LastModified ASC'' THEN LastModified END,
				 CASE WHEN @OrderBy =''LastModified DESC'' THEN LastModified END DESC,
				 CASE WHEN @OrderBy =''NumberOfComments ASC'' THEN NumberOfComments END,
				 CASE WHEN @OrderBy =''NumberOfComments DESC'' THEN NumberOfComments END DESC,
				 CASE WHEN @OrderBy =''Title ASC'' THEN Title END,
				 CASE WHEN @OrderBy =''Title DESC'' THEN Title END DESC) AS Kulike
			FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS n WHERE ArticleID IN(
				SELECT DISTINCT na.[ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS na
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS cat ON na.ArticleID = cat.ArticleID
					INNER JOIN @UserViewCategoriesWithFilter  AS uvcwf ON uvcwf.CategoryID = cat.CategoryID
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = na.ArticleID
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialGroupItems] AS sgi ON sgi.ArticleID = na.ArticleID AND sgi.RoleID = @FilterByDNNGroupID
					INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserID, @FilterByDNNGroupID) AS t ON t.seckey = nss.SecurityKey
					LEFT OUTER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsContentLocalization] AS ncl ON ncl.ArticleID = na.ArticleID
				WHERE na.PortalID=@PortalID
					AND na.HasPermissions = 0
					AND na.PublishDate >= @FromDate AND na.PublishDate <= @ToDate AND ExpireDate >= @CurrentDate
					AND ((@EditPermission = 1) OR ((@UserCanApprove = 1 OR na.Approved=1) AND (na.Active=1 OR na.UserID=@UserID)))
					AND ((@Featured = 1 AND na.Featured = 1) OR (@Featured = 0))
					AND ((@FilterAuthorOrAuthors = 1 AND na.UserID = @FilterByAuthor) OR (@FilterAuthorOrAuthors = 0))
					AND ((@HideUnlocalizedItems = 1 AND ncl.ArticleID IS NOT NULL AND ncl.LocaleCode = @LocaleCode) OR (@HideUnlocalizedItems = 0))
				UNION
				SELECT DISTINCT na.[ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS na
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS cat ON na.ArticleID = cat.ArticleID
					INNER JOIN @UserViewCategoriesWithFilter  AS uvcwf ON uvcwf.CategoryID = cat.CategoryID
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsEventsData] AS ne on na.ArticleID = ne.ArticleID
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = na.ArticleID
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialGroupItems] AS sgi ON sgi.ArticleID = na.ArticleID AND sgi.RoleID = @FilterByDNNGroupID
					INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserID, @FilterByDNNGroupID) AS t ON t.seckey = nss.SecurityKey
					LEFT OUTER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsContentLocalization] AS ncl ON ncl.ArticleID = na.ArticleID
				WHERE na.PortalID=@PortalID
					AND na.HasPermissions = 0
					AND na.PublishDate <= @CurrentDate AND na.ExpireDate >= @CurrentDate
					AND ne.StartDate <= @ToDate AND ne.EndDate >= @FromDate
					AND ((@EditPermission = 1) OR ((@UserCanApprove = 1 OR na.Approved=1) AND (na.Active=1 OR na.UserID=@UserID)))
					AND ((@Featured = 1 AND na.Featured = 1) OR (@Featured = 0))
					AND ((@FilterAuthorOrAuthors = 1 AND na.UserID = @FilterByAuthor) OR (@FilterAuthorOrAuthors = 0))
					AND ((@HideUnlocalizedItems = 1 AND ncl.ArticleID IS NOT NULL AND ncl.LocaleCode = @LocaleCode) OR (@HideUnlocalizedItems = 0))
				UNION ALL
				SELECT na.[ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS na
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsArticleUserPermissions] AS aup ON na.ArticleID = aup.ArticleID
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS cat ON na.ArticleID = cat.ArticleID
					INNER JOIN @FiltredByCategories AS fbc ON fbc.CategoryID = cat.CategoryID
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = na.ArticleID
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialGroupItems] AS sgi ON sgi.ArticleID = na.ArticleID AND sgi.RoleID = @FilterByDNNGroupID
					INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserID, @FilterByDNNGroupID) AS t ON t.seckey = nss.SecurityKey
					LEFT OUTER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsContentLocalization] AS ncl ON ncl.ArticleID = na.ArticleID
				WHERE na.PortalID=@PortalID
					AND na.HasPermissions = 1
					AND na.PublishDate >= @FromDate AND na.PublishDate <= @ToDate AND ExpireDate >= @CurrentDate
					AND ((@EditPermission = 1) OR (((@UserID = -1 AND aup.UserID IS NULL) OR (aup.UserID = @UserID))
						AND aup.Show = 1  AND ((@UserCanApprove = 1) OR (na.Approved=1)) AND (na.Active=1 OR na.UserID=@UserID)
					))
					AND ((@Featured = 1 AND na.Featured = 1) OR (@Featured = 0))
					AND ((@FilterAuthorOrAuthors = 1 AND na.UserID = @FilterByAuthor) OR (@FilterAuthorOrAuthors = 0))
					AND ((@HideUnlocalizedItems = 1 AND ncl.ArticleID IS NOT NULL AND ncl.LocaleCode = @LocaleCode) OR (@HideUnlocalizedItems = 0))
				UNION
				SELECT na.[ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS na
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsArticleUserPermissions] AS aup ON na.ArticleID = aup.ArticleID
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS cat ON na.ArticleID = cat.ArticleID
					INNER JOIN @FiltredByCategories AS fbc ON fbc.CategoryID = cat.CategoryID
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsEventsData] AS ne on na.ArticleID = ne.ArticleID
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = na.ArticleID
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialGroupItems] AS sgi ON sgi.ArticleID = na.ArticleID AND sgi.RoleID = @FilterByDNNGroupID
					INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserID, @FilterByDNNGroupID) AS t ON t.seckey = nss.SecurityKey
					LEFT OUTER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsContentLocalization] AS ncl ON ncl.ArticleID = na.ArticleID
				WHERE na.PortalID=@PortalID
					AND na.HasPermissions = 1
					AND na.PublishDate <= @CurrentDate AND na.ExpireDate >= @CurrentDate
					AND ne.StartDate <= @ToDate AND ne.EndDate >= @FromDate
					AND ((@EditPermission = 1) OR (((@UserID = -1 AND aup.UserID IS NULL) OR (aup.UserID = @UserID))
						AND aup.Show = 1 AND ((@UserCanApprove = 1) OR (na.Approved=1)) AND (na.Active=1 OR na.UserID=@UserID)
					))
					AND ((@Featured = 1 AND na.Featured = 1) OR (@Featured = 0))
					AND ((@FilterAuthorOrAuthors = 1 AND na.UserID = @FilterByAuthor) OR (@FilterAuthorOrAuthors = 0))
					AND ((@HideUnlocalizedItems = 1 AND ncl.ArticleID IS NOT NULL AND ncl.LocaleCode = @LocaleCode) OR (@HideUnlocalizedItems = 0))
				UNION
				SELECT DISTINCT na.[ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS na
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsArticleRolePermissions] AS arp ON na.ArticleID = arp.ArticleID
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS cat ON na.ArticleID = cat.ArticleID
					INNER JOIN @FiltredByCategories AS fbc ON fbc.CategoryID = cat.CategoryID
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = na.ArticleID
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialGroupItems] AS sgi ON sgi.ArticleID = na.ArticleID AND sgi.RoleID = @FilterByDNNGroupID
					INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserID, @FilterByDNNGroupID) AS t ON t.seckey = nss.SecurityKey
					LEFT OUTER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsContentLocalization] AS ncl ON ncl.ArticleID = na.ArticleID
				WHERE na.PortalID=@PortalID
					AND na.HasPermissions = 1
					AND na.PublishDate >= @FromDate AND na.PublishDate <= @ToDate AND ExpireDate >= @CurrentDate
					AND ((@EditPermission = 1) OR (((@UserCanApprove = 1) OR (na.Approved=1)) 
						AND (na.Active=1 OR na.UserID=@UserID) AND arp.Show = 1 AND arp.RoleID IN (SELECT [RoleID] FROM @UserInRoles)
					))
					AND ((@Featured = 1 AND na.Featured = 1) OR (@Featured = 0))
					AND ((@FilterAuthorOrAuthors = 1 AND na.UserID = @FilterByAuthor) OR (@FilterAuthorOrAuthors = 0))
					AND ((@HideUnlocalizedItems = 1 AND ncl.ArticleID IS NOT NULL AND ncl.LocaleCode = @LocaleCode) OR (@HideUnlocalizedItems = 0))
				UNION
				SELECT DISTINCT na.[ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS na
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsArticleRolePermissions] AS arp ON na.ArticleID = arp.ArticleID
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS cat ON na.ArticleID = cat.ArticleID
					INNER JOIN @FiltredByCategories AS fbc ON fbc.CategoryID = cat.CategoryID
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsEventsData] AS ne on na.ArticleID = ne.ArticleID
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = na.ArticleID
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialGroupItems] AS sgi ON sgi.ArticleID = na.ArticleID AND sgi.RoleID = @FilterByDNNGroupID
					INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserID, @FilterByDNNGroupID) AS t ON t.seckey = nss.SecurityKey
					LEFT OUTER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsContentLocalization] AS ncl ON ncl.ArticleID = na.ArticleID
				WHERE na.PortalID=@PortalID
					AND na.HasPermissions = 1				
					AND na.PublishDate <= @CurrentDate AND na.ExpireDate >= @CurrentDate
					AND ne.StartDate <= @ToDate AND ne.EndDate >= @FromDate
					AND ((@EditPermission = 1) OR (((@UserCanApprove = 1) OR (na.Approved=1))
						AND (na.Active=1 OR na.UserID=@UserID) AND arp.Show = 1 AND arp.RoleID IN (SELECT [RoleID] FROM @UserInRoles)
					))
					AND ((@Featured = 1 AND na.Featured = 1) OR (@Featured = 0))
					AND ((@FilterAuthorOrAuthors = 1 AND na.UserID = @FilterByAuthor) OR (@FilterAuthorOrAuthors = 0))
					AND ((@HideUnlocalizedItems = 1 AND ncl.ArticleID IS NOT NULL AND ncl.LocaleCode = @LocaleCode) OR (@HideUnlocalizedItems = 0))
				)
			 ) AS Result WHERE Kulike BETWEEN @ItemsFrom AND @ItemsTo ORDER BY
				 CASE WHEN @OrderBy =''PublishDate ASC'' THEN PublishDate END,
				 CASE WHEN @OrderBy =''PublishDate DESC'' THEN PublishDate END DESC,
				 CASE WHEN @OrderBy =''NumberOfViews ASC'' THEN NumberOfViews END,
				 CASE WHEN @OrderBy =''NumberOfViews DESC'' THEN NumberOfViews END DESC,
				 CASE WHEN @OrderBy =''RatingValue ASC'' THEN RatingValue END,
				 CASE WHEN @OrderBy =''RatingValue DESC'' THEN RatingValue END DESC,
				 CASE WHEN @OrderBy =''DateAdded ASC'' THEN DateAdded END,
				 CASE WHEN @OrderBy =''DateAdded DESC'' THEN DateAdded END DESC,
				 CASE WHEN @OrderBy =''ExpireDate ASC'' THEN ExpireDate END,
				 CASE WHEN @OrderBy =''ExpireDate DESC'' THEN ExpireDate END DESC,
				 CASE WHEN @OrderBy =''LastModified ASC'' THEN LastModified END,
				 CASE WHEN @OrderBy =''LastModified DESC'' THEN LastModified END DESC,
				 CASE WHEN @OrderBy =''NumberOfComments ASC'' THEN NumberOfComments END,
				 CASE WHEN @OrderBy =''NumberOfComments DESC'' THEN NumberOfComments END DESC,
				 CASE WHEN @OrderBy =''Title ASC'' THEN Title END,
				 CASE WHEN @OrderBy =''Title DESC'' THEN Title END DESC
			),
			FinalLocalizedArticleIDsSet (ArticleID,Title,SubTitle,Summary,Article,DetailTypeData,TitleLink,MetaDecription,MetaKeywords,MainImageTitle,MainImageDescription) AS(
				SELECT ArticleID,Title,SubTitle,Summary,Article,DetailTypeData,clTitleLink AS TitleLink ,MetaDecription,MetaKeywords,MainImageTitle,MainImageDescription FROM {databaseOwner}[{objectQualifier}EasyDNNNewsContentLocalization] WHERE ArticleID IN (SELECT ArticleID FROM FinalArticleIDsSet) AND LocaleCode = @LocaleCode
			)
			SELECT *,
				CASE @EditPermission 
					WHEN 0 THEN 0
					WHEN 1 THEN 1
					WHEN 2 THEN
					CASE @EditOnlyAsOwner
						WHEN 0 THEN			
							CASE WHEN EXISTS(SELECT CategoryID FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS c WHERE c.ArticleID = Result.ArticleID AND c.CategoryID IN (SELECT CategoryID FROM @UserEditCategories))
								THEN 1
								ELSE
									CASE WHEN EXISTS(SELECT [ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsArticleRolePermissions] AS arp WHERE arp.ArticleID = Result.ArticleID AND arp.Edit = 1 AND arp.RoleID IN(SELECT RoleID FROM @UserInRoles))
									THEN 1
									ELSE
										CASE WHEN EXISTS (SELECT [ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsArticleUserPermissions] AS aup WHERE aup.ArticleID = Result.ArticleID AND aup.Edit = 1 AND aup.UserID = @UserID)
											THEN 1
											ELSE 0
										END
									END
							END  			
						WHEN 1 THEN
							CASE WHEN EXISTS(SELECT CategoryID FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS c WHERE Result.UserID = @UserID AND c.ArticleID = Result.ArticleID AND c.CategoryID IN (SELECT CategoryID FROM @UserEditCategories))
								THEN 1
								ELSE
									CASE WHEN EXISTS(SELECT [ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsArticleRolePermissions] AS arp WHERE arp.ArticleID = Result.ArticleID AND arp.Edit = 1 AND arp.RoleID IN(SELECT RoleID FROM @UserInRoles))
									THEN 1
									ELSE
										CASE WHEN EXISTS (SELECT [ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsArticleUserPermissions] AS aup WHERE aup.ArticleID = Result.ArticleID AND aup.Edit = 1 AND aup.UserID = @UserID)
											THEN 1
											ELSE 0
										END
									END 
							END
					END
					WHEN 3 THEN
						CASE WHEN EXISTS(SELECT [ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsArticleRolePermissions] AS arp WHERE arp.ArticleID = Result.ArticleID AND arp.Edit = 1 AND arp.RoleID IN(SELECT RoleID FROM @UserInRoles))
							THEN 1
							ELSE
							CASE WHEN EXISTS (SELECT [ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsArticleUserPermissions] AS aup WHERE aup.ArticleID = Result.ArticleID AND aup.Edit = 1 AND aup.UserID = @UserID)
								THEN 1
								ELSE 0
								END
							END 
				END AS ''CanEdit'',
				(SELECT cat.ID, cat.Name, cat.CategoryURL FROM @LocalizedCategories AS Cat INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS c ON c.CategoryID = Cat.ID WHERE c.ArticleID = Result.ArticleID ORDER BY Position FOR XML AUTO, ROOT(''root'')) AS ''CatToShow'',
				 CASE Result.Active
					WHEN 1 THEN 0
					WHEN 0 THEN 1
				 END AS ''Published'',
				 CASE @UserCanApprove
					WHEN 0 THEN 0
					WHEN 1 THEN
						CASE Result.Approved
						 WHEN 1 THEN 0
						 WHEN 0 THEN
							 CASE Result.Active
								WHEN 1 THEN 1
								WHEN 0 THEN 0
							END
						END
				 END AS ''Approve''
	 			 FROM (
					 SELECT n.[ArticleID],n.[UserID],n.[Title],n.[SubTitle],n.[Summary],n.[Article],n.[ArticleImage],n.[DateAdded],n.[LastModified],n.[PublishDate]
						  ,n.[ExpireDate],n.[Approved],n.[Featured],n.[NumberOfViews],n.[RatingValue],n.[RatingCount],n.[AllowComments],n.[Active]
						  ,n.[TitleLink],n.[DetailType],n.[DetailTypeData],n.[DetailsTemplate],n.[DetailsTheme],n.[GalleryPosition],n.[GalleryDisplayType]
						  ,n.[ShowMainImage],n.[ShowMainImageFront],n.[CommentsTheme],n.[ArticleImageFolder],n.[NumberOfComments]
						  ,n.[ArticleImageSet],n.[MetaDecription],n.[MetaKeywords],n.[DisplayStyle],n.[DetailTarget]
						  ,n.[ArticleFromRSS],n.[HasPermissions],n.[EventArticle],n.[DetailMediaType],n.[DetailMediaData],n.[AuthorAliasName],n.[ShowGallery],n.[ArticleGalleryID],n.[MainImageTitle],n.[MainImageDescription]
						   FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS n WHERE ArticleID IN (SELECT ArticleID FROM FinalArticleIDsSet WHERE ArticleID NOT IN (SELECT ArticleID FROM FinalLocalizedArticleIDsSet))
					 UNION ALL
					 SELECT n.[ArticleID],n.[UserID],fla.[Title],fla.[SubTitle],fla.[Summary],fla.[Article],n.[ArticleImage],n.[DateAdded],n.[LastModified],n.[PublishDate]
						  ,n.[ExpireDate],n.[Approved],n.[Featured],n.[NumberOfViews],n.[RatingValue],n.[RatingCount],n.[AllowComments],n.[Active]
						  ,fla.[TitleLink],n.[DetailType],fla.[DetailTypeData],n.[DetailsTemplate],n.[DetailsTheme],n.[GalleryPosition],n.[GalleryDisplayType]
						  ,n.[ShowMainImage],n.[ShowMainImageFront],n.[CommentsTheme],n.[ArticleImageFolder],n.[NumberOfComments]
						  ,n.[ArticleImageSet],fla.[MetaDecription],fla.[MetaKeywords],n.[DisplayStyle],n.[DetailTarget]
						  ,n.[ArticleFromRSS],n.[HasPermissions],n.[EventArticle],n.[DetailMediaType],n.[DetailMediaData],n.[AuthorAliasName],n.[ShowGallery],n.[ArticleGalleryID],fla.[MainImageTitle],fla.[MainImageDescription]
					  FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS n INNER JOIN FinalLocalizedArticleIDsSet AS fla ON fla.ArticleID = n.ArticleID) As Result
				ORDER BY
					CASE WHEN @OrderBy =''PublishDate ASC'' THEN PublishDate END,
					CASE WHEN @OrderBy =''PublishDate DESC'' THEN PublishDate END DESC,
					CASE WHEN @OrderBy =''NumberOfViews ASC'' THEN NumberOfViews END,
					CASE WHEN @OrderBy =''NumberOfViews DESC'' THEN NumberOfViews END DESC,
					CASE WHEN @OrderBy =''RatingValue ASC'' THEN RatingValue END,
					CASE WHEN @OrderBy =''RatingValue DESC'' THEN RatingValue END DESC,
					CASE WHEN @OrderBy =''DateAdded ASC'' THEN DateAdded END,
					CASE WHEN @OrderBy =''DateAdded DESC'' THEN DateAdded END DESC,
					CASE WHEN @OrderBy =''ExpireDate ASC'' THEN ExpireDate END,
					CASE WHEN @OrderBy =''ExpireDate DESC'' THEN ExpireDate END DESC,
					CASE WHEN @OrderBy =''LastModified ASC'' THEN LastModified END,
					CASE WHEN @OrderBy =''LastModified DESC'' THEN LastModified END DESC,
					CASE WHEN @OrderBy =''NumberOfComments ASC'' THEN NumberOfComments END,
					CASE WHEN @OrderBy =''NumberOfComments DESC'' THEN NumberOfComments END DESC,
					CASE WHEN @OrderBy =''Title ASC'' THEN Title END,
					CASE WHEN @OrderBy =''Title DESC'' THEN Title END DESC;
	END
	ELSE
	BEGIN
		SELECT *,
		CASE @EditPermission 
			WHEN 0 THEN 0
			WHEN 1 THEN 1
			WHEN 2 THEN
			CASE @EditOnlyAsOwner
				WHEN 0 THEN			
					CASE WHEN EXISTS(SELECT CategoryID FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS c WHERE c.ArticleID = Result.ArticleID AND c.CategoryID IN (SELECT CategoryID FROM @UserEditCategories))
						THEN 1
						ELSE
							CASE WHEN EXISTS(SELECT [ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsArticleRolePermissions] AS arp WHERE arp.ArticleID = Result.ArticleID AND arp.Edit = 1 AND arp.RoleID IN(SELECT RoleID FROM @UserInRoles))
							THEN 1
							ELSE
								CASE WHEN EXISTS (SELECT [ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsArticleUserPermissions] AS aup WHERE aup.ArticleID = Result.ArticleID AND aup.Edit = 1 AND aup.UserID = @UserID)
									THEN 1
									ELSE 0
								END
							END
					END  			
				WHEN 1 THEN
					CASE WHEN EXISTS(SELECT CategoryID FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS c WHERE Result.UserID = @UserID AND c.ArticleID = Result.ArticleID AND c.CategoryID IN (SELECT CategoryID FROM @UserEditCategories))
						THEN 1
						ELSE
							CASE WHEN EXISTS(SELECT [ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsArticleRolePermissions] AS arp WHERE arp.ArticleID = Result.ArticleID AND arp.Edit = 1 AND arp.RoleID IN(SELECT RoleID FROM @UserInRoles))
							THEN 1
							ELSE
								CASE WHEN EXISTS (SELECT [ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsArticleUserPermissions] AS aup WHERE aup.ArticleID = Result.ArticleID AND aup.Edit = 1 AND aup.UserID = @UserID)
									THEN 1
									ELSE 0
								END
							END 
					END
			END
			WHEN 3 THEN
				CASE WHEN EXISTS(SELECT [ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsArticleRolePermissions] AS arp WHERE arp.ArticleID = Result.ArticleID AND arp.Edit = 1 AND arp.RoleID IN(SELECT RoleID FROM @UserInRoles))
					THEN 1
					ELSE
					CASE WHEN EXISTS (SELECT [ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsArticleUserPermissions] AS aup WHERE aup.ArticleID = Result.ArticleID AND aup.Edit = 1 AND aup.UserID = @UserID)
						THEN 1
						ELSE 0
						END
					END 
		END AS ''CanEdit'',
		(SELECT cat.ID, cat.Name, cat.CategoryURL FROM @LocalizedCategories AS Cat INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS c ON c.CategoryID = Cat.ID WHERE c.ArticleID = Result.ArticleID ORDER BY Position FOR XML AUTO, ROOT(''root'')) AS ''CatToShow'',
		 CASE Result.Active
			WHEN 1 THEN 0
			WHEN 0 THEN 1
		 END AS ''Published'',
		 CASE @UserCanApprove
			WHEN 0 THEN 0
			WHEN 1 THEN
				CASE Result.Approved
				 WHEN 1 THEN 0
				 WHEN 0 THEN
					 CASE Result.Active
						WHEN 1 THEN 1
						WHEN 0 THEN 0
					END
				END
		 END AS ''Approve''
		 FROM (SELECT 
		  n.[ArticleID],n.[UserID],n.[Title],n.[SubTitle],n.[Summary],n.[Article],n.[ArticleImage],n.[DateAdded],n.[LastModified],n.[PublishDate]
		  ,n.[ExpireDate],n.[Approved],n.[Featured],n.[NumberOfViews],n.[RatingValue],n.[RatingCount],n.[AllowComments],n.[Active]
		  ,n.[TitleLink],n.[DetailType],n.[DetailTypeData],n.[DetailsTemplate],n.[DetailsTheme],n.[GalleryPosition],n.[GalleryDisplayType]
		  ,n.[ShowMainImage],n.[ShowMainImageFront],n.[CommentsTheme],n.[ArticleImageFolder],n.[NumberOfComments]
		  ,n.[ArticleImageSet],n.[MetaDecription],n.[MetaKeywords],n.[DisplayStyle],n.[DetailTarget]
		  ,n.[ArticleFromRSS],n.[HasPermissions],n.[EventArticle],n.[DetailMediaType],n.[DetailMediaData],n.[AuthorAliasName],n.[ShowGallery],n.[ArticleGalleryID],n.[MainImageTitle],n.[MainImageDescription], ROW_NUMBER() OVER (ORDER BY 
			 CASE WHEN @OrderBy =''PublishDate ASC'' THEN PublishDate END,
			 CASE WHEN @OrderBy =''PublishDate DESC'' THEN PublishDate END DESC,
			 CASE WHEN @OrderBy =''NumberOfViews ASC'' THEN NumberOfViews END,
			 CASE WHEN @OrderBy =''NumberOfViews DESC'' THEN NumberOfViews END DESC,
			 CASE WHEN @OrderBy =''RatingValue ASC'' THEN RatingValue END,
			 CASE WHEN @OrderBy =''RatingValue DESC'' THEN RatingValue END DESC,
			 CASE WHEN @OrderBy =''DateAdded ASC'' THEN DateAdded END,
			 CASE WHEN @OrderBy =''DateAdded DESC'' THEN DateAdded END DESC,
			 CASE WHEN @OrderBy =''ExpireDate ASC'' THEN ExpireDate END,
			 CASE WHEN @OrderBy =''ExpireDate DESC'' THEN ExpireDate END DESC,
			 CASE WHEN @OrderBy =''LastModified ASC'' THEN LastModified END,
			 CASE WHEN @OrderBy =''LastModified DESC'' THEN LastModified END DESC,
			 CASE WHEN @OrderBy =''NumberOfComments ASC'' THEN NumberOfComments END,
			 CASE WHEN @OrderBy =''NumberOfComments DESC'' THEN NumberOfComments END DESC,
			 CASE WHEN @OrderBy =''Title ASC'' THEN Title END,
			 CASE WHEN @OrderBy =''Title DESC'' THEN Title END DESC) AS Kulike
			 FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS n WHERE ArticleID IN(
				SELECT DISTINCT na.[ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS na
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS cat ON na.ArticleID = cat.ArticleID
					INNER JOIN @UserViewCategoriesWithFilter  AS uvcwf ON uvcwf.CategoryID = cat.CategoryID
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = na.ArticleID
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialGroupItems] AS sgi ON sgi.ArticleID = na.ArticleID AND sgi.RoleID = @FilterByDNNGroupID
					INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserID, @FilterByDNNGroupID) AS t ON t.seckey = nss.SecurityKey
			    WHERE na.PortalID=@PortalID
					AND na.HasPermissions = 0
					AND na.HideDefaultLocale = 0
					AND na.PublishDate >= @FromDate AND na.PublishDate <= @ToDate AND ExpireDate >= @CurrentDate
					AND ((@EditPermission = 1) OR ((@UserCanApprove = 1 OR na.Approved=1) AND (na.Active=1 OR na.UserID=@UserID)))
					AND ((@Featured = 1 AND na.Featured = 1) OR (@Featured = 0))
					AND ((@FilterAuthorOrAuthors = 1 AND na.UserID = @FilterByAuthor) OR (@FilterAuthorOrAuthors = 0))
				UNION
				SELECT DISTINCT na.[ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS na
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS cat ON na.ArticleID = cat.ArticleID
					INNER JOIN @UserViewCategoriesWithFilter  AS uvcwf ON uvcwf.CategoryID = cat.CategoryID
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsEventsData] AS ne on na.ArticleID = ne.ArticleID
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = na.ArticleID
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialGroupItems] AS sgi ON sgi.ArticleID = na.ArticleID AND sgi.RoleID = @FilterByDNNGroupID
					INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserID, @FilterByDNNGroupID) AS t ON t.seckey = nss.SecurityKey
				WHERE na.PortalID=@PortalID
					AND na.HasPermissions = 0
					AND na.HideDefaultLocale = 0
					AND na.PublishDate <= @CurrentDate AND na.ExpireDate >= @CurrentDate
					AND ne.StartDate <= @ToDate AND ne.EndDate >= @FromDate
					AND ((@EditPermission = 1) OR ((@UserCanApprove = 1 OR na.Approved=1) AND (na.Active=1 OR na.UserID=@UserID)))
					AND ((@Featured = 1 AND na.Featured = 1) OR (@Featured = 0))
					AND ((@FilterAuthorOrAuthors = 1 AND na.UserID = @FilterByAuthor) OR (@FilterAuthorOrAuthors = 0))
				UNION ALL
				SELECT na.[ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS na
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsArticleUserPermissions] AS aup ON na.ArticleID = aup.ArticleID
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS cat ON na.ArticleID = cat.ArticleID
					INNER JOIN @FiltredByCategories AS fbc ON fbc.CategoryID = cat.CategoryID
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = na.ArticleID
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialGroupItems] AS sgi ON sgi.ArticleID = na.ArticleID AND sgi.RoleID = @FilterByDNNGroupID
					INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserID, @FilterByDNNGroupID) AS t ON t.seckey = nss.SecurityKey
				WHERE na.PortalID=@PortalID
					AND na.HasPermissions = 1
					AND na.HideDefaultLocale = 0
					AND na.PublishDate >= @FromDate AND na.PublishDate <= @ToDate AND ExpireDate >= @CurrentDate
					AND ((@EditPermission = 1) OR (((@UserID = -1 AND aup.UserID IS NULL) OR (aup.UserID = @UserID))
						AND aup.Show = 1 AND ((@UserCanApprove = 1) OR (na.Approved=1)) AND (na.Active=1 OR na.UserID=@UserID)
					))
					AND ((@Featured = 1 AND na.Featured = 1) OR (@Featured = 0))
					AND ((@FilterAuthorOrAuthors = 1 AND na.UserID = @FilterByAuthor) OR (@FilterAuthorOrAuthors = 0))
				UNION
				SELECT na.[ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS na
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsArticleUserPermissions] AS aup ON na.ArticleID = aup.ArticleID
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS cat ON na.ArticleID = cat.ArticleID
					INNER JOIN @FiltredByCategories AS fbc ON fbc.CategoryID = cat.CategoryID
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsEventsData] AS ne on na.ArticleID = ne.ArticleID
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = na.ArticleID
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialGroupItems] AS sgi ON sgi.ArticleID = na.ArticleID AND sgi.RoleID = @FilterByDNNGroupID
					INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserID, @FilterByDNNGroupID) AS t ON t.seckey = nss.SecurityKey
				WHERE na.PortalID=@PortalID
					AND na.HasPermissions = 1
					AND na.HideDefaultLocale = 0
					AND na.PublishDate <= @CurrentDate AND na.ExpireDate >= @CurrentDate
					AND ne.StartDate <= @ToDate AND ne.EndDate >= @FromDate
					AND ((@EditPermission = 1) OR (((@UserID = -1 AND aup.UserID IS NULL) OR (aup.UserID = @UserID))
						AND aup.Show = 1 AND ((@UserCanApprove = 1) OR (na.Approved=1)) AND (na.Active=1 OR na.UserID=@UserID)
					))
					AND ((@Featured = 1 AND na.Featured = 1) OR (@Featured = 0))
					AND ((@FilterAuthorOrAuthors = 1 AND na.UserID = @FilterByAuthor) OR (@FilterAuthorOrAuthors = 0))
				UNION
				SELECT DISTINCT na.[ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS na
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsArticleRolePermissions] AS arp ON na.ArticleID = arp.ArticleID
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS cat ON na.ArticleID = cat.ArticleID
					INNER JOIN @FiltredByCategories AS fbc ON fbc.CategoryID = cat.CategoryID
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = na.ArticleID
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialGroupItems] AS sgi ON sgi.ArticleID = na.ArticleID AND sgi.RoleID = @FilterByDNNGroupID
					INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserID, @FilterByDNNGroupID) AS t ON t.seckey = nss.SecurityKey
				WHERE na.PortalID=@PortalID
					AND na.HasPermissions = 1
					AND na.HideDefaultLocale = 0
					AND na.PublishDate >= @FromDate AND na.PublishDate <= @ToDate AND ExpireDate >= @CurrentDate
					AND ((@EditPermission = 1) OR (((@UserCanApprove = 1) OR (na.Approved=1))
						AND (na.Active=1 OR na.UserID=@UserID) AND arp.Show = 1 AND arp.RoleID IN (SELECT [RoleID] FROM @UserInRoles)
					))
					AND ((@Featured = 1 AND na.Featured = 1) OR (@Featured = 0))
					AND((@FilterAuthorOrAuthors = 1 AND na.UserID = @FilterByAuthor) OR (@FilterAuthorOrAuthors = 0))
				UNION
				SELECT DISTINCT na.[ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS na
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsArticleRolePermissions] AS arp ON na.ArticleID = arp.ArticleID
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS cat ON na.ArticleID = cat.ArticleID
					INNER JOIN @FiltredByCategories AS fbc ON fbc.CategoryID = cat.CategoryID
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsEventsData] AS ne on na.ArticleID = ne.ArticleID
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = na.ArticleID
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialGroupItems] AS sgi ON sgi.ArticleID = na.ArticleID AND sgi.RoleID = @FilterByDNNGroupID
					INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserID, @FilterByDNNGroupID) AS t ON t.seckey = nss.SecurityKey
				WHERE na.PortalID=@PortalID
					AND ((@EditPermission = 1) OR (((@UserCanApprove = 1) OR (na.Approved=1))
						AND (na.Active=1 OR na.UserID=@UserID) AND arp.Show = 1 AND arp.RoleID IN (SELECT [RoleID] FROM @UserInRoles)
					))
					AND na.HasPermissions = 1
					AND na.HideDefaultLocale = 0
					AND ((@Featured = 1 AND na.Featured = 1) OR (@Featured = 0))
					AND ne.StartDate <= @ToDate AND ne.EndDate >= @FromDate
					AND na.PublishDate <= @CurrentDate AND na.ExpireDate >= @CurrentDate
					AND ((@FilterAuthorOrAuthors = 1 AND na.UserID = @FilterByAuthor) OR (@FilterAuthorOrAuthors = 0))
				)
			) AS Result WHERE Kulike BETWEEN @ItemsFrom AND @ItemsTo ORDER BY
				CASE WHEN @OrderBy =''PublishDate ASC'' THEN PublishDate END,
				CASE WHEN @OrderBy =''PublishDate DESC'' THEN PublishDate END DESC,
				CASE WHEN @OrderBy =''NumberOfViews ASC'' THEN NumberOfViews END,
				CASE WHEN @OrderBy =''NumberOfViews DESC'' THEN NumberOfViews END DESC,
				CASE WHEN @OrderBy =''RatingValue ASC'' THEN RatingValue END,
				CASE WHEN @OrderBy =''RatingValue DESC'' THEN RatingValue END DESC,
				CASE WHEN @OrderBy =''DateAdded ASC'' THEN DateAdded END,
				CASE WHEN @OrderBy =''DateAdded DESC'' THEN DateAdded END DESC,
				CASE WHEN @OrderBy =''ExpireDate ASC'' THEN ExpireDate END,
				CASE WHEN @OrderBy =''ExpireDate DESC'' THEN ExpireDate END DESC,
				CASE WHEN @OrderBy =''LastModified ASC'' THEN LastModified END,
				CASE WHEN @OrderBy =''LastModified DESC'' THEN LastModified END DESC,
				CASE WHEN @OrderBy =''NumberOfComments ASC'' THEN NumberOfComments END,
				CASE WHEN @OrderBy =''NumberOfComments DESC'' THEN NumberOfComments END DESC,
				CASE WHEN @OrderBy =''Title ASC'' THEN Title END,
				CASE WHEN @OrderBy =''Title DESC'' THEN Title END DESC;
	END
END
ELSE IF @FilterByDNNUserID <> 0
BEGIN
	IF @LocaleCode <> ''''
	BEGIN
		WITH FinalArticleIDsSet (ArticleID) AS(
		SELECT TOP (@ItemsTo - @ItemsFrom + 1) ArticleID FROM (SELECT *, ROW_NUMBER() OVER (ORDER BY 
			CASE WHEN @OrderBy =''PublishDate ASC'' THEN PublishDate END,
			CASE WHEN @OrderBy =''PublishDate DESC'' THEN PublishDate END DESC,
			CASE WHEN @OrderBy =''NumberOfViews ASC'' THEN NumberOfViews END,
			CASE WHEN @OrderBy =''NumberOfViews DESC'' THEN NumberOfViews END DESC,
			CASE WHEN @OrderBy =''RatingValue ASC'' THEN RatingValue END,
			CASE WHEN @OrderBy =''RatingValue DESC'' THEN RatingValue END DESC,
			CASE WHEN @OrderBy =''DateAdded ASC'' THEN DateAdded END,
			CASE WHEN @OrderBy =''DateAdded DESC'' THEN DateAdded END DESC,
			CASE WHEN @OrderBy =''ExpireDate ASC'' THEN ExpireDate END,
			CASE WHEN @OrderBy =''ExpireDate DESC'' THEN ExpireDate END DESC,
			CASE WHEN @OrderBy =''LastModified ASC'' THEN LastModified END,
			CASE WHEN @OrderBy =''LastModified DESC'' THEN LastModified END DESC,
			CASE WHEN @OrderBy =''NumberOfComments ASC'' THEN NumberOfComments END,
			CASE WHEN @OrderBy =''NumberOfComments DESC'' THEN NumberOfComments END DESC,
			CASE WHEN @OrderBy =''Title ASC'' THEN Title END,
			CASE WHEN @OrderBy =''Title DESC'' THEN Title END DESC) AS Kulike
		FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS n WHERE ArticleID IN(
			SELECT DISTINCT na.[ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS na
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS cat ON na.ArticleID = cat.ArticleID
				INNER JOIN @UserViewCategoriesWithFilter  AS uvcwf ON uvcwf.CategoryID = cat.CategoryID
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = na.ArticleID
				INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserID, @FilterByDNNGroupID) AS t ON t.seckey = nss.SecurityKey
				LEFT OUTER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsContentLocalization] AS ncl ON ncl.ArticleID = na.ArticleID
			WHERE na.PortalID=@PortalID
				AND ((@EditPermission = 1) OR ((@UserCanApprove = 1 OR na.Approved=1) AND (na.Active=1 OR na.UserID=@UserID)))
				AND na.HasPermissions = 0
				AND((@Featured = 1 AND na.Featured = 1) OR (@Featured = 0))
				AND na.PublishDate >= @FromDate AND na.PublishDate <= @ToDate AND ExpireDate >= @CurrentDate
				AND na.UserID = @FilterByDNNUserID
				AND ((@HideUnlocalizedItems = 1 AND ncl.ArticleID IS NOT NULL AND ncl.LocaleCode = @LocaleCode) OR (@HideUnlocalizedItems = 0))
			UNION
			SELECT DISTINCT na.[ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS na
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS cat ON na.ArticleID = cat.ArticleID
				INNER JOIN @UserViewCategoriesWithFilter  AS uvcwf ON uvcwf.CategoryID = cat.CategoryID
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsEventsData] AS ne on na.ArticleID = ne.ArticleID
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = na.ArticleID
				INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserID, @FilterByDNNGroupID) AS t ON t.seckey = nss.SecurityKey
				LEFT OUTER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsContentLocalization] AS ncl ON ncl.ArticleID = na.ArticleID
			WHERE na.PortalID=@PortalID
				AND ((@EditPermission = 1) OR ((@UserCanApprove = 1 OR na.Approved=1) AND (na.Active=1 OR na.UserID=@UserID)))
				AND na.HasPermissions = 0
				AND ((@Featured = 1 AND na.Featured = 1) OR (@Featured = 0))
				AND ne.StartDate <= @ToDate AND ne.EndDate >= @FromDate
				AND na.PublishDate <= @CurrentDate AND na.ExpireDate >= @CurrentDate
				AND na.UserID = @FilterByDNNUserID
				AND ((@HideUnlocalizedItems = 1 AND ncl.ArticleID IS NOT NULL AND ncl.LocaleCode = @LocaleCode) OR (@HideUnlocalizedItems = 0))
			UNION ALL
			SELECT na.[ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS na
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsArticleUserPermissions] AS aup ON na.ArticleID = aup.ArticleID
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS cat ON na.ArticleID = cat.ArticleID
				INNER JOIN @FiltredByCategories AS fbc ON fbc.CategoryID = cat.CategoryID
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = na.ArticleID
				INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserID, @FilterByDNNGroupID) AS t ON t.seckey = nss.SecurityKey
				LEFT OUTER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsContentLocalization] AS ncl ON ncl.ArticleID = na.ArticleID
			WHERE na.PortalID=@PortalID
				AND ((@EditPermission = 1) OR (((@UserID = -1 AND aup.UserID IS NULL) OR (aup.UserID = @UserID))
					AND aup.Show = 1 AND ((@UserCanApprove = 1) OR (na.Approved=1)) AND (na.Active=1 OR na.UserID=@UserID)
				))
				AND na.HasPermissions = 1
				AND ((@Featured = 1 AND na.Featured = 1) OR (@Featured = 0))
				AND na.PublishDate >= @FromDate AND na.PublishDate <= @ToDate AND ExpireDate >= @CurrentDate
				AND na.UserID = @FilterByDNNUserID
				AND ((@HideUnlocalizedItems = 1 AND ncl.ArticleID IS NOT NULL AND ncl.LocaleCode = @LocaleCode) OR (@HideUnlocalizedItems = 0))
			UNION
			SELECT na.[ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS na
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsArticleUserPermissions] AS aup ON na.ArticleID = aup.ArticleID
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS cat ON na.ArticleID = cat.ArticleID
				INNER JOIN @FiltredByCategories AS fbc ON fbc.CategoryID = cat.CategoryID
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsEventsData] AS ne on na.ArticleID = ne.ArticleID
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = na.ArticleID
				INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserID, @FilterByDNNGroupID) AS t ON t.seckey = nss.SecurityKey
				LEFT OUTER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsContentLocalization] AS ncl ON ncl.ArticleID = na.ArticleID
			WHERE na.PortalID=@PortalID
				AND ((@EditPermission = 1) OR (((@UserID = -1 AND aup.UserID IS NULL) OR (aup.UserID = @UserID))
					AND aup.Show = 1 AND ((@UserCanApprove = 1) OR (na.Approved=1)) AND (na.Active=1 OR na.UserID=@UserID)
				))
				AND na.HasPermissions = 1
				AND ((@Featured = 1 AND na.Featured = 1) OR (@Featured = 0))
				AND ne.StartDate <= @ToDate AND ne.EndDate >= @FromDate
				AND na.PublishDate <= @CurrentDate AND na.ExpireDate >= @CurrentDate
				AND na.UserID = @FilterByDNNUserID
				AND ((@HideUnlocalizedItems = 1 AND ncl.ArticleID IS NOT NULL AND ncl.LocaleCode = @LocaleCode) OR (@HideUnlocalizedItems = 0))
			UNION
			SELECT DISTINCT na.[ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS na
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsArticleRolePermissions] AS arp ON na.ArticleID = arp.ArticleID
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS cat ON na.ArticleID = cat.ArticleID
				INNER JOIN @FiltredByCategories AS fbc ON fbc.CategoryID = cat.CategoryID
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = na.ArticleID
				INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserID, @FilterByDNNGroupID) AS t ON t.seckey = nss.SecurityKey
				LEFT OUTER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsContentLocalization] AS ncl ON ncl.ArticleID = na.ArticleID
			WHERE na.PortalID=@PortalID
				AND ((@EditPermission = 1) OR (((@UserCanApprove = 1) OR (na.Approved=1))
					AND (na.Active=1 OR na.UserID=@UserID) AND arp.Show = 1 AND arp.RoleID IN (SELECT [RoleID] FROM @UserInRoles)
				))
				AND na.HasPermissions = 1
				AND ((@Featured = 1 AND na.Featured = 1) OR (@Featured = 0))
				AND na.PublishDate >= @FromDate AND na.PublishDate <= @ToDate AND ExpireDate >= @CurrentDate
				AND na.UserID = @FilterByDNNUserID
				AND ((@HideUnlocalizedItems = 1 AND ncl.ArticleID IS NOT NULL AND ncl.LocaleCode = @LocaleCode) OR (@HideUnlocalizedItems = 0))
			UNION
			SELECT DISTINCT na.[ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS na
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsArticleRolePermissions] AS arp ON na.ArticleID = arp.ArticleID
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS cat ON na.ArticleID = cat.ArticleID
				INNER JOIN @FiltredByCategories AS fbc ON fbc.CategoryID = cat.CategoryID
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsEventsData] AS ne on na.ArticleID = ne.ArticleID
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = na.ArticleID
				INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserID, @FilterByDNNGroupID) AS t ON t.seckey = nss.SecurityKey
				LEFT OUTER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsContentLocalization] AS ncl ON ncl.ArticleID = na.ArticleID
			WHERE na.PortalID=@PortalID
				AND ((@EditPermission = 1) OR (((@UserCanApprove = 1) OR (na.Approved=1))
					AND (na.Active=1 OR na.UserID=@UserID) AND arp.Show = 1 AND arp.RoleID IN (SELECT [RoleID] FROM @UserInRoles)
				))
				AND na.HasPermissions = 1
				AND ((@Featured = 1 AND na.Featured = 1) OR (@Featured = 0))
				AND ne.StartDate <= @ToDate AND ne.EndDate >= @FromDate
				AND na.PublishDate <= @CurrentDate AND na.ExpireDate >= @CurrentDate
				AND na.UserID = @FilterByDNNUserID
				AND ((@HideUnlocalizedItems = 1 AND ncl.ArticleID IS NOT NULL AND ncl.LocaleCode = @LocaleCode) OR (@HideUnlocalizedItems = 0))
			)
		 ) AS Result WHERE Kulike BETWEEN @ItemsFrom AND @ItemsTo ORDER BY
			CASE WHEN @OrderBy =''PublishDate ASC'' THEN PublishDate END,
			CASE WHEN @OrderBy =''PublishDate DESC'' THEN PublishDate END DESC,
			CASE WHEN @OrderBy =''NumberOfViews ASC'' THEN NumberOfViews END,
			CASE WHEN @OrderBy =''NumberOfViews DESC'' THEN NumberOfViews END DESC,
			CASE WHEN @OrderBy =''RatingValue ASC'' THEN RatingValue END,
			CASE WHEN @OrderBy =''RatingValue DESC'' THEN RatingValue END DESC,
			CASE WHEN @OrderBy =''DateAdded ASC'' THEN DateAdded END,
			CASE WHEN @OrderBy =''DateAdded DESC'' THEN DateAdded END DESC,
			CASE WHEN @OrderBy =''ExpireDate ASC'' THEN ExpireDate END,
			CASE WHEN @OrderBy =''ExpireDate DESC'' THEN ExpireDate END DESC,
			CASE WHEN @OrderBy =''LastModified ASC'' THEN LastModified END,
			CASE WHEN @OrderBy =''LastModified DESC'' THEN LastModified END DESC,
			CASE WHEN @OrderBy =''NumberOfComments ASC'' THEN NumberOfComments END,
			CASE WHEN @OrderBy =''NumberOfComments DESC'' THEN NumberOfComments END DESC,
			CASE WHEN @OrderBy =''Title ASC'' THEN Title END,
			CASE WHEN @OrderBy =''Title DESC'' THEN Title END DESC
	),
	FinalLocalizedArticleIDsSet (ArticleID,Title,SubTitle,Summary,Article,DetailTypeData,TitleLink,MetaDecription,MetaKeywords,MainImageTitle,MainImageDescription) AS(
		SELECT ArticleID,Title,SubTitle,Summary,Article,DetailTypeData,clTitleLink AS TitleLink ,MetaDecription,MetaKeywords,MainImageTitle,MainImageDescription FROM {databaseOwner}[{objectQualifier}EasyDNNNewsContentLocalization] WHERE ArticleID IN (SELECT ArticleID FROM FinalArticleIDsSet) AND LocaleCode = @LocaleCode
	)
	SELECT *,
		CASE @EditPermission 
			WHEN 0 THEN 0
			WHEN 1 THEN 1
			WHEN 2 THEN
			CASE @EditOnlyAsOwner
				WHEN 0 THEN			
					CASE WHEN EXISTS(SELECT CategoryID FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS c WHERE c.ArticleID = Result.ArticleID AND c.CategoryID IN (SELECT CategoryID FROM @UserEditCategories))
						THEN 1
						ELSE
							CASE WHEN EXISTS(SELECT [ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsArticleRolePermissions] AS arp WHERE arp.ArticleID = Result.ArticleID AND arp.Edit = 1 AND arp.RoleID IN(SELECT RoleID FROM @UserInRoles))
							THEN 1
							ELSE
								CASE WHEN EXISTS (SELECT [ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsArticleUserPermissions] AS aup WHERE aup.ArticleID = Result.ArticleID AND aup.Edit = 1 AND aup.UserID = @UserID)
									THEN 1
									ELSE 0
								END
							END
					END  			
				WHEN 1 THEN
					CASE WHEN EXISTS(SELECT CategoryID FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS c WHERE Result.UserID = @UserID AND c.ArticleID = Result.ArticleID AND c.CategoryID IN (SELECT CategoryID FROM @UserEditCategories))
						THEN 1
						ELSE
							CASE WHEN EXISTS(SELECT [ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsArticleRolePermissions] AS arp WHERE arp.ArticleID = Result.ArticleID AND arp.Edit = 1 AND arp.RoleID IN(SELECT RoleID FROM @UserInRoles))
							THEN 1
							ELSE
								CASE WHEN EXISTS (SELECT [ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsArticleUserPermissions] AS aup WHERE aup.ArticleID = Result.ArticleID AND aup.Edit = 1 AND aup.UserID = @UserID)
									THEN 1
									ELSE 0
								END
							END 
					END
			END
			WHEN 3 THEN
				CASE WHEN EXISTS(SELECT [ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsArticleRolePermissions] AS arp WHERE arp.ArticleID = Result.ArticleID AND arp.Edit = 1 AND arp.RoleID IN(SELECT RoleID FROM @UserInRoles))
					THEN 1
					ELSE
					CASE WHEN EXISTS (SELECT [ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsArticleUserPermissions] AS aup WHERE aup.ArticleID = Result.ArticleID AND aup.Edit = 1 AND aup.UserID = @UserID)
						THEN 1
						ELSE 0
						END
					END 
		END AS ''CanEdit'',
		(SELECT cat.ID, cat.Name, cat.CategoryURL FROM @LocalizedCategories AS Cat INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS c ON c.CategoryID = Cat.ID WHERE c.ArticleID = Result.ArticleID ORDER BY Position FOR XML AUTO, ROOT(''root'')) AS ''CatToShow'',
		 CASE Result.Active
			WHEN 1 THEN 0
			WHEN 0 THEN 1
		 END AS ''Published'',
		 CASE @UserCanApprove
			WHEN 0 THEN 0
			WHEN 1 THEN
				CASE Result.Approved
				 WHEN 1 THEN 0
				 WHEN 0 THEN
					 CASE Result.Active
						WHEN 1 THEN 1
						WHEN 0 THEN 0
					END
				END
		 END AS ''Approve''
			FROM (
				 SELECT n.[ArticleID],n.[UserID],n.[Title],n.[SubTitle],n.[Summary],n.[Article],n.[ArticleImage],n.[DateAdded],n.[LastModified],n.[PublishDate]
				  ,n.[ExpireDate],n.[Approved],n.[Featured],n.[NumberOfViews],n.[RatingValue],n.[RatingCount],n.[AllowComments],n.[Active]
				  ,n.[TitleLink],n.[DetailType],n.[DetailTypeData],n.[DetailsTemplate],n.[DetailsTheme],n.[GalleryPosition],n.[GalleryDisplayType]
				  ,n.[ShowMainImage],n.[ShowMainImageFront],n.[CommentsTheme],n.[ArticleImageFolder],n.[NumberOfComments]
				  ,n.[ArticleImageSet],n.[MetaDecription],n.[MetaKeywords],n.[DisplayStyle],n.[DetailTarget]
				  ,n.[ArticleFromRSS],n.[HasPermissions],n.[EventArticle],n.[DetailMediaType],n.[DetailMediaData],n.[AuthorAliasName],n.[ShowGallery],n.[ArticleGalleryID],n.[MainImageTitle],n.[MainImageDescription]
				   FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS n WHERE ArticleID IN (SELECT ArticleID FROM FinalArticleIDsSet WHERE ArticleID NOT IN (SELECT ArticleID FROM FinalLocalizedArticleIDsSet))
			 UNION ALL
			 SELECT n.[ArticleID],n.[UserID],fla.[Title],fla.[SubTitle],fla.[Summary],fla.[Article],n.[ArticleImage],n.[DateAdded],n.[LastModified],n.[PublishDate]
				  ,n.[ExpireDate],n.[Approved],n.[Featured],n.[NumberOfViews],n.[RatingValue],n.[RatingCount],n.[AllowComments],n.[Active]
				  ,fla.[TitleLink],n.[DetailType],fla.[DetailTypeData],n.[DetailsTemplate],n.[DetailsTheme],n.[GalleryPosition],n.[GalleryDisplayType]
				  ,n.[ShowMainImage],n.[ShowMainImageFront],n.[CommentsTheme],n.[ArticleImageFolder],n.[NumberOfComments]
				  ,n.[ArticleImageSet],fla.[MetaDecription],fla.[MetaKeywords],n.[DisplayStyle],n.[DetailTarget]
				  ,n.[ArticleFromRSS],n.[HasPermissions],n.[EventArticle],n.[DetailMediaType],n.[DetailMediaData],n.[AuthorAliasName],n.[ShowGallery],n.[ArticleGalleryID],fla.[MainImageTitle],fla.[MainImageDescription]
			  FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS n INNER JOIN FinalLocalizedArticleIDsSet AS fla ON fla.ArticleID = n.ArticleID) As Result
		ORDER BY
			CASE WHEN @OrderBy =''PublishDate ASC'' THEN PublishDate END,
			CASE WHEN @OrderBy =''PublishDate DESC'' THEN PublishDate END DESC,
			CASE WHEN @OrderBy =''NumberOfViews ASC'' THEN NumberOfViews END,
			CASE WHEN @OrderBy =''NumberOfViews DESC'' THEN NumberOfViews END DESC,
			CASE WHEN @OrderBy =''RatingValue ASC'' THEN RatingValue END,
			CASE WHEN @OrderBy =''RatingValue DESC'' THEN RatingValue END DESC,
			CASE WHEN @OrderBy =''DateAdded ASC'' THEN DateAdded END,
			CASE WHEN @OrderBy =''DateAdded DESC'' THEN DateAdded END DESC,
			CASE WHEN @OrderBy =''ExpireDate ASC'' THEN ExpireDate END,
			CASE WHEN @OrderBy =''ExpireDate DESC'' THEN ExpireDate END DESC,
			CASE WHEN @OrderBy =''LastModified ASC'' THEN LastModified END,
			CASE WHEN @OrderBy =''LastModified DESC'' THEN LastModified END DESC,
			CASE WHEN @OrderBy =''NumberOfComments ASC'' THEN NumberOfComments END,
			CASE WHEN @OrderBy =''NumberOfComments DESC'' THEN NumberOfComments END DESC,
			CASE WHEN @OrderBy =''Title ASC'' THEN Title END,
			CASE WHEN @OrderBy =''Title DESC'' THEN Title END DESC;
	END
	ELSE
	BEGIN
	SELECT *,
		CASE @EditPermission 
			WHEN 0 THEN 0
			WHEN 1 THEN 1
			WHEN 2 THEN
			CASE @EditOnlyAsOwner
				WHEN 0 THEN			
					CASE WHEN EXISTS(SELECT CategoryID FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS c WHERE c.ArticleID = Result.ArticleID AND c.CategoryID IN (SELECT CategoryID FROM @UserEditCategories))
						THEN 1
						ELSE
							CASE WHEN EXISTS(SELECT [ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsArticleRolePermissions] AS arp WHERE arp.ArticleID = Result.ArticleID AND arp.Edit = 1 AND arp.RoleID IN(SELECT RoleID FROM @UserInRoles))
							THEN 1
							ELSE
								CASE WHEN EXISTS (SELECT [ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsArticleUserPermissions] AS aup WHERE aup.ArticleID = Result.ArticleID AND aup.Edit = 1 AND aup.UserID = @UserID)
									THEN 1
									ELSE 0
								END
							END
					END  			
				WHEN 1 THEN
					CASE WHEN EXISTS(SELECT CategoryID FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS c WHERE Result.UserID = @UserID AND c.ArticleID = Result.ArticleID AND c.CategoryID IN (SELECT CategoryID FROM @UserEditCategories))
						THEN 1
						ELSE
							CASE WHEN EXISTS(SELECT [ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsArticleRolePermissions] AS arp WHERE arp.ArticleID = Result.ArticleID AND arp.Edit = 1 AND arp.RoleID IN(SELECT RoleID FROM @UserInRoles))
							THEN 1
							ELSE
								CASE WHEN EXISTS (SELECT [ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsArticleUserPermissions] AS aup WHERE aup.ArticleID = Result.ArticleID AND aup.Edit = 1 AND aup.UserID = @UserID)
									THEN 1
									ELSE 0
								END
							END 
					END
			END
			WHEN 3 THEN
				CASE WHEN EXISTS(SELECT [ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsArticleRolePermissions] AS arp WHERE arp.ArticleID = Result.ArticleID AND arp.Edit = 1 AND arp.RoleID IN(SELECT RoleID FROM @UserInRoles))
					THEN 1
					ELSE
					CASE WHEN EXISTS (SELECT [ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsArticleUserPermissions] AS aup WHERE aup.ArticleID = Result.ArticleID AND aup.Edit = 1 AND aup.UserID = @UserID)
						THEN 1
						ELSE 0
						END
					END 
		END AS ''CanEdit'',
		(SELECT cat.ID, cat.Name, cat.CategoryURL FROM @LocalizedCategories AS Cat INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS c ON c.CategoryID = Cat.ID WHERE c.ArticleID = Result.ArticleID ORDER BY Position FOR XML AUTO, ROOT(''root'')) AS ''CatToShow'',
		 CASE Result.Active
			WHEN 1 THEN 0
			WHEN 0 THEN 1
		 END AS ''Published'',
		 CASE @UserCanApprove
			WHEN 0 THEN 0
			WHEN 1 THEN
				CASE Result.Approved
				 WHEN 1 THEN 0
				 WHEN 0 THEN
					 CASE Result.Active
						WHEN 1 THEN 1
						WHEN 0 THEN 0
					END
				END
		 END AS ''Approve''
		 FROM (SELECT
		   n.[ArticleID],n.[UserID],n.[Title],n.[SubTitle],n.[Summary],n.[Article],n.[ArticleImage],n.[DateAdded],n.[LastModified],n.[PublishDate]
		  ,n.[ExpireDate],n.[Approved],n.[Featured],n.[NumberOfViews],n.[RatingValue],n.[RatingCount],n.[AllowComments],n.[Active]
		  ,n.[TitleLink],n.[DetailType],n.[DetailTypeData],n.[DetailsTemplate],n.[DetailsTheme],n.[GalleryPosition],n.[GalleryDisplayType]
		  ,n.[ShowMainImage],n.[ShowMainImageFront],n.[CommentsTheme],n.[ArticleImageFolder],n.[NumberOfComments]
		  ,n.[ArticleImageSet],n.[MetaDecription],n.[MetaKeywords],n.[DisplayStyle],n.[DetailTarget]
		  ,n.[ArticleFromRSS],n.[HasPermissions],n.[EventArticle],n.[DetailMediaType],n.[DetailMediaData],n.[AuthorAliasName],n.[ShowGallery],n.[ArticleGalleryID],n.[MainImageTitle],n.[MainImageDescription], ROW_NUMBER() OVER (ORDER BY 
			CASE WHEN @OrderBy =''PublishDate ASC'' THEN PublishDate END,
			CASE WHEN @OrderBy =''PublishDate DESC'' THEN PublishDate END DESC,
			CASE WHEN @OrderBy =''NumberOfViews ASC'' THEN NumberOfViews END,
			CASE WHEN @OrderBy =''NumberOfViews DESC'' THEN NumberOfViews END DESC,
			CASE WHEN @OrderBy =''RatingValue ASC'' THEN RatingValue END,
			CASE WHEN @OrderBy =''RatingValue DESC'' THEN RatingValue END DESC,
			CASE WHEN @OrderBy =''DateAdded ASC'' THEN DateAdded END,
			CASE WHEN @OrderBy =''DateAdded DESC'' THEN DateAdded END DESC,
			CASE WHEN @OrderBy =''ExpireDate ASC'' THEN ExpireDate END,
			CASE WHEN @OrderBy =''ExpireDate DESC'' THEN ExpireDate END DESC,
			CASE WHEN @OrderBy =''LastModified ASC'' THEN LastModified END,
			CASE WHEN @OrderBy =''LastModified DESC'' THEN LastModified END DESC,
			CASE WHEN @OrderBy =''NumberOfComments ASC'' THEN NumberOfComments END,
			CASE WHEN @OrderBy =''NumberOfComments DESC'' THEN NumberOfComments END DESC,
			CASE WHEN @OrderBy =''Title ASC'' THEN Title END,
			CASE WHEN @OrderBy =''Title DESC'' THEN Title END DESC) AS Kulike
			FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS n WHERE ArticleID IN(
				SELECT DISTINCT na.[ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS na
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS cat ON na.ArticleID = cat.ArticleID
					INNER JOIN @UserViewCategoriesWithFilter  AS uvcwf ON uvcwf.CategoryID = cat.CategoryID
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = na.ArticleID
					INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserID, @FilterByDNNGroupID) AS t ON t.seckey = nss.SecurityKey
			    WHERE na.PortalID=@PortalID
					AND ((@EditPermission = 1) OR ((@UserCanApprove = 1 OR na.Approved=1) AND (na.Active=1 OR na.UserID=@UserID)))
					AND na.HasPermissions = 0
					AND na.HideDefaultLocale = 0
					AND ((@Featured = 1 AND na.Featured = 1) OR (@Featured = 0))
					AND na.PublishDate >= @FromDate AND na.PublishDate <= @ToDate AND ExpireDate >= @CurrentDate
					AND na.UserID = @FilterByDNNUserID
				UNION
				SELECT DISTINCT na.[ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS na
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS cat ON na.ArticleID = cat.ArticleID
					INNER JOIN @UserViewCategoriesWithFilter  AS uvcwf ON uvcwf.CategoryID = cat.CategoryID
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsEventsData] AS ne on na.ArticleID = ne.ArticleID
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = na.ArticleID
					INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserID, @FilterByDNNGroupID) AS t ON t.seckey = nss.SecurityKey
			    WHERE na.PortalID=@PortalID
					AND ((@EditPermission = 1) OR ((@UserCanApprove = 1 OR na.Approved=1) AND (na.Active=1 OR na.UserID=@UserID)))
					AND na.HasPermissions = 0
					AND na.HideDefaultLocale = 0
					AND ((@Featured = 1 AND na.Featured = 1) OR (@Featured = 0))
					AND ne.StartDate <= @ToDate AND ne.EndDate >= @FromDate
					AND na.PublishDate <= @CurrentDate AND na.ExpireDate >= @CurrentDate
					AND na.UserID = @FilterByDNNUserID
				UNION ALL
				SELECT na.[ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS na
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsArticleUserPermissions] AS aup ON na.ArticleID = aup.ArticleID
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS cat ON na.ArticleID = cat.ArticleID
					INNER JOIN @FiltredByCategories AS fbc ON fbc.CategoryID = cat.CategoryID
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = na.ArticleID
					INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserID, @FilterByDNNGroupID) AS t ON t.seckey = nss.SecurityKey
				WHERE na.PortalID=@PortalID
					AND ((@EditPermission = 1) OR (((@UserID = -1 AND aup.UserID IS NULL) OR (aup.UserID = @UserID))
						AND aup.Show = 1 AND ((@UserCanApprove = 1) OR (na.Approved=1)) AND (na.Active=1 OR na.UserID=@UserID)
					))
					AND na.HasPermissions = 1
					AND na.HideDefaultLocale = 0
					AND ((@Featured = 1 AND na.Featured = 1) OR (@Featured = 0))
					AND na.PublishDate >= @FromDate AND na.PublishDate <= @ToDate AND ExpireDate >= @CurrentDate
					AND na.UserID = @FilterByDNNUserID
				UNION
				SELECT na.[ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS na
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsArticleUserPermissions] AS aup ON na.ArticleID = aup.ArticleID
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS cat ON na.ArticleID = cat.ArticleID
					INNER JOIN @FiltredByCategories AS fbc ON fbc.CategoryID = cat.CategoryID
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsEventsData] AS ne on na.ArticleID = ne.ArticleID
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = na.ArticleID
					INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserID, @FilterByDNNGroupID) AS t ON t.seckey = nss.SecurityKey
				WHERE na.PortalID=@PortalID
					AND ((@EditPermission = 1) OR (((@UserID = -1 AND aup.UserID IS NULL) OR (aup.UserID = @UserID))
						AND aup.Show = 1 AND ((@UserCanApprove = 1) OR (na.Approved=1)) AND (na.Active=1 OR na.UserID=@UserID)
					))
					AND na.HasPermissions = 1
					AND na.HideDefaultLocale = 0
					AND ((@Featured = 1 AND na.Featured = 1) OR (@Featured = 0))
					AND ne.StartDate <= @ToDate AND ne.EndDate >= @FromDate
					AND na.PublishDate <= @CurrentDate AND na.ExpireDate >= @CurrentDate
					AND na.UserID = @FilterByDNNUserID
				UNION
				SELECT DISTINCT na.[ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS na
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsArticleRolePermissions] AS arp ON na.ArticleID = arp.ArticleID
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS cat ON na.ArticleID = cat.ArticleID
					INNER JOIN @FiltredByCategories AS fbc ON fbc.CategoryID = cat.CategoryID
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = na.ArticleID
					INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserID, @FilterByDNNGroupID) AS t ON t.seckey = nss.SecurityKey
				WHERE na.PortalID=@PortalID
					AND ((@EditPermission = 1) OR (((@UserCanApprove = 1) OR (na.Approved=1))
						AND (na.Active=1 OR na.UserID=@UserID) AND arp.Show = 1 AND arp.RoleID IN (SELECT [RoleID] FROM @UserInRoles)
					))
					AND na.HasPermissions = 1
					AND na.HideDefaultLocale = 0
					AND ((@Featured = 1 AND na.Featured = 1) OR (@Featured = 0))
					AND na.PublishDate >= @FromDate AND na.PublishDate <= @ToDate AND ExpireDate >= @CurrentDate
					AND na.UserID = @FilterByDNNUserID
				UNION
				SELECT DISTINCT na.[ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS na
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsArticleRolePermissions] AS arp ON na.ArticleID = arp.ArticleID
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS cat ON na.ArticleID = cat.ArticleID
					INNER JOIN @FiltredByCategories AS fbc ON fbc.CategoryID = cat.CategoryID
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsEventsData] AS ne on na.ArticleID = ne.ArticleID
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = na.ArticleID
					INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserID, @FilterByDNNGroupID) AS t ON t.seckey = nss.SecurityKey
				WHERE na.PortalID=@PortalID
					AND na.HasPermissions = 1
					AND na.HideDefaultLocale = 0
					AND na.PublishDate <= @CurrentDate AND na.ExpireDate >= @CurrentDate
					AND ne.StartDate <= @ToDate AND ne.EndDate >= @FromDate
					AND ((@EditPermission = 1) OR (((@UserCanApprove = 1) OR (na.Approved=1))
						AND (na.Active=1 OR na.UserID=@UserID) AND arp.Show = 1 AND arp.RoleID IN (SELECT [RoleID] FROM @UserInRoles)
					))
					AND ((@Featured = 1 AND na.Featured = 1) OR (@Featured = 0))
					AND na.UserID = @FilterByDNNUserID
				)
			) AS Result WHERE Kulike BETWEEN @ItemsFrom AND @ItemsTo ORDER BY
				CASE WHEN @OrderBy =''PublishDate ASC'' THEN PublishDate END,
				CASE WHEN @OrderBy =''PublishDate DESC'' THEN PublishDate END DESC,
				CASE WHEN @OrderBy =''NumberOfViews ASC'' THEN NumberOfViews END,
				CASE WHEN @OrderBy =''NumberOfViews DESC'' THEN NumberOfViews END DESC,
				CASE WHEN @OrderBy =''RatingValue ASC'' THEN RatingValue END,
				CASE WHEN @OrderBy =''RatingValue DESC'' THEN RatingValue END DESC,
				CASE WHEN @OrderBy =''DateAdded ASC'' THEN DateAdded END,
				CASE WHEN @OrderBy =''DateAdded DESC'' THEN DateAdded END DESC,
				CASE WHEN @OrderBy =''ExpireDate ASC'' THEN ExpireDate END,
				CASE WHEN @OrderBy =''ExpireDate DESC'' THEN ExpireDate END DESC,
				CASE WHEN @OrderBy =''LastModified ASC'' THEN LastModified END,
				CASE WHEN @OrderBy =''LastModified DESC'' THEN LastModified END DESC,
				CASE WHEN @OrderBy =''NumberOfComments ASC'' THEN NumberOfComments END,
				CASE WHEN @OrderBy =''NumberOfComments DESC'' THEN NumberOfComments END DESC,
				CASE WHEN @OrderBy =''Title ASC'' THEN Title END,
				CASE WHEN @OrderBy =''Title DESC'' THEN Title END DESC;
	END
END' 
END
GO
/****** Object:  StoredProcedure {databaseOwner}[{objectQualifier}EasyDNNNewsGetItemsForListDisplay]    Script Date: 06/24/2013 16:39:07 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'{databaseOwner}[{objectQualifier}EasyDNNNewsGetItemsForListDisplay]') AND type in (N'P', N'PC'))
BEGIN
EXEC dbo.sp_executesql @statement = N'CREATE PROCEDURE {databaseOwner}[{objectQualifier}EasyDNNNewsGetItemsForListDisplay]
	@ViewType tinyint = 0, -- 0 - View, 1 - Editor
	@PortalID int, -- current Portal
	@ModuleID int, -- current Module, portal sharing isto sadrzi dobre kategorije, auto add i setingsi su snimljeni kod tog modula
	@UserID int,
	@CurrentDate Datetime, -- = GetUTCDate,
	@OrderBy nvarchar(20) = ''PublishDate DESC'',
	@ItemsFrom int = 1,
	@ItemsTo int = 5,
	@DateRange bit = 0,
	@FromDate DateTime = ''2012-01-01 00:00:00'',
	@ToDate DateTime = ''2012-01-01 00:00:00'',
	/* od tud ide filter */
	@OnlyOneCategory int = 0, -- used for category menu or vhen need to filter by one category
	@Featured bit = 0,
	@ShowAllAuthors bit = 1, -- gleda se filtriranje autora po modulu ili portalu
	@FilterByAuthor int = 0, -- ako se selektiran jedan autor
	@FilterByGroupID int = 0, -- ako je selektirana grupa
	@FilterByTags bit = 0,
	@FilterByArticles bit = 0,
	@FilterByDNNUserID int = 0, -- filter by some UserID / not current user ID
	@FilterByDNNGroupID int = 0, -- filter by DNNGroup/RoleID / not profile GroupID
	@EditOnlyAsOwner bit = 0, -- news settings
	@UserCanApprove bit = 0, -- news settings
	@LocaleCode nvarchar(20) = '''',
	@IsSocialInstance bit = 0,	
	@FirstOrderBy nvarchar(20) = '''',--''Featured DESC'', -- featured articles on top	
	@Perm_ViewAllCategores bit = 0, -- permission settings View all categories
	@Perm_EditAllCategores bit = 0, -- permission settings Edit all categories
	@AdminOrSuperUser bit = 0,
	@CategoryFilterType tinyint = 1, -- 0 All categories, 1 - SELECTion, 2 - AutoAdd
	@PermissionSettingsSource bit = 1, -- 1 portal, 0 module
	@FillterSettingsSource bit = 1, -- 1 portal, 0 module	
	@OuterModuleID int = 0,
	@HideUnlocalizedItems bit = 0
AS
SET NOCOUNT ON;
DECLARE @EditPermission tinyint;
SET @EditPermission = 0;
IF @OuterModuleID = 0 AND @FilterByArticles = 1
BEGIN
	DECLARE @FilterArticlesTable TABLE (ArticleID int NOT NULL PRIMARY KEY);
	IF @FillterSettingsSource = 1 -- -- portal settings
		BEGIN
			INSERT INTO @FilterArticlesTable SELECT ArticleID FROM {databaseOwner}[{objectQualifier}EasyDNNNewsPortalFilterByArticles] WHERE FilterPortalID = @PortalID;
		END
	ELSE
		BEGIN
			INSERT INTO @FilterArticlesTable SELECT ArticleID FROM {databaseOwner}[{objectQualifier}EasyDNNNewsFilterByArticles] WHERE FilterModuleID = @ModuleID;
		END
END
-- temp TABLE contains list of TagIDs to filter -> @FilterTagsTable
IF @OuterModuleID = 0 AND @FilterByTags = 1
BEGIN
	DECLARE @FilterTagsTable TABLE (TagID int NOT NULL PRIMARY KEY);
	IF @FillterSettingsSource = 1 -- portal settings
		BEGIN
			INSERT INTO @FilterTagsTable SELECT TagID FROM {databaseOwner}[{objectQualifier}EasyDNNNewsPortalFilterByTagID] WHERE FilterPortalID = @PortalID;
		END
	ELSE
		BEGIN
			INSERT INTO @FilterTagsTable SELECT TagID FROM {databaseOwner}[{objectQualifier}EasyDNNNewsFilterByTagID] WHERE FilterModuleID = @ModuleID;
		END
END

DECLARE @UserInRoles TABLE (RoleID int NOT NULL PRIMARY KEY);
INSERT INTO @UserInRoles SELECT DISTINCT ur.[RoleID] FROM {databaseOwner}[{objectQualifier}UserRoles] AS ur INNER JOIN {databaseOwner}[{objectQualifier}Roles] AS r ON ur.RoleID = r.RoleID WHERE ur.UserID = @UserID AND r.PortalID = @PortalID AND (ur.ExpiryDate IS NULL OR ur.ExpiryDate > GETUTCDATE()) AND (ur.EffectiveDate IS NULL OR ur.EffectiveDate < GETUTCDATE());

DECLARE @UserViewCategories TABLE (CategoryID INT NOT NULL PRIMARY KEY); -- all categories which user can see based on permissions
DECLARE @UserEditCategories TABLE (CategoryID INT NOT NULL PRIMARY KEY); -- all categories which user can edit based on permissions
DECLARE @UserViewCategoriesWithFilter TABLE (CategoryID INT NOT NULL PRIMARY KEY); -- all categories which user can see based on permissions and Module filter
DECLARE @FiltredByCategories TABLE (CategoryID INT NOT NULL PRIMARY KEY); -- all categories that are filtred by module or portal

IF @AdminOrSuperUser = 1 OR @Perm_ViewAllCategores = 1
BEGIN
	INSERT INTO @UserViewCategories SELECT [CategoryID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryList] WHERE PortalID = @PortalID;
END
ELSE IF @UserID = -1
BEGIN	
	IF @PermissionSettingsSource = 1 -- by portal
	BEGIN
		INSERT INTO @UserViewCategories
		SELECT rpsc.[CategoryID] FROM  {databaseOwner}[{objectQualifier}EasyDNNNewsRolePremissionsShowCategories] AS rpsc 
		INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsRolePremissionSettings] AS rps ON rps.PremissionSettingsID = rpsc.PremissionSettingsID
		WHERE rps.PortalID = @PortalID  AND rps.ModuleID IS NULL AND rps.RoleID IS NULL;
	END
	ELSE -- by module
	BEGIN
	INSERT INTO @UserViewCategories
		SELECT rpsc.[CategoryID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsRolePremissionsShowCategories] AS rpsc
		INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsRolePremissionSettings] AS rps ON rps.PremissionSettingsID = rpsc.PremissionSettingsID
		WHERE rps.PortalID = @PortalID AND rps.ModuleID = @ModuleID AND rps.RoleID IS NULL;
	END
END
ELSE -- registrirani korisnik
BEGIN
	IF @PermissionSettingsSource = 1 -- by portal
	BEGIN
		INSERT INTO @UserViewCategories
		SELECT rpsc.[CategoryID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsRolePremissionsShowCategories] AS rpsc
		INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsRolePremissionSettings] AS rps ON rps.PremissionSettingsID = rpsc.PremissionSettingsID
		INNER JOIN @UserInRoles AS uir ON rps.RoleID = uir.RoleID
		WHERE rps.PortalID = @PortalID AND rps.ModuleID IS NULL GROUP BY rpsc.[CategoryID]
		UNION
		SELECT upsc.[CategoryID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsUserPremissionsShowCategories] AS upsc
		INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsUserPremissionSettings] AS ups ON ups.PremissionSettingsID = upsc.PremissionSettingsID
		WHERE ups.UserID = @UserID AND ups.PortalID = @PortalID AND ups.ModuleID IS NULL GROUP BY upsc.[CategoryID];
	END
	ELSE -- by module
	BEGIN
		INSERT INTO @UserViewCategories
		SELECT rpsc.[CategoryID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsRolePremissionsShowCategories] AS rpsc
		INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsRolePremissionSettings] AS rps ON rps.PremissionSettingsID = rpsc.PremissionSettingsID
		INNER JOIN @UserInRoles AS uir ON rps.RoleID = uir.RoleID
		WHERE rps.PortalID = @PortalID AND rps.ModuleID = @ModuleID GROUP BY rpsc.[CategoryID]
		UNION
		SELECT upsc.[CategoryID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsUserPremissionsShowCategories] AS upsc
		INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsUserPremissionSettings] AS ups ON ups.PremissionSettingsID = upsc.PremissionSettingsID
		WHERE ups.UserID = @UserID AND ups.PortalID = @PortalID AND ups.ModuleID = @ModuleID GROUP BY upsc.[CategoryID];
	END
END

IF @OnlyOneCategory <> 0 -- filtrira se po jednoj kategoriji
BEGIN
	INSERT INTO @UserViewCategoriesWithFilter SELECT [CategoryID] FROM @UserViewCategories WHERE CategoryID = @OnlyOneCategory;
	INSERT INTO @FiltredByCategories SELECT @OnlyOneCategory;
END
ELSE IF @OuterModuleID <> 0
BEGIN
	IF @CategoryFilterType = 0 -- 0 All categories
	BEGIN
		INSERT INTO @UserViewCategoriesWithFilter SELECT [CategoryID] FROM @UserViewCategories;
		INSERT INTO @FiltredByCategories SELECT [CategoryID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryList] WHERE PortalID = @PortalID;
	END
	ELSE IF @CategoryFilterType = 1 -- 1 - SELECTion
	BEGIN
		INSERT INTO @UserViewCategoriesWithFilter 
		SELECT cl.[CategoryID] FROM @UserViewCategories AS cl
		INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsModuleCategoryItems] AS mci ON mci.CategoryID = cl.CategoryID AND mci.ModuleID = @OuterModuleID
			
		INSERT INTO @FiltredByCategories SELECT [CategoryID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsModuleCategoryItems] WHERE ModuleID = @OuterModuleID;
	END
	ELSE IF @CategoryFilterType = 2 -- 2 - AutoAdd
	BEGIN
		WITH hierarchy AS(
			SELECT [CategoryID], [ParentCategory]
			FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryList] AS cl
			WHERE (cl.ParentCategory IN (SELECT [CategoryID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsModuleCategoryItems] WHERE ModuleID = @OuterModuleID) OR cl.CategoryID IN (SELECT [CategoryID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsModuleCategoryItems] WHERE ModuleID = @OuterModuleID)) AND PortalID = @PortalID
			UNION ALL
			SELECT c.[CategoryID], c.[ParentCategory]
			FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryList] AS c INNER JOIN hierarchy AS p ON c.ParentCategory = p.CategoryID WHERE c.PortalID = @PortalID
			)
		INSERT INTO @FiltredByCategories SELECT DISTINCT CategoryID FROM hierarchy;	
		INSERT INTO @UserViewCategoriesWithFilter SELECT uvc.CategoryID FROM @FiltredByCategories AS nfc INNER JOIN @UserViewCategories AS uvc ON uvc.CategoryID = nfc.CategoryID;
	END
END
ELSE
BEGIN
	IF @CategoryFilterType = 0 -- 0 All categories
	BEGIN
		INSERT INTO @UserViewCategoriesWithFilter SELECT [CategoryID] FROM @UserViewCategories;
		INSERT INTO @FiltredByCategories SELECT [CategoryID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryList] WHERE PortalID = @PortalID;
	END
	ELSE IF @CategoryFilterType = 1 -- 1 - SELECTion
	BEGIN
		IF @FillterSettingsSource = 1 -- portal
		BEGIN
			INSERT INTO @UserViewCategoriesWithFilter 
			SELECT cl.[CategoryID] FROM @UserViewCategories AS cl
			INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsPortalCategoryItems] AS pci ON pci.CategoryID = cl.CategoryID AND pci.PortalID = @PortalID
			
			INSERT INTO @FiltredByCategories SELECT [CategoryID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsPortalCategoryItems] WHERE PortalID = @PortalID;
		END
		ELSE -- module
		BEGIN
			INSERT INTO @UserViewCategoriesWithFilter 
			SELECT cl.[CategoryID] FROM @UserViewCategories AS cl
			INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsModuleCategoryItems] AS mci ON mci.CategoryID = cl.CategoryID AND mci.ModuleID = @ModuleID
			
			INSERT INTO @FiltredByCategories SELECT [CategoryID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsModuleCategoryItems] WHERE ModuleID = @ModuleID;
		END
	END
	ELSE IF @CategoryFilterType = 2 -- 2 - AutoAdd
	BEGIN
		IF @FillterSettingsSource = 1 -- portal
		BEGIN
			WITH hierarchy AS(
				SELECT [CategoryID], [ParentCategory]
				FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryList] AS cl
				WHERE (cl.ParentCategory IN (SELECT [CategoryID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsPortalCategoryItems] WHERE PortalID = @PortalID) OR cl.CategoryID IN (SELECT [CategoryID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsPortalCategoryItems] WHERE PortalID = @PortalID)) AND PortalID = @PortalID
				UNION ALL
				SELECT c.[CategoryID], c.[ParentCategory]
				FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryList] AS c INNER JOIN hierarchy AS p ON c.ParentCategory = p.CategoryID WHERE c.PortalID = @PortalID
				)
			INSERT INTO @FiltredByCategories SELECT DISTINCT CategoryID FROM hierarchy;	
			INSERT INTO @UserViewCategoriesWithFilter SELECT uvc.CategoryID FROM @FiltredByCategories AS nfc INNER JOIN @UserViewCategories AS uvc ON uvc.CategoryID = nfc.CategoryID;			
		END
		ELSE -- module
		BEGIN
			WITH hierarchy AS(
				SELECT [CategoryID], [ParentCategory]
				FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryList] AS cl
				WHERE (cl.ParentCategory IN (SELECT [CategoryID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsModuleCategoryItems] WHERE ModuleID = @ModuleID) OR cl.CategoryID IN (SELECT [CategoryID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsModuleCategoryItems] WHERE ModuleID = @ModuleID)) AND PortalID = @PortalID
				UNION ALL
				SELECT c.[CategoryID], c.[ParentCategory]
				FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryList] AS c INNER JOIN hierarchy AS p ON c.ParentCategory = p.CategoryID WHERE c.PortalID = @PortalID
				)
			INSERT INTO @FiltredByCategories SELECT DISTINCT CategoryID FROM hierarchy;	
			INSERT INTO @UserViewCategoriesWithFilter SELECT uvc.CategoryID FROM @FiltredByCategories AS nfc INNER JOIN @UserViewCategories AS uvc ON uvc.CategoryID = nfc.CategoryID;
		END
	END
END

DECLARE @FilterBySocialGroup bit;
SET @FilterBySocialGroup = 0;
DECLARE @FilterAuthorOrAuthors bit;
SET @FilterAuthorOrAuthors = 0;

DECLARE @TempAuthorsIDList TABLE (UserID int NOT NULL PRIMARY KEY);
IF @IsSocialInstance = 1
	BEGIN
		IF @FilterByDNNGroupID <> 0
		BEGIN	
			SET @FilterBySocialGroup = 1;
			IF @FilterByAuthor <> 0
			BEGIN
				SET @FilterAuthorOrAuthors = 1;
				SELECT @FilterByAuthor = UserID FROM {databaseOwner}[{objectQualifier}EasyDNNNewsAuthorProfile] WHERE [AuthorProfileID] = @FilterByAuthor;
			END
		END
	END
ELSE
BEGIN
-- ovaj dio odnosi se na filtriranje autora
	IF @OuterModuleID <> 0 AND @ShowAllAuthors = 0 -- filter iz other modula
	BEGIN
		SET @FilterAuthorOrAuthors = 1;
		INSERT INTO @TempAuthorsIDList
			SELECT [UserID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsModuleAuthorsItems] AS mai WHERE mai.ModuleID = @OuterModuleID
			UNION 
			SELECT [UserID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsAuthorProfile] AS ap 
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsAutorGroupItems] AS agi ON ap.AuthorProfileID = agi.AuthorProfileID
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsModuleGroupItems] AS mgi ON mgi.GroupID = agi.GroupID
			WHERE mgi.ModuleID = @OuterModuleID
	END
	ELSE
	BEGIN
		IF @FilterByAuthor = 0 AND @FilterByGroupID = 0 AND @ShowAllAuthors = 0 -- filter glavnog newsa
		BEGIN
			SET @FilterAuthorOrAuthors = 1;
			IF @FillterSettingsSource = 1 -- by portal
			BEGIN
				INSERT INTO @TempAuthorsIDList
				SELECT [UserID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsPortalAuthorsItems] AS pai WHERE pai.PortalID = @PortalID
				UNION 
				SELECT [UserID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsAuthorProfile] AS ap 
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsAutorGroupItems] AS agi ON ap.AuthorProfileID = agi.AuthorProfileID
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsPortalGroupItems] AS pgi ON pgi.GroupID = agi.GroupID
					WHERE pgi.PortalID = @PortalID
			END
			ELSE -- by modul
			BEGIN
				INSERT INTO @TempAuthorsIDList
				SELECT [UserID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsModuleAuthorsItems] AS mai WHERE mai.ModuleID = @ModuleID
				UNION 
				SELECT [UserID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsAuthorProfile] AS ap 
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsAutorGroupItems] AS agi ON ap.AuthorProfileID = agi.AuthorProfileID
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsModuleGroupItems] AS mgi ON mgi.GroupID = agi.GroupID
					WHERE mgi.ModuleID = @ModuleID
			END
		END
		ELSE IF @FilterByAuthor <> 0
		BEGIN
			SET @FilterAuthorOrAuthors = 1;
			INSERT INTO @TempAuthorsIDList SELECT [UserID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsAuthorProfile] WHERE [AuthorProfileID] = @FilterByAuthor;
		END
		ELSE IF @FilterByGroupID <> 0
		BEGIN
			SET @FilterAuthorOrAuthors = 1;
			INSERT INTO @TempAuthorsIDList
			SELECT [UserID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsAuthorProfile] AS ap 
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsAutorGroupItems] AS agi ON ap.AuthorProfileID = agi.AuthorProfileID	
				WHERE agi.GroupID = @FilterByGroupID
		END
	END
END
-- kategorije sa edit pravima
IF @AdminOrSuperUser = 1 OR @Perm_EditAllCategores = 1
BEGIN	
	INSERT INTO @UserEditCategories SELECT CategoryID FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryList] WHERE PortalID = @PortalID;
	SET @EditPermission = 1;
END
ELSE
BEGIN
	IF @UserID = -1
	BEGIN
		IF @PermissionSettingsSource = 1 -- by portal
		BEGIN
			INSERT INTO @UserEditCategories
			SELECT rpatc.[CategoryID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsRolePremissionsAddToCategories] AS rpatc
			INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsRolePremissionSettings] AS rps ON rps.PremissionSettingsID = rpatc.PremissionSettingsID
			WHERE rps.PortalID = @PortalID AND rps.ModuleID IS NULL AND rps.RoleID IS NULL;
		END
		ELSE -- by module
		BEGIN
		INSERT INTO @UserEditCategories
			SELECT rpatc.[CategoryID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsRolePremissionsAddToCategories] AS rpatc
			INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsRolePremissionSettings] AS rps ON rps.PremissionSettingsID = rpatc.PremissionSettingsID
			WHERE rps.RoleID IS NULL AND rps.PortalID = @PortalID AND rps.ModuleID = @ModuleID;
		END
	END
	ELSE -- registrirani korisnik
	BEGIN
		IF @PermissionSettingsSource = 1 -- by portal
		BEGIN
			INSERT INTO @UserEditCategories
			SELECT rpatc.[CategoryID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsRolePremissionsAddToCategories] AS rpatc
			INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsRolePremissionSettings] AS rps ON rps.PremissionSettingsID = rpatc.PremissionSettingsID
			INNER JOIN @UserInRoles AS uir ON rps.RoleID = uir.RoleID
			WHERE rps.PortalID = @PortalID AND rps.ModuleID IS NULL GROUP BY rpatc.[CategoryID]
			UNION
			SELECT upatc.[CategoryID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsUserPremissionsAddToCategories] AS upatc
			INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsUserPremissionSettings] AS ups ON ups.PremissionSettingsID = upatc.PremissionSettingsID
			WHERE ups.UserID = @UserID AND ups.PortalID = @PortalID AND ups.ModuleID IS NULL GROUP BY upatc.[CategoryID];
		END
		ELSE -- by module
		BEGIN
			INSERT INTO @UserEditCategories
			SELECT rpatc.[CategoryID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsRolePremissionsAddToCategories] AS rpatc
			INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsRolePremissionSettings] AS rps ON rps.PremissionSettingsID = rpatc.PremissionSettingsID
			INNER JOIN @UserInRoles AS uir ON rps.RoleID = uir.RoleID
			WHERE rps.PortalID = @PortalID AND rps.ModuleID = @ModuleID GROUP BY rpatc.[CategoryID]
			UNION
			SELECT upatc.[CategoryID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsUserPremissionsAddToCategories] AS upatc
			INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsUserPremissionSettings] AS ups ON ups.PremissionSettingsID = upatc.PremissionSettingsID
			WHERE ups.UserID = @UserID AND ups.PortalID = @PortalID AND ups.ModuleID = @ModuleID GROUP BY upatc.[CategoryID];
		END	
	END
	IF EXISTS(SELECT * FROM @UserEditCategories) BEGIN SET @EditPermission = 2; END
END

DECLARE @LocalizedCategories TABLE (ID int NOT NULL PRIMARY KEY, Name nvarchar(200), Position int, CategoryURL nvarchar(1500));
IF @LocaleCode <> ''''
BEGIN
	WITH LocCategories(ID, Name, Position, CategoryURL) AS (
		SELECT Cat.CategoryID AS ID, cl.Title AS Name, Cat.Position, Cat.CategoryURL FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryList] AS Cat INNER JOIN @UserViewCategories AS uvc ON uvc.CategoryID = Cat.CategoryID INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryLocalization] AS cl ON uvc.CategoryID = cl.CategoryID WHERE Cat.PortalID = @PortalID AND cl.LocaleCode = @LocaleCode
	),
	NotLocCategories(ID, Name, Position, CategoryURL) AS (
		SELECT Cat.CategoryID AS ID, Cat.CategoryName AS Name, Cat.Position, Cat.CategoryURL FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryList] AS Cat INNER JOIN @UserViewCategories AS uvc ON uvc.CategoryID = Cat.CategoryID WHERE Cat.PortalID = @PortalID AND Cat.CategoryID NOT IN (SELECT ID FROM LocCategories)
	)
	INSERT INTO @LocalizedCategories SELECT ID, Name, Position, CategoryURL FROM (SELECT ID, Name, Position, CategoryURL FROM LocCategories UNION ALL SELECT ID, Name, Position, CategoryURL FROM NotLocCategories) AS ArticleCategories
END
ELSE
BEGIN
	INSERT INTO @LocalizedCategories SELECT Cat.CategoryID AS ID, Cat.CategoryName AS Name, Cat.Position, Cat.CategoryURL FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryList] AS Cat INNER JOIN @UserViewCategories AS uvc ON uvc.CategoryID = cat.CategoryID WHERE Cat.PortalID = @PortalID
END

IF @IsSocialInstance = 0
BEGIN
	IF @LocaleCode <> ''''
	BEGIN
		WITH FinalArticleIDsSet (ArticleID) AS(
		SELECT TOP (@ItemsTo - @ItemsFrom + 1) ArticleID FROM (SELECT *, ROW_NUMBER() OVER (ORDER BY
		CASE WHEN @FirstOrderBy =''Featured DESC'' THEN Featured END DESC,
		CASE WHEN @OrderBy =''PublishDate ASC'' THEN PublishDate END,
		CASE WHEN @OrderBy =''PublishDate DESC'' THEN PublishDate END DESC,
		CASE WHEN @OrderBy =''NumberOfViews ASC'' THEN NumberOfViews END,
		CASE WHEN @OrderBy =''NumberOfViews DESC'' THEN NumberOfViews END DESC,
		CASE WHEN @OrderBy =''RatingValue ASC'' THEN RatingValue END,
		CASE WHEN @OrderBy =''RatingValue DESC'' THEN RatingValue END DESC,
		CASE WHEN @OrderBy =''DateAdded ASC'' THEN DateAdded END,
		CASE WHEN @OrderBy =''DateAdded DESC'' THEN DateAdded END DESC,
		CASE WHEN @OrderBy =''ExpireDate ASC'' THEN ExpireDate END,
		CASE WHEN @OrderBy =''ExpireDate DESC'' THEN ExpireDate END DESC,
		CASE WHEN @OrderBy =''LastModified ASC'' THEN LastModified END,
		CASE WHEN @OrderBy =''LastModified DESC'' THEN LastModified END DESC,
		CASE WHEN @OrderBy =''NumberOfComments ASC'' THEN NumberOfComments END,
		CASE WHEN @OrderBy =''NumberOfComments DESC'' THEN NumberOfComments END DESC,
		CASE WHEN @OrderBy =''Title ASC'' THEN Title END,
		CASE WHEN @OrderBy =''Title DESC'' THEN Title END DESC) AS Kulike
		FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS n WHERE ArticleID IN(
			SELECT DISTINCT na.[ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS na
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS cat ON na.ArticleID = cat.ArticleID
				INNER JOIN @UserViewCategoriesWithFilter  AS uvcwf ON uvcwf.CategoryID = cat.CategoryID	
				LEFT OUTER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsTagsItems] AS ti ON na.ArticleID = ti.ArticleID
				LEFT OUTER JOIN @FilterTagsTable AS fbt ON ti.TagID = fbt.TagID
				LEFT OUTER JOIN @FilterArticlesTable AS fba ON fba.ArticleID = na.ArticleID
				LEFT OUTER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsContentLocalization] AS ncl ON ncl.ArticleID = na.ArticleID  		
			WHERE na.PortalID=@PortalID
				AND na.HasPermissions = 0
				AND ((@EditPermission = 1) OR ((@UserCanApprove = 1 OR na.Approved=1) AND (na.Active = 1 OR na.UserID=@UserID)))
				AND ((@Featured = 1 AND na.Featured = 1) OR (@Featured = 0))
				AND ((@DateRange = 0 AND (na.PublishDate <= @CurrentDate AND na.ExpireDate >= @CurrentDate)) OR (@DateRange = 1 AND ((PublishDate >= @FromDate AND PublishDate <= @ToDate) AND (ExpireDate >= @CurrentDate))))
				AND ((@FilterAuthorOrAuthors = 1 AND na.UserID IN (SELECT UserID FROM @TempAuthorsIDList)) OR (@FilterAuthorOrAuthors = 0))
				AND ((@FilterByTags = 1 AND fbt.TagID IS NOT NULL) OR (@FilterByTags = 0))
				AND ((@FilterByArticles = 1 AND fba.ArticleID IS NOT NULL) OR (@FilterByArticles = 0))
				AND ((@HideUnlocalizedItems = 1 AND ncl.ArticleID IS NOT NULL AND ncl.LocaleCode = @LocaleCode) OR (@HideUnlocalizedItems = 0))
			UNION ALL
			SELECT DISTINCT na.[ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS na
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsArticleUserPermissions] AS aup ON na.ArticleID = aup.ArticleID
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS cat ON na.ArticleID = cat.ArticleID
				INNER JOIN @FiltredByCategories AS fbc ON fbc.CategoryID = cat.CategoryID			 
				LEFT OUTER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsTagsItems] AS ti ON na.ArticleID = ti.ArticleID
				LEFT OUTER JOIN @FilterTagsTable AS fbt ON ti.TagID = fbt.TagID
				LEFT OUTER JOIN @FilterArticlesTable AS fba ON fba.ArticleID = na.ArticleID
				LEFT OUTER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsContentLocalization] AS ncl ON ncl.ArticleID = na.ArticleID 	 	 
			WHERE na.PortalID=@PortalID
				AND na.HasPermissions = 1
				AND ((@EditPermission = 1) OR (((@UserID = -1 AND aup.UserID IS NULL) OR (aup.UserID = @UserID))
					AND aup.Show = 1 AND ((@UserCanApprove = 1) OR (na.Approved=1)) AND (na.Active = 1 OR na.UserID=@UserID)
				))
				AND ((@Featured = 1 AND na.Featured = 1) OR (@Featured = 0))
				AND ((@DateRange = 0 AND (na.PublishDate <= @CurrentDate AND na.ExpireDate >= @CurrentDate)) OR (@DateRange = 1 AND ((PublishDate >= @FromDate AND PublishDate <= @ToDate) AND (ExpireDate >= @CurrentDate))))
				AND ((@FilterAuthorOrAuthors = 1 AND na.UserID IN (SELECT UserID FROM @TempAuthorsIDList)) OR (@FilterAuthorOrAuthors = 0))
				AND ((@FilterByTags = 1 AND fbt.TagID IS NOT NULL) OR (@FilterByTags = 0))
				AND ((@FilterByArticles = 1 AND fba.ArticleID IS NOT NULL) OR (@FilterByArticles = 0))
				AND ((@HideUnlocalizedItems = 1 AND ncl.ArticleID IS NOT NULL AND ncl.LocaleCode = @LocaleCode) OR (@HideUnlocalizedItems = 0))
			UNION
			SELECT DISTINCT na.[ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS na
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsArticleRolePermissions] AS arp ON na.ArticleID = arp.ArticleID
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS cat ON na.ArticleID = cat.ArticleID
				INNER JOIN @FiltredByCategories AS fbc ON fbc.CategoryID = cat.CategoryID		  
				LEFT OUTER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsTagsItems] AS ti ON na.ArticleID = ti.ArticleID
				LEFT OUTER JOIN @FilterTagsTable AS fbt ON ti.TagID = fbt.TagID 
				LEFT OUTER JOIN @FilterArticlesTable AS fba ON fba.ArticleID = na.ArticleID
				LEFT OUTER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsContentLocalization] AS ncl ON ncl.ArticleID = na.ArticleID 	 				  
			WHERE na.PortalID=@PortalID
				AND na.HasPermissions = 1
				AND ((@EditPermission = 1) OR (((@UserCanApprove = 1) OR (na.Approved=1))
					AND (na.Active = 1 OR na.UserID=@UserID) AND arp.Show = 1 AND arp.RoleID IN (SELECT [RoleID] FROM @UserInRoles)
				))
				AND ((@Featured = 1 AND na.Featured = 1) OR (@Featured = 0))
				AND ((@DateRange = 0 AND (na.PublishDate <= @CurrentDate AND na.ExpireDate >= @CurrentDate)) OR (@DateRange = 1 AND ((PublishDate >= @FromDate AND PublishDate <= @ToDate) AND (ExpireDate >= @CurrentDate))))
				AND ((@FilterAuthorOrAuthors = 1 AND na.UserID IN (SELECT UserID FROM @TempAuthorsIDList)) OR (@FilterAuthorOrAuthors = 0))	 
				AND ((@FilterByTags = 1 AND fbt.TagID IS NOT NULL) OR (@FilterByTags = 0))
				AND ((@FilterByArticles = 1 AND fba.ArticleID IS NOT NULL) OR (@FilterByArticles = 0))
				AND ((@HideUnlocalizedItems = 1 AND ncl.ArticleID IS NOT NULL AND ncl.LocaleCode = @LocaleCode) OR (@HideUnlocalizedItems = 0))
			)
		) AS Result WHERE Kulike BETWEEN @ItemsFrom AND @ItemsTo ORDER BY
			CASE WHEN @FirstOrderBy =''Featured DESC'' THEN Featured END DESC,
			CASE WHEN @OrderBy =''PublishDate ASC'' THEN PublishDate END,
			CASE WHEN @OrderBy =''PublishDate DESC'' THEN PublishDate END DESC,
			CASE WHEN @OrderBy =''NumberOfViews ASC'' THEN NumberOfViews END,
			CASE WHEN @OrderBy =''NumberOfViews DESC'' THEN NumberOfViews END DESC,
			CASE WHEN @OrderBy =''RatingValue ASC'' THEN RatingValue END,
			CASE WHEN @OrderBy =''RatingValue DESC'' THEN RatingValue END DESC,
			CASE WHEN @OrderBy =''DateAdded ASC'' THEN DateAdded END,
			CASE WHEN @OrderBy =''DateAdded DESC'' THEN DateAdded END DESC,
			CASE WHEN @OrderBy =''ExpireDate ASC'' THEN ExpireDate END,
			CASE WHEN @OrderBy =''ExpireDate DESC'' THEN ExpireDate END DESC,
			CASE WHEN @OrderBy =''LastModified ASC'' THEN LastModified END,
			CASE WHEN @OrderBy =''LastModified DESC'' THEN LastModified END DESC,
			CASE WHEN @OrderBy =''NumberOfComments ASC'' THEN NumberOfComments END,
			CASE WHEN @OrderBy =''NumberOfComments DESC'' THEN NumberOfComments END DESC,
			CASE WHEN @OrderBy =''Title ASC'' THEN Title END,
			CASE WHEN @OrderBy =''Title DESC'' THEN Title END DESC
	),
	FinalLocalizedArticleIDsSet (ArticleID,Title,SubTitle,Summary,Article,DetailTypeData,TitleLink,MetaDecription,MetaKeywords,MainImageTitle,MainImageDescription) AS(
		SELECT ArticleID,Title,SubTitle,Summary,Article,DetailTypeData,clTitleLink AS TitleLink ,MetaDecription,MetaKeywords,MainImageTitle,MainImageDescription FROM {databaseOwner}[{objectQualifier}EasyDNNNewsContentLocalization] WHERE ArticleID IN (SELECT ArticleID FROM FinalArticleIDsSet) AND LocaleCode = @LocaleCode
	)
	SELECT *,
		CASE @EditPermission 
			WHEN 0 THEN 0
			WHEN 1 THEN 1
			WHEN 2 THEN
			CASE @EditOnlyAsOwner
				WHEN 0 THEN			
					CASE WHEN EXISTS(SELECT CategoryID FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS c WHERE c.ArticleID = Result.ArticleID AND c.CategoryID IN (SELECT CategoryID FROM @UserEditCategories))
						THEN 1
						ELSE
							CASE WHEN EXISTS(SELECT [ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsArticleRolePermissions] AS arp WHERE arp.ArticleID = Result.ArticleID AND arp.Edit = 1 AND arp.RoleID IN(SELECT RoleID FROM @UserInRoles))
							THEN 1
							ELSE
								CASE WHEN EXISTS (SELECT [ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsArticleUserPermissions] AS aup WHERE aup.ArticleID = Result.ArticleID AND aup.Edit = 1 AND aup.UserID = @UserID)
									THEN 1
									ELSE 0
								END
							END
					END  			
				WHEN 1 THEN
					CASE WHEN EXISTS(SELECT CategoryID FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS c WHERE Result.UserID = @UserID AND c.ArticleID = Result.ArticleID AND c.CategoryID IN (SELECT CategoryID FROM @UserEditCategories))
						THEN 1
						ELSE
							CASE WHEN EXISTS(SELECT [ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsArticleRolePermissions] AS arp WHERE arp.ArticleID = Result.ArticleID AND arp.Edit = 1 AND arp.RoleID IN(SELECT RoleID FROM @UserInRoles))
							THEN 1
							ELSE
								CASE WHEN EXISTS (SELECT [ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsArticleUserPermissions] AS aup WHERE aup.ArticleID = Result.ArticleID AND aup.Edit = 1 AND aup.UserID = @UserID)
									THEN 1
									ELSE 0
								END
							END 
					END
			END
			WHEN 3 THEN
				CASE WHEN EXISTS(SELECT [ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsArticleRolePermissions] AS arp WHERE arp.ArticleID = Result.ArticleID AND arp.Edit = 1 AND arp.RoleID IN(SELECT RoleID FROM @UserInRoles))
					THEN 1
					ELSE
					CASE WHEN EXISTS (SELECT [ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsArticleUserPermissions] AS aup WHERE aup.ArticleID = Result.ArticleID AND aup.Edit = 1 AND aup.UserID = @UserID)
						THEN 1
						ELSE 0
						END
					END 
		END AS ''CanEdit'',
		(SELECT cat.ID, cat.Name, cat.CategoryURL FROM @LocalizedCategories AS Cat INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS c ON c.CategoryID = Cat.ID WHERE c.ArticleID = Result.ArticleID ORDER BY Position FOR XML AUTO, ROOT(''root'')) AS ''CatToShow'',
		 CASE Result.Active
			WHEN 1 THEN 0
			WHEN 0 THEN 1
		 END AS ''Published'',
		 CASE @UserCanApprove
			WHEN 0 THEN 0
			WHEN 1 THEN
				CASE Result.Approved
				 WHEN 1 THEN 0
				 WHEN 0 THEN
					 CASE Result.Active
						WHEN 1 THEN 1
						WHEN 0 THEN 0
					END
				END
		 END AS ''Approve''
		 FROM (
			 SELECT n.[ArticleID],n.[UserID],n.[Title],n.[SubTitle],n.[Summary],n.[Article],n.[ArticleImage],n.[DateAdded],n.[LastModified],n.[PublishDate]
				  ,n.[ExpireDate],n.[Approved],n.[Featured],n.[NumberOfViews],n.[RatingValue],n.[RatingCount],n.[AllowComments],n.[Active]
				  ,n.[TitleLink],n.[DetailType],n.[DetailTypeData],n.[DetailsTemplate],n.[DetailsTheme],n.[GalleryPosition],n.[GalleryDisplayType]
				  ,n.[ShowMainImage],n.[ShowMainImageFront],n.[CommentsTheme],n.[ArticleImageFolder],n.[NumberOfComments]
				  ,n.[ArticleImageSet],n.[MetaDecription],n.[MetaKeywords],n.[DisplayStyle],n.[DetailTarget]
				  ,n.[ArticleFromRSS],n.[HasPermissions],n.[EventArticle],n.[DetailMediaType],n.[DetailMediaData],n.[AuthorAliasName],n.[ShowGallery],n.[ArticleGalleryID],n.[MainImageTitle],n.[MainImageDescription]
				   FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS n WHERE ArticleID IN (SELECT ArticleID FROM FinalArticleIDsSet WHERE ArticleID NOT IN (SELECT ArticleID FROM FinalLocalizedArticleIDsSet))
			 UNION ALL
			 SELECT n.[ArticleID],n.[UserID],fla.[Title],fla.[SubTitle],fla.[Summary],fla.[Article],n.[ArticleImage],n.[DateAdded],n.[LastModified],n.[PublishDate]
				  ,n.[ExpireDate],n.[Approved],n.[Featured],n.[NumberOfViews],n.[RatingValue],n.[RatingCount],n.[AllowComments],n.[Active]
				  ,fla.[TitleLink],n.[DetailType],fla.[DetailTypeData],n.[DetailsTemplate],n.[DetailsTheme],n.[GalleryPosition],n.[GalleryDisplayType]
				  ,n.[ShowMainImage],n.[ShowMainImageFront],n.[CommentsTheme],n.[ArticleImageFolder],n.[NumberOfComments]
				  ,n.[ArticleImageSet],fla.[MetaDecription],fla.[MetaKeywords],n.[DisplayStyle],n.[DetailTarget]
				  ,n.[ArticleFromRSS],n.[HasPermissions],n.[EventArticle],n.[DetailMediaType],n.[DetailMediaData],n.[AuthorAliasName],n.[ShowGallery],n.[ArticleGalleryID],fla.[MainImageTitle],fla.[MainImageDescription]
			  FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS n INNER JOIN FinalLocalizedArticleIDsSet AS fla ON fla.ArticleID = n.ArticleID) As Result
		ORDER BY
			CASE WHEN @FirstOrderBy =''Featured DESC'' THEN Featured END DESC,
			CASE WHEN @OrderBy =''PublishDate ASC'' THEN PublishDate END,
			CASE WHEN @OrderBy =''PublishDate DESC'' THEN PublishDate END DESC,
			CASE WHEN @OrderBy =''NumberOfViews ASC'' THEN NumberOfViews END,
			CASE WHEN @OrderBy =''NumberOfViews DESC'' THEN NumberOfViews END DESC,
			CASE WHEN @OrderBy =''RatingValue ASC'' THEN RatingValue END,
			CASE WHEN @OrderBy =''RatingValue DESC'' THEN RatingValue END DESC,
			CASE WHEN @OrderBy =''DateAdded ASC'' THEN DateAdded END,
			CASE WHEN @OrderBy =''DateAdded DESC'' THEN DateAdded END DESC,
			CASE WHEN @OrderBy =''ExpireDate ASC'' THEN ExpireDate END,
			CASE WHEN @OrderBy =''ExpireDate DESC'' THEN ExpireDate END DESC,
			CASE WHEN @OrderBy =''LastModified ASC'' THEN LastModified END,
			CASE WHEN @OrderBy =''LastModified DESC'' THEN LastModified END DESC,
			CASE WHEN @OrderBy =''NumberOfComments ASC'' THEN NumberOfComments END,
			CASE WHEN @OrderBy =''NumberOfComments DESC'' THEN NumberOfComments END DESC,
			CASE WHEN @OrderBy =''Title ASC'' THEN Title END,
			CASE WHEN @OrderBy =''Title DESC'' THEN Title END DESC;
	END
	ELSE
	BEGIN
		SELECT *,
		CASE @EditPermission 
			WHEN 0 THEN 0
			WHEN 1 THEN 1
			WHEN 2 THEN
			CASE @EditOnlyAsOwner
				WHEN 0 THEN			
					CASE WHEN EXISTS(SELECT CategoryID FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS c WHERE c.ArticleID = Result.ArticleID AND c.CategoryID IN (SELECT CategoryID FROM @UserEditCategories))
						THEN 1
						ELSE
							CASE WHEN EXISTS(SELECT [ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsArticleRolePermissions] AS arp WHERE arp.ArticleID = Result.ArticleID AND arp.Edit = 1 AND arp.RoleID IN(SELECT RoleID FROM @UserInRoles))
							THEN 1
							ELSE
								CASE WHEN EXISTS (SELECT [ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsArticleUserPermissions] AS aup WHERE aup.ArticleID = Result.ArticleID AND aup.Edit = 1 AND aup.UserID = @UserID)
									THEN 1
									ELSE 0
								END
							END
					END  			
				WHEN 1 THEN
					CASE WHEN EXISTS(SELECT CategoryID FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS c WHERE Result.UserID = @UserID AND c.ArticleID = Result.ArticleID AND c.CategoryID IN (SELECT CategoryID FROM @UserEditCategories))
						THEN 1
						ELSE
							CASE WHEN EXISTS(SELECT [ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsArticleRolePermissions] AS arp WHERE arp.ArticleID = Result.ArticleID AND arp.Edit = 1 AND arp.RoleID IN(SELECT RoleID FROM @UserInRoles))
							THEN 1
							ELSE
								CASE WHEN EXISTS (SELECT [ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsArticleUserPermissions] AS aup WHERE aup.ArticleID = Result.ArticleID AND aup.Edit = 1 AND aup.UserID = @UserID)
									THEN 1
									ELSE 0
								END
							END 
					END
			END
			WHEN 3 THEN
				CASE WHEN EXISTS(SELECT [ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsArticleRolePermissions] AS arp WHERE arp.ArticleID = Result.ArticleID AND arp.Edit = 1 AND arp.RoleID IN(SELECT RoleID FROM @UserInRoles))
					THEN 1
					ELSE
					CASE WHEN EXISTS (SELECT [ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsArticleUserPermissions] AS aup WHERE aup.ArticleID = Result.ArticleID AND aup.Edit = 1 AND aup.UserID = @UserID)
						THEN 1
						ELSE 0
						END
					END 
		END AS ''CanEdit'',
		(SELECT cat.ID, cat.Name, cat.CategoryURL FROM @LocalizedCategories AS Cat INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS c ON c.CategoryID = Cat.ID WHERE c.ArticleID = Result.ArticleID ORDER BY Position FOR XML AUTO, ROOT(''root'')) AS ''CatToShow'',
		 CASE Result.Active
			WHEN 1 THEN 0
			WHEN 0 THEN 1
		 END AS ''Published'',
		 CASE @UserCanApprove
			WHEN 0 THEN 0
			WHEN 1 THEN
				CASE Result.Approved
				 WHEN 1 THEN 0
				 WHEN 0 THEN
					 CASE Result.Active
						WHEN 1 THEN 1
						WHEN 0 THEN 0
					END
				END
		 END AS ''Approve''
		 FROM (SELECT
		  n.[ArticleID],n.[UserID],n.[Title],n.[SubTitle],n.[Summary],n.[Article],n.[ArticleImage],n.[DateAdded],n.[LastModified],n.[PublishDate]
		  ,n.[ExpireDate],n.[Approved],n.[Featured],n.[NumberOfViews],n.[RatingValue],n.[RatingCount],n.[AllowComments],n.[Active]
		  ,n.[TitleLink],n.[DetailType],n.[DetailTypeData],n.[DetailsTemplate],n.[DetailsTheme],n.[GalleryPosition],n.[GalleryDisplayType]
		  ,n.[ShowMainImage],n.[ShowMainImageFront],n.[CommentsTheme],n.[ArticleImageFolder],n.[NumberOfComments]
		  ,n.[ArticleImageSet],n.[MetaDecription],n.[MetaKeywords],n.[DisplayStyle],n.[DetailTarget]
		  ,n.[ArticleFromRSS],n.[HasPermissions],n.[EventArticle],n.[DetailMediaType],n.[DetailMediaData],n.[AuthorAliasName],n.[ShowGallery],n.[ArticleGalleryID],n.[MainImageTitle],n.[MainImageDescription], ROW_NUMBER() OVER (ORDER BY 
		CASE WHEN @FirstOrderBy =''Featured DESC'' THEN Featured END DESC,
		CASE WHEN @OrderBy =''PublishDate ASC'' THEN PublishDate END,
		CASE WHEN @OrderBy =''PublishDate DESC'' THEN PublishDate END DESC,
		CASE WHEN @OrderBy =''NumberOfViews ASC'' THEN NumberOfViews END,
		CASE WHEN @OrderBy =''NumberOfViews DESC'' THEN NumberOfViews END DESC,
		CASE WHEN @OrderBy =''RatingValue ASC'' THEN RatingValue END,
		CASE WHEN @OrderBy =''RatingValue DESC'' THEN RatingValue END DESC,
		CASE WHEN @OrderBy =''DateAdded ASC'' THEN DateAdded END,
		CASE WHEN @OrderBy =''DateAdded DESC'' THEN DateAdded END DESC,
		CASE WHEN @OrderBy =''ExpireDate ASC'' THEN ExpireDate END,
		CASE WHEN @OrderBy =''ExpireDate DESC'' THEN ExpireDate END DESC,
		CASE WHEN @OrderBy =''LastModified ASC'' THEN LastModified END,
		CASE WHEN @OrderBy =''LastModified DESC'' THEN LastModified END DESC,
		CASE WHEN @OrderBy =''NumberOfComments ASC'' THEN NumberOfComments END,
		CASE WHEN @OrderBy =''NumberOfComments DESC'' THEN NumberOfComments END DESC,
		CASE WHEN @OrderBy =''Title ASC'' THEN Title END,
		CASE WHEN @OrderBy =''Title DESC'' THEN Title END DESC) AS Kulike
		FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS n WHERE ArticleID IN(
			SELECT DISTINCT na.[ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS na
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS cat ON na.ArticleID = cat.ArticleID
				INNER JOIN @UserViewCategoriesWithFilter  AS uvcwf ON uvcwf.CategoryID = cat.CategoryID	
				LEFT OUTER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsTagsItems] AS ti ON na.ArticleID = ti.ArticleID
				LEFT OUTER JOIN @FilterTagsTable AS fbt ON ti.TagID = fbt.TagID 
				LEFT OUTER JOIN @FilterArticlesTable AS fba ON fba.ArticleID = na.ArticleID 	 		
			WHERE na.PortalID=@PortalID
				AND na.HasPermissions = 0
				AND na.HideDefaultLocale = 0
				AND ((@EditPermission = 1) OR ((@UserCanApprove = 1 OR na.Approved=1) AND (na.Active = 1 OR na.UserID=@UserID)))
				AND ((@Featured = 1 AND na.Featured = 1) OR (@Featured = 0))
				AND ((@DateRange = 0 AND (na.PublishDate <= @CurrentDate AND na.ExpireDate >= @CurrentDate)) OR (@DateRange = 1 AND ((PublishDate >= @FromDate AND PublishDate <= @ToDate) AND (ExpireDate >= @CurrentDate))))
				AND ((@FilterAuthorOrAuthors = 1 AND na.UserID IN (SELECT UserID FROM @TempAuthorsIDList)) OR (@FilterAuthorOrAuthors = 0))
				AND ((@FilterByTags = 1 AND fbt.TagID IS NOT NULL) OR (@FilterByTags = 0))
				AND ((@FilterByArticles = 1 AND fba.ArticleID IS NOT NULL) OR (@FilterByArticles = 0))
			UNION ALL
			SELECT DISTINCT na.[ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS na
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsArticleUserPermissions] AS aup ON na.ArticleID = aup.ArticleID
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS cat ON na.ArticleID = cat.ArticleID
				INNER JOIN @FiltredByCategories AS fbc ON fbc.CategoryID = cat.CategoryID			 
				LEFT OUTER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsTagsItems] AS ti ON na.ArticleID = ti.ArticleID
				LEFT OUTER JOIN @FilterTagsTable AS fbt ON ti.TagID = fbt.TagID
				LEFT OUTER JOIN @FilterArticlesTable AS fba ON fba.ArticleID = na.ArticleID 	 		 
			WHERE na.PortalID=@PortalID
				AND na.HasPermissions = 1
				AND na.HideDefaultLocale = 0
				AND ((@EditPermission = 1) OR (((@UserID = -1 AND aup.UserID IS NULL) OR (aup.UserID = @UserID))
					AND aup.Show = 1 AND ((@UserCanApprove = 1) OR (na.Approved=1)) AND (na.Active = 1 OR na.UserID=@UserID)
				))
				AND ((@Featured = 1 AND na.Featured = 1) OR (@Featured = 0))
				AND ((@DateRange = 0 AND (na.PublishDate <= @CurrentDate AND na.ExpireDate >= @CurrentDate)) OR (@DateRange = 1 AND ((PublishDate >= @FromDate AND PublishDate <= @ToDate) AND (ExpireDate >= @CurrentDate))))
				AND ((@FilterAuthorOrAuthors = 1 AND na.UserID IN (SELECT UserID FROM @TempAuthorsIDList)) OR (@FilterAuthorOrAuthors = 0))
				AND ((@FilterByTags = 1 AND fbt.TagID IS NOT NULL) OR (@FilterByTags = 0))
				AND ((@FilterByArticles = 1 AND fba.ArticleID IS NOT NULL) OR (@FilterByArticles = 0))
			UNION
			SELECT DISTINCT na.[ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS na
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsArticleRolePermissions] AS arp ON na.ArticleID = arp.ArticleID
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS cat ON na.ArticleID = cat.ArticleID
				INNER JOIN @FiltredByCategories AS fbc ON fbc.CategoryID = cat.CategoryID		  
				LEFT OUTER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsTagsItems] AS ti ON na.ArticleID = ti.ArticleID
				LEFT OUTER JOIN @FilterTagsTable AS fbt ON ti.TagID = fbt.TagID
				LEFT OUTER JOIN @FilterArticlesTable AS fba ON fba.ArticleID = na.ArticleID	 		  
			WHERE na.PortalID=@PortalID
				AND na.HasPermissions = 1
				AND na.HideDefaultLocale = 0
				AND ((@EditPermission = 1) OR (((@UserCanApprove = 1) OR (na.Approved=1))
					AND (na.Active = 1 OR na.UserID=@UserID) AND arp.Show = 1 AND arp.RoleID IN (SELECT [RoleID] FROM @UserInRoles)
				))
				AND ((@Featured = 1 AND na.Featured = 1) OR (@Featured = 0))
				AND ((@DateRange = 0 AND (na.PublishDate <= @CurrentDate AND na.ExpireDate >= @CurrentDate)) OR (@DateRange = 1 AND ((PublishDate >= @FromDate AND PublishDate <= @ToDate) AND (ExpireDate >= @CurrentDate))))
				AND ((@FilterAuthorOrAuthors = 1 AND na.UserID IN (SELECT UserID FROM @TempAuthorsIDList)) OR (@FilterAuthorOrAuthors = 0))	 
				AND ((@FilterByTags = 1 AND fbt.TagID IS NOT NULL) OR (@FilterByTags = 0))
				AND ((@FilterByArticles = 1 AND fba.ArticleID IS NOT NULL) OR (@FilterByArticles = 0))
			)
		) AS Result WHERE Kulike BETWEEN @ItemsFrom AND @ItemsTo ORDER BY
			CASE WHEN @FirstOrderBy =''Featured DESC'' THEN Featured END DESC,
			CASE WHEN @OrderBy =''PublishDate ASC'' THEN PublishDate END,
			CASE WHEN @OrderBy =''PublishDate DESC'' THEN PublishDate END DESC,
			CASE WHEN @OrderBy =''NumberOfViews ASC'' THEN NumberOfViews END,
			CASE WHEN @OrderBy =''NumberOfViews DESC'' THEN NumberOfViews END DESC,
			CASE WHEN @OrderBy =''RatingValue ASC'' THEN RatingValue END,
			CASE WHEN @OrderBy =''RatingValue DESC'' THEN RatingValue END DESC,
			CASE WHEN @OrderBy =''DateAdded ASC'' THEN DateAdded END,
			CASE WHEN @OrderBy =''DateAdded DESC'' THEN DateAdded END DESC,
			CASE WHEN @OrderBy =''ExpireDate ASC'' THEN ExpireDate END,
			CASE WHEN @OrderBy =''ExpireDate DESC'' THEN ExpireDate END DESC,
			CASE WHEN @OrderBy =''LastModified ASC'' THEN LastModified END,
			CASE WHEN @OrderBy =''LastModified DESC'' THEN LastModified END DESC,
			CASE WHEN @OrderBy =''NumberOfComments ASC'' THEN NumberOfComments END,
			CASE WHEN @OrderBy =''NumberOfComments DESC'' THEN NumberOfComments END DESC,
			CASE WHEN @OrderBy =''Title ASC'' THEN Title END,
			CASE WHEN @OrderBy =''Title DESC'' THEN Title END DESC;
	END
END
ELSE IF @FilterBySocialGroup = 1
BEGIN
	IF @LocaleCode <> ''''
	BEGIN
		WITH FinalArticleIDsSet (ArticleID) AS(
		SELECT TOP (@ItemsTo - @ItemsFrom + 1) ArticleID FROM (SELECT *, ROW_NUMBER() OVER (ORDER BY 
		CASE WHEN @FirstOrderBy =''Featured DESC'' THEN Featured END DESC,
		CASE WHEN @OrderBy =''PublishDate ASC'' THEN PublishDate END,
		CASE WHEN @OrderBy =''PublishDate DESC'' THEN PublishDate END DESC,
		CASE WHEN @OrderBy =''NumberOfViews ASC'' THEN NumberOfViews END,
		CASE WHEN @OrderBy =''NumberOfViews DESC'' THEN NumberOfViews END DESC,
		CASE WHEN @OrderBy =''RatingValue ASC'' THEN RatingValue END,
		CASE WHEN @OrderBy =''RatingValue DESC'' THEN RatingValue END DESC,
		CASE WHEN @OrderBy =''DateAdded ASC'' THEN DateAdded END,
		CASE WHEN @OrderBy =''DateAdded DESC'' THEN DateAdded END DESC,
		CASE WHEN @OrderBy =''ExpireDate ASC'' THEN ExpireDate END,
		CASE WHEN @OrderBy =''ExpireDate DESC'' THEN ExpireDate END DESC,
		CASE WHEN @OrderBy =''LastModified ASC'' THEN LastModified END,
		CASE WHEN @OrderBy =''LastModified DESC'' THEN LastModified END DESC,
		CASE WHEN @OrderBy =''NumberOfComments ASC'' THEN NumberOfComments END,
		CASE WHEN @OrderBy =''NumberOfComments DESC'' THEN NumberOfComments END DESC,
		CASE WHEN @OrderBy =''Title ASC'' THEN Title END,
		CASE WHEN @OrderBy =''Title DESC'' THEN Title END DESC) AS Kulike
		FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS n WHERE ArticleID IN(
			SELECT DISTINCT na.[ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS na
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS cat ON na.ArticleID = cat.ArticleID
				INNER JOIN @UserViewCategoriesWithFilter  AS uvcwf ON uvcwf.CategoryID = cat.CategoryID
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = na.ArticleID
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialGroupItems] AS sgi ON sgi.ArticleID = na.ArticleID AND sgi.RoleID = @FilterByDNNGroupID
				INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId, @UserID, @FilterByDNNGroupID) AS t ON t.seckey = nss.SecurityKey
				LEFT OUTER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsTagsItems] AS ti ON na.ArticleID = ti.ArticleID
  				LEFT OUTER JOIN @FilterTagsTable AS fbt ON ti.TagID = fbt.TagID
  				LEFT OUTER JOIN @FilterArticlesTable AS fba ON fba.ArticleID = na.ArticleID
  				LEFT OUTER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsContentLocalization] AS ncl ON ncl.ArticleID = na.ArticleID 		  	
			WHERE na.PortalID=@PortalID
				AND na.HasPermissions = 0
				AND ((@EditPermission = 1) OR ((@UserCanApprove = 1 OR na.Approved=1) AND (na.Active = 1 OR na.UserID=@UserID)))
				AND ((@Featured = 1 AND na.Featured = 1) OR (@Featured = 0))
				AND ((@DateRange = 0 AND (na.PublishDate <= @CurrentDate AND na.ExpireDate >= @CurrentDate)) OR (@DateRange = 1 AND ((PublishDate >= @FromDate AND PublishDate <= @ToDate) AND (ExpireDate >= @CurrentDate))))
				AND ((@FilterAuthorOrAuthors = 1 AND na.UserID = @FilterByAuthor) OR (@FilterAuthorOrAuthors = 0))
				AND ((@FilterByTags = 1 AND fbt.TagID IS NOT NULL) OR (@FilterByTags = 0))
				AND ((@FilterByArticles = 1 AND fba.ArticleID IS NOT NULL) OR (@FilterByArticles = 0))
				AND ((@HideUnlocalizedItems = 1 AND ncl.ArticleID IS NOT NULL AND ncl.LocaleCode = @LocaleCode) OR (@HideUnlocalizedItems = 0))
			UNION ALL
			SELECT DISTINCT na.[ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS na
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsArticleUserPermissions] AS aup ON na.ArticleID = aup.ArticleID
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS cat ON na.ArticleID = cat.ArticleID
				INNER JOIN @FiltredByCategories AS fbc ON fbc.CategoryID = cat.CategoryID
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = na.ArticleID
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialGroupItems] AS sgi ON sgi.ArticleID = na.ArticleID AND sgi.RoleID = @FilterByDNNGroupID
				INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserID, @FilterByDNNGroupID) AS t ON t.seckey = nss.SecurityKey
				LEFT OUTER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsTagsItems] AS ti ON na.ArticleID = ti.ArticleID
				LEFT OUTER JOIN @FilterTagsTable AS fbt ON ti.TagID = fbt.TagID
				LEFT OUTER JOIN @FilterArticlesTable AS fba ON fba.ArticleID = na.ArticleID
				LEFT OUTER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsContentLocalization] AS ncl ON ncl.ArticleID = na.ArticleID	 		  		
			WHERE na.PortalID=@PortalID
				AND na.HasPermissions = 1
				AND ((@EditPermission = 1) OR (((@UserID = -1 AND aup.UserID IS NULL) OR (aup.UserID = @UserID))
					AND aup.Show = 1 AND ((@UserCanApprove = 1) OR (na.Approved=1)) AND (na.Active = 1 OR na.UserID=@UserID)
				))
				AND ((@Featured = 1 AND na.Featured = 1) OR (@Featured = 0))
				AND ((@DateRange = 0 AND (na.PublishDate <= @CurrentDate AND na.ExpireDate >= @CurrentDate)) OR (@DateRange = 1 AND ((PublishDate >= @FromDate AND PublishDate <= @ToDate) AND (ExpireDate >= @CurrentDate))))
				AND ((@FilterAuthorOrAuthors = 1 AND na.UserID = @FilterByAuthor) OR (@FilterAuthorOrAuthors = 0))
				AND ((@FilterByTags = 1 AND fbt.TagID IS NOT NULL) OR (@FilterByTags = 0))
				AND ((@FilterByArticles = 1 AND fba.ArticleID IS NOT NULL) OR (@FilterByArticles = 0))
				AND ((@HideUnlocalizedItems = 1 AND ncl.ArticleID IS NOT NULL AND ncl.LocaleCode = @LocaleCode) OR (@HideUnlocalizedItems = 0))
			UNION
			SELECT DISTINCT na.[ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS na
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsArticleRolePermissions] AS arp ON na.ArticleID = arp.ArticleID
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS cat ON na.ArticleID = cat.ArticleID
				INNER JOIN @FiltredByCategories AS fbc ON fbc.CategoryID = cat.CategoryID
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = na.ArticleID
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialGroupItems] AS sgi ON sgi.ArticleID = na.ArticleID AND sgi.RoleID = @FilterByDNNGroupID
				INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserID, @FilterByDNNGroupID) AS t ON t.seckey = nss.SecurityKey
				LEFT OUTER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsTagsItems] AS ti ON na.ArticleID = ti.ArticleID
				LEFT OUTER JOIN @FilterTagsTable AS fbt ON ti.TagID = fbt.TagID 	
				LEFT OUTER JOIN @FilterArticlesTable AS fba ON fba.ArticleID = na.ArticleID
				LEFT OUTER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsContentLocalization] AS ncl ON ncl.ArticleID = na.ArticleID	 		  	
			WHERE na.PortalID=@PortalID
				AND na.HasPermissions = 1
				AND ((@EditPermission = 1) OR (((@UserCanApprove = 1) OR (na.Approved=1))
					AND (na.Active = 1 OR na.UserID=@UserID) AND arp.Show = 1 AND arp.RoleID IN (SELECT [RoleID] FROM @UserInRoles)
				))
				AND ((@Featured = 1 AND na.Featured = 1) OR (@Featured = 0))
				AND((@DateRange = 0 AND (na.PublishDate <= @CurrentDate AND na.ExpireDate >= @CurrentDate)) OR (@DateRange = 1 AND ((PublishDate >= @FromDate AND PublishDate <= @ToDate) AND (ExpireDate >= @CurrentDate))))
				AND((@FilterAuthorOrAuthors = 1 AND na.UserID = @FilterByAuthor) OR (@FilterAuthorOrAuthors = 0)) 
				AND ((@FilterByTags = 1 AND fbt.TagID IS NOT NULL) OR (@FilterByTags = 0))
				AND ((@FilterByArticles = 1 AND fba.ArticleID IS NOT NULL) OR (@FilterByArticles = 0))
				AND ((@HideUnlocalizedItems = 1 AND ncl.ArticleID IS NOT NULL AND ncl.LocaleCode = @LocaleCode) OR (@HideUnlocalizedItems = 0))
			)
		) AS Result WHERE Kulike BETWEEN @ItemsFrom AND @ItemsTo ORDER BY
			CASE WHEN @FirstOrderBy =''Featured DESC'' THEN Featured END DESC,
			CASE WHEN @OrderBy =''PublishDate ASC'' THEN PublishDate END,
			CASE WHEN @OrderBy =''PublishDate DESC'' THEN PublishDate END DESC,
			CASE WHEN @OrderBy =''NumberOfViews ASC'' THEN NumberOfViews END,
			CASE WHEN @OrderBy =''NumberOfViews DESC'' THEN NumberOfViews END DESC,
			CASE WHEN @OrderBy =''RatingValue ASC'' THEN RatingValue END,
			CASE WHEN @OrderBy =''RatingValue DESC'' THEN RatingValue END DESC,
			CASE WHEN @OrderBy =''DateAdded ASC'' THEN DateAdded END,
			CASE WHEN @OrderBy =''DateAdded DESC'' THEN DateAdded END DESC,
			CASE WHEN @OrderBy =''ExpireDate ASC'' THEN ExpireDate END,
			CASE WHEN @OrderBy =''ExpireDate DESC'' THEN ExpireDate END DESC,
			CASE WHEN @OrderBy =''LastModified ASC'' THEN LastModified END,
			CASE WHEN @OrderBy =''LastModified DESC'' THEN LastModified END DESC,
			CASE WHEN @OrderBy =''NumberOfComments ASC'' THEN NumberOfComments END,
			CASE WHEN @OrderBy =''NumberOfComments DESC'' THEN NumberOfComments END DESC,
			CASE WHEN @OrderBy =''Title ASC'' THEN Title END,
			CASE WHEN @OrderBy =''Title DESC'' THEN Title END DESC
		),
		FinalLocalizedArticleIDsSet (ArticleID,Title,SubTitle,Summary,Article,DetailTypeData,TitleLink,MetaDecription,MetaKeywords,MainImageTitle,MainImageDescription) AS(
			SELECT ArticleID,Title,SubTitle,Summary,Article,DetailTypeData,clTitleLink AS TitleLink ,MetaDecription,MetaKeywords,MainImageTitle,MainImageDescription FROM {databaseOwner}[{objectQualifier}EasyDNNNewsContentLocalization] WHERE ArticleID IN (SELECT ArticleID FROM FinalArticleIDsSet) AND LocaleCode = @LocaleCode
		)
		SELECT *,
			CASE @EditPermission 
				WHEN 0 THEN 0
				WHEN 1 THEN 1
				WHEN 2 THEN
				CASE @EditOnlyAsOwner
					WHEN 0 THEN			
						CASE WHEN EXISTS(SELECT CategoryID FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS c WHERE c.ArticleID = Result.ArticleID AND c.CategoryID IN (SELECT CategoryID FROM @UserEditCategories))
							THEN 1
							ELSE
								CASE WHEN EXISTS(SELECT [ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsArticleRolePermissions] AS arp WHERE arp.ArticleID = Result.ArticleID AND arp.Edit = 1 AND arp.RoleID IN(SELECT RoleID FROM @UserInRoles))
								THEN 1
								ELSE
									CASE WHEN EXISTS (SELECT [ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsArticleUserPermissions] AS aup WHERE aup.ArticleID = Result.ArticleID AND aup.Edit = 1 AND aup.UserID = @UserID)
										THEN 1
										ELSE 0
									END
								END
						END  			
					WHEN 1 THEN
						CASE WHEN EXISTS(SELECT CategoryID FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS c WHERE Result.UserID = @UserID AND c.ArticleID = Result.ArticleID AND c.CategoryID IN (SELECT CategoryID FROM @UserEditCategories))
							THEN 1
							ELSE
								CASE WHEN EXISTS(SELECT [ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsArticleRolePermissions] AS arp WHERE arp.ArticleID = Result.ArticleID AND arp.Edit = 1 AND arp.RoleID IN(SELECT RoleID FROM @UserInRoles))
								THEN 1
								ELSE
									CASE WHEN EXISTS (SELECT [ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsArticleUserPermissions] AS aup WHERE aup.ArticleID = Result.ArticleID AND aup.Edit = 1 AND aup.UserID = @UserID)
										THEN 1
										ELSE 0
									END
								END 
						END
				END
				WHEN 3 THEN
					CASE WHEN EXISTS(SELECT [ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsArticleRolePermissions] AS arp WHERE arp.ArticleID = Result.ArticleID AND arp.Edit = 1 AND arp.RoleID IN(SELECT RoleID FROM @UserInRoles))
						THEN 1
						ELSE
						CASE WHEN EXISTS (SELECT [ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsArticleUserPermissions] AS aup WHERE aup.ArticleID = Result.ArticleID AND aup.Edit = 1 AND aup.UserID = @UserID)
							THEN 1
							ELSE 0
							END
						END 
			END AS ''CanEdit'',
			(SELECT cat.ID, cat.Name, cat.CategoryURL FROM @LocalizedCategories AS Cat INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS c ON c.CategoryID = Cat.ID WHERE c.ArticleID = Result.ArticleID ORDER BY Position FOR XML AUTO, ROOT(''root'')) AS ''CatToShow'',
			 CASE Result.Active
				WHEN 1 THEN 0
				WHEN 0 THEN 1
			 END AS ''Published'',
			 CASE @UserCanApprove
				WHEN 0 THEN 0
				WHEN 1 THEN
					CASE Result.Approved
					 WHEN 1 THEN 0
					 WHEN 0 THEN
						 CASE Result.Active
							WHEN 1 THEN 1
							WHEN 0 THEN 0
						END
					END
			 END AS ''Approve''
			 FROM ( 
				 SELECT n.[ArticleID],n.[UserID],n.[Title],n.[SubTitle],n.[Summary],n.[Article],n.[ArticleImage],n.[DateAdded],n.[LastModified],n.[PublishDate]
					  ,n.[ExpireDate],n.[Approved],n.[Featured],n.[NumberOfViews],n.[RatingValue],n.[RatingCount],n.[AllowComments],n.[Active]
					  ,n.[TitleLink],n.[DetailType],n.[DetailTypeData],n.[DetailsTemplate],n.[DetailsTheme],n.[GalleryPosition],n.[GalleryDisplayType]
					  ,n.[ShowMainImage],n.[ShowMainImageFront],n.[CommentsTheme],n.[ArticleImageFolder],n.[NumberOfComments]
					  ,n.[ArticleImageSet],n.[MetaDecription],n.[MetaKeywords],n.[DisplayStyle],n.[DetailTarget]
					  ,n.[ArticleFromRSS],n.[HasPermissions],n.[EventArticle],n.[DetailMediaType],n.[DetailMediaData],n.[AuthorAliasName],n.[ShowGallery],n.[ArticleGalleryID],n.[MainImageTitle],n.[MainImageDescription]
					   FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS n WHERE ArticleID IN (SELECT ArticleID FROM FinalArticleIDsSet WHERE ArticleID NOT IN (SELECT ArticleID FROM FinalLocalizedArticleIDsSet))
				 UNION ALL
				 SELECT n.[ArticleID],n.[UserID],fla.[Title],fla.[SubTitle],fla.[Summary],fla.[Article],n.[ArticleImage],n.[DateAdded],n.[LastModified],n.[PublishDate]
					  ,n.[ExpireDate],n.[Approved],n.[Featured],n.[NumberOfViews],n.[RatingValue],n.[RatingCount],n.[AllowComments],n.[Active]
					  ,fla.[TitleLink],n.[DetailType],fla.[DetailTypeData],n.[DetailsTemplate],n.[DetailsTheme],n.[GalleryPosition],n.[GalleryDisplayType]
					  ,n.[ShowMainImage],n.[ShowMainImageFront],n.[CommentsTheme],n.[ArticleImageFolder],n.[NumberOfComments]
					  ,n.[ArticleImageSet],fla.[MetaDecription],fla.[MetaKeywords],n.[DisplayStyle],n.[DetailTarget]
					  ,n.[ArticleFromRSS],n.[HasPermissions],n.[EventArticle],n.[DetailMediaType],n.[DetailMediaData],n.[AuthorAliasName],n.[ShowGallery],n.[ArticleGalleryID],fla.[MainImageTitle],fla.[MainImageDescription]
				  FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS n INNER JOIN FinalLocalizedArticleIDsSet AS fla ON fla.ArticleID = n.ArticleID) As Result
			ORDER BY
				CASE WHEN @FirstOrderBy =''Featured DESC'' THEN Featured END DESC,
				CASE WHEN @OrderBy =''PublishDate ASC'' THEN PublishDate END,
				CASE WHEN @OrderBy =''PublishDate DESC'' THEN PublishDate END DESC,
				CASE WHEN @OrderBy =''NumberOfViews ASC'' THEN NumberOfViews END,
				CASE WHEN @OrderBy =''NumberOfViews DESC'' THEN NumberOfViews END DESC,
				CASE WHEN @OrderBy =''RatingValue ASC'' THEN RatingValue END,
				CASE WHEN @OrderBy =''RatingValue DESC'' THEN RatingValue END DESC,
				CASE WHEN @OrderBy =''DateAdded ASC'' THEN DateAdded END,
				CASE WHEN @OrderBy =''DateAdded DESC'' THEN DateAdded END DESC,
				CASE WHEN @OrderBy =''ExpireDate ASC'' THEN ExpireDate END,
				CASE WHEN @OrderBy =''ExpireDate DESC'' THEN ExpireDate END DESC,
				CASE WHEN @OrderBy =''LastModified ASC'' THEN LastModified END,
				CASE WHEN @OrderBy =''LastModified DESC'' THEN LastModified END DESC,
				CASE WHEN @OrderBy =''NumberOfComments ASC'' THEN NumberOfComments END,
				CASE WHEN @OrderBy =''NumberOfComments DESC'' THEN NumberOfComments END DESC,
				CASE WHEN @OrderBy =''Title ASC'' THEN Title END,
				CASE WHEN @OrderBy =''Title DESC'' THEN Title END DESC;
	END
	ELSE
	BEGIN
		SELECT *,
		CASE @EditPermission 
			WHEN 0 THEN 0
			WHEN 1 THEN 1
			WHEN 2 THEN
			CASE @EditOnlyAsOwner
				WHEN 0 THEN			
					CASE WHEN EXISTS(SELECT CategoryID FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS c WHERE c.ArticleID = Result.ArticleID AND c.CategoryID IN (SELECT CategoryID FROM @UserEditCategories))
						THEN 1
						ELSE
							CASE WHEN EXISTS(SELECT [ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsArticleRolePermissions] AS arp WHERE arp.ArticleID = Result.ArticleID AND arp.Edit = 1 AND arp.RoleID IN(SELECT RoleID FROM @UserInRoles))
							THEN 1
							ELSE
								CASE WHEN EXISTS (SELECT [ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsArticleUserPermissions] AS aup WHERE aup.ArticleID = Result.ArticleID AND aup.Edit = 1 AND aup.UserID = @UserID)
									THEN 1
									ELSE 0
								END
							END
					END  			
				WHEN 1 THEN
					CASE WHEN EXISTS(SELECT CategoryID FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS c WHERE Result.UserID = @UserID AND c.ArticleID = Result.ArticleID AND c.CategoryID IN (SELECT CategoryID FROM @UserEditCategories))
						THEN 1
						ELSE
							CASE WHEN EXISTS(SELECT [ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsArticleRolePermissions] AS arp WHERE arp.ArticleID = Result.ArticleID AND arp.Edit = 1 AND arp.RoleID IN(SELECT RoleID FROM @UserInRoles))
							THEN 1
							ELSE
								CASE WHEN EXISTS (SELECT [ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsArticleUserPermissions] AS aup WHERE aup.ArticleID = Result.ArticleID AND aup.Edit = 1 AND aup.UserID = @UserID)
									THEN 1
									ELSE 0
								END
							END 
					END
			END
			WHEN 3 THEN
				CASE WHEN EXISTS(SELECT [ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsArticleRolePermissions] AS arp WHERE arp.ArticleID = Result.ArticleID AND arp.Edit = 1 AND arp.RoleID IN(SELECT RoleID FROM @UserInRoles))
					THEN 1
					ELSE
					CASE WHEN EXISTS (SELECT [ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsArticleUserPermissions] AS aup WHERE aup.ArticleID = Result.ArticleID AND aup.Edit = 1 AND aup.UserID = @UserID)
						THEN 1
						ELSE 0
						END
					END 
		END AS ''CanEdit'',
		(SELECT cat.ID, cat.Name, cat.CategoryURL FROM @LocalizedCategories AS Cat INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS c ON c.CategoryID = Cat.ID WHERE c.ArticleID = Result.ArticleID ORDER BY Position FOR XML AUTO, ROOT(''root'')) AS ''CatToShow'',
		 CASE Result.Active
			WHEN 1 THEN 0
			WHEN 0 THEN 1
		 END AS ''Published'',
		 CASE @UserCanApprove
			WHEN 0 THEN 0
			WHEN 1 THEN
				CASE Result.Approved
				 WHEN 1 THEN 0
				 WHEN 0 THEN
					 CASE Result.Active
						WHEN 1 THEN 1
						WHEN 0 THEN 0
					END
				END
		 END AS ''Approve''
		 FROM (SELECT
		  n.[ArticleID],n.[UserID],n.[Title],n.[SubTitle],n.[Summary],n.[Article],n.[ArticleImage],n.[DateAdded],n.[LastModified],n.[PublishDate]
		  ,n.[ExpireDate],n.[Approved],n.[Featured],n.[NumberOfViews],n.[RatingValue],n.[RatingCount],n.[AllowComments],n.[Active]
		  ,n.[TitleLink],n.[DetailType],n.[DetailTypeData],n.[DetailsTemplate],n.[DetailsTheme],n.[GalleryPosition],n.[GalleryDisplayType]
		  ,n.[ShowMainImage],n.[ShowMainImageFront],n.[CommentsTheme],n.[ArticleImageFolder],n.[NumberOfComments]
		  ,n.[ArticleImageSet],n.[MetaDecription],n.[MetaKeywords],n.[DisplayStyle],n.[DetailTarget]
		  ,n.[ArticleFromRSS],n.[HasPermissions],n.[EventArticle],n.[DetailMediaType],n.[DetailMediaData],n.[AuthorAliasName],n.[ShowGallery],n.[ArticleGalleryID],n.[MainImageTitle],n.[MainImageDescription], ROW_NUMBER() OVER (ORDER BY 
		 CASE WHEN @FirstOrderBy =''Featured DESC'' THEN Featured END DESC,
		 CASE WHEN @OrderBy =''PublishDate ASC'' THEN PublishDate END,
		 CASE WHEN @OrderBy =''PublishDate DESC'' THEN PublishDate END DESC,
		 CASE WHEN @OrderBy =''NumberOfViews ASC'' THEN NumberOfViews END,
		 CASE WHEN @OrderBy =''NumberOfViews DESC'' THEN NumberOfViews END DESC,
		 CASE WHEN @OrderBy =''RatingValue ASC'' THEN RatingValue END,
		 CASE WHEN @OrderBy =''RatingValue DESC'' THEN RatingValue END DESC,
		 CASE WHEN @OrderBy =''DateAdded ASC'' THEN DateAdded END,
		 CASE WHEN @OrderBy =''DateAdded DESC'' THEN DateAdded END DESC,
		 CASE WHEN @OrderBy =''ExpireDate ASC'' THEN ExpireDate END,
		 CASE WHEN @OrderBy =''ExpireDate DESC'' THEN ExpireDate END DESC,
		 CASE WHEN @OrderBy =''LastModified ASC'' THEN LastModified END,
		 CASE WHEN @OrderBy =''LastModified DESC'' THEN LastModified END DESC,
		 CASE WHEN @OrderBy =''NumberOfComments ASC'' THEN NumberOfComments END,
		 CASE WHEN @OrderBy =''NumberOfComments DESC'' THEN NumberOfComments END DESC,
		 CASE WHEN @OrderBy =''Title ASC'' THEN Title END,
		 CASE WHEN @OrderBy =''Title DESC'' THEN Title END DESC) AS Kulike
		 FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS n WHERE ArticleID IN(
			SELECT DISTINCT na.[ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS na
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS cat ON na.ArticleID = cat.ArticleID
				INNER JOIN @UserViewCategoriesWithFilter  AS uvcwf ON uvcwf.CategoryID = cat.CategoryID
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = na.ArticleID
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialGroupItems] AS sgi ON sgi.ArticleID = na.ArticleID AND sgi.RoleID = @FilterByDNNGroupID
				INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId, @UserID, @FilterByDNNGroupID) AS t ON t.seckey = nss.SecurityKey
				LEFT OUTER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsTagsItems] AS ti ON na.ArticleID = ti.ArticleID
  				LEFT OUTER JOIN @FilterTagsTable AS fbt ON ti.TagID = fbt.TagID
  				LEFT OUTER JOIN @FilterArticlesTable AS fba ON fba.ArticleID = na.ArticleID	 		  	 	
			WHERE na.PortalID=@PortalID
				AND na.HasPermissions = 0
				AND na.HideDefaultLocale = 0
				AND ((@EditPermission = 1) OR ((@UserCanApprove = 1 OR na.Approved=1) AND (na.Active = 1 OR na.UserID=@UserID)))
				AND ((@Featured = 1 AND na.Featured = 1) OR (@Featured = 0))
				AND ((@DateRange = 0 AND (na.PublishDate <= @CurrentDate AND na.ExpireDate >= @CurrentDate)) OR (@DateRange = 1 AND ((PublishDate >= @FromDate AND PublishDate <= @ToDate) AND (ExpireDate >= @CurrentDate))))
				AND ((@FilterAuthorOrAuthors = 1 AND na.UserID = @FilterByAuthor) OR (@FilterAuthorOrAuthors = 0))
				AND ((@FilterByTags = 1 AND fbt.TagID IS NOT NULL) OR (@FilterByTags = 0))
				AND ((@FilterByArticles = 1 AND fba.ArticleID IS NOT NULL) OR (@FilterByArticles = 0))
			UNION ALL
			SELECT DISTINCT na.[ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS na
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsArticleUserPermissions] AS aup ON na.ArticleID = aup.ArticleID
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS cat ON na.ArticleID = cat.ArticleID
				INNER JOIN @FiltredByCategories AS fbc ON fbc.CategoryID = cat.CategoryID
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = na.ArticleID
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialGroupItems] AS sgi ON sgi.ArticleID = na.ArticleID AND sgi.RoleID = @FilterByDNNGroupID
				INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserID, @FilterByDNNGroupID) AS t ON t.seckey = nss.SecurityKey
				LEFT OUTER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsTagsItems] AS ti ON na.ArticleID = ti.ArticleID
				LEFT OUTER JOIN @FilterTagsTable AS fbt ON ti.TagID = fbt.TagID
				LEFT OUTER JOIN @FilterArticlesTable AS fba ON fba.ArticleID = na.ArticleID	 		  	 	 	
			WHERE na.PortalID=@PortalID
				AND na.HasPermissions = 1
				AND na.HideDefaultLocale = 0
				AND ((@EditPermission = 1) OR (((@UserID = -1 AND aup.UserID IS NULL) OR (aup.UserID = @UserID))
					AND aup.Show = 1 AND ((@UserCanApprove = 1) OR (na.Approved=1)) AND (na.Active = 1 OR na.UserID=@UserID)
				))
				AND ((@Featured = 1 AND na.Featured = 1) OR (@Featured = 0))
				AND ((@DateRange = 0 AND (na.PublishDate <= @CurrentDate AND na.ExpireDate >= @CurrentDate)) OR (@DateRange = 1 AND ((PublishDate >= @FromDate AND PublishDate <= @ToDate) AND (ExpireDate >= @CurrentDate))))
				AND ((@FilterAuthorOrAuthors = 1 AND na.UserID = @FilterByAuthor) OR (@FilterAuthorOrAuthors = 0))
				AND ((@FilterByTags = 1 AND fbt.TagID IS NOT NULL) OR (@FilterByTags = 0))
				AND ((@FilterByArticles = 1 AND fba.ArticleID IS NOT NULL) OR (@FilterByArticles = 0))
			UNION
			SELECT DISTINCT na.[ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS na
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsArticleRolePermissions] AS arp ON na.ArticleID = arp.ArticleID
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS cat ON na.ArticleID = cat.ArticleID
				INNER JOIN @FiltredByCategories AS fbc ON fbc.CategoryID = cat.CategoryID
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = na.ArticleID
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialGroupItems] AS sgi ON sgi.ArticleID = na.ArticleID AND sgi.RoleID = @FilterByDNNGroupID
				INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserID, @FilterByDNNGroupID) AS t ON t.seckey = nss.SecurityKey
				LEFT OUTER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsTagsItems] AS ti ON na.ArticleID = ti.ArticleID
				LEFT OUTER JOIN @FilterTagsTable AS fbt ON ti.TagID = fbt.TagID
				LEFT OUTER JOIN @FilterArticlesTable AS fba ON fba.ArticleID = na.ArticleID	 		  	 	 	 	
			WHERE na.PortalID=@PortalID
				AND na.HasPermissions = 1
				AND na.HideDefaultLocale = 0
				AND ((@EditPermission = 1) OR (((@UserCanApprove = 1) OR (na.Approved=1))
					AND (na.Active = 1 OR na.UserID=@UserID) AND arp.Show = 1 AND arp.RoleID IN (SELECT [RoleID] FROM @UserInRoles)
					))
				AND ((@Featured = 1 AND na.Featured = 1) OR (@Featured = 0))
				AND ((@DateRange = 0 AND (na.PublishDate <= @CurrentDate AND na.ExpireDate >= @CurrentDate)) OR (@DateRange = 1 AND ((PublishDate >= @FromDate AND PublishDate <= @ToDate) AND (ExpireDate >= @CurrentDate))))
				AND ((@FilterAuthorOrAuthors = 1 AND na.UserID = @FilterByAuthor) OR (@FilterAuthorOrAuthors = 0)) 
				AND ((@FilterByTags = 1 AND fbt.TagID IS NOT NULL) OR (@FilterByTags = 0))
				AND ((@FilterByArticles = 1 AND fba.ArticleID IS NOT NULL) OR (@FilterByArticles = 0))
			)
		) AS Result WHERE Kulike BETWEEN @ItemsFrom AND @ItemsTo ORDER BY
			CASE WHEN @FirstOrderBy =''Featured DESC'' THEN Featured END DESC,
			CASE WHEN @OrderBy =''PublishDate ASC'' THEN PublishDate END,
			CASE WHEN @OrderBy =''PublishDate DESC'' THEN PublishDate END DESC,
			CASE WHEN @OrderBy =''NumberOfViews ASC'' THEN NumberOfViews END,
			CASE WHEN @OrderBy =''NumberOfViews DESC'' THEN NumberOfViews END DESC,
			CASE WHEN @OrderBy =''RatingValue ASC'' THEN RatingValue END,
			CASE WHEN @OrderBy =''RatingValue DESC'' THEN RatingValue END DESC,
			CASE WHEN @OrderBy =''DateAdded ASC'' THEN DateAdded END,
			CASE WHEN @OrderBy =''DateAdded DESC'' THEN DateAdded END DESC,
			CASE WHEN @OrderBy =''ExpireDate ASC'' THEN ExpireDate END,
			CASE WHEN @OrderBy =''ExpireDate DESC'' THEN ExpireDate END DESC,
			CASE WHEN @OrderBy =''LastModified ASC'' THEN LastModified END,
			CASE WHEN @OrderBy =''LastModified DESC'' THEN LastModified END DESC,
			CASE WHEN @OrderBy =''NumberOfComments ASC'' THEN NumberOfComments END,
			CASE WHEN @OrderBy =''NumberOfComments DESC'' THEN NumberOfComments END DESC,
			CASE WHEN @OrderBy =''Title ASC'' THEN Title END,
			CASE WHEN @OrderBy =''Title DESC'' THEN Title END DESC;
	END
END
ELSE IF @FilterByDNNUserID <> 0
BEGIN
	IF @LocaleCode <> ''''
	BEGIN
		WITH FinalArticleIDsSet (ArticleID) AS(
		SELECT TOP (@ItemsTo - @ItemsFrom + 1) ArticleID FROM (SELECT *, ROW_NUMBER() OVER (ORDER BY
		CASE WHEN @FirstOrderBy =''Featured DESC'' THEN Featured END DESC, 
		CASE WHEN @OrderBy =''PublishDate ASC'' THEN PublishDate END,
		CASE WHEN @OrderBy =''PublishDate DESC'' THEN PublishDate END DESC,
		CASE WHEN @OrderBy =''NumberOfViews ASC'' THEN NumberOfViews END,
		CASE WHEN @OrderBy =''NumberOfViews DESC'' THEN NumberOfViews END DESC,
		CASE WHEN @OrderBy =''RatingValue ASC'' THEN RatingValue END,
		CASE WHEN @OrderBy =''RatingValue DESC'' THEN RatingValue END DESC,
		CASE WHEN @OrderBy =''DateAdded ASC'' THEN DateAdded END,
		CASE WHEN @OrderBy =''DateAdded DESC'' THEN DateAdded END DESC,
		CASE WHEN @OrderBy =''ExpireDate ASC'' THEN ExpireDate END,
		CASE WHEN @OrderBy =''ExpireDate DESC'' THEN ExpireDate END DESC,
		CASE WHEN @OrderBy =''LastModified ASC'' THEN LastModified END,
		CASE WHEN @OrderBy =''LastModified DESC'' THEN LastModified END DESC,
		CASE WHEN @OrderBy =''NumberOfComments ASC'' THEN NumberOfComments END,
		CASE WHEN @OrderBy =''NumberOfComments DESC'' THEN NumberOfComments END DESC,
		CASE WHEN @OrderBy =''Title ASC'' THEN Title END,
		CASE WHEN @OrderBy =''Title DESC'' THEN Title END DESC) AS Kulike
		FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS n WHERE ArticleID IN(
			SELECT DISTINCT na.[ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS na
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS cat ON na.ArticleID = cat.ArticleID
				INNER JOIN @UserViewCategoriesWithFilter  AS uvcwf ON uvcwf.CategoryID = cat.CategoryID
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = na.ArticleID
				INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserID, @FilterByDNNGroupID) AS t ON t.seckey = nss.SecurityKey
				LEFT OUTER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsTagsItems] AS ti ON na.ArticleID = ti.ArticleID
				LEFT OUTER JOIN @FilterTagsTable AS fbt ON ti.TagID = fbt.TagID
				LEFT OUTER JOIN @FilterArticlesTable AS fba ON fba.ArticleID = na.ArticleID	
				LEFT OUTER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsContentLocalization] AS ncl ON ncl.ArticleID = na.ArticleID     		  	 	 	 	 	
			WHERE na.PortalID=@PortalID
				AND na.HasPermissions = 0
				AND na.UserID = @FilterByDNNUserID
				AND ((@EditPermission = 1) OR ((@UserCanApprove = 1 OR na.Approved=1)AND (na.Active = 1 OR na.UserID=@UserID)))
				AND ((@Featured = 1 AND na.Featured = 1) OR (@Featured = 0))
				AND ((@DateRange = 0 AND (na.PublishDate <= @CurrentDate AND na.ExpireDate >= @CurrentDate)) OR (@DateRange = 1 AND ((PublishDate >= @FromDate AND PublishDate <= @ToDate) AND (ExpireDate >= @CurrentDate))))
				AND ((@FilterByTags = 1 AND fbt.TagID IS NOT NULL) OR (@FilterByTags = 0))
				AND ((@FilterByArticles = 1 AND fba.ArticleID IS NOT NULL) OR (@FilterByArticles = 0))
				AND ((@HideUnlocalizedItems = 1 AND ncl.ArticleID IS NOT NULL AND ncl.LocaleCode = @LocaleCode) OR (@HideUnlocalizedItems = 0))
			UNION ALL
			SELECT DISTINCT na.[ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS na
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsArticleUserPermissions] AS aup ON na.ArticleID = aup.ArticleID
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS cat ON na.ArticleID = cat.ArticleID
				INNER JOIN @FiltredByCategories AS fbc ON fbc.CategoryID = cat.CategoryID
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = na.ArticleID
				INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserID, @FilterByDNNGroupID) AS t ON t.seckey = nss.SecurityKey
				LEFT OUTER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsTagsItems] AS ti ON na.ArticleID = ti.ArticleID
				LEFT OUTER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsFilterByTagID] AS fbt ON ti.TagID = fbt.TagID
				LEFT OUTER JOIN @FilterArticlesTable AS fba ON fba.ArticleID = na.ArticleID
				LEFT OUTER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsContentLocalization] AS ncl ON ncl.ArticleID = na.ArticleID	 		  	 	 	 		
			WHERE na.PortalID=@PortalID
				AND na.HasPermissions = 1
				AND na.UserID = @FilterByDNNUserID
				AND ((@EditPermission = 1) OR (((@UserID = -1 AND aup.UserID IS NULL) OR (aup.UserID = @UserID))
					AND aup.Show = 1 AND ((@UserCanApprove = 1) OR (na.Approved=1)) AND (na.Active = 1 OR na.UserID=@UserID)
				))
				AND ((@Featured = 1 AND na.Featured = 1) OR (@Featured = 0))
				AND ((@DateRange = 0 AND (na.PublishDate <= @CurrentDate AND na.ExpireDate >= @CurrentDate)) OR (@DateRange = 1 AND ((PublishDate >= @FromDate AND PublishDate <= @ToDate) AND (ExpireDate >= @CurrentDate))))
				AND ((@FilterByTags = 1 AND fbt.TagID IS NOT NULL) OR (@FilterByTags = 0))
				AND ((@FilterByArticles = 1 AND fba.ArticleID IS NOT NULL) OR (@FilterByArticles = 0))
				AND ((@HideUnlocalizedItems = 1 AND ncl.ArticleID IS NOT NULL AND ncl.LocaleCode = @LocaleCode) OR (@HideUnlocalizedItems = 0))
			UNION
			SELECT DISTINCT na.[ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS na
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsArticleRolePermissions] AS arp ON na.ArticleID = arp.ArticleID
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS cat ON na.ArticleID = cat.ArticleID
				INNER JOIN @FiltredByCategories AS fbc ON fbc.CategoryID = cat.CategoryID
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = na.ArticleID
				INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserID, @FilterByDNNGroupID) AS t ON t.seckey = nss.SecurityKey
				LEFT OUTER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsTagsItems] AS ti ON na.ArticleID = ti.ArticleID
				LEFT OUTER JOIN @FilterTagsTable AS fbt ON ti.TagID = fbt.TagID
				LEFT OUTER JOIN @FilterArticlesTable AS fba ON fba.ArticleID = na.ArticleID
				LEFT OUTER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsContentLocalization] AS ncl ON ncl.ArticleID = na.ArticleID	 		  	 	 	 		 	
			WHERE na.PortalID=@PortalID
				AND na.HasPermissions = 1
				AND na.UserID = @FilterByDNNUserID 
				AND ((@EditPermission = 1) OR (((@UserCanApprove = 1) OR (na.Approved=1))
					AND (na.Active = 1 OR na.UserID=@UserID) AND arp.Show = 1 AND arp.RoleID IN (SELECT [RoleID] FROM @UserInRoles)
				))
				AND ((@Featured = 1 AND na.Featured = 1) OR (@Featured = 0))
				AND ((@DateRange = 0 AND (na.PublishDate <= @CurrentDate AND na.ExpireDate >= @CurrentDate)) OR (@DateRange = 1 AND ((PublishDate >= @FromDate AND PublishDate <= @ToDate) AND (ExpireDate >= @CurrentDate))))
				AND ((@FilterByTags = 1 AND fbt.TagID IS NOT NULL) OR (@FilterByTags = 0))
				AND ((@FilterByArticles = 1 AND fba.ArticleID IS NOT NULL) OR (@FilterByArticles = 0))
				AND ((@HideUnlocalizedItems = 1 AND ncl.ArticleID IS NOT NULL AND ncl.LocaleCode = @LocaleCode) OR (@HideUnlocalizedItems = 0))
			)
		) AS Result WHERE Kulike BETWEEN @ItemsFrom AND @ItemsTo ORDER BY
			CASE WHEN @FirstOrderBy =''Featured DESC'' THEN Featured END DESC,
			CASE WHEN @OrderBy =''PublishDate ASC'' THEN PublishDate END,
			CASE WHEN @OrderBy =''PublishDate DESC'' THEN PublishDate END DESC,
			CASE WHEN @OrderBy =''NumberOfViews ASC'' THEN NumberOfViews END,
			CASE WHEN @OrderBy =''NumberOfViews DESC'' THEN NumberOfViews END DESC,
			CASE WHEN @OrderBy =''RatingValue ASC'' THEN RatingValue END,
			CASE WHEN @OrderBy =''RatingValue DESC'' THEN RatingValue END DESC,
			CASE WHEN @OrderBy =''DateAdded ASC'' THEN DateAdded END,
			CASE WHEN @OrderBy =''DateAdded DESC'' THEN DateAdded END DESC,
			CASE WHEN @OrderBy =''ExpireDate ASC'' THEN ExpireDate END,
			CASE WHEN @OrderBy =''ExpireDate DESC'' THEN ExpireDate END DESC,
			CASE WHEN @OrderBy =''LastModified ASC'' THEN LastModified END,
			CASE WHEN @OrderBy =''LastModified DESC'' THEN LastModified END DESC,
			CASE WHEN @OrderBy =''NumberOfComments ASC'' THEN NumberOfComments END,
			CASE WHEN @OrderBy =''NumberOfComments DESC'' THEN NumberOfComments END DESC,
			CASE WHEN @OrderBy =''Title ASC'' THEN Title END,
			CASE WHEN @OrderBy =''Title DESC'' THEN Title END DESC
		),
		FinalLocalizedArticleIDsSet (ArticleID,Title,SubTitle,Summary,Article,DetailTypeData,TitleLink,MetaDecription,MetaKeywords,MainImageTitle,MainImageDescription) AS(
			SELECT ArticleID,Title,SubTitle,Summary,Article,DetailTypeData,clTitleLink AS TitleLink ,MetaDecription,MetaKeywords,MainImageTitle,MainImageDescription FROM {databaseOwner}[{objectQualifier}EasyDNNNewsContentLocalization] WHERE ArticleID IN (SELECT ArticleID FROM FinalArticleIDsSet) AND LocaleCode = @LocaleCode
		)
		SELECT *,
			CASE @EditPermission 
				WHEN 0 THEN 0
				WHEN 1 THEN 1
				WHEN 2 THEN
				CASE @EditOnlyAsOwner
					WHEN 0 THEN			
						CASE WHEN EXISTS(SELECT CategoryID FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS c WHERE c.ArticleID = Result.ArticleID AND c.CategoryID IN (SELECT CategoryID FROM @UserEditCategories))
							THEN 1
							ELSE
								CASE WHEN EXISTS(SELECT [ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsArticleRolePermissions] AS arp WHERE arp.ArticleID = Result.ArticleID AND arp.Edit = 1 AND arp.RoleID IN(SELECT RoleID FROM @UserInRoles))
								THEN 1
								ELSE
									CASE WHEN EXISTS (SELECT [ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsArticleUserPermissions] AS aup WHERE aup.ArticleID = Result.ArticleID AND aup.Edit = 1 AND aup.UserID = @UserID)
										THEN 1
										ELSE 0
									END
								END
						END  			
					WHEN 1 THEN
						CASE WHEN EXISTS(SELECT CategoryID FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS c WHERE Result.UserID = @UserID AND c.ArticleID = Result.ArticleID AND c.CategoryID IN (SELECT CategoryID FROM @UserEditCategories))
							THEN 1
							ELSE
								CASE WHEN EXISTS(SELECT [ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsArticleRolePermissions] AS arp WHERE arp.ArticleID = Result.ArticleID AND arp.Edit = 1 AND arp.RoleID IN(SELECT RoleID FROM @UserInRoles))
								THEN 1
								ELSE
									CASE WHEN EXISTS (SELECT [ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsArticleUserPermissions] AS aup WHERE aup.ArticleID = Result.ArticleID AND aup.Edit = 1 AND aup.UserID = @UserID)
										THEN 1
										ELSE 0
									END
								END 
						END
				END
				WHEN 3 THEN
					CASE WHEN EXISTS(SELECT [ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsArticleRolePermissions] AS arp WHERE arp.ArticleID = Result.ArticleID AND arp.Edit = 1 AND arp.RoleID IN(SELECT RoleID FROM @UserInRoles))
						THEN 1
						ELSE
						CASE WHEN EXISTS (SELECT [ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsArticleUserPermissions] AS aup WHERE aup.ArticleID = Result.ArticleID AND aup.Edit = 1 AND aup.UserID = @UserID)
							THEN 1
							ELSE 0
							END
						END 
			END AS ''CanEdit'',
			(SELECT cat.ID, cat.Name, cat.CategoryURL FROM @LocalizedCategories AS Cat INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS c ON c.CategoryID = Cat.ID WHERE c.ArticleID = Result.ArticleID ORDER BY Position FOR XML AUTO, ROOT(''root'')) AS ''CatToShow'',
			 CASE Result.Active
				WHEN 1 THEN 0
				WHEN 0 THEN 1
			 END AS ''Published'',
			 CASE @UserCanApprove
				WHEN 0 THEN 0
				WHEN 1 THEN
					CASE Result.Approved
					 WHEN 1 THEN 0
					 WHEN 0 THEN
						 CASE Result.Active
							WHEN 1 THEN 1
							WHEN 0 THEN 0
						END
					END
			 END AS ''Approve''
			 FROM (
				 SELECT n.[ArticleID],n.[UserID],n.[Title],n.[SubTitle],n.[Summary],n.[Article],n.[ArticleImage],n.[DateAdded],n.[LastModified],n.[PublishDate]
					  ,n.[ExpireDate],n.[Approved],n.[Featured],n.[NumberOfViews],n.[RatingValue],n.[RatingCount],n.[AllowComments],n.[Active]
					  ,n.[TitleLink],n.[DetailType],n.[DetailTypeData],n.[DetailsTemplate],n.[DetailsTheme],n.[GalleryPosition],n.[GalleryDisplayType]
					  ,n.[ShowMainImage],n.[ShowMainImageFront],n.[CommentsTheme],n.[ArticleImageFolder],n.[NumberOfComments]
					  ,n.[ArticleImageSet],n.[MetaDecription],n.[MetaKeywords],n.[DisplayStyle],n.[DetailTarget]
					  ,n.[ArticleFromRSS],n.[HasPermissions],n.[EventArticle],n.[DetailMediaType],n.[DetailMediaData],n.[AuthorAliasName],n.[ShowGallery],n.[ArticleGalleryID],n.[MainImageTitle],n.[MainImageDescription]
					   FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS n WHERE ArticleID IN (SELECT ArticleID FROM FinalArticleIDsSet WHERE ArticleID NOT IN (SELECT ArticleID FROM FinalLocalizedArticleIDsSet))
				 UNION ALL
				 SELECT n.[ArticleID],n.[UserID],fla.[Title],fla.[SubTitle],fla.[Summary],fla.[Article],n.[ArticleImage],n.[DateAdded],n.[LastModified],n.[PublishDate]
					  ,n.[ExpireDate],n.[Approved],n.[Featured],n.[NumberOfViews],n.[RatingValue],n.[RatingCount],n.[AllowComments],n.[Active]
					  ,fla.[TitleLink],n.[DetailType],fla.[DetailTypeData],n.[DetailsTemplate],n.[DetailsTheme],n.[GalleryPosition],n.[GalleryDisplayType]
					  ,n.[ShowMainImage],n.[ShowMainImageFront],n.[CommentsTheme],n.[ArticleImageFolder],n.[NumberOfComments]
					  ,n.[ArticleImageSet],fla.[MetaDecription],fla.[MetaKeywords],n.[DisplayStyle],n.[DetailTarget]
					  ,n.[ArticleFromRSS],n.[HasPermissions],n.[EventArticle],n.[DetailMediaType],n.[DetailMediaData],n.[AuthorAliasName],n.[ShowGallery],n.[ArticleGalleryID],fla.[MainImageTitle],fla.[MainImageDescription]
				  FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS n INNER JOIN FinalLocalizedArticleIDsSet AS fla ON fla.ArticleID = n.ArticleID) As Result
			ORDER BY
				CASE WHEN @FirstOrderBy =''Featured DESC'' THEN Featured END DESC,
				CASE WHEN @OrderBy =''PublishDate ASC'' THEN PublishDate END,
				CASE WHEN @OrderBy =''PublishDate DESC'' THEN PublishDate END DESC,
				CASE WHEN @OrderBy =''NumberOfViews ASC'' THEN NumberOfViews END,
				CASE WHEN @OrderBy =''NumberOfViews DESC'' THEN NumberOfViews END DESC,
				CASE WHEN @OrderBy =''RatingValue ASC'' THEN RatingValue END,
				CASE WHEN @OrderBy =''RatingValue DESC'' THEN RatingValue END DESC,
				CASE WHEN @OrderBy =''DateAdded ASC'' THEN DateAdded END,
				CASE WHEN @OrderBy =''DateAdded DESC'' THEN DateAdded END DESC,
				CASE WHEN @OrderBy =''ExpireDate ASC'' THEN ExpireDate END,
				CASE WHEN @OrderBy =''ExpireDate DESC'' THEN ExpireDate END DESC,
				CASE WHEN @OrderBy =''LastModified ASC'' THEN LastModified END,
				CASE WHEN @OrderBy =''LastModified DESC'' THEN LastModified END DESC,
				CASE WHEN @OrderBy =''NumberOfComments ASC'' THEN NumberOfComments END,
				CASE WHEN @OrderBy =''NumberOfComments DESC'' THEN NumberOfComments END DESC,
				CASE WHEN @OrderBy =''Title ASC'' THEN Title END,
				CASE WHEN @OrderBy =''Title DESC'' THEN Title END DESC;
	END
	ELSE
	BEGIN
		SELECT *,
		CASE @EditPermission 
			WHEN 0 THEN 0
			WHEN 1 THEN 1
			WHEN 2 THEN
			CASE @EditOnlyAsOwner
				WHEN 0 THEN			
					CASE WHEN EXISTS(SELECT CategoryID FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS c WHERE c.ArticleID = Result.ArticleID AND c.CategoryID IN (SELECT CategoryID FROM @UserEditCategories))
						THEN 1
						ELSE
							CASE WHEN EXISTS(SELECT [ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsArticleRolePermissions] AS arp WHERE arp.ArticleID = Result.ArticleID AND arp.Edit = 1 AND arp.RoleID IN(SELECT RoleID FROM @UserInRoles))
							THEN 1
							ELSE
								CASE WHEN EXISTS (SELECT [ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsArticleUserPermissions] AS aup WHERE aup.ArticleID = Result.ArticleID AND aup.Edit = 1 AND aup.UserID = @UserID)
									THEN 1
									ELSE 0
								END
							END
					END  			
				WHEN 1 THEN
					CASE WHEN EXISTS(SELECT CategoryID FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS c WHERE Result.UserID = @UserID AND c.ArticleID = Result.ArticleID AND c.CategoryID IN (SELECT CategoryID FROM @UserEditCategories))
						THEN 1
						ELSE
							CASE WHEN EXISTS(SELECT [ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsArticleRolePermissions] AS arp WHERE arp.ArticleID = Result.ArticleID AND arp.Edit = 1 AND arp.RoleID IN(SELECT RoleID FROM @UserInRoles))
							THEN 1
							ELSE
								CASE WHEN EXISTS (SELECT [ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsArticleUserPermissions] AS aup WHERE aup.ArticleID = Result.ArticleID AND aup.Edit = 1 AND aup.UserID = @UserID)
									THEN 1
									ELSE 0
								END
							END 
					END
			END
			WHEN 3 THEN
				CASE WHEN EXISTS(SELECT [ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsArticleRolePermissions] AS arp WHERE arp.ArticleID = Result.ArticleID AND arp.Edit = 1 AND arp.RoleID IN(SELECT RoleID FROM @UserInRoles))
					THEN 1
					ELSE
					CASE WHEN EXISTS (SELECT [ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsArticleUserPermissions] AS aup WHERE aup.ArticleID = Result.ArticleID AND aup.Edit = 1 AND aup.UserID = @UserID)
						THEN 1
						ELSE 0
						END
					END 
		END AS ''CanEdit'',
		(SELECT cat.ID, cat.Name, cat.CategoryURL FROM @LocalizedCategories AS Cat INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS c ON c.CategoryID = Cat.ID WHERE c.ArticleID = Result.ArticleID ORDER BY Position FOR XML AUTO, ROOT(''root'')) AS ''CatToShow'',
		 CASE Result.Active
			WHEN 1 THEN 0
			WHEN 0 THEN 1
		 END AS ''Published'',
		 CASE @UserCanApprove
			WHEN 0 THEN 0
			WHEN 1 THEN
				CASE Result.Approved
				 WHEN 1 THEN 0
				 WHEN 0 THEN
					 CASE Result.Active
						WHEN 1 THEN 1
						WHEN 0 THEN 0
					END
				END
		 END AS ''Approve''
		 FROM (SELECT
		  n.[ArticleID],n.[UserID],n.[Title],n.[SubTitle],n.[Summary],n.[Article],n.[ArticleImage],n.[DateAdded],n.[LastModified],n.[PublishDate]
		  ,n.[ExpireDate],n.[Approved],n.[Featured],n.[NumberOfViews],n.[RatingValue],n.[RatingCount],n.[AllowComments],n.[Active]
		  ,n.[TitleLink],n.[DetailType],n.[DetailTypeData],n.[DetailsTemplate],n.[DetailsTheme],n.[GalleryPosition],n.[GalleryDisplayType]
		  ,n.[ShowMainImage],n.[ShowMainImageFront],n.[CommentsTheme],n.[ArticleImageFolder],n.[NumberOfComments]
		  ,n.[ArticleImageSet],n.[MetaDecription],n.[MetaKeywords],n.[DisplayStyle],n.[DetailTarget]
		  ,n.[ArticleFromRSS],n.[HasPermissions],n.[EventArticle],n.[DetailMediaType],n.[DetailMediaData],n.[AuthorAliasName],n.[ShowGallery],n.[ArticleGalleryID],n.[MainImageTitle],n.[MainImageDescription], ROW_NUMBER() OVER (ORDER BY 
		 CASE WHEN @FirstOrderBy =''Featured DESC'' THEN Featured END DESC,
		 CASE WHEN @OrderBy =''PublishDate ASC'' THEN PublishDate END,
		 CASE WHEN @OrderBy =''PublishDate DESC'' THEN PublishDate END DESC,
		 CASE WHEN @OrderBy =''NumberOfViews ASC'' THEN NumberOfViews END,
		 CASE WHEN @OrderBy =''NumberOfViews DESC'' THEN NumberOfViews END DESC,
		 CASE WHEN @OrderBy =''RatingValue ASC'' THEN RatingValue END,
		 CASE WHEN @OrderBy =''RatingValue DESC'' THEN RatingValue END DESC,
		 CASE WHEN @OrderBy =''DateAdded ASC'' THEN DateAdded END,
		 CASE WHEN @OrderBy =''DateAdded DESC'' THEN DateAdded END DESC,
		 CASE WHEN @OrderBy =''ExpireDate ASC'' THEN ExpireDate END,
		 CASE WHEN @OrderBy =''ExpireDate DESC'' THEN ExpireDate END DESC,
		 CASE WHEN @OrderBy =''LastModified ASC'' THEN LastModified END,
		 CASE WHEN @OrderBy =''LastModified DESC'' THEN LastModified END DESC,
		 CASE WHEN @OrderBy =''NumberOfComments ASC'' THEN NumberOfComments END,
		 CASE WHEN @OrderBy =''NumberOfComments DESC'' THEN NumberOfComments END DESC,
		 CASE WHEN @OrderBy =''Title ASC'' THEN Title END,
		 CASE WHEN @OrderBy =''Title DESC'' THEN Title END DESC) AS Kulike
		 FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS n WHERE ArticleID IN(
			SELECT DISTINCT na.[ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS na
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS cat ON na.ArticleID = cat.ArticleID
				INNER JOIN @UserViewCategoriesWithFilter  AS uvcwf ON uvcwf.CategoryID = cat.CategoryID
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = na.ArticleID
				INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserID, @FilterByDNNGroupID) AS t ON t.seckey = nss.SecurityKey
				LEFT OUTER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsTagsItems] AS ti ON na.ArticleID = ti.ArticleID
  				LEFT OUTER JOIN @FilterTagsTable AS fbt ON ti.TagID = fbt.TagID 
  				LEFT OUTER JOIN @FilterArticlesTable AS fba ON fba.ArticleID = na.ArticleID	 		  	 	 	 		 		
			WHERE na.PortalID=@PortalID
				AND na.HasPermissions = 0
				AND na.HideDefaultLocale = 0
				AND na.UserID = @FilterByDNNUserID
				AND ((@EditPermission = 1) OR ((@UserCanApprove = 1 OR na.Approved=1) AND (na.Active = 1 OR na.UserID=@UserID)))
				AND ((@Featured = 1 AND na.Featured = 1) OR (@Featured = 0))
				AND ((@DateRange = 0 AND (na.PublishDate <= @CurrentDate AND na.ExpireDate >= @CurrentDate)) OR (@DateRange = 1 AND ((PublishDate >= @FromDate AND PublishDate <= @ToDate) AND (ExpireDate >= @CurrentDate))))
				AND ((@FilterByTags = 1 AND fbt.TagID IS NOT NULL) OR (@FilterByTags = 0))
				AND ((@FilterByArticles = 1 AND fba.ArticleID IS NOT NULL) OR (@FilterByArticles = 0))
			UNION ALL
			SELECT DISTINCT na.[ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS na
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsArticleUserPermissions] AS aup ON na.ArticleID = aup.ArticleID
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS cat ON na.ArticleID = cat.ArticleID
				INNER JOIN @FiltredByCategories AS fbc ON fbc.CategoryID = cat.CategoryID
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = na.ArticleID
				INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserID, @FilterByDNNGroupID) AS t ON t.seckey = nss.SecurityKey
				LEFT OUTER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsTagsItems] AS ti ON na.ArticleID = ti.ArticleID
				LEFT OUTER JOIN @FilterTagsTable AS fbt ON ti.TagID = fbt.TagID
				LEFT OUTER JOIN @FilterArticlesTable AS fba ON fba.ArticleID = na.ArticleID	 		  	 	 	 		 			
			WHERE na.PortalID=@PortalID
				AND ((@EditPermission = 1) OR (((@UserID = -1 AND aup.UserID IS NULL) OR (aup.UserID = @UserID))
					AND aup.Show = 1 AND ((@UserCanApprove = 1) OR (na.Approved=1)) AND (na.Active = 1 OR na.UserID=@UserID)
				))
				AND na.HasPermissions = 1
				AND na.HideDefaultLocale = 0
				AND na.UserID = @FilterByDNNUserID
				AND ((@Featured = 1 AND na.Featured = 1) OR (@Featured = 0))
				AND ((@DateRange = 0 AND (na.PublishDate <= @CurrentDate AND na.ExpireDate >= @CurrentDate)) OR (@DateRange = 1 AND ((PublishDate >= @FromDate AND PublishDate <= @ToDate) AND (ExpireDate >= @CurrentDate))))
				AND ((@FilterByTags = 1 AND fbt.TagID IS NOT NULL) OR (@FilterByTags = 0))
				AND ((@FilterByArticles = 1 AND fba.ArticleID IS NOT NULL) OR (@FilterByArticles = 0))
			UNION
			SELECT DISTINCT na.[ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS na
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsArticleRolePermissions] AS arp ON na.ArticleID = arp.ArticleID
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS cat ON na.ArticleID = cat.ArticleID
				INNER JOIN @FiltredByCategories AS fbc ON fbc.CategoryID = cat.CategoryID
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = na.ArticleID
				INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserID, @FilterByDNNGroupID) AS t ON t.seckey = nss.SecurityKey
				LEFT OUTER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsTagsItems] AS ti ON na.ArticleID = ti.ArticleID
				LEFT OUTER JOIN @FilterTagsTable AS fbt ON ti.TagID = fbt.TagID
				LEFT OUTER JOIN @FilterArticlesTable AS fba ON fba.ArticleID = na.ArticleID	 		  	 	 	 		 			 	
			WHERE na.PortalID=@PortalID
				AND na.HasPermissions = 1
				AND na.HideDefaultLocale = 0
				AND na.UserID = @FilterByDNNUserID 
				AND ((@EditPermission = 1) OR (((@UserCanApprove = 1) OR (na.Approved=1))
					AND (na.Active = 1 OR na.UserID=@UserID) AND arp.Show = 1 AND arp.RoleID IN (SELECT [RoleID] FROM @UserInRoles)
					))
				AND ((@Featured = 1 AND na.Featured = 1) OR (@Featured = 0))
				AND ((@DateRange = 0 AND (na.PublishDate <= @CurrentDate AND na.ExpireDate >= @CurrentDate)) OR (@DateRange = 1 AND ((PublishDate >= @FromDate AND PublishDate <= @ToDate) AND (ExpireDate >= @CurrentDate))))
				AND ((@FilterByTags = 1 AND fbt.TagID IS NOT NULL) OR (@FilterByTags = 0))
				AND ((@FilterByArticles = 1 AND fba.ArticleID IS NOT NULL) OR (@FilterByArticles = 0))
			)
		) AS Result WHERE Kulike BETWEEN @ItemsFrom AND @ItemsTo ORDER BY
			CASE WHEN @FirstOrderBy =''Featured DESC'' THEN Featured END DESC,
			CASE WHEN @OrderBy =''PublishDate ASC'' THEN PublishDate END,
			CASE WHEN @OrderBy =''PublishDate DESC'' THEN PublishDate END DESC,
			CASE WHEN @OrderBy =''NumberOfViews ASC'' THEN NumberOfViews END,
			CASE WHEN @OrderBy =''NumberOfViews DESC'' THEN NumberOfViews END DESC,
			CASE WHEN @OrderBy =''RatingValue ASC'' THEN RatingValue END,
			CASE WHEN @OrderBy =''RatingValue DESC'' THEN RatingValue END DESC,
			CASE WHEN @OrderBy =''DateAdded ASC'' THEN DateAdded END,
			CASE WHEN @OrderBy =''DateAdded DESC'' THEN DateAdded END DESC,
			CASE WHEN @OrderBy =''ExpireDate ASC'' THEN ExpireDate END,
			CASE WHEN @OrderBy =''ExpireDate DESC'' THEN ExpireDate END DESC,
			CASE WHEN @OrderBy =''LastModified ASC'' THEN LastModified END,
			CASE WHEN @OrderBy =''LastModified DESC'' THEN LastModified END DESC,
			CASE WHEN @OrderBy =''NumberOfComments ASC'' THEN NumberOfComments END,
			CASE WHEN @OrderBy =''NumberOfComments DESC'' THEN NumberOfComments END DESC,
			CASE WHEN @OrderBy =''Title ASC'' THEN Title END,
			CASE WHEN @OrderBy =''Title DESC'' THEN Title END DESC;
	END
END' 
END
GO
/****** Object:  StoredProcedure {databaseOwner}[{objectQualifier}EasyDNNNewsGetItemsForCategoryMenu]    Script Date: 06/24/2013 16:39:07 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'{databaseOwner}[{objectQualifier}EasyDNNNewsGetItemsForCategoryMenu]') AND type in (N'P', N'PC'))
BEGIN
EXEC dbo.sp_executesql @statement = N'CREATE PROCEDURE {databaseOwner}[{objectQualifier}EasyDNNNewsGetItemsForCategoryMenu]
	@PortalID int,
	@UserID int,
	@MenuModuleID int,
	@DefaultTabID int,
    @DefaultModuleID int,
	@CurrentDate DateTime,
	@AdminOrSuperUser bit  = 0,
	@CountItems bit = 0,
	@IsSocialInstance bit = 0,
	@FilterByDNNUserID int = 0, -- filter by some UserID / not current user ID
	@FilterByDNNGroupID int = 0, -- filter by DNNGroup/RoleID / not profile GroupID
	@LocaleCode nvarchar(20) = '''',	
	@ShowAllAuthors bit = 1, -- filter postavka menija
	@CategoryFilterType tinyint = 0, --0 All categories, 1 - SELECTion, 2 - AutoAdd
	@HideUnlocalizedItems bit = 0,
	@PermissionSettingsSource tinyint = 0, -- None, 1 - portal, 2 - module
	@PermissionsModuleID int = 0 -- NewsModuleID
AS
SET NOCOUNT ON;
DECLARE @UserCanApprove bit;
SET @UserCanApprove = 0;
DECLARE @UserInRoles TABLE (RoleID int NOT NULL PRIMARY KEY);
INSERT INTO @UserInRoles SELECT DISTINCT ur.[RoleID] FROM {databaseOwner}[{objectQualifier}UserRoles] AS ur INNER JOIN {databaseOwner}[{objectQualifier}Roles] AS r ON ur.RoleID = r.RoleID WHERE ur.UserID = @UserID AND r.PortalID = @PortalID AND (ur.ExpiryDate IS NULL OR ur.ExpiryDate > GETUTCDATE()) AND (ur.EffectiveDate IS NULL OR ur.EffectiveDate < GETUTCDATE());
DECLARE @UserViewCategories TABLE (CategoryID int NOT NULL PRIMARY KEY); -- all categories which user can see based on permissions
DECLARE @UserViewCategoriesWithFilter TABLE (CategoryID int NOT NULL PRIMARY KEY); -- all categories which user can see based on permissions and Module filter

DECLARE @SettingsSource bit; SET @SettingsSource = 1;
IF @AdminOrSuperUser = 1 OR @PermissionSettingsSource = 0
BEGIN
	INSERT INTO @UserViewCategories SELECT [CategoryID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryList] WHERE PortalID = @PortalID;
END
ELSE IF @UserID = -1
BEGIN	
	IF @PermissionSettingsSource = 1 -- by portal
	BEGIN
		IF EXISTS (SELECT ShowAllCategories FROM {databaseOwner}[{objectQualifier}EasyDNNNewsRolePremissionSettings] AS rps WHERE rps.PortalID = @PortalID  AND rps.ModuleID IS NULL AND rps.RoleID IS NULL AND rps.ShowAllCategories = 1)
		BEGIN
			INSERT INTO @UserViewCategories SELECT [CategoryID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryList] WHERE PortalID = @PortalID;
		END
		ELSE
		BEGIN
			INSERT INTO @UserViewCategories
			SELECT rpsc.[CategoryID] FROM  {databaseOwner}[{objectQualifier}EasyDNNNewsRolePremissionsShowCategories] AS rpsc 
			INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsRolePremissionSettings] AS rps ON rps.PremissionSettingsID = rpsc.PremissionSettingsID
			WHERE rps.PortalID = @PortalID  AND rps.ModuleID IS NULL AND rps.RoleID IS NULL;
		END
	END
	ELSE -- by module
	BEGIN
		SELECT @SettingsSource = PermissionsPMSource FROM {databaseOwner}[{objectQualifier}EasyDNNNewsModuleSettings] WHERE ModuleID = @PermissionsModuleID;
		IF @SettingsSource = 1
		BEGIN
			IF EXISTS (SELECT ShowAllCategories FROM {databaseOwner}[{objectQualifier}EasyDNNNewsRolePremissionSettings] AS rps WHERE rps.PortalID = @PortalID  AND rps.ModuleID IS NULL AND rps.RoleID IS NULL AND rps.ShowAllCategories = 1)
			BEGIN
				INSERT INTO @UserViewCategories SELECT [CategoryID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryList] WHERE PortalID = @PortalID;
			END
			ELSE
			BEGIN
				INSERT INTO @UserViewCategories
				SELECT rpsc.[CategoryID] FROM  {databaseOwner}[{objectQualifier}EasyDNNNewsRolePremissionsShowCategories] AS rpsc 
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsRolePremissionSettings] AS rps ON rps.PremissionSettingsID = rpsc.PremissionSettingsID
				WHERE rps.PortalID = @PortalID  AND rps.ModuleID IS NULL AND rps.RoleID IS NULL;
			END
		END
		ELSE
		BEGIN
			IF EXISTS (SELECT ShowAllCategories FROM {databaseOwner}[{objectQualifier}EasyDNNNewsRolePremissionSettings] AS rps WHERE rps.PortalID = @PortalID AND rps.ModuleID = @PermissionsModuleID AND rps.RoleID IS NULL AND rps.ShowAllCategories = 1)
			BEGIN
				INSERT INTO @UserViewCategories SELECT [CategoryID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryList] WHERE PortalID = @PortalID;
			END
			ELSE
			BEGIN
				INSERT INTO @UserViewCategories
				SELECT rpsc.[CategoryID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsRolePremissionsShowCategories] AS rpsc
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsRolePremissionSettings] AS rps ON rps.PremissionSettingsID = rpsc.PremissionSettingsID
				WHERE rps.PortalID = @PortalID AND rps.ModuleID = @PermissionsModuleID AND rps.RoleID IS NULL;
			END
		END
	END
END
ELSE -- registrirani korisnik
BEGIN
	IF @PermissionSettingsSource = 1 -- by portal
	BEGIN
		IF EXISTS (
				SELECT TOP (1) ShowAllCategories FROM {databaseOwner}[{objectQualifier}EasyDNNNewsRolePremissionSettings] AS rps
					INNER JOIN @UserInRoles AS uir ON rps.RoleID = uir.RoleID
					WHERE rps.PortalID = @PortalID AND rps.ModuleID IS NULL AND rps.ShowAllCategories = 1
				UNION
				SELECT ShowAllCategories FROM {databaseOwner}[{objectQualifier}EasyDNNNewsUserPremissionSettings] AS ups
				WHERE ups.UserID = @UserID AND ups.PortalID = @PortalID AND ups.ModuleID IS NULL AND ups.ShowAllCategories = 1
		)
		BEGIN
			INSERT INTO @UserViewCategories SELECT [CategoryID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryList] WHERE PortalID = @PortalID;
		END
		ELSE
		BEGIN
			INSERT INTO @UserViewCategories
			SELECT rpsc.[CategoryID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsRolePremissionsShowCategories] AS rpsc
			INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsRolePremissionSettings] AS rps ON rps.PremissionSettingsID = rpsc.PremissionSettingsID
			INNER JOIN @UserInRoles AS uir ON rps.RoleID = uir.RoleID
			WHERE rps.PortalID = @PortalID AND rps.ModuleID IS NULL GROUP BY rpsc.[CategoryID]
			UNION
			SELECT upsc.[CategoryID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsUserPremissionsShowCategories] AS upsc
			INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsUserPremissionSettings] AS ups ON ups.PremissionSettingsID = upsc.PremissionSettingsID
			WHERE ups.UserID = @UserID AND ups.PortalID = @PortalID AND ups.ModuleID IS NULL GROUP BY upsc.[CategoryID];
		END
	END
	ELSE -- by module
	BEGIN
		SELECT @SettingsSource = PermissionsPMSource FROM {databaseOwner}[{objectQualifier}EasyDNNNewsModuleSettings] WHERE ModuleID = @PermissionsModuleID;
		IF @SettingsSource = 1
		BEGIN
			IF EXISTS (
				SELECT TOP (1) ShowAllCategories FROM {databaseOwner}[{objectQualifier}EasyDNNNewsRolePremissionSettings] AS rps
					INNER JOIN @UserInRoles AS uir ON rps.RoleID = uir.RoleID
					WHERE rps.PortalID = @PortalID AND rps.ModuleID IS NULL AND rps.ShowAllCategories = 1
				UNION
				SELECT ShowAllCategories FROM {databaseOwner}[{objectQualifier}EasyDNNNewsUserPremissionSettings] AS ups
				WHERE ups.UserID = @UserID AND ups.PortalID = @PortalID AND ups.ModuleID IS NULL AND ups.ShowAllCategories = 1
			)
			BEGIN
				INSERT INTO @UserViewCategories SELECT [CategoryID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryList] WHERE PortalID = @PortalID;
			END
			ELSE
			BEGIN
				INSERT INTO @UserViewCategories
				SELECT rpsc.[CategoryID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsRolePremissionsShowCategories] AS rpsc
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsRolePremissionSettings] AS rps ON rps.PremissionSettingsID = rpsc.PremissionSettingsID
				INNER JOIN @UserInRoles AS uir ON rps.RoleID = uir.RoleID
				WHERE rps.PortalID = @PortalID AND rps.ModuleID IS NULL GROUP BY rpsc.[CategoryID]
				UNION
				SELECT upsc.[CategoryID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsUserPremissionsShowCategories] AS upsc
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsUserPremissionSettings] AS ups ON ups.PremissionSettingsID = upsc.PremissionSettingsID
				WHERE ups.UserID = @UserID AND ups.PortalID = @PortalID AND ups.ModuleID IS NULL GROUP BY upsc.[CategoryID];
			END
		END
		ELSE
		BEGIN
			IF EXISTS (
				SELECT TOP (1) ShowAllCategories FROM {databaseOwner}[{objectQualifier}EasyDNNNewsRolePremissionSettings] AS rps
					INNER JOIN @UserInRoles AS uir ON rps.RoleID = uir.RoleID
					WHERE rps.PortalID = @PortalID AND rps.ModuleID = @PermissionsModuleID AND rps.ShowAllCategories = 1
				UNION
				SELECT ShowAllCategories FROM {databaseOwner}[{objectQualifier}EasyDNNNewsUserPremissionSettings] AS ups
				WHERE ups.UserID = @UserID AND ups.PortalID = @PortalID AND ups.ModuleID = @PermissionsModuleID AND ups.ShowAllCategories = 1
			)
			BEGIN
				INSERT INTO @UserViewCategories SELECT [CategoryID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryList] WHERE PortalID = @PortalID;
			END
			ELSE
			BEGIN
				INSERT INTO @UserViewCategories
				SELECT rpsc.[CategoryID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsRolePremissionsShowCategories] AS rpsc
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsRolePremissionSettings] AS rps ON rps.PremissionSettingsID = rpsc.PremissionSettingsID
				INNER JOIN @UserInRoles AS uir ON rps.RoleID = uir.RoleID
				WHERE rps.PortalID = @PortalID AND rps.ModuleID = @PermissionsModuleID GROUP BY rpsc.[CategoryID]
				UNION
				SELECT upsc.[CategoryID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsUserPremissionsShowCategories] AS upsc
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsUserPremissionSettings] AS ups ON ups.PremissionSettingsID = upsc.PremissionSettingsID
				WHERE ups.UserID = @UserID AND ups.PortalID = @PortalID AND ups.ModuleID = @PermissionsModuleID GROUP BY upsc.[CategoryID];
			END
		END
	END
END

IF @CategoryFilterType = 0 -- 0 All categories
BEGIN
	INSERT INTO @UserViewCategoriesWithFilter SELECT [CategoryID] FROM @UserViewCategories;
END
ELSE IF @CategoryFilterType = 1 -- 1 - SELECTion
BEGIN
		INSERT INTO @UserViewCategoriesWithFilter 
		SELECT cl.[CategoryID] FROM @UserViewCategories AS cl
		INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsModuleCategoryItems] AS mci ON mci.CategoryID = cl.CategoryID AND mci.ModuleID = @MenuModuleID
END
ELSE IF @CategoryFilterType = 2 -- 2 - AutoAdd
BEGIN
	WITH hierarchy AS(
		SELECT [CategoryID], [ParentCategory]
		FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryList] AS cl
		WHERE (cl.ParentCategory IN (SELECT [CategoryID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsModuleCategoryItems] WHERE ModuleID = @MenuModuleID) OR cl.CategoryID IN (SELECT [CategoryID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsModuleCategoryItems] WHERE ModuleID = @MenuModuleID)) AND PortalID = @PortalID
		UNION ALL
		SELECT c.[CategoryID], c.[ParentCategory]
		FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryList] AS c INNER JOIN hierarchy AS p ON c.ParentCategory = p.CategoryID WHERE c.PortalID = @PortalID
		)
	INSERT INTO @UserViewCategoriesWithFilter SELECT DISTINCT uvc.CategoryID FROM hierarchy AS nfc INNER JOIN @UserViewCategories AS uvc ON uvc.CategoryID = nfc.CategoryID;
END

DECLARE @FilterBySocialGroup bit;
SET @FilterBySocialGroup = 0;
DECLARE @FilterAuthorOrAuthors bit;
SET @FilterAuthorOrAuthors = 0;

DECLARE @TempAuthorsIDList TABLE (UserID int NOT NULL PRIMARY KEY);
IF @IsSocialInstance = 1
	BEGIN
		IF @FilterByDNNGroupID <> 0
		BEGIN	
			SET @FilterBySocialGroup = 1;
		END
	END
ELSE
BEGIN
	IF @ShowAllAuthors = 0
	BEGIN
		SET @FilterAuthorOrAuthors = 1;
		INSERT INTO @TempAuthorsIDList
		SELECT [UserID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsModuleAuthorsItems] AS mai WHERE mai.ModuleID = @MenuModuleID
		UNION 
		SELECT [UserID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsAuthorProfile] AS ap 
			INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsAutorGroupItems] AS agi ON ap.AuthorProfileID = agi.AuthorProfileID
			INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsModuleGroupItems] AS mgi ON mgi.GroupID = agi.GroupID
			WHERE mgi.ModuleID = @MenuModuleID
	END
END

DECLARE @tempMenuCats TABLE(
	[CategoryID] int NOT NULL PRIMARY KEY,
	[PortalID] int,
	[CategoryName] nvarchar(200),
	[Position] int,
	[ParentCategory] int,
	[Level] int,
	[CategoryURL] nvarchar(1500),
	[CategoryImage] nvarchar(1500),
	[CategoryText] ntext,[Show] bit)

IF @LocaleCode <> ''''
BEGIN
	WITH LocCategories([CategoryID],[PortalID],[CategoryName],[Position],[ParentCategory],[Level],[CategoryURL],[CategoryImage],[CategoryText]) AS 
	(
		SELECT Cat.[CategoryID],Cat.[PortalID],cl.[Title] AS CategoryName,Cat.[Position],Cat.[ParentCategory],Cat.[Level],Cat.[CategoryURL],Cat.[CategoryImage],cl.[CategoryText] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryList] AS Cat INNER JOIN @UserViewCategoriesWithFilter cwf ON cwf.CategoryID = Cat.CategoryID INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryLocalization] AS cl ON cwf.CategoryID = cl.CategoryID WHERE Cat.PortalID = @PortalID AND cl.LocaleCode = @LocaleCode
	),
	NotLocCategories([CategoryID],[PortalID],[CategoryName],[Position],[ParentCategory],[Level],[CategoryURL],[CategoryImage],[CategoryText]) AS 
	(
		SELECT Cat.* FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryList] AS Cat INNER JOIN @UserViewCategoriesWithFilter cwf ON cwf.CategoryID = Cat.CategoryID WHERE Cat.PortalID = @PortalID AND Cat.CategoryID NOT IN (SELECT CategoryID FROM LocCategories)
	)
	INSERT INTO @tempMenuCats SELECT [CategoryID],[PortalID],[CategoryName],[Position],[ParentCategory],[Level],[CategoryURL],[CategoryImage],[CategoryText],''1'' AS Show FROM (SELECT * FROM LocCategories UNION ALL SELECT * FROM NotLocCategories) AS result
END
ELSE
BEGIN
	
INSERT @tempMenuCats SELECT
 [CategoryID],[PortalID],[CategoryName],[Position],[ParentCategory],[Level],[CategoryURL],[CategoryImage],[CategoryText],''1'' AS Show
 FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryList] AS cat WHERE cat.CategoryID in (SELECT CategoryID FROM @UserViewCategoriesWithFilter) AND PortalID = @PortalID;

END

INSERT @tempMenuCats SELECT
 [CategoryID],[PortalID],[CategoryName],[Position],[ParentCategory],[Level],[CategoryURL],[CategoryImage],[CategoryText],''0'' AS Show
  FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryList] WHERE PortalID = @PortalID AND CategoryID not in (SELECT CategoryID FROM @UserViewCategoriesWithFilter);
  
SELECT TOP 1 @DefaultTabID = TabID FROM {databaseOwner}[{objectQualifier}TabModules] WHERE ModuleID = @DefaultModuleID;

IF @CountItems = 0
BEGIN 
	SELECT ncl.[CategoryID],ncl.[PortalID],ncl.[CategoryName],ncl.[Position],ncl.[ParentCategory],ncl.[Level],ncl.[CategoryURL],ncl.[CategoryImage],ncl.[CategoryText],ncl.Show,
	0 AS ''Count'',
		CASE WHEN cl.[NewsModuleID] IS NULL THEN @DefaultModuleID ELSE cl.[NewsModuleID] END AS NewsModuleID,
		CASE WHEN tm.[TabID] IS NULL THEN @DefaultTabID ELSE tm.[TabID] END AS TabID
	FROM @tempMenuCats AS ncl LEFT OUTER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryLink] AS cl
	ON ncl.CategoryID = cl.CategoryID AND cl.[SourceModuleID] = @MenuModuleID
	LEFT OUTER JOIN {databaseOwner}[{objectQualifier}TabModules] AS tm ON cl.NewsModuleID = tm.ModuleID
	ORDER BY Position ASC, ParentCategory ASC;
END
ELSE
BEGIN

IF @LocaleCode = ''''
BEGIN
	IF @IsSocialInstance = 0
	BEGIN
		SELECT *,
		CASE Show
			WHEN 0 THEN 0
			WHEN 1 THEN	
				CASE @AdminOrSuperUser
				WHEN 1 THEN(
					SELECT count(n.[ArticleID]) AS cnt FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS n
						INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS c ON n.ArticleID = c.ArticleID AND c.CategoryID = Result.CategoryID
					WHERE n.PublishDate <= @CurrentDate AND n.ExpireDate >= @CurrentDate
						AND n.PortalID = @PortalID
						AND n.HideDefaultLocale = 0
						AND((@FilterAuthorOrAuthors = 1 AND n.UserID IN (SELECT UserID FROM @TempAuthorsIDList)) OR (@FilterAuthorOrAuthors = 0))			 
				)
				WHEN 0 THEN(
					SELECT ((
						SELECT count(n.[ArticleID]) AS cnt FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS n
							INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS c ON n.ArticleID = c.ArticleID AND c.CategoryID = Result.CategoryID
						WHERE n.PublishDate <= @CurrentDate AND n.ExpireDate >= @CurrentDate
							 AND ((@UserCanApprove = 1) OR (n.Approved=1))
							 AND ((@AdminOrSuperUser = 1) OR (n.Active=1 OR n.UserID=@UserID))
							 AND n.HasPermissions = 0
							 AND n.HideDefaultLocale = 0
							 AND n.PortalID = @PortalID
							 AND((@FilterAuthorOrAuthors = 1 AND n.UserID IN (SELECT UserID FROM @TempAuthorsIDList)) OR (@FilterAuthorOrAuthors = 0))
						)+(
						SELECT count(aup.[ArticleID]) FROM {databaseOwner}[{objectQualifier}EasyDNNNewsArticleUserPermissions] AS aup
							INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS c ON c.ArticleID = aup.ArticleID AND c.CategoryID = Result.CategoryID
							INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNews] AS n ON n.ArticleID = aup.ArticleID
						WHERE ((@UserID = -1 AND aup.UserID IS NULL) OR (aup.UserID = @UserID))
				 			AND n.PublishDate <= @CurrentDate AND n.ExpireDate >= @CurrentDate
							AND ((@UserCanApprove = 1) OR (n.Approved=1))
							AND ((@AdminOrSuperUser = 1) OR (n.Active=1 OR n.UserID=@UserID))
							AND n.HasPermissions = 1
							AND n.HideDefaultLocale = 0
							AND n.PortalID = @PortalID
							AND((@FilterAuthorOrAuthors = 1 AND n.UserID IN (SELECT UserID FROM @TempAuthorsIDList)) OR (@FilterAuthorOrAuthors = 0))
						)+(
						CASE @UserID
							WHEN -1 THEN 0
							ELSE(
								SELECT count(PerRoles.[ArticleID]) FROM(
									SELECT DISTINCT arp.[ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsArticleRolePermissions] AS arp
										INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS c ON c.ArticleID = arp.ArticleID AND c.CategoryID = Result.CategoryID
									WHERE arp.RoleID IN (SELECT RoleID FROM @UserInRoles)
										AND arp.ArticleID NOT IN (
										SELECT aup.[ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsArticleUserPermissions] AS aup
											INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS c ON c.ArticleID = aup.ArticleID AND c.CategoryID = Result.CategoryID
											INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNews] AS n ON n.ArticleID = aup.ArticleID
										WHERE aup.UserID = @UserID
					 						AND n.PublishDate <= @CurrentDate AND n.ExpireDate >= @CurrentDate
											AND ((@UserCanApprove = 1) OR (n.Approved=1))
											AND ((@AdminOrSuperUser = 1) OR (n.Active=1 OR n.UserID=@UserID))
											AND n.HasPermissions = 1
											AND n.HideDefaultLocale = 0
											AND n.PortalID = @PortalID
											AND((@FilterAuthorOrAuthors = 1 AND n.UserID IN (SELECT UserID FROM @TempAuthorsIDList)) OR (@FilterAuthorOrAuthors = 0))
										)
									) AS PerRoles 
									INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNews] AS n ON n.ArticleID = PerRoles.ArticleID
								WHERE n.PublishDate <= @CurrentDate AND n.ExpireDate >= @CurrentDate
									AND ((@UserCanApprove = 1) OR (n.Approved=1))
									AND ((@AdminOrSuperUser = 1) OR (n.Active=1 OR n.UserID=@UserID))
									AND n.HasPermissions = 1
									AND n.HideDefaultLocale = 0
									AND n.PortalID = @PortalID
									AND((@FilterAuthorOrAuthors = 1 AND n.UserID IN (SELECT UserID FROM @TempAuthorsIDList)) OR (@FilterAuthorOrAuthors = 0))
							)
							END
						)
					)
				)
			END		
		END AS ''Count''
		FROM (
		SELECT	ncl.[CategoryID],
				ncl.[PortalID],
				ncl.[CategoryName],
				ncl.[Position],
				ncl.[ParentCategory],
				ncl.[Level],
				ncl.[CategoryURL],
				ncl.[CategoryImage],
				ncl.[CategoryText],
				ncl.Show,
		CASE WHEN cl.[NewsModuleID] IS NULL THEN @DefaultModuleID ELSE cl.[NewsModuleID] END AS NewsModuleID,
		CASE WHEN tm.[TabID] IS NULL THEN @DefaultTabID ELSE tm.[TabID] END AS TabID
		FROM @tempMenuCats AS ncl LEFT OUTER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryLink] AS cl
		ON ncl.CategoryID = cl.CategoryID AND cl.[SourceModuleID] = @MenuModuleID
		LEFT OUTER JOIN {databaseOwner}[{objectQualifier}TabModules] AS tm ON cl.NewsModuleID = tm.ModuleID) AS Result
		ORDER BY Position ASC, ParentCategory ASC	
	END
	ELSE IF @FilterBySocialGroup = 1
	BEGIN
		SELECT *,
		CASE Show
			WHEN 0 THEN 0
			WHEN 1 THEN	
				CASE @AdminOrSuperUser
				WHEN 1 THEN (
					SELECT count(n.[ArticleID]) AS cnt FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS n
						INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS c ON n.ArticleID = c.ArticleID AND c.CategoryID = Result.CategoryID
						INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = n.ArticleID
						INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialGroupItems] AS sgi ON sgi.ArticleID = n.ArticleID AND sgi.RoleID = @FilterByDNNGroupID
						INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserID, @FilterByDNNGroupID) AS t ON t.seckey = nss.SecurityKey
					WHERE n.PublishDate <= @CurrentDate AND n.ExpireDate >= @CurrentDate
						AND n.PortalID = @PortalID
						AND n.HideDefaultLocale = 0
				)
				WHEN 0 THEN(
					SELECT ((
						SELECT count(n.[ArticleID]) AS cnt FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS n
							INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS c ON n.ArticleID = c.ArticleID AND c.CategoryID = Result.CategoryID
							INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = n.ArticleID
							INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialGroupItems] AS sgi ON sgi.ArticleID = n.ArticleID AND sgi.RoleID = @FilterByDNNGroupID
							INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserID, @FilterByDNNGroupID) AS t ON t.seckey = nss.SecurityKey
						WHERE n.PublishDate <= @CurrentDate AND n.ExpireDate >= @CurrentDate
							AND ((@UserCanApprove = 1) OR (n.Approved=1))
							AND ((@AdminOrSuperUser = 1) OR (n.Active=1 OR n.UserID=@UserID))
							AND n.HasPermissions = 0
							AND n.HideDefaultLocale = 0
							AND n.PortalID = @PortalID
						)+(
						SELECT count(aup.[ArticleID]) FROM {databaseOwner}[{objectQualifier}EasyDNNNewsArticleUserPermissions] AS aup
							INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS c ON c.ArticleID = aup.ArticleID AND c.CategoryID = Result.CategoryID
							INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNews] AS n ON n.ArticleID = aup.ArticleID
							INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = n.ArticleID
							INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialGroupItems] AS sgi ON sgi.ArticleID = n.ArticleID AND sgi.RoleID = @FilterByDNNGroupID
							INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserID, @FilterByDNNGroupID) AS t ON t.seckey = nss.SecurityKey
						WHERE ((@UserID = -1 AND aup.UserID IS NULL) OR (aup.UserID = @UserID))
							AND n.PublishDate <= @CurrentDate AND n.ExpireDate >= @CurrentDate
							AND ((@UserCanApprove = 1) OR (n.Approved=1))
							AND ((@AdminOrSuperUser = 1) OR (n.Active=1 OR n.UserID=@UserID))
							AND n.HasPermissions = 1
							AND n.HideDefaultLocale = 0
							AND n.PortalID = @PortalID
						)+(
						CASE @UserID
						WHEN -1 THEN 0
						ELSE(
						SELECT count(PerRoles.[ArticleID]) FROM(
							SELECT DISTINCT arp.[ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsArticleRolePermissions] AS arp
								INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS c ON c.ArticleID = arp.ArticleID AND c.CategoryID = Result.CategoryID
							WHERE arp.RoleID IN (SELECT RoleID FROM @UserInRoles)
								AND arp.ArticleID NOT IN (
								SELECT aup.[ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsArticleUserPermissions] AS aup
									INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS c ON c.ArticleID = aup.ArticleID AND c.CategoryID = Result.CategoryID
									INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNews] AS n ON n.ArticleID = aup.ArticleID
									INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = n.ArticleID
									INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialGroupItems] AS sgi ON sgi.ArticleID = n.ArticleID AND sgi.RoleID = @FilterByDNNGroupID
									INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserID, @FilterByDNNGroupID) AS t ON t.seckey = nss.SecurityKey
								WHERE aup.UserID = @UserID
				 					AND n.PublishDate <= @CurrentDate AND n.ExpireDate >= @CurrentDate
									AND ((@UserCanApprove = 1) OR (n.Approved=1))
									AND ((@AdminOrSuperUser = 1) OR (n.Active=1 OR n.UserID=@UserID))
									AND n.HasPermissions = 1
									AND n.HideDefaultLocale = 0
									AND n.PortalID = @PortalID
								)
							 ) AS PerRoles 
							 INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNews] AS n ON n.ArticleID = PerRoles.ArticleID
							 WHERE n.PublishDate <= @CurrentDate AND n.ExpireDate >= @CurrentDate
								 AND ((@UserCanApprove = 1) OR (n.Approved=1))
								 AND ((@AdminOrSuperUser = 1) OR (n.Active=1 OR n.UserID=@UserID))
								 AND n.HasPermissions = 1
								 AND n.HideDefaultLocale = 0
								 AND n.PortalID = @PortalID
							 )
						END
						)
					)
				)
			END		
		END AS ''Count''
		FROM (
		SELECT  ncl.[CategoryID],
				ncl.[PortalID],
				ncl.[CategoryName],
				ncl.[Position],
				ncl.[ParentCategory],
				ncl.[Level],
				ncl.[CategoryURL],
				ncl.[CategoryImage],
				ncl.[CategoryText],
				ncl.Show,
			CASE WHEN cl.[NewsModuleID] IS NULL THEN @DefaultModuleID ELSE cl.[NewsModuleID] END AS NewsModuleID,
			CASE WHEN tm.[TabID] IS NULL THEN @DefaultTabID ELSE tm.[TabID] END AS TabID
		FROM @tempMenuCats AS ncl LEFT OUTER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryLink] AS cl
		ON ncl.CategoryID = cl.CategoryID AND cl.[SourceModuleID] = @MenuModuleID
		LEFT OUTER JOIN {databaseOwner}[{objectQualifier}TabModules] AS tm ON cl.NewsModuleID = tm.ModuleID) AS Result
		ORDER BY Position ASC, ParentCategory ASC	
	END
	ELSE IF @FilterByDNNUserID <> 0
	BEGIN
		SELECT *,
		CASE Show
			WHEN 0 THEN 0
			WHEN 1 THEN	
				CASE @AdminOrSuperUser
				WHEN 1 THEN(
					SELECT count(n.[ArticleID]) AS cnt FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS n	 
						INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS c ON n.ArticleID = c.ArticleID
						INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = n.ArticleID AND c.CategoryID = Result.CategoryID
						INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserID, @FilterByDNNGroupID) AS t ON t.seckey = nss.SecurityKey
					WHERE  n.PublishDate <= @CurrentDate AND n.ExpireDate >= @CurrentDate
						AND n.PortalID = @PortalID
						AND n.HideDefaultLocale = 0
						AND n.UserID = @FilterByDNNUserID 
				)
				WHEN 0 THEN(
					SELECT ((
						SELECT count(n.[ArticleID]) AS cnt FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS n
							INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS c ON n.ArticleID = c.ArticleID AND c.CategoryID = Result.CategoryID
							INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = n.ArticleID
							INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserID, @FilterByDNNGroupID) AS t ON t.seckey = nss.SecurityKey
						WHERE n.PublishDate <= @CurrentDate AND n.ExpireDate >= @CurrentDate
							AND ((@UserCanApprove = 1) OR (n.Approved=1))
							AND ((@AdminOrSuperUser = 1) OR (n.Active=1 OR n.UserID=@UserID))
							AND n.HasPermissions = 0
							AND n.HideDefaultLocale = 0
							AND n.PortalID = @PortalID
							AND n.UserID = @FilterByDNNUserID
						)+(
						SELECT count(aup.[ArticleID]) FROM {databaseOwner}[{objectQualifier}EasyDNNNewsArticleUserPermissions] AS aup
							INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS c ON c.ArticleID = aup.ArticleID AND c.CategoryID = Result.CategoryID
							INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNews] AS n ON n.ArticleID = aup.ArticleID
							INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = n.ArticleID
							INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserID, @FilterByDNNGroupID) AS t ON t.seckey = nss.SecurityKey
						WHERE ((@UserID = -1 AND aup.UserID IS NULL) OR (aup.UserID = @UserID))
			 				AND n.PublishDate <= @CurrentDate AND n.ExpireDate >= @CurrentDate
							AND ((@UserCanApprove = 1) OR (n.Approved=1))
							AND ((@AdminOrSuperUser = 1) OR (n.Active=1 OR n.UserID=@UserID))
							AND n.HasPermissions = 1
							AND n.HideDefaultLocale = 0
							AND n.PortalID = @PortalID
							AND n.UserID = @FilterByDNNUserID
						)+ (
						CASE @UserID
						WHEN -1 THEN 0
						ELSE(
							SELECT count(PerRoles.[ArticleID]) FROM(
								SELECT DISTINCT arp.[ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsArticleRolePermissions] AS arp
									INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS c ON c.ArticleID = arp.ArticleID AND c.CategoryID = Result.CategoryID
								WHERE arp.RoleID IN (SELECT RoleID FROM @UserInRoles)
									AND arp.ArticleID NOT IN (
									SELECT aup.[ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsArticleUserPermissions] AS aup
										INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS c ON c.ArticleID = aup.ArticleID AND c.CategoryID = Result.CategoryID
										INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNews] AS n ON n.ArticleID = aup.ArticleID
										INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = n.ArticleID
										INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserID, @FilterByDNNGroupID) AS t ON t.seckey = nss.SecurityKey
									WHERE aup.UserID = @UserID
					 					AND n.PublishDate <= @CurrentDate AND n.ExpireDate >= @CurrentDate
										AND ((@UserCanApprove = 1) OR (n.Approved=1))
										AND ((@AdminOrSuperUser = 1) OR (n.Active=1 OR n.UserID=@UserID))
										AND n.HasPermissions = 1
										AND n.HideDefaultLocale = 0
										AND n.PortalID = @PortalID
										AND n.UserID = @FilterByDNNUserID 
			  					)
							 ) AS PerRoles 
							 INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNews] AS n ON n.ArticleID = PerRoles.ArticleID
							 WHERE n.PublishDate <= @CurrentDate AND n.ExpireDate >= @CurrentDate
							 AND ((@UserCanApprove = 1) OR (n.Approved=1))
							 AND ((@AdminOrSuperUser = 1) OR (n.Active=1 OR n.UserID=@UserID))
							 AND n.HasPermissions = 1
							 AND n.HideDefaultLocale = 0
							 AND n.PortalID = @PortalID
							 AND n.UserID = @FilterByDNNUserID
						)
					END
					)
				)
			)
			END		
		END AS ''Count''
		FROM (
		SELECT ncl.[CategoryID],
			ncl.[PortalID],
			ncl.[CategoryName],
			ncl.[Position],
			ncl.[ParentCategory],
			ncl.[Level],
			ncl.[CategoryURL],
			ncl.[CategoryImage],
			ncl.[CategoryText],
			ncl.Show,
			CASE WHEN cl.[NewsModuleID] IS NULL THEN @DefaultModuleID ELSE cl.[NewsModuleID] END AS NewsModuleID,
			CASE WHEN tm.[TabID] IS NULL THEN @DefaultTabID ELSE tm.[TabID] END AS TabID
		FROM @tempMenuCats AS ncl LEFT OUTER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryLink] AS cl
		ON ncl.CategoryID = cl.CategoryID AND cl.[SourceModuleID] = @MenuModuleID
		LEFT OUTER JOIN {databaseOwner}[{objectQualifier}TabModules] AS tm ON cl.NewsModuleID = tm.ModuleID) AS Result
		ORDER BY Position ASC, ParentCategory ASC
	END
END
ELSE
BEGIN
	IF @IsSocialInstance = 0
	BEGIN
		SELECT *,
		CASE Show
			WHEN 0 THEN 0
			WHEN 1 THEN	
				CASE @AdminOrSuperUser
				WHEN 1 THEN(
					SELECT count(c.[ArticleID]) AS cnt FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS n
						INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS c ON n.ArticleID = c.ArticleID AND c.CategoryID = Result.CategoryID
						LEFT OUTER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsContentLocalization] AS ncl ON ncl.ArticleID = n.ArticleID
					WHERE n.PublishDate <= @CurrentDate AND n.ExpireDate >= @CurrentDate
						AND n.PortalID = @PortalID
						AND ((@FilterAuthorOrAuthors = 1 AND n.UserID IN (SELECT UserID FROM @TempAuthorsIDList)) OR (@FilterAuthorOrAuthors = 0))
						AND ((@HideUnlocalizedItems = 1 AND ncl.ArticleID IS NOT NULL AND ncl.LocaleCode = @LocaleCode) OR (@HideUnlocalizedItems = 0))		 
				)
				WHEN 0 THEN(
					SELECT ((
						SELECT count(n.[ArticleID]) AS cnt FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS n
							INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS c ON n.ArticleID = c.ArticleID AND c.CategoryID = Result.CategoryID
							LEFT OUTER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsContentLocalization] AS ncl ON ncl.ArticleID = n.ArticleID
						WHERE n.PublishDate <= @CurrentDate AND n.ExpireDate >= @CurrentDate
							AND ((@UserCanApprove = 1) OR (n.Approved=1))
							AND ((@AdminOrSuperUser = 1) OR (n.Active=1 OR n.UserID=@UserID))
							AND n.HasPermissions = 0
							AND n.PortalID = @PortalID
							AND((@FilterAuthorOrAuthors = 1 AND n.UserID IN (SELECT UserID FROM @TempAuthorsIDList)) OR (@FilterAuthorOrAuthors = 0))
							AND ((@HideUnlocalizedItems = 1 AND ncl.ArticleID IS NOT NULL AND ncl.LocaleCode = @LocaleCode) OR (@HideUnlocalizedItems = 0))
						)+(
						SELECT count(aup.[ArticleID]) FROM {databaseOwner}[{objectQualifier}EasyDNNNewsArticleUserPermissions] AS aup
							INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS c ON c.ArticleID = aup.ArticleID AND c.CategoryID = Result.CategoryID
							INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNews] AS n ON n.ArticleID = aup.ArticleID
							LEFT OUTER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsContentLocalization] AS ncl ON ncl.ArticleID = n.ArticleID
						WHERE ((@UserID = -1 AND aup.UserID IS NULL) OR (aup.UserID = @UserID))
							AND n.PublishDate <= @CurrentDate AND n.ExpireDate >= @CurrentDate
							AND ((@UserCanApprove = 1) OR (n.Approved=1))
							AND ((@AdminOrSuperUser = 1) OR (n.Active=1 OR n.UserID=@UserID))
							AND n.HasPermissions = 1
							AND n.PortalID = @PortalID
							AND((@FilterAuthorOrAuthors = 1 AND n.UserID IN (SELECT UserID FROM @TempAuthorsIDList)) OR (@FilterAuthorOrAuthors = 0))
							AND ((@HideUnlocalizedItems = 1 AND ncl.ArticleID IS NOT NULL AND ncl.LocaleCode = @LocaleCode) OR (@HideUnlocalizedItems = 0))
						)+(
						CASE @UserID
						WHEN -1 THEN 0
						ELSE(
						SELECT count(PerRoles.[ArticleID]) FROM(
							SELECT DISTINCT arp.[ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsArticleRolePermissions] AS arp
								INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS c ON c.ArticleID = arp.ArticleID AND c.CategoryID = Result.CategoryID
								LEFT OUTER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsContentLocalization] AS ncl ON ncl.ArticleID = arp.ArticleID AND ncl.LocaleCode = @LocaleCode
							WHERE arp.RoleID IN (SELECT RoleID FROM @UserInRoles)
								AND arp.ArticleID NOT IN (
								SELECT aup.[ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsArticleUserPermissions] AS aup
									INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS c ON c.ArticleID = aup.ArticleID AND c.CategoryID = Result.CategoryID
									INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNews] AS n ON n.ArticleID = aup.ArticleID
									LEFT OUTER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsContentLocalization] AS ncl ON ncl.ArticleID = n.ArticleID
								WHERE aup.UserID = @UserID
			 						AND n.PublishDate <= @CurrentDate AND n.ExpireDate >= @CurrentDate
									AND ((@UserCanApprove = 1) OR (n.Approved=1))
									AND ((@AdminOrSuperUser = 1) OR (n.Active=1 OR n.UserID=@UserID))
									AND n.HasPermissions = 1
									AND n.PortalID = @PortalID
									AND((@FilterAuthorOrAuthors = 1 AND n.UserID IN (SELECT UserID FROM @TempAuthorsIDList)) OR (@FilterAuthorOrAuthors = 0))
									AND ((@HideUnlocalizedItems = 1 AND ncl.ArticleID IS NOT NULL AND ncl.LocaleCode = @LocaleCode) OR (@HideUnlocalizedItems = 0))
								) AND ((@HideUnlocalizedItems = 1 AND ncl.ArticleID IS NOT NULL AND ncl.LocaleCode = @LocaleCode) OR (@HideUnlocalizedItems = 0))
							 ) AS PerRoles 
							 INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNews] AS n ON n.ArticleID = PerRoles.ArticleID
							 WHERE n.PublishDate <= @CurrentDate AND n.ExpireDate >= @CurrentDate
								AND ((@UserCanApprove = 1) OR (n.Approved=1))
								AND ((@AdminOrSuperUser = 1) OR (n.Active=1 OR n.UserID=@UserID))
								AND n.HasPermissions = 1
								AND n.PortalID = @PortalID
								AND((@FilterAuthorOrAuthors = 1 AND n.UserID IN (SELECT UserID FROM @TempAuthorsIDList)) OR (@FilterAuthorOrAuthors = 0))
							)
						END
					)
				)
			)
			END		
		END AS ''Count''
		FROM (
		SELECT  ncl.[CategoryID],
				ncl.[PortalID],
				ncl.[CategoryName],
				ncl.[Position],
				ncl.[ParentCategory],
				ncl.[Level],
				ncl.[CategoryURL],
				ncl.[CategoryImage],
				ncl.[CategoryText],
				ncl.Show,
			CASE WHEN cl.[NewsModuleID] IS NULL THEN @DefaultModuleID ELSE cl.[NewsModuleID] END AS NewsModuleID,
			CASE WHEN tm.[TabID] IS NULL THEN @DefaultTabID ELSE tm.[TabID] END AS TabID
		FROM @tempMenuCats AS ncl LEFT OUTER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryLink] AS cl
		ON ncl.CategoryID = cl.CategoryID AND cl.[SourceModuleID] = @MenuModuleID
		LEFT OUTER JOIN {databaseOwner}[{objectQualifier}TabModules] AS tm ON cl.NewsModuleID = tm.ModuleID) AS Result
		ORDER BY Position ASC, ParentCategory ASC
	END
	ELSE IF @FilterBySocialGroup = 1
	BEGIN
		SELECT *,
		CASE Show
			WHEN 0 THEN 0
			WHEN 1 THEN	
				CASE @AdminOrSuperUser
				WHEN 1 THEN(
					SELECT count(n.[ArticleID]) AS cnt FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS n
						INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS c ON n.ArticleID = c.ArticleID AND c.CategoryID = Result.CategoryID
						INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = n.ArticleID
						INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialGroupItems] AS sgi ON sgi.ArticleID = n.ArticleID AND sgi.RoleID = @FilterByDNNGroupID
						INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserID, @FilterByDNNGroupID) AS t ON t.seckey = nss.SecurityKey
						LEFT OUTER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsContentLocalization] AS ncl ON ncl.ArticleID = n.ArticleID
					WHERE n.PublishDate <= @CurrentDate AND n.ExpireDate >= @CurrentDate
						AND n.PortalID = @PortalID
						AND ((@HideUnlocalizedItems = 1 AND ncl.ArticleID IS NOT NULL AND ncl.LocaleCode = @LocaleCode) OR (@HideUnlocalizedItems = 0))
				)
				WHEN 0 THEN(
					SELECT ((
						SELECT count(n.[ArticleID]) AS cnt FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS n
							INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS c ON n.ArticleID = c.ArticleID AND c.CategoryID = Result.CategoryID
							INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = n.ArticleID
							INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialGroupItems] AS sgi ON sgi.ArticleID = n.ArticleID AND sgi.RoleID = @FilterByDNNGroupID
							INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserID, @FilterByDNNGroupID) AS t ON t.seckey = nss.SecurityKey
							LEFT OUTER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsContentLocalization] AS ncl ON ncl.ArticleID = n.ArticleID
						WHERE n.PublishDate <= @CurrentDate AND n.ExpireDate >= @CurrentDate
							 AND ((@UserCanApprove = 1) OR (n.Approved=1))
							 AND ((@AdminOrSuperUser = 1) OR (n.Active=1 OR n.UserID=@UserID))
							 AND n.HasPermissions = 0
							 AND n.PortalID = @PortalID
							 AND ((@HideUnlocalizedItems = 1 AND ncl.ArticleID IS NOT NULL AND ncl.LocaleCode = @LocaleCode) OR (@HideUnlocalizedItems = 0))
						)+(
						SELECT count(aup.[ArticleID]) FROM {databaseOwner}[{objectQualifier}EasyDNNNewsArticleUserPermissions] AS aup
							INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS c ON c.ArticleID = aup.ArticleID AND c.CategoryID = Result.CategoryID
							INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNews] AS n ON n.ArticleID = aup.ArticleID
							INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = n.ArticleID
							INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialGroupItems] AS sgi ON sgi.ArticleID = n.ArticleID AND sgi.RoleID = @FilterByDNNGroupID
							INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserID, @FilterByDNNGroupID) AS t ON t.seckey = nss.SecurityKey
							LEFT OUTER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsContentLocalization] AS ncl ON ncl.ArticleID = n.ArticleID
						WHERE ((@UserID = -1 AND aup.UserID IS NULL) OR (aup.UserID = @UserID))
				 			AND n.PublishDate <= @CurrentDate AND n.ExpireDate >= @CurrentDate
							AND ((@UserCanApprove = 1) OR (n.Approved=1))
							AND ((@AdminOrSuperUser = 1) OR (n.Active=1 OR n.UserID=@UserID))
							AND n.HasPermissions = 1
							AND n.PortalID = @PortalID
							AND ((@HideUnlocalizedItems = 1 AND ncl.ArticleID IS NOT NULL AND ncl.LocaleCode = @LocaleCode) OR (@HideUnlocalizedItems = 0))
						)+ (
						CASE @UserID
						WHEN -1 THEN 0
						ELSE(
						SELECT count(PerRoles.[ArticleID]) FROM(
							SELECT DISTINCT arp.[ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsArticleRolePermissions] AS arp
								INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS c ON c.ArticleID = arp.ArticleID AND c.CategoryID = Result.CategoryID
								LEFT OUTER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsContentLocalization] AS ncl ON ncl.ArticleID = arp.ArticleID
							WHERE arp.RoleID IN (SELECT RoleID FROM @UserInRoles)
								AND arp.ArticleID NOT IN (
								SELECT aup.[ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsArticleUserPermissions] AS aup
									INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS c ON c.ArticleID = aup.ArticleID AND c.CategoryID = Result.CategoryID
									INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNews] AS n ON n.ArticleID = aup.ArticleID
									INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = n.ArticleID
									INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialGroupItems] AS sgi ON sgi.ArticleID = n.ArticleID AND sgi.RoleID = @FilterByDNNGroupID
									INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserID, @FilterByDNNGroupID) AS t ON t.seckey = nss.SecurityKey
									LEFT OUTER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsContentLocalization] AS ncl ON ncl.ArticleID = n.ArticleID AND ncl.LocaleCode = @LocaleCode
								WHERE aup.UserID = @UserID
				 					AND n.PublishDate <= @CurrentDate AND n.ExpireDate >= @CurrentDate
									AND ((@UserCanApprove = 1) OR (n.Approved=1))
									AND ((@AdminOrSuperUser = 1) OR (n.Active=1 OR n.UserID=@UserID))
									AND n.HasPermissions = 1
									AND n.PortalID = @PortalID
									AND ((@HideUnlocalizedItems = 1 AND ncl.ArticleID IS NOT NULL AND ncl.LocaleCode = @LocaleCode) OR (@HideUnlocalizedItems = 0))
								) AND ((@HideUnlocalizedItems = 1 AND ncl.ArticleID IS NOT NULL AND ncl.LocaleCode = @LocaleCode) OR (@HideUnlocalizedItems = 0))
							 ) AS PerRoles 
							 INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNews] AS n ON n.ArticleID = PerRoles.ArticleID
							 WHERE n.PublishDate <= @CurrentDate
							 AND n.ExpireDate >= @CurrentDate
							 AND ((@UserCanApprove = 1) OR (n.Approved=1))
							 AND ((@AdminOrSuperUser = 1) OR (n.Active=1 OR n.UserID=@UserID))
							 AND n.HasPermissions = 1
							 AND n.PortalID = @PortalID
						)
					END
					)
				)
			)
			END		
		END AS ''Count''
		FROM (
		SELECT ncl.[CategoryID],
			ncl.[PortalID],
			ncl.[CategoryName],
			ncl.[Position],
			ncl.[ParentCategory],
			ncl.[Level],
			ncl.[CategoryURL],
			ncl.[CategoryImage],
			ncl.[CategoryText],
			ncl.Show,
			CASE WHEN cl.[NewsModuleID] IS NULL THEN @DefaultModuleID ELSE cl.[NewsModuleID] END AS NewsModuleID,
			CASE WHEN tm.[TabID] IS NULL THEN @DefaultTabID ELSE tm.[TabID] END AS TabID
		FROM @tempMenuCats AS ncl LEFT OUTER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryLink] AS cl
		ON ncl.CategoryID = cl.CategoryID AND cl.[SourceModuleID] = @MenuModuleID
		LEFT OUTER JOIN {databaseOwner}[{objectQualifier}TabModules] AS tm ON cl.NewsModuleID = tm.ModuleID) AS Result
		ORDER BY Position ASC, ParentCategory ASC	
	END
	ELSE IF @FilterByDNNUserID <> 0
	BEGIN
		SELECT *,
		CASE Show
			WHEN 0 THEN 0
			WHEN 1 THEN	
				CASE @AdminOrSuperUser
				WHEN 1 THEN(
					SELECT count(n.[ArticleID]) AS cnt FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS n	 
						INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS c ON n.ArticleID = c.ArticleID AND c.CategoryID = Result.CategoryID
						INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = n.ArticleID
						INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserID, @FilterByDNNGroupID) AS t ON t.seckey = nss.SecurityKey
						LEFT OUTER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsContentLocalization] AS ncl ON ncl.ArticleID = n.ArticleID
					WHERE n.PublishDate <= @CurrentDate AND n.ExpireDate >= @CurrentDate
						AND n.PortalID = @PortalID
						AND n.UserID = @FilterByDNNUserID 
						AND ((@HideUnlocalizedItems = 1 AND ncl.ArticleID IS NOT NULL AND ncl.LocaleCode = @LocaleCode) OR (@HideUnlocalizedItems = 0))
				)
				WHEN 0 THEN(
					SELECT ((
						SELECT count(n.[ArticleID]) AS cnt FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS n
							INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS c ON n.ArticleID = c.ArticleID AND c.CategoryID = Result.CategoryID
							INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = n.ArticleID
							INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserID, @FilterByDNNGroupID) AS t ON t.seckey = nss.SecurityKey
							LEFT OUTER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsContentLocalization] AS ncl ON ncl.ArticleID = n.ArticleID
						WHERE n.PublishDate <= @CurrentDate AND n.ExpireDate >= @CurrentDate
							AND ((@UserCanApprove = 1) OR (n.Approved=1))
							AND ((@AdminOrSuperUser = 1) OR (n.Active=1 OR n.UserID=@UserID))
							AND n.HasPermissions = 0
							AND n.PortalID = @PortalID
							AND n.UserID = @FilterByDNNUserID
							AND ((@HideUnlocalizedItems = 1 AND ncl.ArticleID IS NOT NULL AND ncl.LocaleCode = @LocaleCode) OR (@HideUnlocalizedItems = 0))
						)+(
						SELECT count(aup.[ArticleID]) FROM {databaseOwner}[{objectQualifier}EasyDNNNewsArticleUserPermissions] AS aup
							INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS c ON c.ArticleID = aup.ArticleID AND c.CategoryID = Result.CategoryID
							INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNews] AS n ON n.ArticleID = aup.ArticleID
							INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = n.ArticleID
							INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserID, @FilterByDNNGroupID) AS t ON t.seckey = nss.SecurityKey
							LEFT OUTER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsContentLocalization] AS ncl ON ncl.ArticleID = n.ArticleID
						WHERE ((@UserID = -1 AND aup.UserID IS NULL) OR (aup.UserID = @UserID))
							AND n.PublishDate <= @CurrentDate AND n.ExpireDate >= @CurrentDate
							AND ((@UserCanApprove = 1) OR (n.Approved=1))
							AND ((@AdminOrSuperUser = 1) OR (n.Active=1 OR n.UserID=@UserID))
							AND n.HasPermissions = 1
							AND n.PortalID = @PortalID
							AND n.UserID = @FilterByDNNUserID
							AND ((@HideUnlocalizedItems = 1 AND ncl.ArticleID IS NOT NULL AND ncl.LocaleCode = @LocaleCode) OR (@HideUnlocalizedItems = 0))
						)+ (
						CASE @UserID
						WHEN -1 THEN 0
						ELSE(
						SELECT count(PerRoles.[ArticleID]) FROM(
							SELECT DISTINCT arp.[ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsArticleRolePermissions] AS arp
								INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS c ON c.ArticleID = arp.ArticleID AND c.CategoryID = Result.CategoryID
								LEFT OUTER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsContentLocalization] AS ncl ON ncl.ArticleID = arp.ArticleID
							WHERE arp.RoleID IN (SELECT RoleID FROM @UserInRoles)
								AND arp.ArticleID NOT IN (
								SELECT aup.[ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsArticleUserPermissions] AS aup
									INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS c ON c.ArticleID = aup.ArticleID AND c.CategoryID = Result.CategoryID
									INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNews] AS n ON n.ArticleID = aup.ArticleID
									INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = n.ArticleID
									INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserID, @FilterByDNNGroupID) AS t ON t.seckey = nss.SecurityKey
									LEFT OUTER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsContentLocalization] AS ncl ON ncl.ArticleID = n.ArticleID
								WHERE aup.UserID = @UserID
				 					AND n.PublishDate <= @CurrentDate AND n.ExpireDate >= @CurrentDate
									AND ((@UserCanApprove = 1) OR (n.Approved=1))
									AND ((@AdminOrSuperUser = 1) OR (n.Active=1 OR n.UserID=@UserID))
									AND n.HasPermissions = 1
									AND n.PortalID = @PortalID
									AND n.UserID = @FilterByDNNUserID 
									AND ((@HideUnlocalizedItems = 1 AND ncl.ArticleID IS NOT NULL AND ncl.LocaleCode = @LocaleCode) OR (@HideUnlocalizedItems = 0))
			  					) AND ((@HideUnlocalizedItems = 1 AND ncl.ArticleID IS NOT NULL AND ncl.LocaleCode = @LocaleCode) OR (@HideUnlocalizedItems = 0))
							 ) AS PerRoles 
							 INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNews] AS n ON n.ArticleID = PerRoles.ArticleID
							 WHERE n.PublishDate <= @CurrentDate
							 AND n.ExpireDate >= @CurrentDate
							 AND ((@UserCanApprove = 1) OR (n.Approved=1))
							 AND ((@AdminOrSuperUser = 1) OR (n.Active=1 OR n.UserID=@UserID))
							 AND n.HasPermissions = 1
							 AND n.PortalID = @PortalID
							 AND n.UserID = @FilterByDNNUserID
						)
					END
					)
				)
			)
		END		
		END AS ''Count''
		FROM (
		SELECT ncl.[CategoryID],
				ncl.[PortalID],
				ncl.[CategoryName],
				ncl.[Position],
				ncl.[ParentCategory],
				ncl.[Level],
				ncl.[CategoryURL],
				ncl.[CategoryImage],
				ncl.[CategoryText],
				ncl.Show,
			CASE WHEN cl.[NewsModuleID] IS NULL THEN @DefaultModuleID ELSE cl.[NewsModuleID] END AS NewsModuleID,
			CASE WHEN tm.[TabID] IS NULL THEN @DefaultTabID ELSE tm.[TabID] END AS TabID
		FROM @tempMenuCats AS ncl LEFT OUTER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryLink] AS cl
		ON ncl.CategoryID = cl.CategoryID AND cl.[SourceModuleID] = @MenuModuleID
		LEFT OUTER JOIN {databaseOwner}[{objectQualifier}TabModules] AS tm ON cl.NewsModuleID = tm.ModuleID) AS Result
		ORDER BY Position ASC, ParentCategory ASC
	END
END
END
' 
END
GO
/****** Object:  StoredProcedure {databaseOwner}[{objectQualifier}EasyDNNNewsGetItemsForCalendarOnlyNews]    Script Date: 06/24/2013 16:39:07 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'{databaseOwner}[{objectQualifier}EasyDNNNewsGetItemsForCalendarOnlyNews]') AND type in (N'P', N'PC'))
BEGIN
EXEC dbo.sp_executesql @statement = N'CREATE PROCEDURE {databaseOwner}[{objectQualifier}EasyDNNNewsGetItemsForCalendarOnlyNews]
	@PortalID int,
	@UserID int,
	@CalendarModuleID int,
	@CurrentDate DateTime,
	@AdminOrSuperUser bit  = 0,
	@FromDate DateTime = ''2012-01-01 00:00:00'', -- ovo je za normalne članke
	@ToDate DateTime = ''2012-01-01 00:00:00'',
	@eFromDate DateTime = ''2012-01-01 00:00:00'', -- ovo je za evente
	@eToDate DateTime = ''2012-01-01 00:00:00'',
	@LocaleCode nvarchar(20) = '''',
	@IsSocialInstance bit = 0,
	@FilterByDNNUserID int = 0, -- filter by some UserID / not current user ID
	@FilterByDNNGroupID int = 0, -- filter by DNNGroup/RoleID / not profile GroupID
	@ShowAllAuthors bit = 1, -- filter postavka menija
	@CategoryFilterType tinyint = 0, --0 All categories, 1 - SELECTion, 2 - AutoAdd
	@HideUnlocalizedItems bit = 0,
	@PermissionSettingsSource tinyint = 0, -- None, 1 - portal, 2 - module
	@PermissionsModuleID int = 0 -- NewsModuleID
AS
SET NOCOUNT ON;
DECLARE @UserCanApprove bit;
SET @UserCanApprove = 0;
DECLARE @UserInRoles TABLE (RoleID int NOT NULL PRIMARY KEY);
INSERT INTO @UserInRoles SELECT DISTINCT ur.[RoleID] FROM {databaseOwner}[{objectQualifier}UserRoles] AS ur INNER JOIN {databaseOwner}[{objectQualifier}Roles] AS r ON ur.RoleID = r.RoleID WHERE ur.UserID = @UserID AND r.PortalID = @PortalID AND (ur.ExpiryDate IS NULL OR ur.ExpiryDate > GETUTCDATE()) AND (ur.EffectiveDate IS NULL OR ur.EffectiveDate < GETUTCDATE());

DECLARE @UserViewCategories TABLE (CategoryID int NOT NULL PRIMARY KEY); -- all categories which user can see based on permissions
DECLARE @UserViewCategoriesWithFilter TABLE (CategoryID int NOT NULL PRIMARY KEY); -- all categories which user can see based on permissions and Module filter
DECLARE @FiltredByCategories TABLE (CategoryID int NOT NULL PRIMARY KEY); -- all categories that are filtred by module or portal

DECLARE @SettingsSource bit; SET @SettingsSource = 1;
IF @AdminOrSuperUser = 1 OR @PermissionSettingsSource = 0
BEGIN
	INSERT INTO @UserViewCategories SELECT [CategoryID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryList] WHERE PortalID = @PortalID;
END
ELSE IF @UserID = -1
BEGIN	
	IF @PermissionSettingsSource = 1 -- by portal
	BEGIN
		IF EXISTS (SELECT ShowAllCategories FROM {databaseOwner}[{objectQualifier}EasyDNNNewsRolePremissionSettings] as rps WHERE rps.PortalID = @PortalID  AND rps.ModuleID IS NULL AND rps.RoleID IS NULL AND rps.ShowAllCategories = 1)
		BEGIN
			INSERT INTO @UserViewCategories SELECT [CategoryID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryList] WHERE PortalID = @PortalID;
		END
		ELSE
		BEGIN
			INSERT INTO @UserViewCategories
			SELECT rpsc.[CategoryID] FROM  {databaseOwner}[{objectQualifier}EasyDNNNewsRolePremissionsShowCategories] as rpsc 
			INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsRolePremissionSettings] as rps ON rps.PremissionSettingsID = rpsc.PremissionSettingsID
			WHERE rps.PortalID = @PortalID  AND rps.ModuleID IS NULL AND rps.RoleID IS NULL;
		END
	END
	ELSE -- by module
	BEGIN
		SELECT @SettingsSource = PermissionsPMSource FROM {databaseOwner}[{objectQualifier}EasyDNNNewsModuleSettings] WHERE ModuleID = @PermissionsModuleID;
		IF @SettingsSource = 1
		BEGIN
			IF EXISTS (SELECT ShowAllCategories FROM {databaseOwner}[{objectQualifier}EasyDNNNewsRolePremissionSettings] as rps WHERE rps.PortalID = @PortalID  AND rps.ModuleID IS NULL AND rps.RoleID IS NULL AND rps.ShowAllCategories = 1)
			BEGIN
				INSERT INTO @UserViewCategories SELECT [CategoryID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryList] WHERE PortalID = @PortalID;
			END
			ELSE
			BEGIN
				INSERT INTO @UserViewCategories
				SELECT rpsc.[CategoryID] FROM  {databaseOwner}[{objectQualifier}EasyDNNNewsRolePremissionsShowCategories] as rpsc 
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsRolePremissionSettings] as rps ON rps.PremissionSettingsID = rpsc.PremissionSettingsID
				WHERE rps.PortalID = @PortalID  AND rps.ModuleID IS NULL AND rps.RoleID IS NULL;
			END
		END
		ELSE
		BEGIN
			IF EXISTS (SELECT ShowAllCategories FROM {databaseOwner}[{objectQualifier}EasyDNNNewsRolePremissionSettings] as rps WHERE rps.PortalID = @PortalID AND rps.ModuleID = @PermissionsModuleID AND rps.RoleID IS NULL AND rps.ShowAllCategories = 1)
			BEGIN
				INSERT INTO @UserViewCategories SELECT [CategoryID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryList] WHERE PortalID = @PortalID;
			END
			ELSE
			BEGIN
				INSERT INTO @UserViewCategories
				SELECT rpsc.[CategoryID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsRolePremissionsShowCategories] as rpsc
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsRolePremissionSettings] as rps ON rps.PremissionSettingsID = rpsc.PremissionSettingsID
				WHERE rps.PortalID = @PortalID AND rps.ModuleID = @PermissionsModuleID AND rps.RoleID IS NULL;
			END
		END
	END
END
ELSE -- registrirani korisnik
BEGIN
	IF @PermissionSettingsSource = 1 -- by portal
	BEGIN
		IF EXISTS (
				SELECT TOP (1) ShowAllCategories FROM {databaseOwner}[{objectQualifier}EasyDNNNewsRolePremissionSettings] as rps
					INNER JOIN @UserInRoles as uir ON rps.RoleID = uir.RoleID
					WHERE rps.PortalID = @PortalID AND rps.ModuleID IS NULL AND rps.ShowAllCategories = 1
				UNION
				SELECT ShowAllCategories FROM {databaseOwner}[{objectQualifier}EasyDNNNewsUserPremissionSettings] as ups
				WHERE ups.UserID = @UserID AND ups.PortalID = @PortalID AND ups.ModuleID IS NULL AND ups.ShowAllCategories = 1
		)
		BEGIN
			INSERT INTO @UserViewCategories SELECT [CategoryID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryList] WHERE PortalID = @PortalID;
		END
		ELSE
		BEGIN
			INSERT INTO @UserViewCategories
			SELECT rpsc.[CategoryID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsRolePremissionsShowCategories] as rpsc
			INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsRolePremissionSettings] as rps ON rps.PremissionSettingsID = rpsc.PremissionSettingsID
			INNER JOIN @UserInRoles as uir ON rps.RoleID = uir.RoleID
			WHERE rps.PortalID = @PortalID AND rps.ModuleID IS NULL GROUP BY rpsc.[CategoryID]
			UNION
			SELECT upsc.[CategoryID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsUserPremissionsShowCategories] as upsc
			INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsUserPremissionSettings] as ups ON ups.PremissionSettingsID = upsc.PremissionSettingsID
			WHERE ups.UserID = @UserID AND ups.PortalID = @PortalID AND ups.ModuleID IS NULL GROUP BY upsc.[CategoryID];
		END
	END
	ELSE -- by module
	BEGIN
		SELECT @SettingsSource = PermissionsPMSource FROM {databaseOwner}[{objectQualifier}EasyDNNNewsModuleSettings] WHERE ModuleID = @PermissionsModuleID;
		IF @SettingsSource = 1
		BEGIN
			IF EXISTS (
				SELECT TOP (1) ShowAllCategories FROM {databaseOwner}[{objectQualifier}EasyDNNNewsRolePremissionSettings] as rps
					INNER JOIN @UserInRoles as uir ON rps.RoleID = uir.RoleID
					WHERE rps.PortalID = @PortalID AND rps.ModuleID IS NULL AND rps.ShowAllCategories = 1
				UNION
				SELECT ShowAllCategories FROM {databaseOwner}[{objectQualifier}EasyDNNNewsUserPremissionSettings] as ups
				WHERE ups.UserID = @UserID AND ups.PortalID = @PortalID AND ups.ModuleID IS NULL AND ups.ShowAllCategories = 1
			)
			BEGIN
				INSERT INTO @UserViewCategories SELECT [CategoryID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryList] WHERE PortalID = @PortalID;
			END
			ELSE
			BEGIN
				INSERT INTO @UserViewCategories
				SELECT rpsc.[CategoryID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsRolePremissionsShowCategories] as rpsc
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsRolePremissionSettings] as rps ON rps.PremissionSettingsID = rpsc.PremissionSettingsID
				INNER JOIN @UserInRoles as uir ON rps.RoleID = uir.RoleID
				WHERE rps.PortalID = @PortalID AND rps.ModuleID IS NULL GROUP BY rpsc.[CategoryID]
				UNION
				SELECT upsc.[CategoryID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsUserPremissionsShowCategories] as upsc
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsUserPremissionSettings] as ups ON ups.PremissionSettingsID = upsc.PremissionSettingsID
				WHERE ups.UserID = @UserID AND ups.PortalID = @PortalID AND ups.ModuleID IS NULL GROUP BY upsc.[CategoryID];
			END
		END
		ELSE
		BEGIN
			IF EXISTS (
				SELECT TOP (1) ShowAllCategories FROM {databaseOwner}[{objectQualifier}EasyDNNNewsRolePremissionSettings] as rps
					INNER JOIN @UserInRoles as uir ON rps.RoleID = uir.RoleID
					WHERE rps.PortalID = @PortalID AND rps.ModuleID = @PermissionsModuleID AND rps.ShowAllCategories = 1
				UNION
				SELECT ShowAllCategories FROM {databaseOwner}[{objectQualifier}EasyDNNNewsUserPremissionSettings] as ups
				WHERE ups.UserID = @UserID AND ups.PortalID = @PortalID AND ups.ModuleID = @PermissionsModuleID AND ups.ShowAllCategories = 1
			)
			BEGIN
				INSERT INTO @UserViewCategories SELECT [CategoryID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryList] WHERE PortalID = @PortalID;
			END
			ELSE
			BEGIN
				INSERT INTO @UserViewCategories
				SELECT rpsc.[CategoryID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsRolePremissionsShowCategories] as rpsc
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsRolePremissionSettings] as rps ON rps.PremissionSettingsID = rpsc.PremissionSettingsID
				INNER JOIN @UserInRoles as uir ON rps.RoleID = uir.RoleID
				WHERE rps.PortalID = @PortalID AND rps.ModuleID = @PermissionsModuleID GROUP BY rpsc.[CategoryID]
				UNION
				SELECT upsc.[CategoryID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsUserPremissionsShowCategories] as upsc
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsUserPremissionSettings] as ups ON ups.PremissionSettingsID = upsc.PremissionSettingsID
				WHERE ups.UserID = @UserID AND ups.PortalID = @PortalID AND ups.ModuleID = @PermissionsModuleID GROUP BY upsc.[CategoryID];
			END
		END
	END
END

IF @CategoryFilterType = 0 -- 0 All categories
BEGIN
	INSERT INTO @UserViewCategoriesWithFilter SELECT [CategoryID] FROM @UserViewCategories;
	INSERT INTO @FiltredByCategories SELECT [CategoryID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryList] WHERE PortalID = @PortalID;
END
ELSE IF @CategoryFilterType = 1 -- 1 - SELECTion
BEGIN
		INSERT INTO @UserViewCategoriesWithFilter 
		SELECT cl.[CategoryID] FROM @UserViewCategories as cl
		INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsModuleCategoryItems] AS mci ON mci.CategoryID = cl.CategoryID AND mci.ModuleID = @CalendarModuleID
		
		INSERT INTO @FiltredByCategories SELECT [CategoryID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsModuleCategoryItems] WHERE ModuleID = @CalendarModuleID;
END
ELSE IF @CategoryFilterType = 2 -- 2 - AutoAdd
BEGIN
	WITH hierarchy AS(
		SELECT [CategoryID], [ParentCategory]
		FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryList] AS cl
		WHERE (cl.ParentCategory IN (SELECT [CategoryID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsModuleCategoryItems] WHERE ModuleID = @CalendarModuleID) OR cl.CategoryID IN (SELECT [CategoryID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsModuleCategoryItems] WHERE ModuleID = @CalendarModuleID)) AND PortalID = @PortalID
		UNION ALL
		SELECT c.[CategoryID], c.[ParentCategory]
		FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryList] AS c INNER JOIN hierarchy AS p ON c.ParentCategory = p.CategoryID WHERE c.PortalID = @PortalID
		)
		INSERT INTO @FiltredByCategories SELECT DISTINCT CategoryID FROM hierarchy;	
		INSERT INTO @UserViewCategoriesWithFilter SELECT uvc.CategoryID FROM @FiltredByCategories as nfc INNER JOIN @UserViewCategories as uvc ON uvc.CategoryID = nfc.CategoryID;
END

DECLARE @FilterBySocialGroup bit;
SET @FilterBySocialGroup = 0;
DECLARE @FilterAuthorOrAuthors bit;
SET @FilterAuthorOrAuthors = 0;

DECLARE @TempAuthorsIDList TABLE (UserID int NOT NULL PRIMARY KEY);
IF @IsSocialInstance = 1
	BEGIN
		IF @FilterByDNNGroupID <> 0
		BEGIN	
			SET @FilterBySocialGroup = 1;
		END
	END
ELSE
BEGIN
	IF @ShowAllAuthors = 0
	BEGIN
		SET @FilterAuthorOrAuthors = 1;
		INSERT INTO @TempAuthorsIDList
		SELECT [UserID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsModuleAuthorsItems] AS mai WHERE mai.ModuleID = @CalendarModuleID
		UNION 
		SELECT [UserID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsAuthorProfile] AS ap 
			INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsAutorGroupItems] AS agi ON ap.AuthorProfileID = agi.AuthorProfileID
			INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsModuleGroupItems] AS mgi ON mgi.GroupID = agi.GroupID
			WHERE mgi.ModuleID = @CalendarModuleID
	END
END

IF @IsSocialInstance = 0
BEGIN
IF @LocaleCode <> ''''
	BEGIN
		WITH FinalArticleIDsSet (ArticleID) AS(
			SELECT ArticleID FROM {databaseOwner}[{objectQualifier}EasyDNNNews] as n WHERE ArticleID IN(
				SELECT DISTINCT na.[ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNews] as na
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] as cat ON na.ArticleID = cat.ArticleID
					INNER JOIN @UserViewCategoriesWithFilter as uvcwf ON uvcwf.CategoryID = cat.CategoryID
					LEFT OUTER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsContentLocalization] AS ncl ON ncl.ArticleID = na.ArticleID
				WHERE na.PortalID=@PortalID
					AND ((@AdminOrSuperUser = 1) OR ((@UserCanApprove = 1 OR na.Approved = 1)AND (na.Active=1 OR na.UserID=@UserID)))
					AND na.HasPermissions = 0	 
					AND na.EventArticle = 0  
					AND na.PublishDate <= @CurrentDate AND na.ExpireDate >= @CurrentDate  
					AND na.PublishDate >= @FromDate AND na.PublishDate <= @ToDate
					AND ((@FilterAuthorOrAuthors = 1 AND na.UserID IN (SELECT UserID FROM @TempAuthorsIDList)) OR (@FilterAuthorOrAuthors = 0))
					AND ((@HideUnlocalizedItems = 1 AND ncl.ArticleID IS NOT NULL AND ncl.LocaleCode = @LocaleCode) OR (@HideUnlocalizedItems = 0))
				UNION ALL
				SELECT na.[ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNews] as na
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsArticleUserPermissions] as aup ON na.ArticleID = aup.ArticleID
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] as cat ON na.ArticleID = cat.ArticleID
					INNER JOIN @FiltredByCategories AS fbc ON fbc.CategoryID = cat.CategoryID
					LEFT OUTER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsContentLocalization] AS ncl ON ncl.ArticleID = na.ArticleID
				WHERE na.PortalID=@PortalID
					AND ((@AdminOrSuperUser = 1) OR (
						((@UserID = -1 AND aup.UserID IS NULL) OR (aup.UserID = @UserID)) AND aup.Show = 1 AND ((@UserCanApprove = 1) OR (na.Approved = 1)) AND (na.Active=1 OR na.UserID=@UserID)))
					AND na.HasPermissions = 1
					AND na.EventArticle = 0 
					AND na.PublishDate <= @CurrentDate AND na.ExpireDate >= @CurrentDate  
					AND na.PublishDate >= @FromDate AND na.PublishDate <= @ToDate
					AND ((@FilterAuthorOrAuthors = 1 AND na.UserID IN (SELECT UserID FROM @TempAuthorsIDList)) OR (@FilterAuthorOrAuthors = 0))
					AND ((@HideUnlocalizedItems = 1 AND ncl.ArticleID IS NOT NULL AND ncl.LocaleCode = @LocaleCode) OR (@HideUnlocalizedItems = 0))
				UNION
				SELECT DISTINCT na.[ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNews] as na
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsArticleRolePermissions] as arp ON na.ArticleID = arp.ArticleID
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] as cat ON na.ArticleID = cat.ArticleID
					INNER JOIN @FiltredByCategories AS fbc ON fbc.CategoryID = cat.CategoryID
					LEFT OUTER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsContentLocalization] AS ncl ON ncl.ArticleID = na.ArticleID
				WHERE na.PortalID=@PortalID
					AND ((@AdminOrSuperUser = 1) OR (
						((@UserCanApprove = 1) OR (na.Approved = 1)) AND (na.Active=1 OR na.UserID=@UserID) AND arp.Show = 1 AND arp.RoleID IN (SELECT [RoleID] FROM @UserInRoles)))
					AND na.HasPermissions = 1
					AND na.EventArticle = 0 
					AND na.PublishDate <= @CurrentDate AND na.ExpireDate >= @CurrentDate 
					AND na.PublishDate >= @FromDate AND na.PublishDate <= @ToDate
					AND((@FilterAuthorOrAuthors = 1 AND na.UserID IN (SELECT UserID FROM @TempAuthorsIDList)) OR (@FilterAuthorOrAuthors = 0))
					AND ((@HideUnlocalizedItems = 1 AND ncl.ArticleID IS NOT NULL AND ncl.LocaleCode = @LocaleCode) OR (@HideUnlocalizedItems = 0))	 
			)
		),
		FinalLocalizedArticleIDsSet (ArticleID,Title,SubTitle,Summary,Article,DetailTypeData,TitleLink,MetaDecription,MetaKeywords,MainImageTitle,MainImageDescription) AS(
			 SELECT ArticleID,Title,SubTitle,Summary,Article,DetailTypeData,clTitleLink AS TitleLink ,MetaDecription,MetaKeywords,MainImageTitle,MainImageDescription FROM {databaseOwner}[{objectQualifier}EasyDNNNewsContentLocalization] WHERE ArticleID IN (SELECT ArticleID FROM FinalArticleIDsSet) AND LocaleCode = @LocaleCode
		)
		SELECT Result.*, ne.StartDate, ne.EndDate,ne.WhloeDay,ne.ShowEndDate,
		CASE Result.EventArticle
			WHEN 1 THEN (SELECT PointData FROM {databaseOwner}[{objectQualifier}EasyDNNnewsGoogleMapsData] as md INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsArticleGoogleMapConnection] as mc ON md.GoogleMapID = mc.GoogleMapID WHERE mc.ArticleID =  Result.ArticleID)
			WHEN 0 THEN ''''
		END AS ''GoogleMapData'',
		CASE Result.EventArticle
			WHEN 1 THEN ne.StartDate
			WHEN 0 THEN Result.PublishDate
		END AS ''CombinedOrderBy''
		FROM (
			SELECT n.[ArticleID],n.[UserID],n.[Title],n.[SubTitle],n.[Summary],n.[Article],n.[ArticleImage],n.[DateAdded],n.[LastModified],n.[PublishDate]
				  ,n.[ExpireDate],n.[Approved],n.[Featured],n.[NumberOfViews],n.[RatingValue],n.[RatingCount],n.[AllowComments],n.[Active]
				  ,n.[TitleLink],n.[DetailType],n.[DetailTypeData],n.[DetailsTemplate],n.[DetailsTheme],n.[GalleryPosition],n.[GalleryDisplayType]
				  ,n.[ShowMainImage],n.[ShowMainImageFront],n.[CommentsTheme],n.[ArticleImageFolder],n.[NumberOfComments]
				  ,n.[ArticleImageSet],n.[MetaDecription],n.[MetaKeywords],n.[DisplayStyle],n.[DetailTarget]
				  ,n.[ArticleFromRSS],n.[HasPermissions],n.[EventArticle],n.[DetailMediaType],n.[DetailMediaData],n.[AuthorAliasName],n.[ShowGallery],n.[ArticleGalleryID],n.[MainImageTitle],n.[MainImageDescription]
				   FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS n WHERE ArticleID IN (SELECT ArticleID FROM FinalArticleIDsSet WHERE ArticleID NOT IN (SELECT ArticleID FROM FinalLocalizedArticleIDsSet))
			UNION ALL
			SELECT n.[ArticleID],n.[UserID],fla.[Title],fla.[SubTitle],fla.[Summary],fla.[Article],n.[ArticleImage],n.[DateAdded],n.[LastModified],n.[PublishDate]
				  ,n.[ExpireDate],n.[Approved],n.[Featured],n.[NumberOfViews],n.[RatingValue],n.[RatingCount],n.[AllowComments],n.[Active]
				  ,fla.[TitleLink],n.[DetailType],fla.[DetailTypeData],n.[DetailsTemplate],n.[DetailsTheme],n.[GalleryPosition],n.[GalleryDisplayType]
				  ,n.[ShowMainImage],n.[ShowMainImageFront],n.[CommentsTheme],n.[ArticleImageFolder],n.[NumberOfComments]
				  ,n.[ArticleImageSet],fla.[MetaDecription],fla.[MetaKeywords],n.[DisplayStyle],n.[DetailTarget]
				  ,n.[ArticleFromRSS],n.[HasPermissions],n.[EventArticle],n.[DetailMediaType],n.[DetailMediaData],n.[AuthorAliasName],n.[ShowGallery],n.[ArticleGalleryID],fla.[MainImageTitle],fla.[MainImageDescription]
			FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS n INNER JOIN FinalLocalizedArticleIDsSet AS fla ON fla.ArticleID = n.ArticleID
		) As Result LEFT OUTER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsEventsData] AS ne on Result.ArticleID = ne.ArticleID ORDER BY CombinedOrderBy;
	END
	ELSE
	BEGIN
		SELECT
		Result.[ArticleID],Result.[UserID],Result.[Title],Result.[SubTitle],Result.[Summary],Result.[Article],Result.[ArticleImage],Result.[DateAdded],Result.[LastModified],Result.[PublishDate]
		,Result.[ExpireDate],Result.[Approved],Result.[Featured],Result.[NumberOfViews],Result.[RatingValue],Result.[RatingCount],Result.[AllowComments],Result.[Active]
		,Result.[TitleLink],Result.[DetailType],Result.[DetailTypeData],Result.[DetailsTemplate],Result.[DetailsTheme],Result.[GalleryPosition],Result.[GalleryDisplayType]
		,Result.[ShowMainImage],Result.[ShowMainImageFront],Result.[CommentsTheme],Result.[ArticleImageFolder],Result.[NumberOfComments]
		,Result.[ArticleImageSet],Result.[MetaDecription],Result.[MetaKeywords],Result.[DisplayStyle],Result.[DetailTarget]
		,Result.[ArticleFromRSS],Result.[HasPermissions],Result.[EventArticle],Result.[DetailMediaType],Result.[DetailMediaData],Result.[AuthorAliasName],Result.[ShowGallery],Result.[ArticleGalleryID],Result.[MainImageTitle],Result.[MainImageDescription],
		Result.StartDate, Result.EndDate,Result.WhloeDay,Result.ShowEndDate,
		CASE Result.EventArticle
			WHEN 1 THEN (SELECT PointData FROM {databaseOwner}[{objectQualifier}EasyDNNnewsGoogleMapsData] as md INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsArticleGoogleMapConnection] as mc ON md.GoogleMapID = mc.GoogleMapID WHERE mc.ArticleID =  Result.ArticleID)
			WHEN 0 THEN ''''
		END AS ''GoogleMapData'',
		CAST (CASE Result.EventArticle
			WHEN 1 THEN Result.StartDate
			WHEN 0 THEN Result.PublishDate
		END AS DateTime ) AS ''CombinedOrderBy''
		FROM (SELECT n.*, ne.StartDate, ne.EndDate,ne.WhloeDay,ne.ShowEndDate
			FROM {databaseOwner}[{objectQualifier}EasyDNNNews] as n LEFT OUTER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsEventsData] as ne on n.ArticleID = ne.ArticleID WHERE n.ArticleID IN(
				SELECT DISTINCT na.[ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNews] as na
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] as cat ON na.ArticleID = cat.ArticleID
					INNER JOIN @UserViewCategoriesWithFilter as uvcwf ON uvcwf.CategoryID = cat.CategoryID
				WHERE na.PortalID=@PortalID
					AND ((@AdminOrSuperUser = 1) OR ((@UserCanApprove = 1 OR na.Approved = 1) AND (na.Active=1 OR na.UserID=@UserID)))
					AND na.HasPermissions = 0
					AND na.HideDefaultLocale = 0	
					AND na.EventArticle = 0 	   
					AND na.PublishDate <= @CurrentDate AND na.ExpireDate >= @CurrentDate  
					AND na.PublishDate >= @FromDate AND na.PublishDate <= @ToDate
					AND ((@FilterAuthorOrAuthors = 1 AND na.UserID IN (SELECT UserID FROM @TempAuthorsIDList)) OR (@FilterAuthorOrAuthors = 0))
				UNION ALL
				SELECT na.[ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNews] as na
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsArticleUserPermissions] as aup ON na.ArticleID = aup.ArticleID
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] as cat ON na.ArticleID = cat.ArticleID
					INNER JOIN @FiltredByCategories AS fbc ON fbc.CategoryID = cat.CategoryID
				WHERE na.PortalID=@PortalID
					AND ((@AdminOrSuperUser = 1) OR (
						((@UserID = -1 AND aup.UserID IS NULL) OR (aup.UserID = @UserID)) AND aup.Show = 1 AND ((@UserCanApprove = 1) OR (na.Approved = 1)) AND (na.Active=1 OR na.UserID=@UserID)))
					AND na.HasPermissions = 1
					AND na.HideDefaultLocale = 0
					AND na.EventArticle = 0 
					AND na.PublishDate <= @CurrentDate AND na.ExpireDate >= @CurrentDate 
					AND na.PublishDate >= @FromDate AND na.PublishDate <= @ToDate
					AND ((@FilterAuthorOrAuthors = 1 AND na.UserID IN (SELECT UserID FROM @TempAuthorsIDList)) OR (@FilterAuthorOrAuthors = 0))
				UNION
				SELECT DISTINCT na.[ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNews] as na
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsArticleRolePermissions] as arp ON na.ArticleID = arp.ArticleID
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] as cat ON na.ArticleID = cat.ArticleID
					INNER JOIN @FiltredByCategories AS fbc ON fbc.CategoryID = cat.CategoryID
				WHERE na.PortalID=@PortalID
					AND ((@AdminOrSuperUser = 1) OR (
						((@UserCanApprove = 1) OR (na.Approved = 1)) AND (na.Active=1 OR na.UserID=@UserID) AND arp.Show = 1 AND arp.RoleID IN (SELECT [RoleID] FROM @UserInRoles)))
					AND na.HasPermissions = 1
					AND na.HideDefaultLocale = 0
					AND na.EventArticle = 0 
					AND na.PublishDate <= @CurrentDate AND na.ExpireDate >= @CurrentDate  
					AND na.PublishDate >= @FromDate AND na.PublishDate <= @ToDate
					AND ((@FilterAuthorOrAuthors = 1 AND na.UserID IN (SELECT UserID FROM @TempAuthorsIDList)) OR (@FilterAuthorOrAuthors = 0))
				)
		 ) AS Result ORDER BY CombinedOrderBy;
	END
END
ELSE IF @FilterBySocialGroup = 1
BEGIN
IF @LocaleCode <> ''''
	BEGIN
		WITH FinalArticleIDsSet (ArticleID) AS(
			SELECT ArticleID FROM {databaseOwner}[{objectQualifier}EasyDNNNews] as n WHERE ArticleID IN(
				SELECT DISTINCT na.[ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNews] as na
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] as cat ON na.ArticleID = cat.ArticleID
					INNER JOIN @UserViewCategoriesWithFilter as uvcwf ON uvcwf.CategoryID = cat.CategoryID
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = na.ArticleID
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialGroupItems] AS sgi ON sgi.ArticleID = na.ArticleID AND sgi.RoleID = @FilterByDNNGroupID
					INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserID, @FilterByDNNGroupID) as t ON t.seckey = nss.SecurityKey
					LEFT OUTER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsContentLocalization] AS ncl ON ncl.ArticleID = na.ArticleID
				WHERE na.PortalID=@PortalID
					AND ((@AdminOrSuperUser = 1) OR ((@UserCanApprove = 1 OR na.Approved = 1) AND (na.Active=1 OR na.UserID=@UserID)))
					AND na.HasPermissions = 0
					AND na.EventArticle = 0 
					AND na.PublishDate <= @CurrentDate AND na.ExpireDate >= @CurrentDate 
					AND na.PublishDate >= @FromDate AND na.PublishDate <= @ToDate
					AND ((@HideUnlocalizedItems = 1 AND ncl.ArticleID IS NOT NULL AND ncl.LocaleCode = @LocaleCode) OR (@HideUnlocalizedItems = 0))
				UNION ALL
				SELECT na.[ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNews] as na
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsArticleUserPermissions] as aup ON na.ArticleID = aup.ArticleID
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] as cat ON na.ArticleID = cat.ArticleID
					INNER JOIN @FiltredByCategories AS fbc ON fbc.CategoryID = cat.CategoryID
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = na.ArticleID
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialGroupItems] AS sgi ON sgi.ArticleID = na.ArticleID AND sgi.RoleID = @FilterByDNNGroupID
					INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserID, @FilterByDNNGroupID) as t ON t.seckey = nss.SecurityKey
					LEFT OUTER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsContentLocalization] AS ncl ON ncl.ArticleID = na.ArticleID
				WHERE na.PortalID=@PortalID
					AND ((@AdminOrSuperUser = 1) OR (
						((@UserID = -1 AND aup.UserID IS NULL) OR (aup.UserID = @UserID)) AND aup.Show = 1 AND ((@UserCanApprove = 1) OR (na.Approved = 1)) AND (na.Active=1 OR na.UserID=@UserID)))
					AND na.HasPermissions = 1
					AND na.EventArticle = 0 
					AND na.PublishDate <= @CurrentDate AND na.ExpireDate >= @CurrentDate 
					AND na.PublishDate >= @FromDate AND na.PublishDate <= @ToDate
					AND ((@HideUnlocalizedItems = 1 AND ncl.ArticleID IS NOT NULL AND ncl.LocaleCode = @LocaleCode) OR (@HideUnlocalizedItems = 0))
				UNION
				SELECT DISTINCT na.[ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNews] as na
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsArticleRolePermissions] as arp ON na.ArticleID = arp.ArticleID
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] as cat ON na.ArticleID = cat.ArticleID
					INNER JOIN @FiltredByCategories AS fbc ON fbc.CategoryID = cat.CategoryID
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = na.ArticleID
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialGroupItems] AS sgi ON sgi.ArticleID = na.ArticleID AND sgi.RoleID = @FilterByDNNGroupID
					INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserID, @FilterByDNNGroupID) as t ON t.seckey = nss.SecurityKey
					LEFT OUTER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsContentLocalization] AS ncl ON ncl.ArticleID = na.ArticleID
				WHERE na.PortalID=@PortalID
					AND ((@AdminOrSuperUser = 1) OR (
						((@UserCanApprove = 1) OR (na.Approved = 1)) AND (na.Active=1 OR na.UserID=@UserID) AND arp.Show = 1 AND arp.RoleID IN (SELECT [RoleID] FROM @UserInRoles)))
					AND na.HasPermissions = 1
					AND na.EventArticle = 0 
					AND na.PublishDate <= @CurrentDate AND na.ExpireDate >= @CurrentDate
					AND na.PublishDate >= @FromDate AND na.PublishDate <= @ToDate
					AND ((@HideUnlocalizedItems = 1 AND ncl.ArticleID IS NOT NULL AND ncl.LocaleCode = @LocaleCode) OR (@HideUnlocalizedItems = 0))
			)
		),
		FinalLocalizedArticleIDsSet (ArticleID,Title,SubTitle,Summary,Article,DetailTypeData,TitleLink,MetaDecription,MetaKeywords,MainImageTitle,MainImageDescription) AS(
			SELECT ArticleID,Title,SubTitle,Summary,Article,DetailTypeData,clTitleLink AS TitleLink ,MetaDecription,MetaKeywords,MainImageTitle,MainImageDescription FROM {databaseOwner}[{objectQualifier}EasyDNNNewsContentLocalization] WHERE ArticleID IN (SELECT ArticleID FROM FinalArticleIDsSet) AND LocaleCode = @LocaleCode
		)
		SELECT Result.*, ne.StartDate, ne.EndDate,ne.WhloeDay,ne.ShowEndDate,
		 CASE Result.EventArticle
			WHEN 1 THEN (SELECT PointData FROM {databaseOwner}[{objectQualifier}EasyDNNnewsGoogleMapsData] as md INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsArticleGoogleMapConnection] as mc ON md.GoogleMapID = mc.GoogleMapID WHERE mc.ArticleID =  Result.ArticleID)
			WHEN 0 THEN ''''
		 END AS ''GoogleMapData'',
		 CASE Result.EventArticle
			WHEN 1 THEN ne.StartDate
			WHEN 0 THEN Result.PublishDate
		 END AS ''CombinedOrderBy''
		 FROM (
			SELECT n.[ArticleID],n.[UserID],n.[Title],n.[SubTitle],n.[Summary],n.[Article],n.[ArticleImage],n.[DateAdded],n.[LastModified],n.[PublishDate]
				  ,n.[ExpireDate],n.[Approved],n.[Featured],n.[NumberOfViews],n.[RatingValue],n.[RatingCount],n.[AllowComments],n.[Active]
				  ,n.[TitleLink],n.[DetailType],n.[DetailTypeData],n.[DetailsTemplate],n.[DetailsTheme],n.[GalleryPosition],n.[GalleryDisplayType]
				  ,n.[ShowMainImage],n.[ShowMainImageFront],n.[CommentsTheme],n.[ArticleImageFolder],n.[NumberOfComments]
				  ,n.[ArticleImageSet],n.[MetaDecription],n.[MetaKeywords],n.[DisplayStyle],n.[DetailTarget]
				  ,n.[ArticleFromRSS],n.[HasPermissions],n.[EventArticle],n.[DetailMediaType],n.[DetailMediaData],n.[AuthorAliasName],n.[ShowGallery],n.[ArticleGalleryID],n.[MainImageTitle],n.[MainImageDescription]
				   FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS n WHERE ArticleID IN (SELECT ArticleID FROM FinalArticleIDsSet WHERE ArticleID NOT IN (SELECT ArticleID FROM FinalLocalizedArticleIDsSet))
			UNION ALL
			SELECT n.[ArticleID],n.[UserID],fla.[Title],fla.[SubTitle],fla.[Summary],fla.[Article],n.[ArticleImage],n.[DateAdded],n.[LastModified],n.[PublishDate]
				  ,n.[ExpireDate],n.[Approved],n.[Featured],n.[NumberOfViews],n.[RatingValue],n.[RatingCount],n.[AllowComments],n.[Active]
				  ,fla.[TitleLink],n.[DetailType],fla.[DetailTypeData],n.[DetailsTemplate],n.[DetailsTheme],n.[GalleryPosition],n.[GalleryDisplayType]
				  ,n.[ShowMainImage],n.[ShowMainImageFront],n.[CommentsTheme],n.[ArticleImageFolder],n.[NumberOfComments]
				  ,n.[ArticleImageSet],fla.[MetaDecription],fla.[MetaKeywords],n.[DisplayStyle],n.[DetailTarget]
				  ,n.[ArticleFromRSS],n.[HasPermissions],n.[EventArticle],n.[DetailMediaType],n.[DetailMediaData],n.[AuthorAliasName],n.[ShowGallery],n.[ArticleGalleryID],fla.[MainImageTitle],fla.[MainImageDescription]
			FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS n INNER JOIN FinalLocalizedArticleIDsSet AS fla ON fla.ArticleID = n.ArticleID
		) As Result LEFT OUTER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsEventsData] AS ne on Result.ArticleID = ne.ArticleID ORDER BY CombinedOrderBy;
	END
	ELSE
	BEGIN
		SELECT
		Result.[ArticleID],Result.[UserID],Result.[Title],Result.[SubTitle],Result.[Summary],Result.[Article],Result.[ArticleImage],Result.[DateAdded],Result.[LastModified],Result.[PublishDate]
		,Result.[ExpireDate],Result.[Approved],Result.[Featured],Result.[NumberOfViews],Result.[RatingValue],Result.[RatingCount],Result.[AllowComments],Result.[Active]
		,Result.[TitleLink],Result.[DetailType],Result.[DetailTypeData],Result.[DetailsTemplate],Result.[DetailsTheme],Result.[GalleryPosition],Result.[GalleryDisplayType]
		,Result.[ShowMainImage],Result.[ShowMainImageFront],Result.[CommentsTheme],Result.[ArticleImageFolder],Result.[NumberOfComments]
		,Result.[ArticleImageSet],Result.[MetaDecription],Result.[MetaKeywords],Result.[DisplayStyle],Result.[DetailTarget]
		,Result.[ArticleFromRSS],Result.[HasPermissions],Result.[EventArticle],Result.[DetailMediaType],Result.[DetailMediaData],Result.[AuthorAliasName],Result.[ShowGallery],Result.[ArticleGalleryID],Result.[MainImageTitle],Result.[MainImageDescription],
		 Result.StartDate, Result.EndDate,Result.WhloeDay,Result.ShowEndDate,
		 CASE Result.EventArticle
			WHEN 1 THEN (SELECT PointData FROM {databaseOwner}[{objectQualifier}EasyDNNnewsGoogleMapsData] as md INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsArticleGoogleMapConnection] as mc ON md.GoogleMapID = mc.GoogleMapID WHERE mc.ArticleID =  Result.ArticleID)
			WHEN 0 THEN ''''
		 END AS ''GoogleMapData'',
		 CAST (CASE Result.EventArticle
			WHEN 1 THEN Result.StartDate
			WHEN 0 THEN Result.PublishDate
		 END AS DateTime ) AS ''CombinedOrderBy''
		FROM (SELECT n.*, ne.StartDate, ne.EndDate,ne.WhloeDay,ne.ShowEndDate
			FROM {databaseOwner}[{objectQualifier}EasyDNNNews] as n LEFT OUTER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsEventsData] as ne on n.ArticleID = ne.ArticleID WHERE n.ArticleID IN(
				SELECT DISTINCT na.[ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNews] as na
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] as cat ON na.ArticleID = cat.ArticleID
					INNER JOIN @UserViewCategoriesWithFilter as uvcwf ON uvcwf.CategoryID = cat.CategoryID
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = na.ArticleID
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialGroupItems] AS sgi ON sgi.ArticleID = na.ArticleID AND sgi.RoleID = @FilterByDNNGroupID
					INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserID, @FilterByDNNGroupID) as t ON t.seckey = nss.SecurityKey
				WHERE na.PortalID=@PortalID
					AND ((@AdminOrSuperUser = 1) OR ((@UserCanApprove = 1 OR na.Approved = 1) AND (na.Active=1 OR na.UserID=@UserID)))
					AND na.HasPermissions = 0
					AND na.HideDefaultLocale = 0
					AND na.EventArticle = 0 
					AND na.PublishDate <= @CurrentDate AND na.ExpireDate >= @CurrentDate  
					AND na.PublishDate >= @FromDate AND na.PublishDate <= @ToDate
				UNION ALL
				SELECT na.[ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNews] as na
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsArticleUserPermissions] as aup ON na.ArticleID = aup.ArticleID
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] as cat ON na.ArticleID = cat.ArticleID
					INNER JOIN @FiltredByCategories AS fbc ON fbc.CategoryID = cat.CategoryID
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = na.ArticleID
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialGroupItems] AS sgi ON sgi.ArticleID = na.ArticleID AND sgi.RoleID = @FilterByDNNGroupID
					INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserID, @FilterByDNNGroupID) as t ON t.seckey = nss.SecurityKey
				WHERE na.PortalID=@PortalID
					AND ((@AdminOrSuperUser = 1) OR (
						((@UserID = -1 AND aup.UserID IS NULL) OR (aup.UserID = @UserID)) AND aup.Show = 1 AND ((@UserCanApprove = 1) OR (na.Approved = 1)) AND (na.Active=1 OR na.UserID=@UserID)))
					AND na.HasPermissions = 1
					AND na.HideDefaultLocale = 0
					AND na.EventArticle = 0 
					AND na.PublishDate <= @CurrentDate AND na.ExpireDate >= @CurrentDate 
					AND na.PublishDate >= @FromDate AND na.PublishDate <= @ToDate
				UNION
				SELECT DISTINCT na.[ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNews] as na
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsArticleRolePermissions] as arp ON na.ArticleID = arp.ArticleID
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] as cat ON na.ArticleID = cat.ArticleID
					INNER JOIN @FiltredByCategories AS fbc ON fbc.CategoryID = cat.CategoryID
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = na.ArticleID
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialGroupItems] AS sgi ON sgi.ArticleID = na.ArticleID AND sgi.RoleID = @FilterByDNNGroupID
					INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserID, @FilterByDNNGroupID) as t ON t.seckey = nss.SecurityKey
				WHERE na.PortalID=@PortalID
					AND ((@AdminOrSuperUser = 1) OR (
						((@UserCanApprove = 1) OR (na.Approved = 1)) AND (na.Active=1 OR na.UserID=@UserID) AND arp.Show = 1 AND arp.RoleID IN (SELECT [RoleID] FROM @UserInRoles)))
					AND na.HasPermissions = 1
					AND na.HideDefaultLocale = 0
					AND na.EventArticle = 0 
					AND na.PublishDate <= @CurrentDate AND na.ExpireDate >= @CurrentDate 
					AND na.PublishDate >= @FromDate AND na.PublishDate <= @ToDate
			)
		 ) AS Result  ORDER BY CombinedOrderBy;
	END
END
ELSE IF @FilterByDNNUserID <> 0
BEGIN
IF @LocaleCode <> ''''
	BEGIN
		WITH FinalArticleIDsSet (ArticleID) AS(
			SELECT ArticleID FROM {databaseOwner}[{objectQualifier}EasyDNNNews] as n WHERE ArticleID IN(
				SELECT DISTINCT na.[ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNews] as na
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] as cat ON na.ArticleID = cat.ArticleID
					INNER JOIN @UserViewCategoriesWithFilter as uvcwf ON uvcwf.CategoryID = cat.CategoryID
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = na.ArticleID
					INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserID, @FilterByDNNGroupID) as t ON t.seckey = nss.SecurityKey
					LEFT OUTER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsContentLocalization] AS ncl ON ncl.ArticleID = na.ArticleID
				WHERE na.PortalID=@PortalID
					AND ((@AdminOrSuperUser = 1) OR ((@UserCanApprove = 1 OR na.Approved = 1) AND (na.Active=1 OR na.UserID=@UserID)))
					AND na.HasPermissions = 0
					AND na.EventArticle = 0 
					AND na.PublishDate <= @CurrentDate AND na.ExpireDate >= @CurrentDate
					AND na.PublishDate >= @FromDate AND na.PublishDate <= @ToDate
					AND na.UserID = @FilterByDNNUserID
					AND ((@HideUnlocalizedItems = 1 AND ncl.ArticleID IS NOT NULL AND ncl.LocaleCode = @LocaleCode) OR (@HideUnlocalizedItems = 0))
				UNION ALL
				SELECT na.[ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNews] as na
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsArticleUserPermissions] as aup ON na.ArticleID = aup.ArticleID
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] as cat ON na.ArticleID = cat.ArticleID
					INNER JOIN @FiltredByCategories AS fbc ON fbc.CategoryID = cat.CategoryID
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = na.ArticleID
					INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserID, @FilterByDNNGroupID) as t ON t.seckey = nss.SecurityKey
					LEFT OUTER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsContentLocalization] AS ncl ON ncl.ArticleID = na.ArticleID
				WHERE na.PortalID=@PortalID
					AND ((@AdminOrSuperUser = 1) OR (
						((@UserID = -1 AND aup.UserID IS NULL) OR (aup.UserID = @UserID)) AND aup.Show = 1  AND ((@UserCanApprove = 1) OR (na.Approved = 1)) AND (na.Active=1 OR na.UserID=@UserID)))
					AND na.HasPermissions = 1
					AND na.EventArticle = 0 
					AND na.PublishDate <= @CurrentDate AND na.ExpireDate >= @CurrentDate 
					AND na.PublishDate >= @FromDate AND na.PublishDate <= @ToDate
					AND na.UserID = @FilterByDNNUserID
					AND ((@HideUnlocalizedItems = 1 AND ncl.ArticleID IS NOT NULL AND ncl.LocaleCode = @LocaleCode) OR (@HideUnlocalizedItems = 0))
				UNION
				SELECT DISTINCT na.[ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNews] as na
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsArticleRolePermissions] as arp ON na.ArticleID = arp.ArticleID
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] as cat ON na.ArticleID = cat.ArticleID
					INNER JOIN @FiltredByCategories AS fbc ON fbc.CategoryID = cat.CategoryID
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = na.ArticleID
					INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserID, @FilterByDNNGroupID) as t ON t.seckey = nss.SecurityKey
					LEFT OUTER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsContentLocalization] AS ncl ON ncl.ArticleID = na.ArticleID
				WHERE na.PortalID=@PortalID
					AND ((@AdminOrSuperUser = 1) OR (
						((@UserCanApprove = 1) OR (na.Approved = 1)) AND (na.Active=1 OR na.UserID=@UserID) AND arp.Show = 1 AND arp.RoleID IN (SELECT [RoleID] FROM @UserInRoles)))
					AND na.HasPermissions = 1
					AND na.EventArticle = 0 
					AND na.PublishDate <= @CurrentDate AND na.ExpireDate >= @CurrentDate 
					AND na.PublishDate >= @FromDate AND na.PublishDate <= @ToDate
					AND na.UserID = @FilterByDNNUserID
					AND ((@HideUnlocalizedItems = 1 AND ncl.ArticleID IS NOT NULL AND ncl.LocaleCode = @LocaleCode) OR (@HideUnlocalizedItems = 0))
			)
		),
		FinalLocalizedArticleIDsSet (ArticleID,Title,SubTitle,Summary,Article,DetailTypeData,TitleLink,MetaDecription,MetaKeywords,MainImageTitle,MainImageDescription) AS(
			SELECT ArticleID,Title,SubTitle,Summary,Article,DetailTypeData,clTitleLink AS TitleLink ,MetaDecription,MetaKeywords,MainImageTitle,MainImageDescription FROM {databaseOwner}[{objectQualifier}EasyDNNNewsContentLocalization] WHERE ArticleID IN (SELECT ArticleID FROM FinalArticleIDsSet) AND LocaleCode = @LocaleCode
		)
		SELECT Result.*, ne.StartDate, ne.EndDate,ne.WhloeDay,ne.ShowEndDate,
		 CASE Result.EventArticle
			WHEN 1 THEN (SELECT PointData FROM {databaseOwner}[{objectQualifier}EasyDNNnewsGoogleMapsData] as md INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsArticleGoogleMapConnection] as mc ON md.GoogleMapID = mc.GoogleMapID WHERE mc.ArticleID =  Result.ArticleID)
			WHEN 0 THEN ''''
		 END AS ''GoogleMapData'',
		 CASE Result.EventArticle
			WHEN 1 THEN ne.StartDate
			WHEN 0 THEN Result.PublishDate
		 END AS ''CombinedOrderBy''
		 FROM (
			SELECT n.[ArticleID],n.[UserID],n.[Title],n.[SubTitle],n.[Summary],n.[Article],n.[ArticleImage],n.[DateAdded],n.[LastModified],n.[PublishDate]
				  ,n.[ExpireDate],n.[Approved],n.[Featured],n.[NumberOfViews],n.[RatingValue],n.[RatingCount],n.[AllowComments],n.[Active]
				  ,n.[TitleLink],n.[DetailType],n.[DetailTypeData],n.[DetailsTemplate],n.[DetailsTheme],n.[GalleryPosition],n.[GalleryDisplayType]
				  ,n.[ShowMainImage],n.[ShowMainImageFront],n.[CommentsTheme],n.[ArticleImageFolder],n.[NumberOfComments]
				  ,n.[ArticleImageSet],n.[MetaDecription],n.[MetaKeywords],n.[DisplayStyle],n.[DetailTarget]
				  ,n.[ArticleFromRSS],n.[HasPermissions],n.[EventArticle],n.[DetailMediaType],n.[DetailMediaData],n.[AuthorAliasName],n.[ShowGallery],n.[ArticleGalleryID],n.[MainImageTitle],n.[MainImageDescription]
				   FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS n WHERE ArticleID IN (SELECT ArticleID FROM FinalArticleIDsSet WHERE ArticleID NOT IN (SELECT ArticleID FROM FinalLocalizedArticleIDsSet))
			UNION ALL
			SELECT n.[ArticleID],n.[UserID],fla.[Title],fla.[SubTitle],fla.[Summary],fla.[Article],n.[ArticleImage],n.[DateAdded],n.[LastModified],n.[PublishDate]
				  ,n.[ExpireDate],n.[Approved],n.[Featured],n.[NumberOfViews],n.[RatingValue],n.[RatingCount],n.[AllowComments],n.[Active]
				  ,fla.[TitleLink],n.[DetailType],fla.[DetailTypeData],n.[DetailsTemplate],n.[DetailsTheme],n.[GalleryPosition],n.[GalleryDisplayType]
				  ,n.[ShowMainImage],n.[ShowMainImageFront],n.[CommentsTheme],n.[ArticleImageFolder],n.[NumberOfComments]
				  ,n.[ArticleImageSet],fla.[MetaDecription],fla.[MetaKeywords],n.[DisplayStyle],n.[DetailTarget]
				  ,n.[ArticleFromRSS],n.[HasPermissions],n.[EventArticle],n.[DetailMediaType],n.[DetailMediaData],n.[AuthorAliasName],n.[ShowGallery],n.[ArticleGalleryID],fla.[MainImageTitle],fla.[MainImageDescription]
			FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS n INNER JOIN FinalLocalizedArticleIDsSet AS fla ON fla.ArticleID = n.ArticleID
		) As Result LEFT OUTER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsEventsData] AS ne on Result.ArticleID = ne.ArticleID ORDER BY CombinedOrderBy;
	END
	ELSE
	BEGIN
		SELECT
		Result.[ArticleID],Result.[UserID],Result.[Title],Result.[SubTitle],Result.[Summary],Result.[Article],Result.[ArticleImage],Result.[DateAdded],Result.[LastModified],Result.[PublishDate]
		,Result.[ExpireDate],Result.[Approved],Result.[Featured],Result.[NumberOfViews],Result.[RatingValue],Result.[RatingCount],Result.[AllowComments],Result.[Active]
		,Result.[TitleLink],Result.[DetailType],Result.[DetailTypeData],Result.[DetailsTemplate],Result.[DetailsTheme],Result.[GalleryPosition],Result.[GalleryDisplayType]
		,Result.[ShowMainImage],Result.[ShowMainImageFront],Result.[CommentsTheme],Result.[ArticleImageFolder],Result.[NumberOfComments]
		,Result.[ArticleImageSet],Result.[MetaDecription],Result.[MetaKeywords],Result.[DisplayStyle],Result.[DetailTarget]
		,Result.[ArticleFromRSS],Result.[HasPermissions],Result.[EventArticle],Result.[DetailMediaType],Result.[DetailMediaData],Result.[AuthorAliasName],Result.[ShowGallery],Result.[ArticleGalleryID],Result.[MainImageTitle],Result.[MainImageDescription],
		 Result.StartDate, Result.EndDate,Result.WhloeDay,Result.ShowEndDate,
		 CASE Result.EventArticle
			WHEN 1 THEN (SELECT PointData FROM {databaseOwner}[{objectQualifier}EasyDNNnewsGoogleMapsData] as md INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsArticleGoogleMapConnection] as mc ON md.GoogleMapID = mc.GoogleMapID WHERE mc.ArticleID =  Result.ArticleID)
			WHEN 0 THEN ''''
		 END AS ''GoogleMapData'',
		 CAST (CASE Result.EventArticle
			WHEN 1 THEN Result.StartDate
			WHEN 0 THEN Result.PublishDate
		 END AS DateTime ) AS ''CombinedOrderBy''
		 FROM (SELECT n.*, ne.StartDate, ne.EndDate,ne.WhloeDay,ne.ShowEndDate
			FROM {databaseOwner}[{objectQualifier}EasyDNNNews] as n LEFT OUTER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsEventsData] as ne on n.ArticleID = ne.ArticleID WHERE n.ArticleID IN(
				SELECT DISTINCT na.[ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNews] as na
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] as cat ON na.ArticleID = cat.ArticleID
					INNER JOIN @UserViewCategoriesWithFilter as uvcwf ON uvcwf.CategoryID = cat.CategoryID
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = na.ArticleID
					INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserID, @FilterByDNNGroupID) as t ON t.seckey = nss.SecurityKey
				WHERE na.PortalID=@PortalID
					AND ((@AdminOrSuperUser = 1) OR ((@UserCanApprove = 1 OR na.Approved = 1) AND (na.Active=1 OR na.UserID=@UserID)))
					AND na.HasPermissions = 0
					AND na.HideDefaultLocale = 0
					AND na.EventArticle = 0 
					AND na.PublishDate <= @CurrentDate AND na.ExpireDate >= @CurrentDate 
					AND na.PublishDate >= @FromDate AND na.PublishDate <= @ToDate
					AND na.UserID = @FilterByDNNUserID
				UNION ALL
				SELECT na.[ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNews] as na
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsArticleUserPermissions] as aup ON na.ArticleID = aup.ArticleID
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] as cat ON na.ArticleID = cat.ArticleID
					INNER JOIN @FiltredByCategories AS fbc ON fbc.CategoryID = cat.CategoryID
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = na.ArticleID
					INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserID, @FilterByDNNGroupID) as t ON t.seckey = nss.SecurityKey
				WHERE na.PortalID=@PortalID
					AND ((@AdminOrSuperUser = 1) OR (
						((@UserID = -1 AND aup.UserID IS NULL) OR (aup.UserID = @UserID)) AND aup.Show = 1  AND ((@UserCanApprove = 1) OR (na.Approved = 1)) AND (na.Active=1 OR na.UserID=@UserID)))
					AND na.HasPermissions = 1
					AND na.HideDefaultLocale = 0
					AND na.EventArticle = 0 
					AND na.PublishDate <= @CurrentDate AND na.ExpireDate >= @CurrentDate 
					AND na.PublishDate >= @FromDate AND na.PublishDate <= @ToDate
					AND na.UserID = @FilterByDNNUserID
				UNION
				SELECT DISTINCT na.[ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNews] as na
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsArticleRolePermissions] as arp ON na.ArticleID = arp.ArticleID
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] as cat ON na.ArticleID = cat.ArticleID
					INNER JOIN @FiltredByCategories AS fbc ON fbc.CategoryID = cat.CategoryID
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = na.ArticleID
					INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserID, @FilterByDNNGroupID) as t ON t.seckey = nss.SecurityKey
				WHERE na.PortalID=@PortalID
					AND ((@AdminOrSuperUser = 1) OR (
						((@UserCanApprove = 1) OR (na.Approved = 1)) AND (na.Active=1 OR na.UserID=@UserID) AND arp.Show = 1 AND arp.RoleID IN (SELECT [RoleID] FROM @UserInRoles)))
					AND na.HasPermissions = 1
					AND na.HideDefaultLocale = 0
					AND na.EventArticle = 0 
					AND na.PublishDate <= @CurrentDate AND na.ExpireDate >= @CurrentDate 
					AND na.PublishDate >= @FromDate AND na.PublishDate <= @ToDate
					AND na.UserID = @FilterByDNNUserID
			)
		) AS Result ORDER BY CombinedOrderBy;
	END
END' 
END
GO
/****** Object:  StoredProcedure {databaseOwner}[{objectQualifier}EasyDNNNewsGetItemsForCalendarOnlyEvents]    Script Date: 06/24/2013 16:39:07 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'{databaseOwner}[{objectQualifier}EasyDNNNewsGetItemsForCalendarOnlyEvents]') AND type in (N'P', N'PC'))
BEGIN
EXEC dbo.sp_executesql @statement = N'CREATE PROCEDURE {databaseOwner}[{objectQualifier}EasyDNNNewsGetItemsForCalendarOnlyEvents]
	@PortalID int,
	@UserID int,
	@CalendarModuleID int,
	@CurrentDate DateTime,
	@AdminOrSuperUser bit  = 0,
	@FromDate DateTime = ''2012-01-01 00:00:00'', -- ovo je za normalne članke
	@ToDate DateTime = ''2012-01-01 00:00:00'',
	@eFromDate DateTime = ''2012-01-01 00:00:00'', -- ovo je za evente
	@eToDate DateTime = ''2012-01-01 00:00:00'',
	@DisplayType tinyint = 0, -- 0 od do, 1 publish date, 2 oboje
	@LocaleCode nvarchar(20) = '''',
	@IsSocialInstance bit = 0,
	@FilterByDNNUserID int = 0, -- filter by some UserID / not current user ID
	@FilterByDNNGroupID int = 0, -- filter by DNNGroup/RoleID / not profile GroupID
	@ShowAllAuthors bit = 1, -- filter postavka menija
	@CategoryFilterType tinyint = 0, --0 All categories, 1 - SELECTion, 2 - AutoAdd
	@HideUnlocalizedItems bit = 0,
	@PermissionSettingsSource tinyint = 0, -- None, 1 - portal, 2 - module
	@PermissionsModuleID int = 0 -- NewsModuleID
AS
SET NOCOUNT ON;
DECLARE @UserCanApprove bit;
SET @UserCanApprove = 0;
DECLARE @UserInRoles table (RoleID int NOT NULL PRIMARY KEY);
INSERT INTO @UserInRoles SELECT DISTINCT ur.[RoleID] FROM {databaseOwner}[{objectQualifier}UserRoles] AS ur INNER JOIN {databaseOwner}[{objectQualifier}Roles] AS r ON ur.RoleID = r.RoleID WHERE ur.UserID = @UserID AND r.PortalID = @PortalID AND (ur.ExpiryDate IS NULL OR ur.ExpiryDate > GETUTCDATE()) AND (ur.EffectiveDate IS NULL OR ur.EffectiveDate < GETUTCDATE());

DECLARE @UserViewCategories table (CategoryID int NOT NULL PRIMARY KEY); -- all categories which user can see based on permissions
DECLARE @UserViewCategoriesWithFilter table (CategoryID int NOT NULL PRIMARY KEY); -- all categories which user can see based on permissions and Module filter
DECLARE @FiltredByCategories table (CategoryID int NOT NULL PRIMARY KEY); -- all categories that are filtred by module or portal

DECLARE @SettingsSource bit; SET @SettingsSource = 1;
IF @AdminOrSuperUser = 1 OR @PermissionSettingsSource = 0
BEGIN
	INSERT INTO @UserViewCategories SELECT [CategoryID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryList] WHERE PortalID = @PortalID;
END
ELSE IF @UserID = -1
BEGIN	
	IF @PermissionSettingsSource = 1 -- by portal
	BEGIN
		IF EXISTS (SELECT ShowAllCategories FROM {databaseOwner}[{objectQualifier}EasyDNNNewsRolePremissionSettings] as rps WHERE rps.PortalID = @PortalID  AND rps.ModuleID IS NULL AND rps.RoleID IS NULL AND rps.ShowAllCategories = 1)
		BEGIN
			INSERT INTO @UserViewCategories SELECT [CategoryID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryList] WHERE PortalID = @PortalID;
		END
		ELSE
		BEGIN
			INSERT INTO @UserViewCategories
			SELECT rpsc.[CategoryID] FROM  {databaseOwner}[{objectQualifier}EasyDNNNewsRolePremissionsShowCategories] as rpsc 
			INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsRolePremissionSettings] as rps ON rps.PremissionSettingsID = rpsc.PremissionSettingsID
			WHERE rps.PortalID = @PortalID  AND rps.ModuleID IS NULL AND rps.RoleID IS NULL;
		END
	END
	ELSE -- by module
	BEGIN
		SELECT @SettingsSource = PermissionsPMSource FROM {databaseOwner}[{objectQualifier}EasyDNNNewsModuleSettings] WHERE ModuleID = @PermissionsModuleID;
		IF @SettingsSource = 1
		BEGIN
			IF EXISTS (SELECT ShowAllCategories FROM {databaseOwner}[{objectQualifier}EasyDNNNewsRolePremissionSettings] as rps WHERE rps.PortalID = @PortalID  AND rps.ModuleID IS NULL AND rps.RoleID IS NULL AND rps.ShowAllCategories = 1)
			BEGIN
				INSERT INTO @UserViewCategories SELECT [CategoryID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryList] WHERE PortalID = @PortalID;
			END
			ELSE
			BEGIN
				INSERT INTO @UserViewCategories
				SELECT rpsc.[CategoryID] FROM  {databaseOwner}[{objectQualifier}EasyDNNNewsRolePremissionsShowCategories] as rpsc 
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsRolePremissionSettings] as rps ON rps.PremissionSettingsID = rpsc.PremissionSettingsID
				WHERE rps.PortalID = @PortalID  AND rps.ModuleID IS NULL AND rps.RoleID IS NULL;
			END
		END
		ELSE
		BEGIN
			IF EXISTS (SELECT ShowAllCategories FROM {databaseOwner}[{objectQualifier}EasyDNNNewsRolePremissionSettings] as rps WHERE rps.PortalID = @PortalID AND rps.ModuleID = @PermissionsModuleID AND rps.RoleID IS NULL AND rps.ShowAllCategories = 1)
			BEGIN
				INSERT INTO @UserViewCategories SELECT [CategoryID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryList] WHERE PortalID = @PortalID;
			END
			ELSE
			BEGIN
				INSERT INTO @UserViewCategories
				SELECT rpsc.[CategoryID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsRolePremissionsShowCategories] as rpsc
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsRolePremissionSettings] as rps ON rps.PremissionSettingsID = rpsc.PremissionSettingsID
				WHERE rps.PortalID = @PortalID AND rps.ModuleID = @PermissionsModuleID AND rps.RoleID IS NULL;
			END
		END
	END
END
ELSE -- registrirani korisnik
BEGIN
	IF @PermissionSettingsSource = 1 -- by portal
	BEGIN
		IF EXISTS (
				SELECT TOP (1) ShowAllCategories FROM {databaseOwner}[{objectQualifier}EasyDNNNewsRolePremissionSettings] as rps
					INNER JOIN @UserInRoles as uir ON rps.RoleID = uir.RoleID
					WHERE rps.PortalID = @PortalID AND rps.ModuleID IS NULL AND rps.ShowAllCategories = 1
				UNION
				SELECT ShowAllCategories FROM {databaseOwner}[{objectQualifier}EasyDNNNewsUserPremissionSettings] as ups
				WHERE ups.UserID = @UserID AND ups.PortalID = @PortalID AND ups.ModuleID IS NULL AND ups.ShowAllCategories = 1
		)
		BEGIN
			INSERT INTO @UserViewCategories SELECT [CategoryID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryList] WHERE PortalID = @PortalID;
		END
		ELSE
		BEGIN
			INSERT INTO @UserViewCategories
			SELECT rpsc.[CategoryID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsRolePremissionsShowCategories] as rpsc
			INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsRolePremissionSettings] as rps ON rps.PremissionSettingsID = rpsc.PremissionSettingsID
			INNER JOIN @UserInRoles as uir ON rps.RoleID = uir.RoleID
			WHERE rps.PortalID = @PortalID AND rps.ModuleID IS NULL GROUP BY rpsc.[CategoryID]
			UNION
			SELECT upsc.[CategoryID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsUserPremissionsShowCategories] as upsc
			INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsUserPremissionSettings] as ups ON ups.PremissionSettingsID = upsc.PremissionSettingsID
			WHERE ups.UserID = @UserID AND ups.PortalID = @PortalID AND ups.ModuleID IS NULL GROUP BY upsc.[CategoryID];
		END
	END
	ELSE -- by module
	BEGIN
		SELECT @SettingsSource = PermissionsPMSource FROM {databaseOwner}[{objectQualifier}EasyDNNNewsModuleSettings] WHERE ModuleID = @PermissionsModuleID;
		IF @SettingsSource = 1
		BEGIN
			IF EXISTS (
				SELECT TOP (1) ShowAllCategories FROM {databaseOwner}[{objectQualifier}EasyDNNNewsRolePremissionSettings] as rps
					INNER JOIN @UserInRoles as uir ON rps.RoleID = uir.RoleID
					WHERE rps.PortalID = @PortalID AND rps.ModuleID IS NULL AND rps.ShowAllCategories = 1
				UNION
				SELECT ShowAllCategories FROM {databaseOwner}[{objectQualifier}EasyDNNNewsUserPremissionSettings] as ups
				WHERE ups.UserID = @UserID AND ups.PortalID = @PortalID AND ups.ModuleID IS NULL AND ups.ShowAllCategories = 1
			)
			BEGIN
				INSERT INTO @UserViewCategories SELECT [CategoryID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryList] WHERE PortalID = @PortalID;
			END
			ELSE
			BEGIN
				INSERT INTO @UserViewCategories
				SELECT rpsc.[CategoryID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsRolePremissionsShowCategories] as rpsc
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsRolePremissionSettings] as rps ON rps.PremissionSettingsID = rpsc.PremissionSettingsID
				INNER JOIN @UserInRoles as uir ON rps.RoleID = uir.RoleID
				WHERE rps.PortalID = @PortalID AND rps.ModuleID IS NULL GROUP BY rpsc.[CategoryID]
				UNION
				SELECT upsc.[CategoryID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsUserPremissionsShowCategories] as upsc
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsUserPremissionSettings] as ups ON ups.PremissionSettingsID = upsc.PremissionSettingsID
				WHERE ups.UserID = @UserID AND ups.PortalID = @PortalID AND ups.ModuleID IS NULL GROUP BY upsc.[CategoryID];
			END
		END
		ELSE
		BEGIN
			IF EXISTS (
				SELECT TOP (1) ShowAllCategories FROM {databaseOwner}[{objectQualifier}EasyDNNNewsRolePremissionSettings] as rps
					INNER JOIN @UserInRoles as uir ON rps.RoleID = uir.RoleID
					WHERE rps.PortalID = @PortalID AND rps.ModuleID = @PermissionsModuleID AND rps.ShowAllCategories = 1
				UNION
				SELECT ShowAllCategories FROM {databaseOwner}[{objectQualifier}EasyDNNNewsUserPremissionSettings] as ups
				WHERE ups.UserID = @UserID AND ups.PortalID = @PortalID AND ups.ModuleID = @PermissionsModuleID AND ups.ShowAllCategories = 1
			)
			BEGIN
				INSERT INTO @UserViewCategories SELECT [CategoryID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryList] WHERE PortalID = @PortalID;
			END
			ELSE
			BEGIN
				INSERT INTO @UserViewCategories
				SELECT rpsc.[CategoryID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsRolePremissionsShowCategories] as rpsc
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsRolePremissionSettings] as rps ON rps.PremissionSettingsID = rpsc.PremissionSettingsID
				INNER JOIN @UserInRoles as uir ON rps.RoleID = uir.RoleID
				WHERE rps.PortalID = @PortalID AND rps.ModuleID = @PermissionsModuleID GROUP BY rpsc.[CategoryID]
				UNION
				SELECT upsc.[CategoryID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsUserPremissionsShowCategories] as upsc
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsUserPremissionSettings] as ups ON ups.PremissionSettingsID = upsc.PremissionSettingsID
				WHERE ups.UserID = @UserID AND ups.PortalID = @PortalID AND ups.ModuleID = @PermissionsModuleID GROUP BY upsc.[CategoryID];
			END
		END
	END
END

IF @CategoryFilterType = 0 -- 0 All categories
BEGIN
	INSERT INTO @UserViewCategoriesWithFilter SELECT [CategoryID] FROM @UserViewCategories;
	INSERT INTO @FiltredByCategories SELECT [CategoryID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryList] WHERE PortalID = @PortalID;
END
ELSE IF @CategoryFilterType = 1 -- 1 - SELECTion
BEGIN
		INSERT INTO @UserViewCategoriesWithFilter 
		SELECT cl.[CategoryID] FROM @UserViewCategories as cl
		INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsModuleCategoryItems] AS mci ON mci.CategoryID = cl.CategoryID AND mci.ModuleID = @CalendarModuleID
		
		INSERT INTO @FiltredByCategories SELECT [CategoryID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsModuleCategoryItems] WHERE ModuleID = @CalendarModuleID;
END
ELSE IF @CategoryFilterType = 2 -- 2 - AutoAdd
BEGIN
	WITH hierarchy AS(
		SELECT [CategoryID], [ParentCategory]
		FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryList] AS cl
		WHERE (cl.ParentCategory IN (SELECT [CategoryID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsModuleCategoryItems] WHERE ModuleID = @CalendarModuleID) OR cl.CategoryID IN (SELECT [CategoryID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsModuleCategoryItems] WHERE ModuleID = @CalendarModuleID)) AND PortalID = @PortalID
		UNION ALL
		SELECT c.[CategoryID], c.[ParentCategory]
		FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryList] AS c INNER JOIN hierarchy AS p ON c.ParentCategory = p.CategoryID WHERE c.PortalID = @PortalID
		)
		INSERT INTO @FiltredByCategories SELECT DISTINCT CategoryID FROM hierarchy;	
		INSERT INTO @UserViewCategoriesWithFilter SELECT uvc.CategoryID FROM @FiltredByCategories as nfc INNER JOIN @UserViewCategories as uvc ON uvc.CategoryID = nfc.CategoryID;
END

DECLARE @FilterBySocialGroup bit;
SET @FilterBySocialGroup = 0;
DECLARE @FilterAuthorOrAuthors bit;
SET @FilterAuthorOrAuthors = 0;

DECLARE @TempAuthorsIDList table (UserID int NOT NULL PRIMARY KEY);
IF @IsSocialInstance = 1
	BEGIN
		IF @FilterByDNNGroupID <> 0
		BEGIN	
			SET @FilterBySocialGroup = 1;
		END
	END
ELSE
BEGIN
	IF @ShowAllAuthors = 0
	BEGIN
		SET @FilterAuthorOrAuthors = 1;
		INSERT INTO @TempAuthorsIDList
		SELECT [UserID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsModuleAuthorsItems] AS mai WHERE mai.ModuleID = @CalendarModuleID
		UNION 
		SELECT [UserID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsAuthorProfile] AS ap 
			INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsAutorGroupItems] AS agi ON ap.AuthorProfileID = agi.AuthorProfileID
			INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsModuleGroupItems] AS mgi ON mgi.GroupID = agi.GroupID
			WHERE mgi.ModuleID = @CalendarModuleID
	END
END

IF @IsSocialInstance = 0
BEGIN
	IF @LocaleCode <> ''''
	BEGIN
		WITH FinalArticleIDsSet (ArticleID) AS(
			SELECT ArticleID FROM {databaseOwner}[{objectQualifier}EasyDNNNews] as n WHERE ArticleID IN(
				SELECT DISTINCT na.[ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNews] as na
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] as cat ON na.ArticleID = cat.ArticleID
					INNER JOIN @UserViewCategoriesWithFilter as uvcwf ON uvcwf.CategoryID = cat.CategoryID
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsEventsData] as ne on na.ArticleID = ne.ArticleID
					LEFT OUTER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsContentLocalization] AS ncl ON ncl.ArticleID = na.ArticleID
				WHERE na.PortalID=@PortalID
					AND ((@AdminOrSuperUser = 1) OR ((@UserCanApprove = 1 OR na.Approved=1) AND (na.Active=1 OR na.UserID=@UserID)))
					AND na.HasPermissions = 0
					AND na.EventArticle = 1
					AND na.PublishDate <= @CurrentDate AND na.ExpireDate >= @CurrentDate
					AND (
						(@DisplayType = 0 AND (ne.StartDate <= @eToDate AND ne.EndDate >= @eFromDate)) OR
						(@DisplayType = 1 AND (na.PublishDate >= @FromDate AND na.PublishDate <= @ToDate)) OR
						(@DisplayType = 2 AND ((na.PublishDate >= @FromDate AND na.PublishDate <= @ToDate) OR (ne.StartDate <= @eToDate AND ne.EndDate >= @eFromDate)))
						)
					AND ((@FilterAuthorOrAuthors = 1 AND na.UserID IN (SELECT UserID FROM @TempAuthorsIDList)) OR (@FilterAuthorOrAuthors = 0))
					AND ((@HideUnlocalizedItems = 1 AND ncl.ArticleID IS NOT NULL AND ncl.LocaleCode = @LocaleCode) OR (@HideUnlocalizedItems = 0))
				UNION ALL
				SELECT na.[ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNews] as na
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsArticleUserPermissions] as aup ON na.ArticleID = aup.ArticleID
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] as cat ON na.ArticleID = cat.ArticleID
					INNER JOIN @FiltredByCategories AS fbc ON fbc.CategoryID = cat.CategoryID
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsEventsData] as ne on na.ArticleID = ne.ArticleID
					LEFT OUTER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsContentLocalization] AS ncl ON ncl.ArticleID = na.ArticleID
				WHERE na.PortalID=@PortalID
					AND ((@AdminOrSuperUser = 1) OR (
						((@UserID = -1 AND aup.UserID IS NULL) OR (aup.UserID = @UserID)) AND aup.Show = 1 AND ((@UserCanApprove = 1) OR (na.Approved=1)) AND (na.Active=1 OR na.UserID=@UserID)))
					AND na.HasPermissions = 1
					AND na.EventArticle = 1
					AND na.PublishDate <= @CurrentDate AND na.ExpireDate >= @CurrentDate
					AND (
						(@DisplayType = 0 AND (ne.StartDate <= @eToDate AND ne.EndDate >= @eFromDate)) OR
						(@DisplayType = 1 AND (na.PublishDate >= @FromDate AND na.PublishDate <= @ToDate)) OR
						(@DisplayType = 2 AND ((na.PublishDate >= @FromDate AND na.PublishDate <= @ToDate) OR (ne.StartDate <= @eToDate AND ne.EndDate >= @eFromDate)))
						)
					AND ((@FilterAuthorOrAuthors = 1 AND na.UserID IN (SELECT UserID FROM @TempAuthorsIDList)) OR (@FilterAuthorOrAuthors = 0))
					AND ((@HideUnlocalizedItems = 1 AND ncl.ArticleID IS NOT NULL AND ncl.LocaleCode = @LocaleCode) OR (@HideUnlocalizedItems = 0))
				UNION
				SELECT DISTINCT na.[ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNews] as na
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsArticleRolePermissions] as arp ON na.ArticleID = arp.ArticleID
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] as cat ON na.ArticleID = cat.ArticleID
					INNER JOIN @FiltredByCategories AS fbc ON fbc.CategoryID = cat.CategoryID
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsEventsData] as ne on na.ArticleID = ne.ArticleID
					LEFT OUTER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsContentLocalization] AS ncl ON ncl.ArticleID = na.ArticleID
				WHERE na.PortalID=@PortalID
					AND ((@AdminOrSuperUser = 1) OR (
						((@UserCanApprove = 1) OR (na.Approved=1)) AND (na.Active=1 OR na.UserID=@UserID) AND arp.Show = 1 AND arp.RoleID IN (SELECT [RoleID] FROM @UserInRoles)))
					AND na.HasPermissions = 1
					AND na.EventArticle = 1
					AND na.PublishDate <= @CurrentDate AND na.ExpireDate >= @CurrentDate
					AND (
						(@DisplayType = 0 AND (ne.StartDate <= @eToDate AND ne.EndDate >= @eFromDate)) OR
						(@DisplayType = 1 AND (na.PublishDate >= @FromDate AND na.PublishDate <= @ToDate)) OR
						(@DisplayType = 2 AND ((na.PublishDate >= @FromDate AND na.PublishDate <= @ToDate) OR (ne.StartDate <= @eToDate AND ne.EndDate >= @eFromDate)))
						) 
					AND ((@FilterAuthorOrAuthors = 1 AND na.UserID IN (SELECT UserID FROM @TempAuthorsIDList)) OR (@FilterAuthorOrAuthors = 0))
					AND ((@HideUnlocalizedItems = 1 AND ncl.ArticleID IS NOT NULL AND ncl.LocaleCode = @LocaleCode) OR (@HideUnlocalizedItems = 0))
				)
			),
			FinalLocalizedArticleIDsSet (ArticleID,Title,SubTitle,Summary,Article,DetailTypeData,TitleLink,MetaDecription,MetaKeywords,MainImageTitle,MainImageDescription) AS(
				SELECT ArticleID,Title,SubTitle,Summary,Article,DetailTypeData,clTitleLink AS TitleLink ,MetaDecription,MetaKeywords,MainImageTitle,MainImageDescription FROM {databaseOwner}[{objectQualifier}EasyDNNNewsContentLocalization] WHERE ArticleID IN (SELECT ArticleID FROM FinalArticleIDsSet) AND LocaleCode = @LocaleCode
			)

			SELECT Result.*, ne.StartDate, ne.EndDate,ne.WhloeDay,ne.ShowEndDate,
			CASE Result.EventArticle
				WHEN 1 THEN (SELECT PointData FROM {databaseOwner}[{objectQualifier}EasyDNNnewsGoogleMapsData] as md INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsArticleGoogleMapConnection] as mc ON md.GoogleMapID = mc.GoogleMapID WHERE mc.ArticleID =  Result.ArticleID)
				WHEN 0 THEN ''''
			END AS ''GoogleMapData'',
			CASE Result.EventArticle
				WHEN 1 THEN ne.StartDate
				WHEN 0 THEN Result.PublishDate
			END AS ''CombinedOrderBy''
			FROM (
				SELECT n.[ArticleID],n.[UserID],n.[Title],n.[SubTitle],n.[Summary],n.[Article],n.[ArticleImage],n.[DateAdded],n.[LastModified],n.[PublishDate]
					  ,n.[ExpireDate],n.[Approved],n.[Featured],n.[NumberOfViews],n.[RatingValue],n.[RatingCount],n.[AllowComments],n.[Active]
					  ,n.[TitleLink],n.[DetailType],n.[DetailTypeData],n.[DetailsTemplate],n.[DetailsTheme],n.[GalleryPosition],n.[GalleryDisplayType]
					  ,n.[ShowMainImage],n.[ShowMainImageFront],n.[CommentsTheme],n.[ArticleImageFolder],n.[NumberOfComments]
					  ,n.[ArticleImageSet],n.[MetaDecription],n.[MetaKeywords],n.[DisplayStyle],n.[DetailTarget]
					  ,n.[ArticleFromRSS],n.[HasPermissions],n.[EventArticle],n.[DetailMediaType],n.[DetailMediaData],n.[AuthorAliasName],n.[ShowGallery],n.[ArticleGalleryID],n.[MainImageTitle],n.[MainImageDescription]
					   FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS n WHERE ArticleID IN (SELECT ArticleID FROM FinalArticleIDsSet WHERE ArticleID NOT IN (SELECT ArticleID FROM FinalLocalizedArticleIDsSet))
				UNION ALL
				SELECT n.[ArticleID],n.[UserID],fla.[Title],fla.[SubTitle],fla.[Summary],fla.[Article],n.[ArticleImage],n.[DateAdded],n.[LastModified],n.[PublishDate]
					  ,n.[ExpireDate],n.[Approved],n.[Featured],n.[NumberOfViews],n.[RatingValue],n.[RatingCount],n.[AllowComments],n.[Active]
					  ,fla.[TitleLink],n.[DetailType],fla.[DetailTypeData],n.[DetailsTemplate],n.[DetailsTheme],n.[GalleryPosition],n.[GalleryDisplayType]
					  ,n.[ShowMainImage],n.[ShowMainImageFront],n.[CommentsTheme],n.[ArticleImageFolder],n.[NumberOfComments]
					  ,n.[ArticleImageSet],fla.[MetaDecription],fla.[MetaKeywords],n.[DisplayStyle],n.[DetailTarget]
					  ,n.[ArticleFromRSS],n.[HasPermissions],n.[EventArticle],n.[DetailMediaType],n.[DetailMediaData],n.[AuthorAliasName],n.[ShowGallery],n.[ArticleGalleryID],fla.[MainImageTitle],fla.[MainImageDescription]
				FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS n INNER JOIN FinalLocalizedArticleIDsSet AS fla ON fla.ArticleID = n.ArticleID
			) As Result LEFT OUTER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsEventsData] AS ne on Result.ArticleID = ne.ArticleID ORDER BY CombinedOrderBy;
	END
	ELSE
	BEGIN
		SELECT
		Result.[ArticleID],Result.[UserID],Result.[Title],Result.[SubTitle],Result.[Summary],Result.[Article],Result.[ArticleImage],Result.[DateAdded],Result.[LastModified],Result.[PublishDate]
		,Result.[ExpireDate],Result.[Approved],Result.[Featured],Result.[NumberOfViews],Result.[RatingValue],Result.[RatingCount],Result.[AllowComments],Result.[Active]
		,Result.[TitleLink],Result.[DetailType],Result.[DetailTypeData],Result.[DetailsTemplate],Result.[DetailsTheme],Result.[GalleryPosition],Result.[GalleryDisplayType]
		,Result.[ShowMainImage],Result.[ShowMainImageFront],Result.[CommentsTheme],Result.[ArticleImageFolder],Result.[NumberOfComments]
		,Result.[ArticleImageSet],Result.[MetaDecription],Result.[MetaKeywords],Result.[DisplayStyle],Result.[DetailTarget]
		,Result.[ArticleFromRSS],Result.[HasPermissions],Result.[EventArticle],Result.[DetailMediaType],Result.[DetailMediaData],Result.[AuthorAliasName],Result.[ShowGallery],Result.[ArticleGalleryID],Result.[MainImageTitle],Result.[MainImageDescription],
		Result.StartDate, Result.EndDate,Result.WhloeDay,Result.ShowEndDate,
		CASE Result.EventArticle
			WHEN 1 THEN (SELECT PointData FROM {databaseOwner}[{objectQualifier}EasyDNNnewsGoogleMapsData] as md INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsArticleGoogleMapConnection] as mc ON md.GoogleMapID = mc.GoogleMapID WHERE mc.ArticleID =  Result.ArticleID)
			WHEN 0 THEN ''''
		END AS ''GoogleMapData'',
		CAST (CASE Result.EventArticle
			WHEN 1 THEN Result.StartDate
			WHEN 0 THEN Result.PublishDate
		END AS DateTime ) AS ''CombinedOrderBy''
		FROM (SELECT n.*, ne.StartDate, ne.EndDate,ne.WhloeDay,ne.ShowEndDate
			FROM {databaseOwner}[{objectQualifier}EasyDNNNews] as n LEFT OUTER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsEventsData] as ne on n.ArticleID = ne.ArticleID WHERE n.ArticleID IN(
				SELECT DISTINCT na.[ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNews] as na
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] as cat ON na.ArticleID = cat.ArticleID
					INNER JOIN @UserViewCategoriesWithFilter as uvcwf ON uvcwf.CategoryID = cat.CategoryID
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsEventsData] as ne on na.ArticleID = ne.ArticleID
				WHERE na.PortalID=@PortalID
					AND ((@AdminOrSuperUser = 1) OR ((@UserCanApprove = 1 OR na.Approved=1) AND (na.Active=1 OR na.UserID=@UserID)))
					AND na.HasPermissions = 0
					AND na.HideDefaultLocale = 0
					AND na.EventArticle = 1
					AND na.PublishDate <= @CurrentDate AND na.ExpireDate >= @CurrentDate
					AND (
						(@DisplayType = 0 AND (ne.StartDate <= @eToDate AND ne.EndDate >= @eFromDate)) OR
						(@DisplayType = 1 AND (na.PublishDate >= @FromDate AND na.PublishDate <= @ToDate)) OR
						(@DisplayType = 2 AND ((na.PublishDate >= @FromDate AND na.PublishDate <= @ToDate) OR (ne.StartDate <= @eToDate AND ne.EndDate >= @eFromDate)))
						) 
					AND ((@FilterAuthorOrAuthors = 1 AND na.UserID IN (SELECT UserID FROM @TempAuthorsIDList)) OR (@FilterAuthorOrAuthors = 0))
				UNION ALL
				SELECT na.[ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNews] as na
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsArticleUserPermissions] as aup ON na.ArticleID = aup.ArticleID
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] as cat ON na.ArticleID = cat.ArticleID
					INNER JOIN @FiltredByCategories AS fbc ON fbc.CategoryID = cat.CategoryID
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsEventsData] as ne on na.ArticleID = ne.ArticleID
				WHERE na.PortalID=@PortalID
					AND ((@AdminOrSuperUser = 1) OR (
						((@UserID = -1 AND aup.UserID IS NULL) OR (aup.UserID = @UserID)) AND aup.Show = 1 AND ((@UserCanApprove = 1) OR (na.Approved=1)) AND (na.Active=1 OR na.UserID=@UserID)))
					AND na.HasPermissions = 1
					AND na.HideDefaultLocale = 0
					AND na.EventArticle = 1
					AND na.PublishDate <= @CurrentDate AND na.ExpireDate >= @CurrentDate  
					AND (
						(@DisplayType = 0 AND (ne.StartDate <= @eToDate AND ne.EndDate >= @eFromDate)) OR
						(@DisplayType = 1 AND (na.PublishDate >= @FromDate AND na.PublishDate <= @ToDate)) OR
						(@DisplayType = 2 AND ((na.PublishDate >= @FromDate AND na.PublishDate <= @ToDate) OR (ne.StartDate <= @eToDate AND ne.EndDate >= @eFromDate)))
						) 
					AND ((@FilterAuthorOrAuthors = 1 AND na.UserID IN (SELECT UserID FROM @TempAuthorsIDList)) OR (@FilterAuthorOrAuthors = 0))
				UNION
				SELECT DISTINCT na.[ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNews] as na
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsArticleRolePermissions] as arp ON na.ArticleID = arp.ArticleID
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] as cat ON na.ArticleID = cat.ArticleID
					INNER JOIN @FiltredByCategories AS fbc ON fbc.CategoryID = cat.CategoryID
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsEventsData] as ne on na.ArticleID = ne.ArticleID
				WHERE na.PortalID=@PortalID
					AND ((@AdminOrSuperUser = 1) OR (
						((@UserCanApprove = 1) OR (na.Approved=1)) AND (na.Active=1 OR na.UserID=@UserID) AND arp.Show = 1 AND arp.RoleID IN (SELECT [RoleID] FROM @UserInRoles)))
					AND na.HasPermissions = 1
					AND na.HideDefaultLocale = 0
					AND na.EventArticle = 1
					AND na.PublishDate <= @CurrentDate AND na.ExpireDate >= @CurrentDate
					AND (
						(@DisplayType = 0 AND (ne.StartDate <= @eToDate AND ne.EndDate >= @eFromDate)) OR
						(@DisplayType = 1 AND (na.PublishDate >= @FromDate AND na.PublishDate <= @ToDate)) OR
						(@DisplayType = 2 AND ((na.PublishDate >= @FromDate AND na.PublishDate <= @ToDate) OR (ne.StartDate <= @eToDate AND ne.EndDate >= @eFromDate)))
						) 
					AND((@FilterAuthorOrAuthors = 1 AND na.UserID IN (SELECT UserID FROM @TempAuthorsIDList)) OR (@FilterAuthorOrAuthors = 0))
				)
		 ) AS Result  ORDER BY CombinedOrderBy;
	END
END
ELSE IF @FilterBySocialGroup = 1
	BEGIN
	IF @LocaleCode <> ''''
	BEGIN
		WITH FinalArticleIDsSet (ArticleID) AS(
			SELECT ArticleID FROM {databaseOwner}[{objectQualifier}EasyDNNNews] as n WHERE ArticleID IN(
				SELECT DISTINCT na.[ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNews] as na
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] as cat ON na.ArticleID = cat.ArticleID
					INNER JOIN @UserViewCategoriesWithFilter as uvcwf ON uvcwf.CategoryID = cat.CategoryID
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsEventsData] as ne on na.ArticleID = ne.ArticleID
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = na.ArticleID
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialGroupItems] AS sgi ON sgi.ArticleID = na.ArticleID AND sgi.RoleID = @FilterByDNNGroupID
					INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserID, @FilterByDNNGroupID) as t ON t.seckey = nss.SecurityKey
					LEFT OUTER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsContentLocalization] AS ncl ON ncl.ArticleID = na.ArticleID
				WHERE na.PortalID=@PortalID
					AND ((@AdminOrSuperUser = 1) OR (
						(@UserCanApprove = 1 OR na.Approved=1) AND (na.Active=1 OR na.UserID=@UserID)))
					AND na.HasPermissions = 0
					AND na.EventArticle = 1  
					AND na.PublishDate <= @CurrentDate AND na.ExpireDate >= @CurrentDate
					AND (
						(@DisplayType = 0 AND (ne.StartDate <= @eToDate AND ne.EndDate >= @eFromDate)) OR
						(@DisplayType = 1 AND (na.PublishDate >= @FromDate AND na.PublishDate <= @ToDate)) OR
						(@DisplayType = 2 AND ((na.PublishDate >= @FromDate AND na.PublishDate <= @ToDate) OR (ne.StartDate <= @eToDate AND ne.EndDate >= @eFromDate)))
						)
					AND ((@HideUnlocalizedItems = 1 AND ncl.ArticleID IS NOT NULL AND ncl.LocaleCode = @LocaleCode) OR (@HideUnlocalizedItems = 0))
				UNION ALL
				SELECT na.[ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNews] as na
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsArticleUserPermissions] as aup ON na.ArticleID = aup.ArticleID
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] as cat ON na.ArticleID = cat.ArticleID
					INNER JOIN @FiltredByCategories AS fbc ON fbc.CategoryID = cat.CategoryID
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsEventsData] as ne on na.ArticleID = ne.ArticleID
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = na.ArticleID
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialGroupItems] AS sgi ON sgi.ArticleID = na.ArticleID AND sgi.RoleID = @FilterByDNNGroupID
					INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserID, @FilterByDNNGroupID) as t ON t.seckey = nss.SecurityKey
					LEFT OUTER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsContentLocalization] AS ncl ON ncl.ArticleID = na.ArticleID
				WHERE na.PortalID=@PortalID
					AND ((@AdminOrSuperUser = 1) OR (
						((@UserID = -1 AND aup.UserID IS NULL) OR (aup.UserID = @UserID)) AND aup.Show = 1 AND ((@UserCanApprove = 1) OR (na.Approved=1)) AND (na.Active=1 OR na.UserID=@UserID)))
					AND na.HasPermissions = 1
					AND na.EventArticle = 1  
					AND na.PublishDate <= @CurrentDate AND na.ExpireDate >= @CurrentDate
					AND (
						(@DisplayType = 0 AND (ne.StartDate <= @eToDate AND ne.EndDate >= @eFromDate)) OR
						(@DisplayType = 1 AND (na.PublishDate >= @FromDate AND na.PublishDate <= @ToDate)) OR
						(@DisplayType = 2 AND ((na.PublishDate >= @FromDate AND na.PublishDate <= @ToDate) OR (ne.StartDate <= @eToDate AND ne.EndDate >= @eFromDate)))
						)
					AND ((@HideUnlocalizedItems = 1 AND ncl.ArticleID IS NOT NULL AND ncl.LocaleCode = @LocaleCode) OR (@HideUnlocalizedItems = 0))
				UNION
				SELECT DISTINCT na.[ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNews] as na
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsArticleRolePermissions] as arp ON na.ArticleID = arp.ArticleID
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] as cat ON na.ArticleID = cat.ArticleID
					INNER JOIN @FiltredByCategories AS fbc ON fbc.CategoryID = cat.CategoryID
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsEventsData] as ne on na.ArticleID = ne.ArticleID
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = na.ArticleID
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialGroupItems] AS sgi ON sgi.ArticleID = na.ArticleID AND sgi.RoleID = @FilterByDNNGroupID
					INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserID, @FilterByDNNGroupID) as t ON t.seckey = nss.SecurityKey
					LEFT OUTER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsContentLocalization] AS ncl ON ncl.ArticleID = na.ArticleID
				WHERE na.PortalID=@PortalID
					AND ((@AdminOrSuperUser = 1) OR (
						((@UserCanApprove = 1) OR (na.Approved=1)) AND (na.Active=1 OR na.UserID=@UserID) AND arp.Show = 1 AND arp.RoleID IN (SELECT [RoleID] FROM @UserInRoles)))
					AND na.HasPermissions = 1
					AND na.EventArticle = 1  
					AND na.PublishDate <= @CurrentDate AND na.ExpireDate >= @CurrentDate
					AND (
						(@DisplayType = 0 AND (ne.StartDate <= @eToDate AND ne.EndDate >= @eFromDate)) OR
						(@DisplayType = 1 AND (na.PublishDate >= @FromDate AND na.PublishDate <= @ToDate)) OR
						(@DisplayType = 2 AND ((na.PublishDate >= @FromDate AND na.PublishDate <= @ToDate) OR (ne.StartDate <= @eToDate AND ne.EndDate >= @eFromDate)))
						)
					AND ((@HideUnlocalizedItems = 1 AND ncl.ArticleID IS NOT NULL AND ncl.LocaleCode = @LocaleCode) OR (@HideUnlocalizedItems = 0))
			)
		),
		FinalLocalizedArticleIDsSet (ArticleID,Title,SubTitle,Summary,Article,DetailTypeData,TitleLink,MetaDecription,MetaKeywords,MainImageTitle,MainImageDescription) AS(
			SELECT ArticleID,Title,SubTitle,Summary,Article,DetailTypeData,clTitleLink AS TitleLink ,MetaDecription,MetaKeywords,MainImageTitle,MainImageDescription FROM {databaseOwner}[{objectQualifier}EasyDNNNewsContentLocalization] WHERE ArticleID IN (SELECT ArticleID FROM FinalArticleIDsSet) AND LocaleCode = @LocaleCode
		)

		SELECT Result.*, ne.StartDate, ne.EndDate,ne.WhloeDay,ne.ShowEndDate,
		CASE Result.EventArticle
			WHEN 1 THEN (SELECT PointData FROM {databaseOwner}[{objectQualifier}EasyDNNnewsGoogleMapsData] as md INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsArticleGoogleMapConnection] as mc ON md.GoogleMapID = mc.GoogleMapID WHERE mc.ArticleID =  Result.ArticleID)
			WHEN 0 THEN ''''
		END AS ''GoogleMapData'',
		CASE Result.EventArticle
			WHEN 1 THEN ne.StartDate
			WHEN 0 THEN Result.PublishDate
		END AS ''CombinedOrderBy''
		FROM (
		SELECT n.[ArticleID],n.[UserID],n.[Title],n.[SubTitle],n.[Summary],n.[Article],n.[ArticleImage],n.[DateAdded],n.[LastModified],n.[PublishDate]
			  ,n.[ExpireDate],n.[Approved],n.[Featured],n.[NumberOfViews],n.[RatingValue],n.[RatingCount],n.[AllowComments],n.[Active]
			  ,n.[TitleLink],n.[DetailType],n.[DetailTypeData],n.[DetailsTemplate],n.[DetailsTheme],n.[GalleryPosition],n.[GalleryDisplayType]
			  ,n.[ShowMainImage],n.[ShowMainImageFront],n.[CommentsTheme],n.[ArticleImageFolder],n.[NumberOfComments]
			  ,n.[ArticleImageSet],n.[MetaDecription],n.[MetaKeywords],n.[DisplayStyle],n.[DetailTarget]
			  ,n.[ArticleFromRSS],n.[HasPermissions],n.[EventArticle],n.[DetailMediaType],n.[DetailMediaData],n.[AuthorAliasName],n.[ShowGallery],n.[ArticleGalleryID],n.[MainImageTitle],n.[MainImageDescription]
			   FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS n WHERE ArticleID IN (SELECT ArticleID FROM FinalArticleIDsSet WHERE ArticleID NOT IN (SELECT ArticleID FROM FinalLocalizedArticleIDsSet))
		UNION ALL
		SELECT n.[ArticleID],n.[UserID],fla.[Title],fla.[SubTitle],fla.[Summary],fla.[Article],n.[ArticleImage],n.[DateAdded],n.[LastModified],n.[PublishDate]
			  ,n.[ExpireDate],n.[Approved],n.[Featured],n.[NumberOfViews],n.[RatingValue],n.[RatingCount],n.[AllowComments],n.[Active]
			  ,fla.[TitleLink],n.[DetailType],fla.[DetailTypeData],n.[DetailsTemplate],n.[DetailsTheme],n.[GalleryPosition],n.[GalleryDisplayType]
			  ,n.[ShowMainImage],n.[ShowMainImageFront],n.[CommentsTheme],n.[ArticleImageFolder],n.[NumberOfComments]
			  ,n.[ArticleImageSet],fla.[MetaDecription],fla.[MetaKeywords],n.[DisplayStyle],n.[DetailTarget]
			  ,n.[ArticleFromRSS],n.[HasPermissions],n.[EventArticle],n.[DetailMediaType],n.[DetailMediaData],n.[AuthorAliasName],n.[ShowGallery],n.[ArticleGalleryID],fla.[MainImageTitle],fla.[MainImageDescription]
		FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS n INNER JOIN FinalLocalizedArticleIDsSet AS fla ON fla.ArticleID = n.ArticleID
		) As Result LEFT OUTER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsEventsData] AS ne on Result.ArticleID = ne.ArticleID ORDER BY CombinedOrderBy;
	END
	ELSE
	BEGIN
		SELECT
		Result.[ArticleID],Result.[UserID],Result.[Title],Result.[SubTitle],Result.[Summary],Result.[Article],Result.[ArticleImage],Result.[DateAdded],Result.[LastModified],Result.[PublishDate]
		,Result.[ExpireDate],Result.[Approved],Result.[Featured],Result.[NumberOfViews],Result.[RatingValue],Result.[RatingCount],Result.[AllowComments],Result.[Active]
		,Result.[TitleLink],Result.[DetailType],Result.[DetailTypeData],Result.[DetailsTemplate],Result.[DetailsTheme],Result.[GalleryPosition],Result.[GalleryDisplayType]
		,Result.[ShowMainImage],Result.[ShowMainImageFront],Result.[CommentsTheme],Result.[ArticleImageFolder],Result.[NumberOfComments]
		,Result.[ArticleImageSet],Result.[MetaDecription],Result.[MetaKeywords],Result.[DisplayStyle],Result.[DetailTarget]
		,Result.[ArticleFromRSS],Result.[HasPermissions],Result.[EventArticle],Result.[DetailMediaType],Result.[DetailMediaData],Result.[AuthorAliasName],Result.[ShowGallery],Result.[ArticleGalleryID],Result.[MainImageTitle],Result.[MainImageDescription],
		Result.StartDate, Result.EndDate,Result.WhloeDay,Result.ShowEndDate,
		CASE Result.EventArticle
			WHEN 1 THEN (SELECT PointData FROM {databaseOwner}[{objectQualifier}EasyDNNnewsGoogleMapsData] as md INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsArticleGoogleMapConnection] as mc ON md.GoogleMapID = mc.GoogleMapID WHERE mc.ArticleID =  Result.ArticleID)
			WHEN 0 THEN ''''
		END AS ''GoogleMapData'',
		CAST (CASE Result.EventArticle
			WHEN 1 THEN Result.StartDate
			WHEN 0 THEN Result.PublishDate
		END AS DateTime ) AS ''CombinedOrderBy''
		FROM (SELECT n.*, ne.StartDate, ne.EndDate,ne.WhloeDay,ne.ShowEndDate
			FROM {databaseOwner}[{objectQualifier}EasyDNNNews] as n LEFT OUTER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsEventsData] as ne on n.ArticleID = ne.ArticleID WHERE n.ArticleID IN(
				SELECT DISTINCT na.[ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNews] as na
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] as cat ON na.ArticleID = cat.ArticleID
					INNER JOIN @UserViewCategoriesWithFilter as uvcwf ON uvcwf.CategoryID = cat.CategoryID
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsEventsData] as ne on na.ArticleID = ne.ArticleID
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = na.ArticleID
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialGroupItems] AS sgi ON sgi.ArticleID = na.ArticleID AND sgi.RoleID = @FilterByDNNGroupID
					INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserID, @FilterByDNNGroupID) as t ON t.seckey = nss.SecurityKey
				WHERE na.PortalID=@PortalID
					AND ((@AdminOrSuperUser = 1) OR ((@UserCanApprove = 1 OR na.Approved=1) AND (na.Active=1 OR na.UserID=@UserID)))
					AND na.HasPermissions = 0
					AND na.HideDefaultLocale = 0
					AND na.EventArticle = 1  		   
					AND na.PublishDate <= @CurrentDate AND na.ExpireDate >= @CurrentDate
					AND (
						(@DisplayType = 0 AND (ne.StartDate <= @eToDate AND ne.EndDate >= @eFromDate)) OR
						(@DisplayType = 1 AND (na.PublishDate >= @FromDate AND na.PublishDate <= @ToDate)) OR
						(@DisplayType = 2 AND ((na.PublishDate >= @FromDate AND na.PublishDate <= @ToDate) OR (ne.StartDate <= @eToDate AND ne.EndDate >= @eFromDate)))
						)
				UNION ALL
				SELECT na.[ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNews] as na
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsArticleUserPermissions] as aup ON na.ArticleID = aup.ArticleID
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] as cat ON na.ArticleID = cat.ArticleID
					INNER JOIN @FiltredByCategories AS fbc ON fbc.CategoryID = cat.CategoryID
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsEventsData] as ne on na.ArticleID = ne.ArticleID
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = na.ArticleID
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialGroupItems] AS sgi ON sgi.ArticleID = na.ArticleID AND sgi.RoleID = @FilterByDNNGroupID
					INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserID, @FilterByDNNGroupID) as t ON t.seckey = nss.SecurityKey
				WHERE na.PortalID=@PortalID
					AND ((@AdminOrSuperUser = 1) OR (
						((@UserID = -1 AND aup.UserID IS NULL) OR (aup.UserID = @UserID)) AND aup.Show = 1 AND ((@UserCanApprove = 1) OR (na.Approved=1))AND (na.Active=1 OR na.UserID=@UserID)))
					AND na.HasPermissions = 1
					AND na.HideDefaultLocale = 0
					AND na.EventArticle = 1  
					AND na.PublishDate <= @CurrentDate AND na.ExpireDate >= @CurrentDate
					AND (
						(@DisplayType = 0 AND (ne.StartDate <= @eToDate AND ne.EndDate >= @eFromDate)) OR
						(@DisplayType = 1 AND (na.PublishDate >= @FromDate AND na.PublishDate <= @ToDate)) OR
						(@DisplayType = 2 AND ((na.PublishDate >= @FromDate AND na.PublishDate <= @ToDate) OR (ne.StartDate <= @eToDate AND ne.EndDate >= @eFromDate)))
						)
				UNION
				SELECT DISTINCT na.[ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNews] as na
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsArticleRolePermissions] as arp ON na.ArticleID = arp.ArticleID
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] as cat ON na.ArticleID = cat.ArticleID
					INNER JOIN @FiltredByCategories AS fbc ON fbc.CategoryID = cat.CategoryID
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsEventsData] as ne on na.ArticleID = ne.ArticleID
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = na.ArticleID
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialGroupItems] AS sgi ON sgi.ArticleID = na.ArticleID AND sgi.RoleID = @FilterByDNNGroupID
					INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserID, @FilterByDNNGroupID) as t ON t.seckey = nss.SecurityKey
				WHERE na.PortalID=@PortalID
					AND ((@AdminOrSuperUser = 1) OR (
						((@UserCanApprove = 1) OR (na.Approved=1)) AND (na.Active=1 OR na.UserID=@UserID) AND arp.Show = 1 AND arp.RoleID IN (SELECT [RoleID] FROM @UserInRoles)))
					AND na.HasPermissions = 1
					AND na.HideDefaultLocale = 0
					AND na.EventArticle = 1
					AND na.PublishDate <= @CurrentDate AND na.ExpireDate >= @CurrentDate
					AND (
						(@DisplayType = 0 AND (ne.StartDate <= @eToDate AND ne.EndDate >= @eFromDate)) OR
						(@DisplayType = 1 AND (na.PublishDate >= @FromDate AND na.PublishDate <= @ToDate)) OR
						(@DisplayType = 2 AND ((na.PublishDate >= @FromDate AND na.PublishDate <= @ToDate) OR (ne.StartDate <= @eToDate AND ne.EndDate >= @eFromDate)))
						)
			)
		) AS Result ORDER BY CombinedOrderBy;
	END
END
ELSE IF @FilterByDNNUserID <> 0
BEGIN
	IF @LocaleCode <> ''''
	BEGIN
		WITH FinalArticleIDsSet (ArticleID) AS(
			SELECT ArticleID FROM {databaseOwner}[{objectQualifier}EasyDNNNews] as n WHERE ArticleID IN(
				SELECT DISTINCT na.[ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNews] as na
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] as cat ON na.ArticleID = cat.ArticleID
					INNER JOIN @UserViewCategoriesWithFilter as uvcwf ON uvcwf.CategoryID = cat.CategoryID
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsEventsData] as ne on na.ArticleID = ne.ArticleID
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = na.ArticleID
					INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserID, @FilterByDNNGroupID) as t ON t.seckey = nss.SecurityKey
					LEFT OUTER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsContentLocalization] AS ncl ON ncl.ArticleID = na.ArticleID
				WHERE na.PortalID=@PortalID
					AND ((@AdminOrSuperUser = 1) OR ((@UserCanApprove = 1 OR na.Approved=1)AND (na.Active=1 OR na.UserID=@UserID)))
					AND na.HasPermissions = 0
					AND na.EventArticle = 1		   
					AND na.PublishDate <= @CurrentDate AND na.ExpireDate >= @CurrentDate
					AND (
						(@DisplayType = 0 AND (ne.StartDate <= @eToDate AND ne.EndDate >= @eFromDate)) OR
						(@DisplayType = 1 AND (na.PublishDate >= @FromDate AND na.PublishDate <= @ToDate)) OR
						(@DisplayType = 2 AND ((na.PublishDate >= @FromDate AND na.PublishDate <= @ToDate) OR (ne.StartDate <= @eToDate AND ne.EndDate >= @eFromDate)))
						)
					AND na.UserID = @FilterByDNNUserID
					AND ((@HideUnlocalizedItems = 1 AND ncl.ArticleID IS NOT NULL AND ncl.LocaleCode = @LocaleCode) OR (@HideUnlocalizedItems = 0))
				UNION ALL
				SELECT na.[ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNews] as na
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsArticleUserPermissions] as aup ON na.ArticleID = aup.ArticleID
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] as cat ON na.ArticleID = cat.ArticleID
					INNER JOIN @FiltredByCategories AS fbc ON fbc.CategoryID = cat.CategoryID
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsEventsData] as ne on na.ArticleID = ne.ArticleID
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = na.ArticleID
					INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserID, @FilterByDNNGroupID) as t ON t.seckey = nss.SecurityKey
					LEFT OUTER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsContentLocalization] AS ncl ON ncl.ArticleID = na.ArticleID
				WHERE na.PortalID=@PortalID
					AND ((@AdminOrSuperUser = 1) OR (
						((@UserID = -1 AND aup.UserID IS NULL) OR (aup.UserID = @UserID)) AND aup.Show = 1 AND ((@UserCanApprove = 1) OR (na.Approved=1)) AND (na.Active=1 OR na.UserID=@UserID)))
					AND na.HasPermissions = 1
					AND na.EventArticle = 1
					AND na.PublishDate <= @CurrentDate AND na.ExpireDate >= @CurrentDate
					AND (
						(@DisplayType = 0 AND (ne.StartDate <= @eToDate AND ne.EndDate >= @eFromDate)) OR
						(@DisplayType = 1 AND (na.PublishDate >= @FromDate AND na.PublishDate <= @ToDate)) OR
						(@DisplayType = 2 AND ((na.PublishDate >= @FromDate AND na.PublishDate <= @ToDate) OR (ne.StartDate <= @eToDate AND ne.EndDate >= @eFromDate)))
						)
					AND na.UserID = @FilterByDNNUserID
					AND ((@HideUnlocalizedItems = 1 AND ncl.ArticleID IS NOT NULL AND ncl.LocaleCode = @LocaleCode) OR (@HideUnlocalizedItems = 0))
				UNION
				SELECT DISTINCT na.[ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNews] as na
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsArticleRolePermissions] as arp ON na.ArticleID = arp.ArticleID
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] as cat ON na.ArticleID = cat.ArticleID
					INNER JOIN @FiltredByCategories AS fbc ON fbc.CategoryID = cat.CategoryID
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsEventsData] as ne on na.ArticleID = ne.ArticleID
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = na.ArticleID
					INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserID, @FilterByDNNGroupID) as t ON t.seckey = nss.SecurityKey
					LEFT OUTER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsContentLocalization] AS ncl ON ncl.ArticleID = na.ArticleID
				WHERE na.PortalID=@PortalID
					AND ((@AdminOrSuperUser = 1) OR (
						((@UserCanApprove = 1) OR (na.Approved=1)) AND (na.Active=1 OR na.UserID=@UserID) AND arp.Show = 1 AND arp.RoleID IN (SELECT [RoleID] FROM @UserInRoles)))
					AND na.HasPermissions = 1
					AND na.EventArticle = 1
					AND na.PublishDate <= @CurrentDate AND na.ExpireDate >= @CurrentDate
					AND (
						(@DisplayType = 0 AND (ne.StartDate <= @eToDate AND ne.EndDate >= @eFromDate)) OR
						(@DisplayType = 1 AND (na.PublishDate >= @FromDate AND na.PublishDate <= @ToDate)) OR
						(@DisplayType = 2 AND ((na.PublishDate >= @FromDate AND na.PublishDate <= @ToDate) OR (ne.StartDate <= @eToDate AND ne.EndDate >= @eFromDate)))
						)
					AND na.UserID = @FilterByDNNUserID
					AND ((@HideUnlocalizedItems = 1 AND ncl.ArticleID IS NOT NULL AND ncl.LocaleCode = @LocaleCode) OR (@HideUnlocalizedItems = 0))
				)
			),
			FinalLocalizedArticleIDsSet (ArticleID,Title,SubTitle,Summary,Article,DetailTypeData,TitleLink,MetaDecription,MetaKeywords,MainImageTitle,MainImageDescription) AS(
				SELECT ArticleID,Title,SubTitle,Summary,Article,DetailTypeData,clTitleLink AS TitleLink ,MetaDecription,MetaKeywords,MainImageTitle,MainImageDescription FROM {databaseOwner}[{objectQualifier}EasyDNNNewsContentLocalization] WHERE ArticleID IN (SELECT ArticleID FROM FinalArticleIDsSet) AND LocaleCode = @LocaleCode
			)
			SELECT Result.*, ne.StartDate, ne.EndDate,ne.WhloeDay,ne.ShowEndDate,
			CASE Result.EventArticle
				WHEN 1 THEN (SELECT PointData FROM {databaseOwner}[{objectQualifier}EasyDNNnewsGoogleMapsData] as md INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsArticleGoogleMapConnection] as mc ON md.GoogleMapID = mc.GoogleMapID WHERE mc.ArticleID =  Result.ArticleID)
				WHEN 0 THEN ''''
			END AS ''GoogleMapData'',
			CASE Result.EventArticle
				WHEN 1 THEN ne.StartDate
				WHEN 0 THEN Result.PublishDate
			END AS ''CombinedOrderBy''
			FROM (
			SELECT n.[ArticleID],n.[UserID],n.[Title],n.[SubTitle],n.[Summary],n.[Article],n.[ArticleImage],n.[DateAdded],n.[LastModified],n.[PublishDate]
				  ,n.[ExpireDate],n.[Approved],n.[Featured],n.[NumberOfViews],n.[RatingValue],n.[RatingCount],n.[AllowComments],n.[Active]
				  ,n.[TitleLink],n.[DetailType],n.[DetailTypeData],n.[DetailsTemplate],n.[DetailsTheme],n.[GalleryPosition],n.[GalleryDisplayType]
				  ,n.[ShowMainImage],n.[ShowMainImageFront],n.[CommentsTheme],n.[ArticleImageFolder],n.[NumberOfComments]
				  ,n.[ArticleImageSet],n.[MetaDecription],n.[MetaKeywords],n.[DisplayStyle],n.[DetailTarget]
				  ,n.[ArticleFromRSS],n.[HasPermissions],n.[EventArticle],n.[DetailMediaType],n.[DetailMediaData],n.[AuthorAliasName],n.[ShowGallery],n.[ArticleGalleryID],n.[MainImageTitle],n.[MainImageDescription]
				   FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS n WHERE ArticleID IN (SELECT ArticleID FROM FinalArticleIDsSet WHERE ArticleID NOT IN (SELECT ArticleID FROM FinalLocalizedArticleIDsSet))
			UNION ALL
			SELECT n.[ArticleID],n.[UserID],fla.[Title],fla.[SubTitle],fla.[Summary],fla.[Article],n.[ArticleImage],n.[DateAdded],n.[LastModified],n.[PublishDate]
				  ,n.[ExpireDate],n.[Approved],n.[Featured],n.[NumberOfViews],n.[RatingValue],n.[RatingCount],n.[AllowComments],n.[Active]
				  ,fla.[TitleLink],n.[DetailType],fla.[DetailTypeData],n.[DetailsTemplate],n.[DetailsTheme],n.[GalleryPosition],n.[GalleryDisplayType]
				  ,n.[ShowMainImage],n.[ShowMainImageFront],n.[CommentsTheme],n.[ArticleImageFolder],n.[NumberOfComments]
				  ,n.[ArticleImageSet],fla.[MetaDecription],fla.[MetaKeywords],n.[DisplayStyle],n.[DetailTarget]
				  ,n.[ArticleFromRSS],n.[HasPermissions],n.[EventArticle],n.[DetailMediaType],n.[DetailMediaData],n.[AuthorAliasName],n.[ShowGallery],n.[ArticleGalleryID],fla.[MainImageTitle],fla.[MainImageDescription]
			FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS n INNER JOIN FinalLocalizedArticleIDsSet AS fla ON fla.ArticleID = n.ArticleID
			) As Result LEFT OUTER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsEventsData] AS ne on Result.ArticleID = ne.ArticleID ORDER BY CombinedOrderBy;
	END
	ELSE
	BEGIN
		SELECT
		Result.[ArticleID],Result.[UserID],Result.[Title],Result.[SubTitle],Result.[Summary],Result.[Article],Result.[ArticleImage],Result.[DateAdded],Result.[LastModified],Result.[PublishDate]
		,Result.[ExpireDate],Result.[Approved],Result.[Featured],Result.[NumberOfViews],Result.[RatingValue],Result.[RatingCount],Result.[AllowComments],Result.[Active]
		,Result.[TitleLink],Result.[DetailType],Result.[DetailTypeData],Result.[DetailsTemplate],Result.[DetailsTheme],Result.[GalleryPosition],Result.[GalleryDisplayType]
		,Result.[ShowMainImage],Result.[ShowMainImageFront],Result.[CommentsTheme],Result.[ArticleImageFolder],Result.[NumberOfComments]
		,Result.[ArticleImageSet],Result.[MetaDecription],Result.[MetaKeywords],Result.[DisplayStyle],Result.[DetailTarget]
		,Result.[ArticleFromRSS],Result.[HasPermissions],Result.[EventArticle],Result.[DetailMediaType],Result.[DetailMediaData],Result.[AuthorAliasName],Result.[ShowGallery],Result.[ArticleGalleryID],Result.[MainImageTitle],Result.[MainImageDescription],
		Result.StartDate, Result.EndDate,Result.WhloeDay,Result.ShowEndDate,
		CASE Result.EventArticle
			WHEN 1 THEN (SELECT PointData FROM {databaseOwner}[{objectQualifier}EasyDNNnewsGoogleMapsData] as md INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsArticleGoogleMapConnection] as mc ON md.GoogleMapID = mc.GoogleMapID WHERE mc.ArticleID =  Result.ArticleID)
			WHEN 0 THEN ''''
		END AS ''GoogleMapData'',
		CAST (CASE Result.EventArticle
			WHEN 1 THEN Result.StartDate
			WHEN 0 THEN Result.PublishDate
		END AS DateTime ) AS ''CombinedOrderBy''
		FROM (SELECT n.*, ne.StartDate, ne.EndDate,ne.WhloeDay,ne.ShowEndDate
			FROM {databaseOwner}[{objectQualifier}EasyDNNNews] as n LEFT OUTER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsEventsData] as ne on n.ArticleID = ne.ArticleID WHERE n.ArticleID IN(
			SELECT DISTINCT na.[ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNews] as na
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] as cat ON na.ArticleID = cat.ArticleID
				INNER JOIN @UserViewCategoriesWithFilter as uvcwf ON uvcwf.CategoryID = cat.CategoryID
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsEventsData] as ne on na.ArticleID = ne.ArticleID
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = na.ArticleID
				INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserID, @FilterByDNNGroupID) as t ON t.seckey = nss.SecurityKey
			WHERE na.PortalID=@PortalID
				AND ((@AdminOrSuperUser = 1) OR ((@UserCanApprove = 1 OR na.Approved=1) AND (na.Active=1 OR na.UserID=@UserID)))
				AND na.HasPermissions = 0
				AND na.HideDefaultLocale = 0
				AND na.EventArticle = 1  
				AND na.PublishDate <= @CurrentDate AND na.ExpireDate >= @CurrentDate
				AND (
					(@DisplayType = 0 AND (ne.StartDate <= @eToDate AND ne.EndDate >= @eFromDate)) OR
					(@DisplayType = 1 AND (na.PublishDate >= @FromDate AND na.PublishDate <= @ToDate)) OR
					(@DisplayType = 2 AND ((na.PublishDate >= @FromDate AND na.PublishDate <= @ToDate) OR (ne.StartDate <= @eToDate AND ne.EndDate >= @eFromDate)))
					)
				AND na.UserID = @FilterByDNNUserID
			UNION ALL
			SELECT na.[ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNews] as na
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsArticleUserPermissions] as aup ON na.ArticleID = aup.ArticleID
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] as cat ON na.ArticleID = cat.ArticleID
				INNER JOIN @FiltredByCategories AS fbc ON fbc.CategoryID = cat.CategoryID
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsEventsData] as ne on na.ArticleID = ne.ArticleID
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = na.ArticleID
				INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserID, @FilterByDNNGroupID) as t ON t.seckey = nss.SecurityKey
			WHERE na.PortalID=@PortalID
				AND ((@AdminOrSuperUser = 1) OR (
					((@UserID = -1 AND aup.UserID IS NULL) OR (aup.UserID = @UserID)) AND aup.Show = 1 AND ((@UserCanApprove = 1) OR (na.Approved=1)) AND (na.Active=1 OR na.UserID=@UserID)))
				AND na.HasPermissions = 1
				AND na.HideDefaultLocale = 0
				AND na.EventArticle = 1
				AND na.PublishDate <= @CurrentDate AND na.ExpireDate >= @CurrentDate
				AND (
					(@DisplayType = 0 AND (ne.StartDate <= @eToDate AND ne.EndDate >= @eFromDate)) OR
					(@DisplayType = 1 AND (na.PublishDate >= @FromDate AND na.PublishDate <= @ToDate)) OR
					(@DisplayType = 2 AND ((na.PublishDate >= @FromDate AND na.PublishDate <= @ToDate) OR (ne.StartDate <= @eToDate AND ne.EndDate >= @eFromDate)))
					)
				AND na.UserID = @FilterByDNNUserID
			UNION
			SELECT DISTINCT na.[ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNews] as na
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsArticleRolePermissions] as arp ON na.ArticleID = arp.ArticleID
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] as cat ON na.ArticleID = cat.ArticleID
				INNER JOIN @FiltredByCategories AS fbc ON fbc.CategoryID = cat.CategoryID
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsEventsData] as ne on na.ArticleID = ne.ArticleID
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = na.ArticleID
				INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserID, @FilterByDNNGroupID) as t ON t.seckey = nss.SecurityKey
			WHERE na.PortalID=@PortalID
				AND ((@AdminOrSuperUser = 1) OR (
					((@UserCanApprove = 1) OR (na.Approved=1)) AND (na.Active=1 OR na.UserID=@UserID) AND arp.Show = 1 AND arp.RoleID IN (SELECT [RoleID] FROM @UserInRoles)))
				AND na.HasPermissions = 1
				AND na.HideDefaultLocale = 0
				AND na.EventArticle = 1
				AND (na.PublishDate <= @CurrentDate AND na.ExpireDate >= @CurrentDate)
				AND (
					(@DisplayType = 0 AND (ne.StartDate <= @eToDate AND ne.EndDate >= @eFromDate)) OR
					(@DisplayType = 1 AND (na.PublishDate >= @FromDate AND na.PublishDate <= @ToDate)) OR
					(@DisplayType = 2 AND ((na.PublishDate >= @FromDate AND na.PublishDate <= @ToDate) OR (ne.StartDate <= @eToDate AND ne.EndDate >= @eFromDate)))
					)
				AND na.UserID = @FilterByDNNUserID
			)
		) AS Result ORDER BY CombinedOrderBy;		
	END
END' 
END
GO
/****** Object:  StoredProcedure {databaseOwner}[{objectQualifier}EasyDNNNewsGetItemsForCalendarAll]    Script Date: 06/24/2013 16:39:07 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'{databaseOwner}[{objectQualifier}EasyDNNNewsGetItemsForCalendarAll]') AND type in (N'P', N'PC'))
BEGIN
EXEC dbo.sp_executesql @statement = N'CREATE PROCEDURE {databaseOwner}[{objectQualifier}EasyDNNNewsGetItemsForCalendarAll]
	@PortalID int,
	@UserID int,
	@CalendarModuleID int,
	@CurrentDate DateTime,
	@AdminOrSuperUser bit  = 0,
	@FromDate DateTime = ''2012-01-01 00:00:00'', -- ovo je za normalne članke
	@ToDate DateTime = ''2012-01-01 00:00:00'',
	@eFromDate DateTime = ''2012-01-01 00:00:00'', -- ovo je za evente
	@eToDate DateTime = ''2012-01-01 00:00:00'',
	@DisplayType tinyint = 0, -- 0 od do, 1 publish date, 2 oboje	
	@LocaleCode nvarchar(20) = '''',
	@IsSocialInstance bit = 0,
	@FilterByDNNUserID int = 0, -- filter by some UserID / not current user ID
	@FilterByDNNGroupID int = 0, -- filter by DNNGroup/RoleID / not profile GroupID
	@ShowAllAuthors bit = 1, -- filter postavka menija
	@CategoryFilterType tinyint = 0, --0 All categories, 1 - SELECTion, 2 - AutoAdd
	@HideUnlocalizedItems bit = 0,
	@PermissionSettingsSource tinyint = 0, -- None, 1 - portal, 2 - module
	@PermissionsModuleID int = 0 -- NewsModuleID
AS
SET NOCOUNT ON;
DECLARE @UserCanApprove bit;
SET @UserCanApprove = 0;
DECLARE @UserInRoles TABLE (RoleID int NOT NULL PRIMARY KEY);
INSERT INTO @UserInRoles SELECT DISTINCT ur.[RoleID] FROM {databaseOwner}[{objectQualifier}UserRoles] AS ur INNER JOIN {databaseOwner}[{objectQualifier}Roles] AS r ON ur.RoleID = r.RoleID WHERE ur.UserID = @UserID AND r.PortalID = @PortalID AND (ur.ExpiryDate IS NULL OR ur.ExpiryDate > GETUTCDATE()) AND (ur.EffectiveDate IS NULL OR ur.EffectiveDate < GETUTCDATE());

DECLARE @UserViewCategories TABLE (CategoryID int NOT NULL PRIMARY KEY); -- all categories which user can see based on permissions
DECLARE @UserViewCategoriesWithFilter TABLE (CategoryID int NOT NULL PRIMARY KEY); -- all categories which user can see based on permissions and Module filter
DECLARE @FiltredByCategories TABLE (CategoryID int NOT NULL PRIMARY KEY); -- all categories that are filtred by module or portal

DECLARE @SettingsSource bit; SET @SettingsSource = 1;
IF @AdminOrSuperUser = 1 OR @PermissionSettingsSource = 0
BEGIN
	INSERT INTO @UserViewCategories SELECT [CategoryID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryList] WHERE PortalID = @PortalID;
END
ELSE IF @UserID = -1
BEGIN	
	IF @PermissionSettingsSource = 1 -- by portal
	BEGIN
		IF EXISTS (SELECT ShowAllCategories FROM {databaseOwner}[{objectQualifier}EasyDNNNewsRolePremissionSettings] AS rps WHERE rps.PortalID = @PortalID  AND rps.ModuleID IS NULL AND rps.RoleID IS NULL AND rps.ShowAllCategories = 1)
		BEGIN
			INSERT INTO @UserViewCategories SELECT [CategoryID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryList] WHERE PortalID = @PortalID;
		END
		ELSE
		BEGIN
			INSERT INTO @UserViewCategories
			SELECT rpsc.[CategoryID] FROM  {databaseOwner}[{objectQualifier}EasyDNNNewsRolePremissionsShowCategories] AS rpsc 
			INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsRolePremissionSettings] AS rps ON rps.PremissionSettingsID = rpsc.PremissionSettingsID
			WHERE rps.PortalID = @PortalID  AND rps.ModuleID IS NULL AND rps.RoleID IS NULL;
		END
	END
	ELSE -- by module
	BEGIN
		SELECT @SettingsSource = PermissionsPMSource FROM {databaseOwner}[{objectQualifier}EasyDNNNewsModuleSettings] WHERE ModuleID = @PermissionsModuleID;
		IF @SettingsSource = 1
		BEGIN
			IF EXISTS (SELECT ShowAllCategories FROM {databaseOwner}[{objectQualifier}EasyDNNNewsRolePremissionSettings] AS rps WHERE rps.PortalID = @PortalID  AND rps.ModuleID IS NULL AND rps.RoleID IS NULL AND rps.ShowAllCategories = 1)
			BEGIN
				INSERT INTO @UserViewCategories SELECT [CategoryID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryList] WHERE PortalID = @PortalID;
			END
			ELSE
			BEGIN
				INSERT INTO @UserViewCategories
				SELECT rpsc.[CategoryID] FROM  {databaseOwner}[{objectQualifier}EasyDNNNewsRolePremissionsShowCategories] AS rpsc 
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsRolePremissionSettings] AS rps ON rps.PremissionSettingsID = rpsc.PremissionSettingsID
				WHERE rps.PortalID = @PortalID  AND rps.ModuleID IS NULL AND rps.RoleID IS NULL;
			END
		END
		ELSE
		BEGIN
			IF EXISTS (SELECT ShowAllCategories FROM {databaseOwner}[{objectQualifier}EasyDNNNewsRolePremissionSettings] AS rps WHERE rps.PortalID = @PortalID AND rps.ModuleID = @PermissionsModuleID AND rps.RoleID IS NULL AND rps.ShowAllCategories = 1)
			BEGIN
				INSERT INTO @UserViewCategories SELECT [CategoryID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryList] WHERE PortalID = @PortalID;
			END
			ELSE
			BEGIN
				INSERT INTO @UserViewCategories
				SELECT rpsc.[CategoryID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsRolePremissionsShowCategories] AS rpsc
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsRolePremissionSettings] AS rps ON rps.PremissionSettingsID = rpsc.PremissionSettingsID
				WHERE rps.PortalID = @PortalID AND rps.ModuleID = @PermissionsModuleID AND rps.RoleID IS NULL;
			END
		END
	END
END
ELSE -- registrirani korisnik
BEGIN
	IF @PermissionSettingsSource = 1 -- by portal
	BEGIN
		IF EXISTS (
				SELECT TOP (1) ShowAllCategories FROM {databaseOwner}[{objectQualifier}EasyDNNNewsRolePremissionSettings] AS rps
					INNER JOIN @UserInRoles AS uir ON rps.RoleID = uir.RoleID
					WHERE rps.PortalID = @PortalID AND rps.ModuleID IS NULL AND rps.ShowAllCategories = 1
				UNION
				SELECT ShowAllCategories FROM {databaseOwner}[{objectQualifier}EasyDNNNewsUserPremissionSettings] AS ups
				WHERE ups.UserID = @UserID AND ups.PortalID = @PortalID AND ups.ModuleID IS NULL AND ups.ShowAllCategories = 1
		)
		BEGIN
			INSERT INTO @UserViewCategories SELECT [CategoryID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryList] WHERE PortalID = @PortalID;
		END
		ELSE
		BEGIN
			INSERT INTO @UserViewCategories
			SELECT rpsc.[CategoryID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsRolePremissionsShowCategories] AS rpsc
			INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsRolePremissionSettings] AS rps ON rps.PremissionSettingsID = rpsc.PremissionSettingsID
			INNER JOIN @UserInRoles AS uir ON rps.RoleID = uir.RoleID
			WHERE rps.PortalID = @PortalID AND rps.ModuleID IS NULL GROUP BY rpsc.[CategoryID]
			UNION
			SELECT upsc.[CategoryID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsUserPremissionsShowCategories] AS upsc
			INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsUserPremissionSettings] AS ups ON ups.PremissionSettingsID = upsc.PremissionSettingsID
			WHERE ups.UserID = @UserID AND ups.PortalID = @PortalID AND ups.ModuleID IS NULL GROUP BY upsc.[CategoryID];
		END
	END
	ELSE -- by module
	BEGIN
		SELECT @SettingsSource = PermissionsPMSource FROM {databaseOwner}[{objectQualifier}EasyDNNNewsModuleSettings] WHERE ModuleID = @PermissionsModuleID;
		IF @SettingsSource = 1
		BEGIN
			IF EXISTS (
				SELECT TOP (1) ShowAllCategories FROM {databaseOwner}[{objectQualifier}EasyDNNNewsRolePremissionSettings] AS rps
					INNER JOIN @UserInRoles AS uir ON rps.RoleID = uir.RoleID
					WHERE rps.PortalID = @PortalID AND rps.ModuleID IS NULL AND rps.ShowAllCategories = 1
				UNION
				SELECT ShowAllCategories FROM {databaseOwner}[{objectQualifier}EasyDNNNewsUserPremissionSettings] AS ups
				WHERE ups.UserID = @UserID AND ups.PortalID = @PortalID AND ups.ModuleID IS NULL AND ups.ShowAllCategories = 1
			)
			BEGIN
				INSERT INTO @UserViewCategories SELECT [CategoryID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryList] WHERE PortalID = @PortalID;
			END
			ELSE
			BEGIN
				INSERT INTO @UserViewCategories
				SELECT rpsc.[CategoryID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsRolePremissionsShowCategories] AS rpsc
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsRolePremissionSettings] AS rps ON rps.PremissionSettingsID = rpsc.PremissionSettingsID
				INNER JOIN @UserInRoles AS uir ON rps.RoleID = uir.RoleID
				WHERE rps.PortalID = @PortalID AND rps.ModuleID IS NULL GROUP BY rpsc.[CategoryID]
				UNION
				SELECT upsc.[CategoryID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsUserPremissionsShowCategories] AS upsc
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsUserPremissionSettings] AS ups ON ups.PremissionSettingsID = upsc.PremissionSettingsID
				WHERE ups.UserID = @UserID AND ups.PortalID = @PortalID AND ups.ModuleID IS NULL GROUP BY upsc.[CategoryID];
			END
		END
		ELSE
		BEGIN
			IF EXISTS (
				SELECT TOP (1) ShowAllCategories FROM {databaseOwner}[{objectQualifier}EasyDNNNewsRolePremissionSettings] AS rps
					INNER JOIN @UserInRoles AS uir ON rps.RoleID = uir.RoleID
					WHERE rps.PortalID = @PortalID AND rps.ModuleID = @PermissionsModuleID AND rps.ShowAllCategories = 1
				UNION
				SELECT ShowAllCategories FROM {databaseOwner}[{objectQualifier}EasyDNNNewsUserPremissionSettings] AS ups
				WHERE ups.UserID = @UserID AND ups.PortalID = @PortalID AND ups.ModuleID = @PermissionsModuleID AND ups.ShowAllCategories = 1
			)
			BEGIN
				INSERT INTO @UserViewCategories SELECT [CategoryID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryList] WHERE PortalID = @PortalID;
			END
			ELSE
			BEGIN
				INSERT INTO @UserViewCategories
				SELECT rpsc.[CategoryID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsRolePremissionsShowCategories] AS rpsc
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsRolePremissionSettings] AS rps ON rps.PremissionSettingsID = rpsc.PremissionSettingsID
				INNER JOIN @UserInRoles AS uir ON rps.RoleID = uir.RoleID
				WHERE rps.PortalID = @PortalID AND rps.ModuleID = @PermissionsModuleID GROUP BY rpsc.[CategoryID]
				UNION
				SELECT upsc.[CategoryID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsUserPremissionsShowCategories] AS upsc
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsUserPremissionSettings] AS ups ON ups.PremissionSettingsID = upsc.PremissionSettingsID
				WHERE ups.UserID = @UserID AND ups.PortalID = @PortalID AND ups.ModuleID = @PermissionsModuleID GROUP BY upsc.[CategoryID];
			END
		END
	END
END

IF @CategoryFilterType = 0 -- 0 All categories
BEGIN
	INSERT INTO @UserViewCategoriesWithFilter SELECT [CategoryID] FROM @UserViewCategories;
	INSERT INTO @FiltredByCategories SELECT [CategoryID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryList] WHERE PortalID = @PortalID;
END
ELSE IF @CategoryFilterType = 1 -- 1 - SELECTion
BEGIN
		INSERT INTO @UserViewCategoriesWithFilter 
		SELECT cl.[CategoryID] FROM @UserViewCategories AS cl
		INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsModuleCategoryItems] AS mci ON mci.CategoryID = cl.CategoryID AND mci.ModuleID = @CalendarModuleID
		
		INSERT INTO @FiltredByCategories SELECT [CategoryID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsModuleCategoryItems] WHERE ModuleID = @CalendarModuleID;
END
ELSE IF @CategoryFilterType = 2 -- 2 - AutoAdd
BEGIN
	WITH hierarchy AS(
		SELECT [CategoryID], [ParentCategory]
		FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryList] AS cl
		WHERE (cl.ParentCategory IN (SELECT [CategoryID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsModuleCategoryItems] WHERE ModuleID = @CalendarModuleID) OR cl.CategoryID IN (SELECT [CategoryID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsModuleCategoryItems] WHERE ModuleID = @CalendarModuleID)) AND PortalID = @PortalID
		UNION ALL
		SELECT c.[CategoryID], c.[ParentCategory]
		FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryList] AS c INNER JOIN hierarchy AS p ON c.ParentCategory = p.CategoryID WHERE c.PortalID = @PortalID
		)
		INSERT INTO @FiltredByCategories SELECT DISTINCT CategoryID FROM hierarchy;	
		INSERT INTO @UserViewCategoriesWithFilter SELECT uvc.CategoryID FROM @FiltredByCategories AS nfc INNER JOIN @UserViewCategories AS uvc ON uvc.CategoryID = nfc.CategoryID;
END

DECLARE @FilterBySocialGroup bit;
SET @FilterBySocialGroup = 0;
DECLARE @FilterAuthorOrAuthors bit;
SET @FilterAuthorOrAuthors = 0;

DECLARE @TempAuthorsIDList TABLE (UserID int NOT NULL PRIMARY KEY);
IF @IsSocialInstance = 1
	BEGIN
		IF @FilterByDNNGroupID <> 0
		BEGIN	
			SET @FilterBySocialGroup = 1;
		END
	END
ELSE
BEGIN
	IF @ShowAllAuthors = 0
	BEGIN
		SET @FilterAuthorOrAuthors = 1;
		INSERT INTO @TempAuthorsIDList
		SELECT [UserID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsModuleAuthorsItems] AS mai WHERE mai.ModuleID = @CalendarModuleID
		UNION 
		SELECT [UserID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsAuthorProfile] AS ap 
			INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsAutorGroupItems] AS agi ON ap.AuthorProfileID = agi.AuthorProfileID
			INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsModuleGroupItems] AS mgi ON mgi.GroupID = agi.GroupID
			WHERE mgi.ModuleID = @CalendarModuleID
	END
END

IF @IsSocialInstance = 0
BEGIN
	IF @LocaleCode <> ''''
	BEGIN
		WITH FinalArticleIDsSet (ArticleID) AS(
			SELECT ArticleID FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS n WHERE ArticleID IN(
				SELECT DISTINCT na.[ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS na
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS cat ON na.ArticleID = cat.ArticleID
					INNER JOIN @UserViewCategoriesWithFilter AS uvcwf ON uvcwf.CategoryID = cat.CategoryID
					LEFT OUTER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsContentLocalization] AS ncl ON ncl.ArticleID = na.ArticleID
				WHERE na.PortalID=@PortalID
					AND ((@AdminOrSuperUser = 1) OR ((@UserCanApprove = 1 OR na.Approved=1) AND (na.Active=1 OR na.UserID=@UserID)))
					AND na.HasPermissions = 0
					AND na.EventArticle = 0
					AND na.PublishDate <= @CurrentDate AND na.ExpireDate >= @CurrentDate
					AND na.PublishDate >= @FromDate AND na.PublishDate <= @ToDate
					AND ((@FilterAuthorOrAuthors = 1 AND na.UserID IN (SELECT UserID FROM @TempAuthorsIDList)) OR (@FilterAuthorOrAuthors = 0))
					AND ((@HideUnlocalizedItems = 1 AND ncl.ArticleID IS NOT NULL AND ncl.LocaleCode = @LocaleCode) OR (@HideUnlocalizedItems = 0))
				UNION
				SELECT DISTINCT na.[ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS na
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS cat ON na.ArticleID = cat.ArticleID
					INNER JOIN @UserViewCategoriesWithFilter AS uvcwf ON uvcwf.CategoryID = cat.CategoryID
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsEventsData] AS ne on na.ArticleID = ne.ArticleID
					LEFT OUTER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsContentLocalization] AS ncl ON ncl.ArticleID = na.ArticleID
				WHERE na.PortalID=@PortalID
					AND ((@AdminOrSuperUser = 1) OR ((@UserCanApprove = 1 OR na.Approved=1) AND (na.Active=1 OR na.UserID=@UserID)))
					AND na.HasPermissions = 0
					AND na.EventArticle = 1
					AND na.PublishDate <= @CurrentDate AND na.ExpireDate >= @CurrentDate
					AND (
						(@DisplayType = 0 AND (ne.StartDate <= @eToDate AND ne.EndDate >= @eFromDate)) OR
						(@DisplayType = 1 AND (na.PublishDate >= @FromDate AND na.PublishDate <= @ToDate)) OR
						(@DisplayType = 2 AND ((na.PublishDate >= @FromDate AND na.PublishDate <= @ToDate) OR (ne.StartDate <= @eToDate AND ne.EndDate >= @eFromDate)))
						)
					AND ((@FilterAuthorOrAuthors = 1 AND na.UserID IN (SELECT UserID FROM @TempAuthorsIDList)) OR (@FilterAuthorOrAuthors = 0))
					AND ((@HideUnlocalizedItems = 1 AND ncl.ArticleID IS NOT NULL AND ncl.LocaleCode = @LocaleCode) OR (@HideUnlocalizedItems = 0))
				UNION ALL
				SELECT na.[ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS na
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsArticleUserPermissions] AS aup ON na.ArticleID = aup.ArticleID
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS cat ON na.ArticleID = cat.ArticleID
					INNER JOIN @FiltredByCategories AS fbc ON fbc.CategoryID = cat.CategoryID
					LEFT OUTER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsContentLocalization] AS ncl ON ncl.ArticleID = na.ArticleID
				WHERE na.PortalID=@PortalID
					AND ((@AdminOrSuperUser = 1) OR (
						((@UserID = -1 AND aup.UserID IS NULL) OR (aup.UserID = @UserID)) AND aup.Show = 1 AND ((@UserCanApprove = 1) OR (na.Approved=1)) AND (na.Active=1 OR na.UserID=@UserID)))
					AND na.HasPermissions = 1
					AND na.EventArticle = 0  
					AND na.PublishDate <= @CurrentDate AND na.ExpireDate >= @CurrentDate
					AND na.PublishDate >= @FromDate AND na.PublishDate <= @ToDate
					AND ((@FilterAuthorOrAuthors = 1 AND na.UserID IN (SELECT UserID FROM @TempAuthorsIDList)) OR (@FilterAuthorOrAuthors = 0))
					AND ((@HideUnlocalizedItems = 1 AND ncl.ArticleID IS NOT NULL AND ncl.LocaleCode = @LocaleCode) OR (@HideUnlocalizedItems = 0))
				UNION
				SELECT na.[ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS na
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsArticleUserPermissions] AS aup ON na.ArticleID = aup.ArticleID
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS cat ON na.ArticleID = cat.ArticleID
					INNER JOIN @FiltredByCategories AS fbc ON fbc.CategoryID = cat.CategoryID
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsEventsData] AS ne on na.ArticleID = ne.ArticleID
					LEFT OUTER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsContentLocalization] AS ncl ON ncl.ArticleID = na.ArticleID
				WHERE na.PortalID=@PortalID
					AND ((@AdminOrSuperUser = 1) OR (
						((@UserID = -1 AND aup.UserID IS NULL) OR (aup.UserID = @UserID)) AND aup.Show = 1 AND ((@UserCanApprove = 1) OR (na.Approved=1)) AND (na.Active=1 OR na.UserID=@UserID)))
					AND na.HasPermissions = 1
					AND na.EventArticle = 1
					AND na.PublishDate <= @CurrentDate AND na.ExpireDate >= @CurrentDate
					AND (
						(@DisplayType = 0 AND (ne.StartDate <= @eToDate AND ne.EndDate >= @eFromDate)) OR
						(@DisplayType = 1 AND (na.PublishDate >= @FromDate AND na.PublishDate <= @ToDate)) OR
						(@DisplayType = 2 AND ((na.PublishDate >= @FromDate AND na.PublishDate <= @ToDate) OR (ne.StartDate <= @eToDate AND ne.EndDate >= @eFromDate)))
						) 
					AND ((@FilterAuthorOrAuthors = 1 AND na.UserID IN (SELECT UserID FROM @TempAuthorsIDList)) OR (@FilterAuthorOrAuthors = 0))
					AND ((@HideUnlocalizedItems = 1 AND ncl.ArticleID IS NOT NULL AND ncl.LocaleCode = @LocaleCode) OR (@HideUnlocalizedItems = 0))
				UNION
				SELECT DISTINCT na.[ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS na
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsArticleRolePermissions] AS arp ON na.ArticleID = arp.ArticleID
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS cat ON na.ArticleID = cat.ArticleID
					INNER JOIN @FiltredByCategories AS fbc ON fbc.CategoryID = cat.CategoryID
					LEFT OUTER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsContentLocalization] AS ncl ON ncl.ArticleID = na.ArticleID
				WHERE na.PortalID=@PortalID
					AND ((@AdminOrSuperUser = 1) OR (
						((@UserCanApprove = 1) OR (na.Approved=1)) AND (na.Active=1 OR na.UserID=@UserID) AND arp.Show = 1AND arp.RoleID IN (SELECT [RoleID] FROM @UserInRoles)))
					AND na.HasPermissions = 1
					AND na.EventArticle = 0  
					AND na.PublishDate <= @CurrentDate AND na.ExpireDate >= @CurrentDate
					AND na.PublishDate >= @FromDate AND na.PublishDate <= @ToDate
					AND ((@FilterAuthorOrAuthors = 1 AND na.UserID IN (SELECT UserID FROM @TempAuthorsIDList)) OR (@FilterAuthorOrAuthors = 0))
					AND ((@HideUnlocalizedItems = 1 AND ncl.ArticleID IS NOT NULL AND ncl.LocaleCode = @LocaleCode) OR (@HideUnlocalizedItems = 0))	 
				UNION
				SELECT DISTINCT na.[ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS na
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsArticleRolePermissions] AS arp ON na.ArticleID = arp.ArticleID
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS cat ON na.ArticleID = cat.ArticleID
					INNER JOIN @FiltredByCategories AS fbc ON fbc.CategoryID = cat.CategoryID
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsEventsData] AS ne on na.ArticleID = ne.ArticleID
					LEFT OUTER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsContentLocalization] AS ncl ON ncl.ArticleID = na.ArticleID
				WHERE na.PortalID=@PortalID
					AND ((@AdminOrSuperUser = 1) OR (
						((@UserCanApprove = 1) OR (na.Approved=1)) AND (na.Active=1 OR na.UserID=@UserID) AND arp.Show = 1 AND arp.RoleID IN (SELECT [RoleID] FROM @UserInRoles)))
					AND na.HasPermissions = 1
					AND na.EventArticle = 1  
					AND na.PublishDate <= @CurrentDate AND na.ExpireDate >= @CurrentDate
					AND (
						(@DisplayType = 0 AND (ne.StartDate <= @eToDate AND ne.EndDate >= @eFromDate)) OR
						(@DisplayType = 1 AND (na.PublishDate >= @FromDate AND na.PublishDate <= @ToDate)) OR
						(@DisplayType = 2 AND ((na.PublishDate >= @FromDate AND na.PublishDate <= @ToDate) OR (ne.StartDate <= @eToDate AND ne.EndDate >= @eFromDate)))
						)
					AND ((@FilterAuthorOrAuthors = 1 AND na.UserID IN (SELECT UserID FROM @TempAuthorsIDList)) OR (@FilterAuthorOrAuthors = 0))
					AND ((@HideUnlocalizedItems = 1 AND ncl.ArticleID IS NOT NULL AND ncl.LocaleCode = @LocaleCode) OR (@HideUnlocalizedItems = 0))
			)
		),
		FinalLocalizedArticleIDsSet (ArticleID,Title,SubTitle,Summary,Article,DetailTypeData,TitleLink,MetaDecription,MetaKeywords,MainImageTitle,MainImageDescription) AS(
			SELECT ArticleID,Title,SubTitle,Summary,Article,DetailTypeData,clTitleLink AS TitleLink ,MetaDecription,MetaKeywords,MainImageTitle,MainImageDescription FROM {databaseOwner}[{objectQualifier}EasyDNNNewsContentLocalization] WHERE ArticleID IN (SELECT ArticleID FROM FinalArticleIDsSet) AND LocaleCode = @LocaleCode
		)
		SELECT Result.*, ne.StartDate, ne.EndDate,ne.WhloeDay,ne.ShowEndDate,
			CASE Result.EventArticle
				WHEN 1 THEN (SELECT PointData FROM {databaseOwner}[{objectQualifier}EasyDNNnewsGoogleMapsData] AS md INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsArticleGoogleMapConnection] AS mc ON md.GoogleMapID = mc.GoogleMapID WHERE mc.ArticleID =  Result.ArticleID)
				WHEN 0 THEN ''''
			END AS ''GoogleMapData'',
			CASE Result.EventArticle
				WHEN 1 THEN ne.StartDate
				WHEN 0 THEN Result.PublishDate
			END AS ''CombinedOrderBy''
			FROM (
				SELECT n.[ArticleID],n.[UserID],n.[Title],n.[SubTitle],n.[Summary],n.[Article],n.[ArticleImage],n.[DateAdded],n.[LastModified],n.[PublishDate]
					  ,n.[ExpireDate],n.[Approved],n.[Featured],n.[NumberOfViews],n.[RatingValue],n.[RatingCount],n.[AllowComments],n.[Active]
					  ,n.[TitleLink],n.[DetailType],n.[DetailTypeData],n.[DetailsTemplate],n.[DetailsTheme],n.[GalleryPosition],n.[GalleryDisplayType]
					  ,n.[ShowMainImage],n.[ShowMainImageFront],n.[CommentsTheme],n.[ArticleImageFolder],n.[NumberOfComments]
					  ,n.[ArticleImageSet],n.[MetaDecription],n.[MetaKeywords],n.[DisplayStyle],n.[DetailTarget]
					  ,n.[ArticleFromRSS],n.[HasPermissions],n.[EventArticle],n.[DetailMediaType],n.[DetailMediaData],n.[AuthorAliasName],n.[ShowGallery],n.[ArticleGalleryID],n.[MainImageTitle],n.[MainImageDescription]
					   FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS n WHERE ArticleID IN (SELECT ArticleID FROM FinalArticleIDsSet WHERE ArticleID NOT IN (SELECT ArticleID FROM FinalLocalizedArticleIDsSet))
				UNION ALL
				SELECT n.[ArticleID],n.[UserID],fla.[Title],fla.[SubTitle],fla.[Summary],fla.[Article],n.[ArticleImage],n.[DateAdded],n.[LastModified],n.[PublishDate]
					  ,n.[ExpireDate],n.[Approved],n.[Featured],n.[NumberOfViews],n.[RatingValue],n.[RatingCount],n.[AllowComments],n.[Active]
					  ,fla.[TitleLink],n.[DetailType],fla.[DetailTypeData],n.[DetailsTemplate],n.[DetailsTheme],n.[GalleryPosition],n.[GalleryDisplayType]
					  ,n.[ShowMainImage],n.[ShowMainImageFront],n.[CommentsTheme],n.[ArticleImageFolder],n.[NumberOfComments]
					  ,n.[ArticleImageSet],fla.[MetaDecription],fla.[MetaKeywords],n.[DisplayStyle],n.[DetailTarget]
					  ,n.[ArticleFromRSS],n.[HasPermissions],n.[EventArticle],n.[DetailMediaType],n.[DetailMediaData],n.[AuthorAliasName],n.[ShowGallery],n.[ArticleGalleryID],fla.[MainImageTitle],fla.[MainImageDescription]
				FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS n INNER JOIN FinalLocalizedArticleIDsSet AS fla ON fla.ArticleID = n.ArticleID
			) As Result LEFT OUTER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsEventsData] AS ne on Result.ArticleID = ne.ArticleID ORDER BY CombinedOrderBy;
	END
	ELSE
	BEGIN
		SELECT 
		Result.[ArticleID],Result.[UserID],Result.[Title],Result.[SubTitle],Result.[Summary],Result.[Article],Result.[ArticleImage],Result.[DateAdded],Result.[LastModified],Result.[PublishDate]
		,Result.[ExpireDate],Result.[Approved],Result.[Featured],Result.[NumberOfViews],Result.[RatingValue],Result.[RatingCount],Result.[AllowComments],Result.[Active]
		,Result.[TitleLink],Result.[DetailType],Result.[DetailTypeData],Result.[DetailsTemplate],Result.[DetailsTheme],Result.[GalleryPosition],Result.[GalleryDisplayType]
		,Result.[ShowMainImage],Result.[ShowMainImageFront],Result.[CommentsTheme],Result.[ArticleImageFolder],Result.[NumberOfComments]
		,Result.[ArticleImageSet],Result.[MetaDecription],Result.[MetaKeywords],Result.[DisplayStyle],Result.[DetailTarget]
		,Result.[ArticleFromRSS],Result.[HasPermissions],Result.[EventArticle],Result.[DetailMediaType],Result.[DetailMediaData],Result.[AuthorAliasName],Result.[ShowGallery],Result.[ArticleGalleryID],Result.[MainImageTitle],Result.[MainImageDescription],
		Result.StartDate, Result.EndDate,Result.WhloeDay,Result.ShowEndDate,
		CASE Result.EventArticle
			WHEN 1 THEN (SELECT PointData FROM {databaseOwner}[{objectQualifier}EasyDNNnewsGoogleMapsData] AS md INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsArticleGoogleMapConnection] AS mc ON md.GoogleMapID = mc.GoogleMapID WHERE mc.ArticleID =  Result.ArticleID)
			WHEN 0 THEN ''''
		END AS ''GoogleMapData'',
		CAST (CASE Result.EventArticle
			WHEN 1 THEN Result.StartDate
			WHEN 0 THEN Result.PublishDate
		END AS DateTime ) AS ''CombinedOrderBy''
		FROM (SELECT n.*, ne.StartDate, ne.EndDate,ne.WhloeDay,ne.ShowEndDate
			FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS n LEFT OUTER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsEventsData] AS ne on n.ArticleID = ne.ArticleID WHERE n.ArticleID IN(
				SELECT DISTINCT na.[ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS na
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS cat ON na.ArticleID = cat.ArticleID
					INNER JOIN @UserViewCategoriesWithFilter AS uvcwf ON uvcwf.CategoryID = cat.CategoryID
				WHERE na.PortalID=@PortalID
					AND ((@AdminOrSuperUser = 1) OR ((@UserCanApprove = 1 OR na.Approved=1) AND (na.Active=1 OR na.UserID=@UserID)))
					AND na.HasPermissions = 0
					AND na.HideDefaultLocale = 0
					AND na.EventArticle = 0 
					AND na.PublishDate <= @CurrentDate AND na.ExpireDate >= @CurrentDate
					AND na.PublishDate >= @FromDate AND na.PublishDate <= @ToDate
					AND ((@FilterAuthorOrAuthors = 1 AND na.UserID IN (SELECT UserID FROM @TempAuthorsIDList)) OR (@FilterAuthorOrAuthors = 0))
				UNION
				SELECT DISTINCT na.[ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS na
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS cat ON na.ArticleID = cat.ArticleID
					INNER JOIN @UserViewCategoriesWithFilter AS uvcwf ON uvcwf.CategoryID = cat.CategoryID
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsEventsData] AS ne on na.ArticleID = ne.ArticleID
				WHERE na.PortalID=@PortalID
					AND ((@AdminOrSuperUser = 1) OR ((@UserCanApprove = 1 OR na.Approved=1) AND (na.Active=1 OR na.UserID=@UserID)))
					AND na.HasPermissions = 0
					AND na.HideDefaultLocale = 0
					AND na.EventArticle = 1  
					AND na.PublishDate <= @CurrentDate AND na.ExpireDate >= @CurrentDate
					AND (
						(@DisplayType = 0 AND (ne.StartDate <= @eToDate AND ne.EndDate >= @eFromDate)) OR
						(@DisplayType = 1 AND (na.PublishDate >= @FromDate AND na.PublishDate <= @ToDate)) OR
						(@DisplayType = 2 AND ((na.PublishDate >= @FromDate AND na.PublishDate <= @ToDate) OR (ne.StartDate <= @eToDate AND ne.EndDate >= @eFromDate)))
						)
					AND ((@FilterAuthorOrAuthors = 1 AND na.UserID IN (SELECT UserID FROM @TempAuthorsIDList)) OR (@FilterAuthorOrAuthors = 0))
				UNION ALL
				SELECT na.[ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS na
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsArticleUserPermissions] AS aup ON na.ArticleID = aup.ArticleID
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS cat ON na.ArticleID = cat.ArticleID
					INNER JOIN @FiltredByCategories AS fbc ON fbc.CategoryID = cat.CategoryID
				WHERE na.PortalID=@PortalID
					AND ((@AdminOrSuperUser = 1) OR (
						((@UserID = -1 AND aup.UserID IS NULL) OR (aup.UserID = @UserID)) AND aup.Show = 1 AND ((@UserCanApprove = 1) OR (na.Approved=1)) AND (na.Active=1 OR na.UserID=@UserID)))
					AND na.HasPermissions = 1
					AND na.HideDefaultLocale = 0
					AND na.EventArticle = 0  
					AND na.PublishDate <= @CurrentDate AND na.ExpireDate >= @CurrentDate
					AND na.PublishDate >= @FromDate AND na.PublishDate <= @ToDate
					AND ((@FilterAuthorOrAuthors = 1 AND na.UserID IN (SELECT UserID FROM @TempAuthorsIDList)) OR (@FilterAuthorOrAuthors = 0))
				UNION
				SELECT na.[ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS na
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsArticleUserPermissions] AS aup ON na.ArticleID = aup.ArticleID
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS cat ON na.ArticleID = cat.ArticleID
					INNER JOIN @FiltredByCategories AS fbc ON fbc.CategoryID = cat.CategoryID
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsEventsData] AS ne on na.ArticleID = ne.ArticleID
				WHERE na.PortalID=@PortalID
					AND ((@AdminOrSuperUser = 1) OR (
						((@UserID = -1 AND aup.UserID IS NULL) OR (aup.UserID = @UserID)) AND aup.Show = 1 AND ((@UserCanApprove = 1) OR (na.Approved=1)) AND (na.Active=1 OR na.UserID=@UserID)))
					AND na.HasPermissions = 1
					AND na.HideDefaultLocale = 0
					AND na.EventArticle = 1  
					AND na.PublishDate <= @CurrentDate AND na.ExpireDate >= @CurrentDate
					AND (
						(@DisplayType = 0 AND (ne.StartDate <= @eToDate AND ne.EndDate >= @eFromDate)) OR
						(@DisplayType = 1 AND (na.PublishDate >= @FromDate AND na.PublishDate <= @ToDate)) OR
						(@DisplayType = 2 AND ((na.PublishDate >= @FromDate AND na.PublishDate <= @ToDate) OR (ne.StartDate <= @eToDate AND ne.EndDate >= @eFromDate)))
						)
					AND ((@FilterAuthorOrAuthors = 1 AND na.UserID IN (SELECT UserID FROM @TempAuthorsIDList)) OR (@FilterAuthorOrAuthors = 0))
				UNION
				SELECT DISTINCT na.[ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS na
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsArticleRolePermissions] AS arp ON na.ArticleID = arp.ArticleID
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS cat ON na.ArticleID = cat.ArticleID
					INNER JOIN @FiltredByCategories AS fbc ON fbc.CategoryID = cat.CategoryID
				WHERE na.PortalID=@PortalID
					AND ((@AdminOrSuperUser = 1) OR (
						((@UserCanApprove = 1) OR (na.Approved=1)) AND (na.Active=1 OR na.UserID=@UserID) AND arp.Show = 1 AND arp.RoleID IN (SELECT [RoleID] FROM @UserInRoles)))
					AND na.HasPermissions = 1
					AND na.HideDefaultLocale = 0
					AND na.EventArticle = 0
					AND na.PublishDate <= @CurrentDate AND na.ExpireDate >= @CurrentDate
					AND na.PublishDate >= @FromDate AND na.PublishDate <= @ToDate
					AND ((@FilterAuthorOrAuthors = 1 AND na.UserID IN (SELECT UserID FROM @TempAuthorsIDList)) OR (@FilterAuthorOrAuthors = 0))	 
				UNION
				SELECT DISTINCT na.[ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS na
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsArticleRolePermissions] AS arp ON na.ArticleID = arp.ArticleID
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS cat ON na.ArticleID = cat.ArticleID
					INNER JOIN @FiltredByCategories AS fbc ON fbc.CategoryID = cat.CategoryID
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsEventsData] AS ne on na.ArticleID = ne.ArticleID
				WHERE na.PortalID=@PortalID
					AND ((@AdminOrSuperUser = 1) OR (
						((@UserCanApprove = 1) OR (na.Approved=1)) AND (na.Active=1 OR na.UserID=@UserID) AND arp.Show = 1 AND arp.RoleID IN (SELECT [RoleID] FROM @UserInRoles)))
					AND na.HasPermissions = 1
					AND na.HideDefaultLocale = 0
					AND na.EventArticle = 1
					AND na.PublishDate <= @CurrentDate AND na.ExpireDate >= @CurrentDate
					AND (
						(@DisplayType = 0 AND (ne.StartDate <= @eToDate AND ne.EndDate >= @eFromDate)) OR
						(@DisplayType = 1 AND (na.PublishDate >= @FromDate AND na.PublishDate <= @ToDate)) OR
						(@DisplayType = 2 AND ((na.PublishDate >= @FromDate AND na.PublishDate <= @ToDate) OR (ne.StartDate <= @eToDate AND ne.EndDate >= @eFromDate)))
						)
					AND((@FilterAuthorOrAuthors = 1 AND na.UserID IN (SELECT UserID FROM @TempAuthorsIDList)) OR (@FilterAuthorOrAuthors = 0))
				)
		 ) AS Result ORDER BY CombinedOrderBy;	 
	END
END
ELSE IF @FilterBySocialGroup = 1
BEGIN
IF @LocaleCode <> ''''
	BEGIN
		WITH FinalArticleIDsSet (ArticleID) AS(
			SELECT ArticleID FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS n WHERE ArticleID IN(
				SELECT DISTINCT na.[ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS na
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS cat ON na.ArticleID = cat.ArticleID
					INNER JOIN @UserViewCategoriesWithFilter AS uvcwf ON uvcwf.CategoryID = cat.CategoryID
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = na.ArticleID
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialGroupItems] AS sgi ON sgi.ArticleID = na.ArticleID AND sgi.RoleID = @FilterByDNNGroupID
					INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserID, @FilterByDNNGroupID) AS t ON t.seckey = nss.SecurityKey
					LEFT OUTER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsContentLocalization] AS ncl ON ncl.ArticleID = na.ArticleID
				WHERE na.PortalID=@PortalID
					AND ((@AdminOrSuperUser = 1) OR (
						(@UserCanApprove = 1 OR na.Approved=1) AND (na.Active=1 OR na.UserID=@UserID)))
					AND na.HasPermissions = 0
					AND na.EventArticle = 0 
					AND na.PublishDate <= @CurrentDate AND na.ExpireDate >= @CurrentDate
					AND na.PublishDate >= @FromDate AND na.PublishDate <= @ToDate
					AND ((@HideUnlocalizedItems = 1 AND ncl.ArticleID IS NOT NULL AND ncl.LocaleCode = @LocaleCode) OR (@HideUnlocalizedItems = 0))
				UNION
				SELECT DISTINCT na.[ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS na
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS cat ON na.ArticleID = cat.ArticleID
					INNER JOIN @UserViewCategoriesWithFilter AS uvcwf ON uvcwf.CategoryID = cat.CategoryID
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsEventsData] AS ne on na.ArticleID = ne.ArticleID
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = na.ArticleID
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialGroupItems] AS sgi ON sgi.ArticleID = na.ArticleID AND sgi.RoleID = @FilterByDNNGroupID
					INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserID, @FilterByDNNGroupID) AS t ON t.seckey = nss.SecurityKey
					LEFT OUTER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsContentLocalization] AS ncl ON ncl.ArticleID = na.ArticleID
				WHERE na.PortalID=@PortalID
					AND ((@AdminOrSuperUser = 1) OR (
						(@UserCanApprove = 1 OR na.Approved=1) AND (na.Active=1 OR na.UserID=@UserID)))
					AND na.HasPermissions = 0
					AND na.EventArticle = 1  
					AND na.PublishDate <= @CurrentDate AND na.ExpireDate >= @CurrentDate
					AND (
						(@DisplayType = 0 AND (ne.StartDate <= @eToDate AND ne.EndDate >= @eFromDate)) OR
						(@DisplayType = 1 AND (na.PublishDate >= @FromDate AND na.PublishDate <= @ToDate)) OR
						(@DisplayType = 2 AND ((na.PublishDate >= @FromDate AND na.PublishDate <= @ToDate) OR (ne.StartDate <= @eToDate AND ne.EndDate >= @eFromDate)))
						)
					AND ((@HideUnlocalizedItems = 1 AND ncl.ArticleID IS NOT NULL AND ncl.LocaleCode = @LocaleCode) OR (@HideUnlocalizedItems = 0))
				UNION ALL
				SELECT na.[ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS na
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsArticleUserPermissions] AS aup ON na.ArticleID = aup.ArticleID
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS cat ON na.ArticleID = cat.ArticleID
					INNER JOIN @FiltredByCategories AS fbc ON fbc.CategoryID = cat.CategoryID
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = na.ArticleID
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialGroupItems] AS sgi ON sgi.ArticleID = na.ArticleID AND sgi.RoleID = @FilterByDNNGroupID
					INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserID, @FilterByDNNGroupID) AS t ON t.seckey = nss.SecurityKey
					LEFT OUTER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsContentLocalization] AS ncl ON ncl.ArticleID = na.ArticleID
				WHERE na.PortalID=@PortalID
					AND ((@AdminOrSuperUser = 1) OR (
						((@UserID = -1 AND aup.UserID IS NULL) OR (aup.UserID = @UserID)) AND aup.Show = 1 AND ((@UserCanApprove = 1) OR (na.Approved=1)) AND (na.Active=1 OR na.UserID=@UserID)))
					AND na.HasPermissions = 1
					AND na.EventArticle = 0  
					AND na.PublishDate <= @CurrentDate AND na.ExpireDate >= @CurrentDate
					AND na.PublishDate >= @FromDate AND na.PublishDate <= @ToDate
					AND ((@HideUnlocalizedItems = 1 AND ncl.ArticleID IS NOT NULL AND ncl.LocaleCode = @LocaleCode) OR (@HideUnlocalizedItems = 0))
				UNION
				SELECT na.[ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS na
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsArticleUserPermissions] AS aup ON na.ArticleID = aup.ArticleID
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS cat ON na.ArticleID = cat.ArticleID
					INNER JOIN @FiltredByCategories AS fbc ON fbc.CategoryID = cat.CategoryID
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsEventsData] AS ne on na.ArticleID = ne.ArticleID
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = na.ArticleID
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialGroupItems] AS sgi ON sgi.ArticleID = na.ArticleID AND sgi.RoleID = @FilterByDNNGroupID
					INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserID, @FilterByDNNGroupID) AS t ON t.seckey = nss.SecurityKey
					LEFT OUTER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsContentLocalization] AS ncl ON ncl.ArticleID = na.ArticleID
				WHERE na.PortalID=@PortalID
					AND ((@AdminOrSuperUser = 1) OR (
						((@UserID = -1 AND aup.UserID IS NULL) OR (aup.UserID = @UserID)) AND aup.Show = 1 AND ((@UserCanApprove = 1) OR (na.Approved=1)) AND (na.Active=1 OR na.UserID=@UserID)))
					AND na.HasPermissions = 1
					AND na.EventArticle = 1  
					AND na.PublishDate <= @CurrentDate AND na.ExpireDate >= @CurrentDate
					AND (
						(@DisplayType = 0 AND (ne.StartDate <= @eToDate AND ne.EndDate >= @eFromDate)) OR
						(@DisplayType = 1 AND (na.PublishDate >= @FromDate AND na.PublishDate <= @ToDate)) OR
						(@DisplayType = 2 AND ((na.PublishDate >= @FromDate AND na.PublishDate <= @ToDate) OR (ne.StartDate <= @eToDate AND ne.EndDate >= @eFromDate)))
						)
					AND ((@HideUnlocalizedItems = 1 AND ncl.ArticleID IS NOT NULL AND ncl.LocaleCode = @LocaleCode) OR (@HideUnlocalizedItems = 0))
				UNION
				SELECT DISTINCT na.[ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS na
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsArticleRolePermissions] AS arp ON na.ArticleID = arp.ArticleID
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS cat ON na.ArticleID = cat.ArticleID
					INNER JOIN @FiltredByCategories AS fbc ON fbc.CategoryID = cat.CategoryID
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = na.ArticleID
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialGroupItems] AS sgi ON sgi.ArticleID = na.ArticleID AND sgi.RoleID = @FilterByDNNGroupID
					INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserID, @FilterByDNNGroupID) AS t ON t.seckey = nss.SecurityKey
					LEFT OUTER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsContentLocalization] AS ncl ON ncl.ArticleID = na.ArticleID
				WHERE na.PortalID=@PortalID
						AND ((@AdminOrSuperUser = 1) OR (
							((@UserCanApprove = 1) OR (na.Approved=1))AND (na.Active=1 OR na.UserID=@UserID)AND arp.Show = 1AND arp.RoleID IN (SELECT [RoleID] FROM @UserInRoles)))
						AND na.HasPermissions = 1
						AND na.EventArticle = 0  
						AND na.PublishDate <= @CurrentDate AND na.ExpireDate >= @CurrentDate
						AND na.PublishDate >= @FromDate AND na.PublishDate <= @ToDate
						AND ((@HideUnlocalizedItems = 1 AND ncl.ArticleID IS NOT NULL AND ncl.LocaleCode = @LocaleCode) OR (@HideUnlocalizedItems = 0))
				UNION
				SELECT DISTINCT na.[ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS na
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsArticleRolePermissions] AS arp ON na.ArticleID = arp.ArticleID
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS cat ON na.ArticleID = cat.ArticleID
					INNER JOIN @FiltredByCategories AS fbc ON fbc.CategoryID = cat.CategoryID
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsEventsData] AS ne on na.ArticleID = ne.ArticleID
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = na.ArticleID
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialGroupItems] AS sgi ON sgi.ArticleID = na.ArticleID AND sgi.RoleID = @FilterByDNNGroupID
					INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserID, @FilterByDNNGroupID) AS t ON t.seckey = nss.SecurityKey
					LEFT OUTER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsContentLocalization] AS ncl ON ncl.ArticleID = na.ArticleID
				WHERE na.PortalID=@PortalID
					AND ((@AdminOrSuperUser = 1) OR (
						((@UserCanApprove = 1) OR (na.Approved=1)) AND (na.Active=1 OR na.UserID=@UserID) AND arp.Show = 1 AND arp.RoleID IN (SELECT [RoleID] FROM @UserInRoles)))
					AND na.HasPermissions = 1
					AND na.EventArticle = 1  
					AND na.PublishDate <= @CurrentDate AND na.ExpireDate >= @CurrentDate
					AND (
						(@DisplayType = 0 AND (ne.StartDate <= @eToDate AND ne.EndDate >= @eFromDate)) OR
						(@DisplayType = 1 AND (na.PublishDate >= @FromDate AND na.PublishDate <= @ToDate)) OR
						(@DisplayType = 2 AND ((na.PublishDate >= @FromDate AND na.PublishDate <= @ToDate) OR (ne.StartDate <= @eToDate AND ne.EndDate >= @eFromDate)))
						)
					AND ((@HideUnlocalizedItems = 1 AND ncl.ArticleID IS NOT NULL AND ncl.LocaleCode = @LocaleCode) OR (@HideUnlocalizedItems = 0))
			)
		),
		FinalLocalizedArticleIDsSet (ArticleID,Title,SubTitle,Summary,Article,DetailTypeData,TitleLink,MetaDecription,MetaKeywords,MainImageTitle,MainImageDescription) AS(
			SELECT ArticleID,Title,SubTitle,Summary,Article,DetailTypeData,clTitleLink AS TitleLink ,MetaDecription,MetaKeywords,MainImageTitle,MainImageDescription FROM {databaseOwner}[{objectQualifier}EasyDNNNewsContentLocalization] WHERE ArticleID IN (SELECT ArticleID FROM FinalArticleIDsSet) AND LocaleCode = @LocaleCode
		)
		SELECT Result.*, ne.StartDate, ne.EndDate,ne.WhloeDay,ne.ShowEndDate,
			CASE Result.EventArticle
				WHEN 1 THEN (SELECT PointData FROM {databaseOwner}[{objectQualifier}EasyDNNnewsGoogleMapsData] AS md INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsArticleGoogleMapConnection] AS mc ON md.GoogleMapID = mc.GoogleMapID WHERE mc.ArticleID =  Result.ArticleID)
				WHEN 0 THEN ''''
			END AS ''GoogleMapData'',
			CASE Result.EventArticle
				WHEN 1 THEN ne.StartDate
				WHEN 0 THEN Result.PublishDate
			END AS ''CombinedOrderBy''
			FROM (
				SELECT n.[ArticleID],n.[UserID],n.[Title],n.[SubTitle],n.[Summary],n.[Article],n.[ArticleImage],n.[DateAdded],n.[LastModified],n.[PublishDate]
					  ,n.[ExpireDate],n.[Approved],n.[Featured],n.[NumberOfViews],n.[RatingValue],n.[RatingCount],n.[AllowComments],n.[Active]
					  ,n.[TitleLink],n.[DetailType],n.[DetailTypeData],n.[DetailsTemplate],n.[DetailsTheme],n.[GalleryPosition],n.[GalleryDisplayType]
					  ,n.[ShowMainImage],n.[ShowMainImageFront],n.[CommentsTheme],n.[ArticleImageFolder],n.[NumberOfComments]
					  ,n.[ArticleImageSet],n.[MetaDecription],n.[MetaKeywords],n.[DisplayStyle],n.[DetailTarget]
					  ,n.[ArticleFromRSS],n.[HasPermissions],n.[EventArticle],n.[DetailMediaType],n.[DetailMediaData],n.[AuthorAliasName],n.[ShowGallery],n.[ArticleGalleryID],n.[MainImageTitle],n.[MainImageDescription]
					   FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS n WHERE ArticleID IN (SELECT ArticleID FROM FinalArticleIDsSet WHERE ArticleID NOT IN (SELECT ArticleID FROM FinalLocalizedArticleIDsSet))
				UNION ALL
				SELECT n.[ArticleID],n.[UserID],fla.[Title],fla.[SubTitle],fla.[Summary],fla.[Article],n.[ArticleImage],n.[DateAdded],n.[LastModified],n.[PublishDate]
					  ,n.[ExpireDate],n.[Approved],n.[Featured],n.[NumberOfViews],n.[RatingValue],n.[RatingCount],n.[AllowComments],n.[Active]
					  ,fla.[TitleLink],n.[DetailType],fla.[DetailTypeData],n.[DetailsTemplate],n.[DetailsTheme],n.[GalleryPosition],n.[GalleryDisplayType]
					  ,n.[ShowMainImage],n.[ShowMainImageFront],n.[CommentsTheme],n.[ArticleImageFolder],n.[NumberOfComments]
					  ,n.[ArticleImageSet],fla.[MetaDecription],fla.[MetaKeywords],n.[DisplayStyle],n.[DetailTarget]
					  ,n.[ArticleFromRSS],n.[HasPermissions],n.[EventArticle],n.[DetailMediaType],n.[DetailMediaData],n.[AuthorAliasName],n.[ShowGallery],n.[ArticleGalleryID],fla.[MainImageTitle],fla.[MainImageDescription]
				FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS n INNER JOIN FinalLocalizedArticleIDsSet AS fla ON fla.ArticleID = n.ArticleID
			) As Result LEFT OUTER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsEventsData] AS ne on Result.ArticleID = ne.ArticleID ORDER BY CombinedOrderBy;
	END
	ELSE
	BEGIN
		SELECT 
		Result.[ArticleID],Result.[UserID],Result.[Title],Result.[SubTitle],Result.[Summary],Result.[Article],Result.[ArticleImage],Result.[DateAdded],Result.[LastModified],Result.[PublishDate]
		,Result.[ExpireDate],Result.[Approved],Result.[Featured],Result.[NumberOfViews],Result.[RatingValue],Result.[RatingCount],Result.[AllowComments],Result.[Active]
		,Result.[TitleLink],Result.[DetailType],Result.[DetailTypeData],Result.[DetailsTemplate],Result.[DetailsTheme],Result.[GalleryPosition],Result.[GalleryDisplayType]
		,Result.[ShowMainImage],Result.[ShowMainImageFront],Result.[CommentsTheme],Result.[ArticleImageFolder],Result.[NumberOfComments]
		,Result.[ArticleImageSet],Result.[MetaDecription],Result.[MetaKeywords],Result.[DisplayStyle],Result.[DetailTarget]
		,Result.[ArticleFromRSS],Result.[HasPermissions],Result.[EventArticle],Result.[DetailMediaType],Result.[DetailMediaData],Result.[AuthorAliasName],Result.[ShowGallery],Result.[ArticleGalleryID],Result.[MainImageTitle],Result.[MainImageDescription],
		Result.StartDate, Result.EndDate,Result.WhloeDay,Result.ShowEndDate,
		CASE Result.EventArticle
			WHEN 1 THEN (SELECT PointData FROM {databaseOwner}[{objectQualifier}EasyDNNnewsGoogleMapsData] AS md INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsArticleGoogleMapConnection] AS mc ON md.GoogleMapID = mc.GoogleMapID WHERE mc.ArticleID =  Result.ArticleID)
			WHEN 0 THEN ''''
		END AS ''GoogleMapData'',
		CAST (CASE Result.EventArticle
			WHEN 1 THEN Result.StartDate
			WHEN 0 THEN Result.PublishDate
		END AS DateTime ) AS ''CombinedOrderBy''
		FROM (SELECT n.*, ne.StartDate, ne.EndDate,ne.WhloeDay,ne.ShowEndDate
			FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS n LEFT OUTER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsEventsData] AS ne on n.ArticleID = ne.ArticleID WHERE n.ArticleID IN(
				SELECT DISTINCT na.[ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS na
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS cat ON na.ArticleID = cat.ArticleID
					INNER JOIN @UserViewCategoriesWithFilter AS uvcwf ON uvcwf.CategoryID = cat.CategoryID
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = na.ArticleID
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialGroupItems] AS sgi ON sgi.ArticleID = na.ArticleID AND sgi.RoleID = @FilterByDNNGroupID
					INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserID, @FilterByDNNGroupID) AS t ON t.seckey = nss.SecurityKey
				WHERE na.PortalID=@PortalID
					AND ((@AdminOrSuperUser = 1) OR ((@UserCanApprove = 1 OR na.Approved=1) AND (na.Active=1 OR na.UserID=@UserID)))
					AND na.HasPermissions = 0
					AND na.HideDefaultLocale = 0
					AND na.EventArticle = 0		   
					AND na.PublishDate <= @CurrentDate AND na.ExpireDate >= @CurrentDate
					AND na.PublishDate >= @FromDate AND na.PublishDate <= @ToDate
				UNION
				SELECT DISTINCT na.[ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS na
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS cat ON na.ArticleID = cat.ArticleID
					INNER JOIN @UserViewCategoriesWithFilter AS uvcwf ON uvcwf.CategoryID = cat.CategoryID
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsEventsData] AS ne on na.ArticleID = ne.ArticleID
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = na.ArticleID
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialGroupItems] AS sgi ON sgi.ArticleID = na.ArticleID AND sgi.RoleID = @FilterByDNNGroupID
					INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserID, @FilterByDNNGroupID) AS t ON t.seckey = nss.SecurityKey
				WHERE na.PortalID=@PortalID
					AND ((@AdminOrSuperUser = 1) OR ((@UserCanApprove = 1 OR na.Approved=1) AND (na.Active=1 OR na.UserID=@UserID)))
					AND na.HasPermissions = 0
					AND na.HideDefaultLocale = 0
					AND na.EventArticle = 1  		   
					AND na.PublishDate <= @CurrentDate AND na.ExpireDate >= @CurrentDate
					AND (
						(@DisplayType = 0 AND (ne.StartDate <= @eToDate AND ne.EndDate >= @eFromDate)) OR
						(@DisplayType = 1 AND (na.PublishDate >= @FromDate AND na.PublishDate <= @ToDate)) OR
						(@DisplayType = 2 AND ((na.PublishDate >= @FromDate AND na.PublishDate <= @ToDate) OR (ne.StartDate <= @eToDate AND ne.EndDate >= @eFromDate)))
						)
				UNION ALL
				SELECT na.[ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS na
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsArticleUserPermissions] AS aup ON na.ArticleID = aup.ArticleID
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS cat ON na.ArticleID = cat.ArticleID
					INNER JOIN @FiltredByCategories AS fbc ON fbc.CategoryID = cat.CategoryID
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = na.ArticleID
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialGroupItems] AS sgi ON sgi.ArticleID = na.ArticleID AND sgi.RoleID = @FilterByDNNGroupID
					INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserID, @FilterByDNNGroupID) AS t ON t.seckey = nss.SecurityKey
				WHERE na.PortalID=@PortalID
					AND ((@AdminOrSuperUser = 1) OR (
						((@UserID = -1 AND aup.UserID IS NULL) OR (aup.UserID = @UserID)) AND aup.Show = 1 AND ((@UserCanApprove = 1) OR (na.Approved=1))AND (na.Active=1 OR na.UserID=@UserID)))
					AND na.HasPermissions = 1
					AND na.HideDefaultLocale = 0
					AND na.EventArticle = 0 
					AND na.PublishDate <= @CurrentDate AND na.ExpireDate >= @CurrentDate
					AND na.PublishDate >= @FromDate AND na.PublishDate <= @ToDate
				UNION
				SELECT na.[ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS na
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsArticleUserPermissions] AS aup ON na.ArticleID = aup.ArticleID
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS cat ON na.ArticleID = cat.ArticleID
					INNER JOIN @FiltredByCategories AS fbc ON fbc.CategoryID = cat.CategoryID
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsEventsData] AS ne on na.ArticleID = ne.ArticleID
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = na.ArticleID
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialGroupItems] AS sgi ON sgi.ArticleID = na.ArticleID AND sgi.RoleID = @FilterByDNNGroupID
					INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserID, @FilterByDNNGroupID) AS t ON t.seckey = nss.SecurityKey
				WHERE na.PortalID=@PortalID
					AND ((@AdminOrSuperUser = 1) OR (
						((@UserID = -1 AND aup.UserID IS NULL) OR (aup.UserID = @UserID)) AND aup.Show = 1 AND ((@UserCanApprove = 1) OR (na.Approved=1))AND (na.Active=1 OR na.UserID=@UserID)))
					AND na.HasPermissions = 1
					AND na.HideDefaultLocale = 0
					AND na.EventArticle = 1  
					AND na.PublishDate <= @CurrentDate AND na.ExpireDate >= @CurrentDate
					AND (
						(@DisplayType = 0 AND (ne.StartDate <= @eToDate AND ne.EndDate >= @eFromDate)) OR
						(@DisplayType = 1 AND (na.PublishDate >= @FromDate AND na.PublishDate <= @ToDate)) OR
						(@DisplayType = 2 AND ((na.PublishDate >= @FromDate AND na.PublishDate <= @ToDate) OR (ne.StartDate <= @eToDate AND ne.EndDate >= @eFromDate)))
						)
				UNION
				SELECT DISTINCT na.[ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS na
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsArticleRolePermissions] AS arp ON na.ArticleID = arp.ArticleID
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS cat ON na.ArticleID = cat.ArticleID
					INNER JOIN @FiltredByCategories AS fbc ON fbc.CategoryID = cat.CategoryID
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = na.ArticleID
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialGroupItems] AS sgi ON sgi.ArticleID = na.ArticleID AND sgi.RoleID = @FilterByDNNGroupID
					INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserID, @FilterByDNNGroupID) AS t ON t.seckey = nss.SecurityKey
				WHERE na.PortalID=@PortalID
					AND ((@AdminOrSuperUser = 1) OR (
						((@UserCanApprove = 1) OR (na.Approved=1)) AND (na.Active=1 OR na.UserID=@UserID) AND arp.Show = 1 AND arp.RoleID IN (SELECT [RoleID] FROM @UserInRoles)))
					AND na.HasPermissions = 1
					AND na.HideDefaultLocale = 0
					AND na.EventArticle = 0
					AND na.PublishDate <= @CurrentDate AND na.ExpireDate >= @CurrentDate
					AND na.PublishDate >= @FromDate AND na.PublishDate <= @ToDate
				UNION
				SELECT DISTINCT na.[ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS na
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsArticleRolePermissions] AS arp ON na.ArticleID = arp.ArticleID
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS cat ON na.ArticleID = cat.ArticleID
					INNER JOIN @FiltredByCategories AS fbc ON fbc.CategoryID = cat.CategoryID
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsEventsData] AS ne on na.ArticleID = ne.ArticleID
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = na.ArticleID
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialGroupItems] AS sgi ON sgi.ArticleID = na.ArticleID AND sgi.RoleID = @FilterByDNNGroupID
					INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserID, @FilterByDNNGroupID) AS t ON t.seckey = nss.SecurityKey
				WHERE na.PortalID=@PortalID
					AND ((@AdminOrSuperUser = 1) OR (
						((@UserCanApprove = 1) OR (na.Approved=1)) AND (na.Active=1 OR na.UserID=@UserID) AND arp.Show = 1 AND arp.RoleID IN (SELECT [RoleID] FROM @UserInRoles)))
					AND na.HasPermissions = 1
					AND na.HideDefaultLocale = 0
					AND na.EventArticle = 1
					AND na.PublishDate <= @CurrentDate AND na.ExpireDate >= @CurrentDate
					AND (
						(@DisplayType = 0 AND (ne.StartDate <= @eToDate AND ne.EndDate >= @eFromDate)) OR
						(@DisplayType = 1 AND (na.PublishDate >= @FromDate AND na.PublishDate <= @ToDate)) OR
						(@DisplayType = 2 AND ((na.PublishDate >= @FromDate AND na.PublishDate <= @ToDate) OR (ne.StartDate <= @eToDate AND ne.EndDate >= @eFromDate)))
						)
			)
		) AS Result ORDER BY CombinedOrderBy;
	END
END
ELSE IF @FilterByDNNUserID <> 0
BEGIN
	IF @LocaleCode <> ''''
	BEGIN
		WITH FinalArticleIDsSet (ArticleID) AS(
			SELECT ArticleID FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS n WHERE ArticleID IN(
				SELECT DISTINCT na.[ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS na
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS cat ON na.ArticleID = cat.ArticleID
					INNER JOIN @UserViewCategoriesWithFilter AS uvcwf ON uvcwf.CategoryID = cat.CategoryID
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = na.ArticleID
					INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserID, @FilterByDNNGroupID) AS t ON t.seckey = nss.SecurityKey
					LEFT OUTER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsContentLocalization] AS ncl ON ncl.ArticleID = na.ArticleID
				WHERE na.PortalID=@PortalID
					AND ((@AdminOrSuperUser = 1) OR ((@UserCanApprove = 1 OR na.Approved=1)AND (na.Active=1 OR na.UserID=@UserID)))
					AND na.HasPermissions = 0
					AND na.EventArticle = 0		   
					AND na.PublishDate <= @CurrentDate AND na.ExpireDate >= @CurrentDate
					AND na.PublishDate >= @FromDate AND na.PublishDate <= @ToDate
					AND na.UserID = @FilterByDNNUserID
					AND ((@HideUnlocalizedItems = 1 AND ncl.ArticleID IS NOT NULL AND ncl.LocaleCode = @LocaleCode) OR (@HideUnlocalizedItems = 0))
				UNION
				SELECT DISTINCT na.[ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS na
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS cat ON na.ArticleID = cat.ArticleID
					INNER JOIN @UserViewCategoriesWithFilter AS uvcwf ON uvcwf.CategoryID = cat.CategoryID
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsEventsData] AS ne on na.ArticleID = ne.ArticleID
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = na.ArticleID
					INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserID, @FilterByDNNGroupID) AS t ON t.seckey = nss.SecurityKey
					LEFT OUTER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsContentLocalization] AS ncl ON ncl.ArticleID = na.ArticleID
				WHERE na.PortalID=@PortalID
					AND ((@AdminOrSuperUser = 1) OR ((@UserCanApprove = 1 OR na.Approved=1)AND (na.Active=1 OR na.UserID=@UserID)))
					AND na.HasPermissions = 0
					AND na.EventArticle = 1		   
					AND na.PublishDate <= @CurrentDate AND na.ExpireDate >= @CurrentDate
					AND (
						(@DisplayType = 0 AND (ne.StartDate <= @eToDate AND ne.EndDate >= @eFromDate)) OR
						(@DisplayType = 1 AND (na.PublishDate >= @FromDate AND na.PublishDate <= @ToDate)) OR
						(@DisplayType = 2 AND ((na.PublishDate >= @FromDate AND na.PublishDate <= @ToDate) OR (ne.StartDate <= @eToDate AND ne.EndDate >= @eFromDate)))
						)
					AND na.UserID = @FilterByDNNUserID
					AND ((@HideUnlocalizedItems = 1 AND ncl.ArticleID IS NOT NULL AND ncl.LocaleCode = @LocaleCode) OR (@HideUnlocalizedItems = 0))
				UNION ALL
				SELECT na.[ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS na
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsArticleUserPermissions] AS aup ON na.ArticleID = aup.ArticleID
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS cat ON na.ArticleID = cat.ArticleID
					INNER JOIN @FiltredByCategories AS fbc ON fbc.CategoryID = cat.CategoryID
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = na.ArticleID
					INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserID, @FilterByDNNGroupID) AS t ON t.seckey = nss.SecurityKey
					LEFT OUTER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsContentLocalization] AS ncl ON ncl.ArticleID = na.ArticleID
				WHERE na.PortalID=@PortalID
					AND ((@AdminOrSuperUser = 1) OR (
						((@UserID = -1 AND aup.UserID IS NULL) OR (aup.UserID = @UserID)) AND aup.Show = 1 AND ((@UserCanApprove = 1) OR (na.Approved=1)) AND (na.Active=1 OR na.UserID=@UserID)))
					AND na.HasPermissions = 1
					AND na.EventArticle = 0  
					AND na.PublishDate <= @CurrentDate AND na.ExpireDate >= @CurrentDate
					AND na.PublishDate >= @FromDate AND na.PublishDate <= @ToDate
					AND na.UserID = @FilterByDNNUserID
					AND ((@HideUnlocalizedItems = 1 AND ncl.ArticleID IS NOT NULL AND ncl.LocaleCode = @LocaleCode) OR (@HideUnlocalizedItems = 0))
				UNION
				SELECT na.[ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS na
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsArticleUserPermissions] AS aup ON na.ArticleID = aup.ArticleID
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS cat ON na.ArticleID = cat.ArticleID
					INNER JOIN @FiltredByCategories AS fbc ON fbc.CategoryID = cat.CategoryID
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsEventsData] AS ne on na.ArticleID = ne.ArticleID
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = na.ArticleID
					INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserID, @FilterByDNNGroupID) AS t ON t.seckey = nss.SecurityKey
					LEFT OUTER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsContentLocalization] AS ncl ON ncl.ArticleID = na.ArticleID
				WHERE na.PortalID=@PortalID
					AND ((@AdminOrSuperUser = 1) OR (
						((@UserID = -1 AND aup.UserID IS NULL) OR (aup.UserID = @UserID)) AND aup.Show = 1 AND ((@UserCanApprove = 1) OR (na.Approved=1)) AND (na.Active=1 OR na.UserID=@UserID)))
					AND na.HasPermissions = 1
					AND na.EventArticle = 1
					AND na.PublishDate <= @CurrentDate AND na.ExpireDate >= @CurrentDate
					AND (
						(@DisplayType = 0 AND (ne.StartDate <= @eToDate AND ne.EndDate >= @eFromDate)) OR
						(@DisplayType = 1 AND (na.PublishDate >= @FromDate AND na.PublishDate <= @ToDate)) OR
						(@DisplayType = 2 AND ((na.PublishDate >= @FromDate AND na.PublishDate <= @ToDate) OR (ne.StartDate <= @eToDate AND ne.EndDate >= @eFromDate)))
						)
					AND na.UserID = @FilterByDNNUserID
					AND ((@HideUnlocalizedItems = 1 AND ncl.ArticleID IS NOT NULL AND ncl.LocaleCode = @LocaleCode) OR (@HideUnlocalizedItems = 0))
				UNION
				SELECT DISTINCT na.[ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS na
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsArticleRolePermissions] AS arp ON na.ArticleID = arp.ArticleID
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS cat ON na.ArticleID = cat.ArticleID
					INNER JOIN @FiltredByCategories AS fbc ON fbc.CategoryID = cat.CategoryID
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = na.ArticleID
					INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserID, @FilterByDNNGroupID) AS t ON t.seckey = nss.SecurityKey
					LEFT OUTER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsContentLocalization] AS ncl ON ncl.ArticleID = na.ArticleID
				WHERE na.PortalID=@PortalID
					AND ((@AdminOrSuperUser = 1) OR (
						((@UserCanApprove = 1) OR (na.Approved=1)) AND (na.Active=1 OR na.UserID=@UserID) AND arp.Show = 1 AND arp.RoleID IN (SELECT [RoleID] FROM @UserInRoles)))
					AND na.HasPermissions = 1
					AND na.EventArticle = 0
					AND na.PublishDate <= @CurrentDate AND na.ExpireDate >= @CurrentDate
					AND na.PublishDate >= @FromDate AND na.PublishDate <= @ToDate
					AND na.UserID = @FilterByDNNUserID
					AND ((@HideUnlocalizedItems = 1 AND ncl.ArticleID IS NOT NULL AND ncl.LocaleCode = @LocaleCode) OR (@HideUnlocalizedItems = 0))
				UNION
				SELECT DISTINCT na.[ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS na
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsArticleRolePermissions] AS arp ON na.ArticleID = arp.ArticleID
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS cat ON na.ArticleID = cat.ArticleID
					INNER JOIN @FiltredByCategories AS fbc ON fbc.CategoryID = cat.CategoryID
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsEventsData] AS ne on na.ArticleID = ne.ArticleID
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = na.ArticleID
					INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserID, @FilterByDNNGroupID) AS t ON t.seckey = nss.SecurityKey
					LEFT OUTER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsContentLocalization] AS ncl ON ncl.ArticleID = na.ArticleID
				WHERE na.PortalID=@PortalID
					AND ((@AdminOrSuperUser = 1) OR (
						((@UserCanApprove = 1) OR (na.Approved=1)) AND (na.Active=1 OR na.UserID=@UserID) AND arp.Show = 1 AND arp.RoleID IN (SELECT [RoleID] FROM @UserInRoles)))
					AND na.HasPermissions = 1
					AND na.EventArticle = 1
					AND na.PublishDate <= @CurrentDate AND na.ExpireDate >= @CurrentDate
					AND (
						(@DisplayType = 0 AND (ne.StartDate <= @eToDate AND ne.EndDate >= @eFromDate)) OR
						(@DisplayType = 1 AND (na.PublishDate >= @FromDate AND na.PublishDate <= @ToDate)) OR
						(@DisplayType = 2 AND ((na.PublishDate >= @FromDate AND na.PublishDate <= @ToDate) OR (ne.StartDate <= @eToDate AND ne.EndDate >= @eFromDate)))
						)
					AND na.UserID = @FilterByDNNUserID
					AND ((@HideUnlocalizedItems = 1 AND ncl.ArticleID IS NOT NULL AND ncl.LocaleCode = @LocaleCode) OR (@HideUnlocalizedItems = 0))
				)
			),
			FinalLocalizedArticleIDsSet (ArticleID,Title,SubTitle,Summary,Article,DetailTypeData,TitleLink,MetaDecription,MetaKeywords,MainImageTitle,MainImageDescription) AS(
				SELECT ArticleID,Title,SubTitle,Summary,Article,DetailTypeData,clTitleLink AS TitleLink ,MetaDecription,MetaKeywords,MainImageTitle,MainImageDescription FROM {databaseOwner}[{objectQualifier}EasyDNNNewsContentLocalization] WHERE ArticleID IN (SELECT ArticleID FROM FinalArticleIDsSet) AND LocaleCode = @LocaleCode
			)
			SELECT Result.*, ne.StartDate, ne.EndDate,ne.WhloeDay,ne.ShowEndDate,
				CASE Result.EventArticle
					WHEN ''True'' THEN (SELECT PointData FROM {databaseOwner}[{objectQualifier}EasyDNNnewsGoogleMapsData] AS md INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsArticleGoogleMapConnection] AS mc ON md.GoogleMapID = mc.GoogleMapID WHERE mc.ArticleID =  Result.ArticleID)
					WHEN ''False'' THEN ''''
				END AS ''GoogleMapData'',
				CASE Result.EventArticle
					WHEN ''True'' THEN ne.StartDate
					WHEN ''False'' THEN Result.PublishDate
				END AS ''CombinedOrderBy''
				FROM (
					SELECT n.[ArticleID],n.[UserID],n.[Title],n.[SubTitle],n.[Summary],n.[Article],n.[ArticleImage],n.[DateAdded],n.[LastModified],n.[PublishDate]
						  ,n.[ExpireDate],n.[Approved],n.[Featured],n.[NumberOfViews],n.[RatingValue],n.[RatingCount],n.[AllowComments],n.[Active]
						  ,n.[TitleLink],n.[DetailType],n.[DetailTypeData],n.[DetailsTemplate],n.[DetailsTheme],n.[GalleryPosition],n.[GalleryDisplayType]
						  ,n.[ShowMainImage],n.[ShowMainImageFront],n.[CommentsTheme],n.[ArticleImageFolder],n.[NumberOfComments]
						  ,n.[ArticleImageSet],n.[MetaDecription],n.[MetaKeywords],n.[DisplayStyle],n.[DetailTarget]
						  ,n.[ArticleFromRSS],n.[HasPermissions],n.[EventArticle],n.[DetailMediaType],n.[DetailMediaData],n.[AuthorAliasName],n.[ShowGallery],n.[ArticleGalleryID],n.[MainImageTitle],n.[MainImageDescription]
						   FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS n WHERE ArticleID IN (SELECT ArticleID FROM FinalArticleIDsSet WHERE ArticleID NOT IN (SELECT ArticleID FROM FinalLocalizedArticleIDsSet))
					UNION ALL
					SELECT n.[ArticleID],n.[UserID],fla.[Title],fla.[SubTitle],fla.[Summary],fla.[Article],n.[ArticleImage],n.[DateAdded],n.[LastModified],n.[PublishDate]
						  ,n.[ExpireDate],n.[Approved],n.[Featured],n.[NumberOfViews],n.[RatingValue],n.[RatingCount],n.[AllowComments],n.[Active]
						  ,fla.[TitleLink],n.[DetailType],fla.[DetailTypeData],n.[DetailsTemplate],n.[DetailsTheme],n.[GalleryPosition],n.[GalleryDisplayType]
						  ,n.[ShowMainImage],n.[ShowMainImageFront],n.[CommentsTheme],n.[ArticleImageFolder],n.[NumberOfComments]
						  ,n.[ArticleImageSet],fla.[MetaDecription],fla.[MetaKeywords],n.[DisplayStyle],n.[DetailTarget]
						  ,n.[ArticleFromRSS],n.[HasPermissions],n.[EventArticle],n.[DetailMediaType],n.[DetailMediaData],n.[AuthorAliasName],n.[ShowGallery],n.[ArticleGalleryID],fla.[MainImageTitle],fla.[MainImageDescription]
					FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS n INNER JOIN FinalLocalizedArticleIDsSet AS fla ON fla.ArticleID = n.ArticleID
				) As Result LEFT OUTER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsEventsData] AS ne on Result.ArticleID = ne.ArticleID ORDER BY CombinedOrderBy;
	END
	ELSE
	BEGIN
		SELECT 
		Result.[ArticleID],Result.[UserID],Result.[Title],Result.[SubTitle],Result.[Summary],Result.[Article],Result.[ArticleImage],Result.[DateAdded],Result.[LastModified],Result.[PublishDate]
		,Result.[ExpireDate],Result.[Approved],Result.[Featured],Result.[NumberOfViews],Result.[RatingValue],Result.[RatingCount],Result.[AllowComments],Result.[Active]
		,Result.[TitleLink],Result.[DetailType],Result.[DetailTypeData],Result.[DetailsTemplate],Result.[DetailsTheme],Result.[GalleryPosition],Result.[GalleryDisplayType]
		,Result.[ShowMainImage],Result.[ShowMainImageFront],Result.[CommentsTheme],Result.[ArticleImageFolder],Result.[NumberOfComments]
		,Result.[ArticleImageSet],Result.[MetaDecription],Result.[MetaKeywords],Result.[DisplayStyle],Result.[DetailTarget]
		,Result.[ArticleFromRSS],Result.[HasPermissions],Result.[EventArticle],Result.[DetailMediaType],Result.[DetailMediaData],Result.[AuthorAliasName],Result.[ShowGallery],Result.[ArticleGalleryID],Result.[MainImageTitle],Result.[MainImageDescription],
		Result.StartDate, Result.EndDate,Result.WhloeDay,Result.ShowEndDate,
		CASE Result.EventArticle
			WHEN 1 THEN (SELECT PointData FROM {databaseOwner}[{objectQualifier}EasyDNNnewsGoogleMapsData] AS md INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsArticleGoogleMapConnection] AS mc ON md.GoogleMapID = mc.GoogleMapID WHERE mc.ArticleID =  Result.ArticleID)
			WHEN 0 THEN ''''
		END AS ''GoogleMapData'',
		CAST (CASE Result.EventArticle
			WHEN 1 THEN Result.StartDate
			WHEN 0 THEN Result.PublishDate
		END AS DateTime ) AS ''CombinedOrderBy''
		FROM (SELECT n.*, ne.StartDate, ne.EndDate,ne.WhloeDay,ne.ShowEndDate
			FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS n LEFT OUTER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsEventsData] AS ne on n.ArticleID = ne.ArticleID WHERE n.ArticleID IN(
			SELECT DISTINCT na.[ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS na
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS cat ON na.ArticleID = cat.ArticleID
				INNER JOIN @UserViewCategoriesWithFilter AS uvcwf ON uvcwf.CategoryID = cat.CategoryID
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = na.ArticleID
				INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserID, @FilterByDNNGroupID) AS t ON t.seckey = nss.SecurityKey
			WHERE na.PortalID=@PortalID
				AND ((@AdminOrSuperUser = 1) OR ((@UserCanApprove = 1 OR na.Approved=1) AND (na.Active=1 OR na.UserID=@UserID)))
				AND na.HasPermissions = 0
				AND na.HideDefaultLocale = 0
				AND na.EventArticle = 0  
				AND na.PublishDate <= @CurrentDate AND na.ExpireDate >= @CurrentDate
				AND na.PublishDate >= @FromDate AND na.PublishDate <= @ToDate
				AND na.UserID = @FilterByDNNUserID
			UNION
			SELECT DISTINCT na.[ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS na
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS cat ON na.ArticleID = cat.ArticleID
				INNER JOIN @UserViewCategoriesWithFilter AS uvcwf ON uvcwf.CategoryID = cat.CategoryID
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsEventsData] AS ne on na.ArticleID = ne.ArticleID
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = na.ArticleID
				INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserID, @FilterByDNNGroupID) AS t ON t.seckey = nss.SecurityKey
			WHERE na.PortalID=@PortalID
				AND ((@AdminOrSuperUser = 1) OR ((@UserCanApprove = 1 OR na.Approved=1) AND (na.Active=1 OR na.UserID=@UserID)))
				AND na.HasPermissions = 0
				AND na.HideDefaultLocale = 0
				AND na.EventArticle = 1  
				AND na.PublishDate <= @CurrentDate AND na.ExpireDate >= @CurrentDate
				AND (
					(@DisplayType = 0 AND (ne.StartDate <= @eToDate AND ne.EndDate >= @eFromDate)) OR
					(@DisplayType = 1 AND (na.PublishDate >= @FromDate AND na.PublishDate <= @ToDate)) OR
					(@DisplayType = 2 AND ((na.PublishDate >= @FromDate AND na.PublishDate <= @ToDate) OR (ne.StartDate <= @eToDate AND ne.EndDate >= @eFromDate)))
					)
				AND na.UserID = @FilterByDNNUserID
			UNION ALL
			SELECT na.[ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS na
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsArticleUserPermissions] AS aup ON na.ArticleID = aup.ArticleID
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS cat ON na.ArticleID = cat.ArticleID
				INNER JOIN @FiltredByCategories AS fbc ON fbc.CategoryID = cat.CategoryID
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = na.ArticleID
				INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserID, @FilterByDNNGroupID) AS t ON t.seckey = nss.SecurityKey
			WHERE na.PortalID=@PortalID
				AND ((@AdminOrSuperUser = 1) OR (
					((@UserID = -1 AND aup.UserID IS NULL) OR (aup.UserID = @UserID)) AND aup.Show = 1 AND ((@UserCanApprove = 1) OR (na.Approved=1)) AND (na.Active=1 OR na.UserID=@UserID)))
				AND na.HasPermissions = 1
				AND na.HideDefaultLocale = 0
				AND na.EventArticle = 0 
				AND na.PublishDate <= @CurrentDate AND na.ExpireDate >= @CurrentDate
				AND na.PublishDate >= @FromDate AND na.PublishDate <= @ToDate
				AND na.UserID = @FilterByDNNUserID
			UNION
			SELECT na.[ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS na
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsArticleUserPermissions] AS aup ON na.ArticleID = aup.ArticleID
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS cat ON na.ArticleID = cat.ArticleID
				INNER JOIN @FiltredByCategories AS fbc ON fbc.CategoryID = cat.CategoryID
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsEventsData] AS ne on na.ArticleID = ne.ArticleID
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = na.ArticleID
				INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserID, @FilterByDNNGroupID) AS t ON t.seckey = nss.SecurityKey
			WHERE na.PortalID=@PortalID
				AND ((@AdminOrSuperUser = 1) OR (
					((@UserID = -1 AND aup.UserID IS NULL) OR (aup.UserID = @UserID)) AND aup.Show = 1 AND ((@UserCanApprove = 1) OR (na.Approved=1)) AND (na.Active=1 OR na.UserID=@UserID)))
				AND na.HasPermissions = 1
				AND na.HideDefaultLocale = 0
				AND na.EventArticle = 1
				AND na.PublishDate <= @CurrentDate AND na.ExpireDate >= @CurrentDate
				AND (
					(@DisplayType = 0 AND (ne.StartDate <= @eToDate AND ne.EndDate >= @eFromDate)) OR
					(@DisplayType = 1 AND (na.PublishDate >= @FromDate AND na.PublishDate <= @ToDate)) OR
					(@DisplayType = 2 AND ((na.PublishDate >= @FromDate AND na.PublishDate <= @ToDate) OR (ne.StartDate <= @eToDate AND ne.EndDate >= @eFromDate)))
					)
				AND na.UserID = @FilterByDNNUserID
			UNION
			SELECT DISTINCT na.[ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS na
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsArticleRolePermissions] AS arp ON na.ArticleID = arp.ArticleID
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS cat ON na.ArticleID = cat.ArticleID
				INNER JOIN @FiltredByCategories AS fbc ON fbc.CategoryID = cat.CategoryID
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = na.ArticleID
				INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserID, @FilterByDNNGroupID) AS t ON t.seckey = nss.SecurityKey
			WHERE na.PortalID=@PortalID
				AND ((@AdminOrSuperUser = 1) OR (
					((@UserCanApprove = 1) OR (na.Approved=1)) AND (na.Active=1 OR na.UserID=@UserID) AND arp.Show = 1 AND arp.RoleID IN (SELECT [RoleID] FROM @UserInRoles)))
				AND na.HasPermissions = 1
				AND na.HideDefaultLocale = 0
				AND na.EventArticle = 0
				AND na.PublishDate <= @CurrentDate AND na.ExpireDate >= @CurrentDate
				AND na.PublishDate >= @FromDate AND na.PublishDate <= @ToDate
				AND na.UserID = @FilterByDNNUserID
			UNION
			SELECT DISTINCT na.[ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS na
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsArticleRolePermissions] AS arp ON na.ArticleID = arp.ArticleID
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS cat ON na.ArticleID = cat.ArticleID
				INNER JOIN @FiltredByCategories AS fbc ON fbc.CategoryID = cat.CategoryID
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsEventsData] AS ne on na.ArticleID = ne.ArticleID
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = na.ArticleID
				INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserID, @FilterByDNNGroupID) AS t ON t.seckey = nss.SecurityKey
			WHERE na.PortalID=@PortalID
				AND ((@AdminOrSuperUser = 1) OR (
					((@UserCanApprove = 1) OR (na.Approved=1)) AND (na.Active=1 OR na.UserID=@UserID) AND arp.Show = 1 AND arp.RoleID IN (SELECT [RoleID] FROM @UserInRoles)))
				AND na.HasPermissions = 1
				AND na.HideDefaultLocale = 0
				AND na.EventArticle = 1
				AND na.PublishDate <= @CurrentDate AND na.ExpireDate >= @CurrentDate
				AND (
					(@DisplayType = 0 AND (ne.StartDate <= @eToDate AND ne.EndDate >= @eFromDate)) OR
					(@DisplayType = 1 AND (na.PublishDate >= @FromDate AND na.PublishDate <= @ToDate)) OR
					(@DisplayType = 2 AND ((na.PublishDate >= @FromDate AND na.PublishDate <= @ToDate) OR (ne.StartDate <= @eToDate AND ne.EndDate >= @eFromDate)))
					)
				AND na.UserID = @FilterByDNNUserID
			)
		) AS Result ORDER BY CombinedOrderBy;
	END
END' 
END
GO
/****** Object:  StoredProcedure {databaseOwner}[{objectQualifier}EasyDNNNewsGetItemsForArticleEditor]    Script Date: 06/24/2013 16:39:07 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'{databaseOwner}[{objectQualifier}EasyDNNNewsGetItemsForArticleEditor]') AND type in (N'P', N'PC'))
BEGIN
EXEC dbo.sp_executesql @statement = N'CREATE PROCEDURE {databaseOwner}[{objectQualifier}EasyDNNNewsGetItemsForArticleEditor]
	@PortalID int, -- current Portal
	@ModuleID int, -- current Module, portal sharing isto sadrzi dobre kategorije, auto add i setingsi su snimljeni kod tog modula
	@UserID int,
	@ItemsFrom int = 1,
	@ItemsTo int = 5,
	@OnlyOneCategory int = 0, -- used for category menu or vhen need to filter by one category
	@FilterByAuthor int = 0, -- ako se selektiran jedan autor
	@FilterByGroupID int = 0, -- ako je selektirana grupa
	@EditOnlyAsOwner bit = 0, -- news settings
	@UserCanApprove bit = 0, -- news settings
	@Perm_ViewAllCategores bit = 0, -- permission settings View all categories
	@Perm_EditAllCategores bit = 0, -- permission settings Edit all categories
	@AdminOrSuperUser bit = 0,
	@PermissionSettingsSource bit = 1, -- 1 portal, 0 module
	@OrderBy nvarchar(20) = ''PublishDate DESC'',
	@OrderBy2 nvarchar(20) = '''',
	
	@Featured tinyint = 0,
	@Published tinyint = 0,
	@Approved tinyint = 0,
	@ArticleType tinyint = 0,
	@PermissionsByArticle tinyint = 0	
AS
SET NOCOUNT ON;
DECLARE @EditPermission tinyint;
SET @EditPermission = 0;
DECLARE @UserInRoles TABLE (RoleID int NOT NULL PRIMARY KEY);
INSERT INTO @UserInRoles SELECT DISTINCT ur.[RoleID] FROM {databaseOwner}[{objectQualifier}UserRoles] AS ur INNER JOIN {databaseOwner}[{objectQualifier}Roles] AS r ON ur.RoleID = r.RoleID WHERE ur.UserID = @UserID AND r.PortalID = @PortalID AND (ur.ExpiryDate IS NULL OR ur.ExpiryDate > GETUTCDATE()) AND (ur.EffectiveDate IS NULL OR ur.EffectiveDate < GETUTCDATE());
DECLARE @UserViewCategories TABLE (CategoryID int NOT NULL PRIMARY KEY); -- all categories which user can see based on permissions
DECLARE @UserEditCategories TABLE (CategoryID int NOT NULL PRIMARY KEY); -- all categories which user can edit based on permissions
DECLARE @UserViewCategoriesWithFilter TABLE (CategoryID int NOT NULL PRIMARY KEY); -- all categories which user can see based on permissions and Module filter
DECLARE @FiltredByCategories TABLE (CategoryID int NOT NULL PRIMARY KEY); -- all categories that are filtred by module or portal, or other module

IF @AdminOrSuperUser = 1 OR @Perm_ViewAllCategores = 1
BEGIN
	INSERT INTO @UserViewCategories SELECT [CategoryID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryList] WHERE PortalID = @PortalID;
END
ELSE IF @UserID = -1
BEGIN	
	IF @PermissionSettingsSource = 1 -- by portal
	BEGIN
		INSERT INTO @UserViewCategories
		SELECT rpsc.[CategoryID] FROM  {databaseOwner}[{objectQualifier}EasyDNNNewsRolePremissionsShowCategories] AS rpsc 
		INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsRolePremissionSettings] AS rps ON rps.PremissionSettingsID = rpsc.PremissionSettingsID
		WHERE rps.PortalID = @PortalID  AND rps.ModuleID IS NULL AND rps.RoleID IS NULL;
	END
	ELSE -- by module
	BEGIN
		INSERT INTO @UserViewCategories
		SELECT rpsc.[CategoryID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsRolePremissionsShowCategories] AS rpsc
		INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsRolePremissionSettings] AS rps ON rps.PremissionSettingsID = rpsc.PremissionSettingsID
		WHERE rps.PortalID = @PortalID AND rps.ModuleID = @ModuleID AND rps.RoleID IS NULL;
	END
END
ELSE -- registrirani korisnik
BEGIN
	IF @PermissionSettingsSource = 1 -- by portal
	BEGIN
		INSERT INTO @UserViewCategories
		SELECT rpsc.[CategoryID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsRolePremissionsShowCategories] AS rpsc
		INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsRolePremissionSettings] AS rps ON rps.PremissionSettingsID = rpsc.PremissionSettingsID
		INNER JOIN @UserInRoles AS uir ON rps.RoleID = uir.RoleID
		WHERE rps.PortalID = @PortalID AND rps.ModuleID IS NULL GROUP BY rpsc.[CategoryID]
		UNION
		SELECT upsc.[CategoryID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsUserPremissionsShowCategories] AS upsc
		INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsUserPremissionSettings] AS ups ON ups.PremissionSettingsID = upsc.PremissionSettingsID
		WHERE ups.UserID = @UserID AND ups.PortalID = @PortalID AND ups.ModuleID IS NULL GROUP BY upsc.[CategoryID];
	END
	ELSE -- by module
	BEGIN
		INSERT INTO @UserViewCategories
		SELECT rpsc.[CategoryID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsRolePremissionsShowCategories] AS rpsc
		INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsRolePremissionSettings] AS rps ON rps.PremissionSettingsID = rpsc.PremissionSettingsID
		INNER JOIN @UserInRoles AS uir ON rps.RoleID = uir.RoleID
		WHERE rps.PortalID = @PortalID AND rps.ModuleID = @ModuleID GROUP BY rpsc.[CategoryID]
		UNION
		SELECT upsc.[CategoryID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsUserPremissionsShowCategories] AS upsc
		INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsUserPremissionSettings] AS ups ON ups.PremissionSettingsID = upsc.PremissionSettingsID
		WHERE ups.UserID = @UserID AND ups.PortalID = @PortalID AND ups.ModuleID = @ModuleID GROUP BY upsc.[CategoryID];
	END
END

IF @OnlyOneCategory <> 0 -- filtrira se po jednoj kategoriji
BEGIN
	INSERT INTO @UserViewCategoriesWithFilter SELECT [CategoryID] FROM @UserViewCategories WHERE CategoryID = @OnlyOneCategory;
	INSERT INTO @FiltredByCategories SELECT @OnlyOneCategory;
END
ELSE
BEGIN
	INSERT INTO @UserViewCategoriesWithFilter SELECT [CategoryID] FROM @UserViewCategories;
	INSERT INTO @FiltredByCategories SELECT [CategoryID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryList] WHERE PortalID = @PortalID;
END

DECLARE @FilterAuthorOrAuthors bit;
SET @FilterAuthorOrAuthors = 0;
DECLARE @TempAuthorsIDList TABLE (UserID int NOT NULL PRIMARY KEY);
IF @FilterByAuthor <> 0
BEGIN
	SET @FilterAuthorOrAuthors = 1;
	INSERT INTO @TempAuthorsIDList SELECT @FilterByAuthor;
END
ELSE IF @FilterByGroupID <> 0
BEGIN
	SET @FilterAuthorOrAuthors = 1;
	INSERT INTO @TempAuthorsIDList
	SELECT [UserID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsAuthorProfile] AS ap 
		INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsAutorGroupItems] AS agi ON ap.AuthorProfileID = agi.AuthorProfileID	
		WHERE agi.GroupID = @FilterByGroupID
END

-- kategorije sa edit pravima
IF @AdminOrSuperUser = 1 OR @Perm_EditAllCategores = 1
BEGIN	
	INSERT INTO @UserEditCategories SELECT CategoryID FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryList] WHERE PortalID = @PortalID;
	SET @EditPermission = 1;
END
ELSE
BEGIN
	IF @UserID = -1
	BEGIN
		IF @PermissionSettingsSource = 1 -- by portal
		BEGIN
			INSERT INTO @UserEditCategories
			SELECT rpatc.[CategoryID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsRolePremissionsAddToCategories] AS rpatc
			INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsRolePremissionSettings] AS rps ON rps.PremissionSettingsID = rpatc.PremissionSettingsID
			WHERE rps.PortalID = @PortalID AND rps.ModuleID IS NULL AND rps.RoleID IS NULL;
		END
		ELSE -- by module
		BEGIN
			INSERT INTO @UserEditCategories
			SELECT rpatc.[CategoryID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsRolePremissionsAddToCategories] AS rpatc
			INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsRolePremissionSettings] AS rps ON rps.PremissionSettingsID = rpatc.PremissionSettingsID
			WHERE rps.RoleID IS NULL AND rps.PortalID = @PortalID AND rps.ModuleID = @ModuleID;
		END
	END
	ELSE -- registrirani korisnik
	BEGIN
		IF @PermissionSettingsSource = 1 -- by portal
		BEGIN
			INSERT INTO @UserEditCategories
			SELECT rpatc.[CategoryID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsRolePremissionsAddToCategories] AS rpatc
			INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsRolePremissionSettings] AS rps ON rps.PremissionSettingsID = rpatc.PremissionSettingsID
			INNER JOIN @UserInRoles AS uir ON rps.RoleID = uir.RoleID
			WHERE rps.PortalID = @PortalID AND rps.ModuleID IS NULL GROUP BY rpatc.[CategoryID]
			UNION
			SELECT upatc.[CategoryID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsUserPremissionsAddToCategories] AS upatc
			INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsUserPremissionSettings] AS ups ON ups.PremissionSettingsID = upatc.PremissionSettingsID
			WHERE ups.UserID = @UserID AND ups.PortalID = @PortalID AND ups.ModuleID IS NULL GROUP BY upatc.[CategoryID];
		END
		ELSE -- by module
		BEGIN
			INSERT INTO @UserEditCategories
			SELECT rpatc.[CategoryID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsRolePremissionsAddToCategories] AS rpatc
			INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsRolePremissionSettings] AS rps ON rps.PremissionSettingsID = rpatc.PremissionSettingsID
			INNER JOIN @UserInRoles AS uir ON rps.RoleID = uir.RoleID
			WHERE rps.PortalID = @PortalID AND rps.ModuleID = @ModuleID GROUP BY rpatc.[CategoryID]
			UNION
			SELECT upatc.[CategoryID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsUserPremissionsAddToCategories] AS upatc
			INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsUserPremissionSettings] AS ups ON ups.PremissionSettingsID = upatc.PremissionSettingsID
			WHERE ups.UserID = @UserID AND ups.PortalID = @PortalID AND ups.ModuleID = @ModuleID GROUP BY upatc.[CategoryID];
		END	
	END
	IF EXISTS(SELECT * FROM @UserEditCategories) BEGIN SET @EditPermission = 2; END
END


SELECT Result.*,CASE WHEN u.DisplayName IS NULL THEN ''Anonym'' ELSE u.DisplayName END AS DisplayName,
	CASE @EditPermission 
		WHEN 0 THEN 0
		WHEN 1 THEN 1
		WHEN 2 THEN
		CASE @EditOnlyAsOwner
			WHEN 0 THEN			
				CASE WHEN EXISTS(SELECT CategoryID FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS c WHERE c.ArticleID = Result.ArticleID AND c.CategoryID IN (SELECT CategoryID FROM @UserEditCategories))
					THEN 1
					ELSE
						CASE WHEN EXISTS(SELECT [ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsArticleRolePermissions] AS arp WHERE arp.ArticleID = Result.ArticleID AND arp.Edit = 1 AND arp.RoleID IN(SELECT RoleID FROM @UserInRoles))
						THEN 1
						ELSE
							CASE WHEN EXISTS (SELECT [ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsArticleUserPermissions] AS aup WHERE aup.ArticleID = Result.ArticleID AND aup.Edit = 1 AND aup.UserID = @UserID)
								THEN 1
								ELSE 0
							END
						END
				END  			
			WHEN 1 THEN
				CASE WHEN EXISTS(SELECT CategoryID FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS c WHERE Result.UserID = @UserID AND c.ArticleID = Result.ArticleID AND c.CategoryID IN (SELECT CategoryID FROM @UserEditCategories))
					THEN 1
					ELSE
						CASE WHEN EXISTS(SELECT [ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsArticleRolePermissions] AS arp WHERE arp.ArticleID = Result.ArticleID AND arp.Edit = 1 AND arp.RoleID IN(SELECT RoleID FROM @UserInRoles))
						THEN 1
						ELSE
							CASE WHEN EXISTS (SELECT [ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsArticleUserPermissions] AS aup WHERE aup.ArticleID = Result.ArticleID AND aup.Edit = 1 AND aup.UserID = @UserID)
								THEN 1
								ELSE 0
							END
						END 
				END
		END
		WHEN 3 THEN
			CASE WHEN EXISTS(SELECT [ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsArticleRolePermissions] AS arp WHERE arp.ArticleID = Result.ArticleID AND arp.Edit = 1 AND arp.RoleID IN(SELECT RoleID FROM @UserInRoles))
				THEN 1
				ELSE
				CASE WHEN EXISTS (SELECT [ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsArticleUserPermissions] AS aup WHERE aup.ArticleID = Result.ArticleID AND aup.Edit = 1 AND aup.UserID = @UserID)
					THEN 1
					ELSE 0
					END
				END 
	END AS ''CanEdit'',
	(SELECT Cat.CategoryID AS ID, Cat.CategoryName AS Name, CategoryURL FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryList] AS Cat INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS c ON c.CategoryID = Cat.CategoryID WHERE c.ArticleID = Result.ArticleID AND cat.CategoryID IN (SELECT CategoryID FROM @UserViewCategories) FOR XML AUTO, ROOT(''root'')) AS ''CatToShow'',
	 CASE Result.Active
		WHEN 1 THEN 0
		WHEN 0 THEN 1
	 END AS ''Published'',
	 CASE @UserCanApprove
		WHEN 0 THEN 0
		WHEN 1 THEN
			CASE Result.Approved
			 WHEN 1 THEN 0
			 WHEN 0 THEN
				 CASE Result.Active
					WHEN 1 THEN 1
					WHEN 0 THEN 0
				END
			END
	 END AS ''Approve''
	FROM (SELECT *, ROW_NUMBER() OVER (ORDER BY 
	CASE WHEN @OrderBy =''PublishDate ASC'' THEN PublishDate END,
	CASE WHEN @OrderBy =''PublishDate DESC'' THEN PublishDate END DESC,
	CASE WHEN @OrderBy =''NumberOfViews ASC'' THEN NumberOfViews END,
	CASE WHEN @OrderBy =''NumberOfViews DESC'' THEN NumberOfViews END DESC,
	CASE WHEN @OrderBy =''RatingValue ASC'' THEN RatingValue END,
	CASE WHEN @OrderBy =''RatingValue DESC'' THEN RatingValue END DESC,
	CASE WHEN @OrderBy =''DateAdded ASC'' THEN DateAdded END,
	CASE WHEN @OrderBy =''DateAdded DESC'' THEN DateAdded END DESC,
	CASE WHEN @OrderBy =''ExpireDate ASC'' THEN ExpireDate END,
	CASE WHEN @OrderBy =''ExpireDate DESC'' THEN ExpireDate END DESC,
	CASE WHEN @OrderBy =''LastModified ASC'' THEN LastModified END,
	CASE WHEN @OrderBy =''LastModified DESC'' THEN LastModified END DESC,
	CASE WHEN @OrderBy =''NumberOfComments ASC'' THEN NumberOfComments END,
	CASE WHEN @OrderBy =''NumberOfComments DESC'' THEN NumberOfComments END DESC,
	CASE WHEN @OrderBy =''Title ASC'' THEN Title END,
	CASE WHEN @OrderBy =''Title DESC'' THEN Title END DESC,

	CASE WHEN @OrderBy2 =''PublishDate ASC'' THEN PublishDate END,
	CASE WHEN @OrderBy2 =''PublishDate DESC'' THEN PublishDate END DESC,
	CASE WHEN @OrderBy2 =''NumberOfViews ASC'' THEN NumberOfViews END,
	CASE WHEN @OrderBy2 =''NumberOfViews DESC'' THEN NumberOfViews END DESC,
	CASE WHEN @OrderBy2 =''RatingValue ASC'' THEN RatingValue END,
	CASE WHEN @OrderBy2 =''RatingValue DESC'' THEN RatingValue END DESC,
	CASE WHEN @OrderBy2 =''DateAdded ASC'' THEN DateAdded END,
	CASE WHEN @OrderBy2 =''DateAdded DESC'' THEN DateAdded END DESC,
	CASE WHEN @OrderBy2 =''ExpireDate ASC'' THEN ExpireDate END,
	CASE WHEN @OrderBy2 =''ExpireDate DESC'' THEN ExpireDate END DESC,
	CASE WHEN @OrderBy2 =''LastModified ASC'' THEN LastModified END,
	CASE WHEN @OrderBy2 =''LastModified DESC'' THEN LastModified END DESC,
	CASE WHEN @OrderBy2 =''NumberOfComments ASC'' THEN NumberOfComments END,
	CASE WHEN @OrderBy2 =''NumberOfComments DESC'' THEN NumberOfComments END DESC,
	CASE WHEN @OrderBy2 =''Title ASC'' THEN Title END,
	CASE WHEN @OrderBy2 =''Title DESC'' THEN Title END DESC) AS Kulike
	FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS n WHERE ArticleID IN(
		SELECT DISTINCT na.[ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS na
			INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS cat ON na.ArticleID = cat.ArticleID
			INNER JOIN @UserViewCategoriesWithFilter  AS uvcwf ON uvcwf.CategoryID = cat.CategoryID
		WHERE na.PortalID=@PortalID
			AND na.HasPermissions = 0
			AND ((@Approved = 0) OR ((@Approved = 1 AND na.Approved = 1) OR (@Approved = 2 AND na.Approved = 0)))		   
			AND ((@ArticleType = 0) OR ((@ArticleType = 1 AND na.EventArticle = 0) OR (@ArticleType = 2 AND na.EventArticle = 1)))
			AND ((@PermissionsByArticle = 0) OR ((@PermissionsByArticle = 1 AND na.HasPermissions = 1) OR (@PermissionsByArticle = 2 AND na.HasPermissions = 0)))		   
			AND ((@Published = 0) OR ((@Published = 1 AND na.Active = 1) OR (@Published = 2 AND na.Active = 0)))
			AND ((@Featured = 0) OR ((@Featured = 1 AND na.Featured = 1) OR (@Featured = 2 AND na.Featured = 0)))
			AND ((@FilterAuthorOrAuthors = 0) OR (@FilterAuthorOrAuthors = 1 AND na.UserID IN (SELECT UserID FROM @TempAuthorsIDList)))
		UNION ALL
		SELECT na.[ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS na
			INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsArticleUserPermissions] AS aup ON na.ArticleID = aup.ArticleID
			INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS cat ON na.ArticleID = cat.ArticleID
			INNER JOIN @FiltredByCategories AS fbc ON fbc.CategoryID = cat.CategoryID
		WHERE na.PortalID=@PortalID
			AND na.HasPermissions = 1
			AND ((@EditPermission = 1) OR ((aup.Edit = 1) AND ((@UserID = -1 AND aup.UserID IS NULL) OR (aup.UserID = @UserID))))
			AND ((@Approved = 0) OR ((@Approved = 1 AND na.Approved = 1) OR (@Approved = 2 AND na.Approved = 0)))
			AND ((@ArticleType = 0) OR ((@ArticleType = 1 AND na.EventArticle = 0) OR (@ArticleType = 2 AND na.EventArticle = 1)))
			AND ((@PermissionsByArticle = 0) OR ((@PermissionsByArticle = 1 AND na.HasPermissions = 1) OR (@PermissionsByArticle = 2 AND na.HasPermissions = 0)))
			AND ((@Published = 0) OR ((@Published = 1 AND na.Active = 1) OR (@Published = 2 AND na.Active = 0)))
			AND ((@Featured = 0) OR ((@Featured = 1 AND na.Featured = 1) OR (@Featured = 2 AND na.Featured = 0)))
			AND ((@FilterAuthorOrAuthors = 0) OR (@FilterAuthorOrAuthors = 1 AND na.UserID IN (SELECT UserID FROM @TempAuthorsIDList)))
		UNION
		SELECT DISTINCT na.[ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS na
			INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsArticleRolePermissions] AS arp ON na.ArticleID = arp.ArticleID
			INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS cat ON na.ArticleID = cat.ArticleID
			INNER JOIN @FiltredByCategories AS fbc ON fbc.CategoryID = cat.CategoryID
		WHERE na.PortalID=@PortalID
			AND na.HasPermissions = 1
			AND ((@EditPermission = 1) OR ((arp.Edit = 1) AND arp.RoleID IN (SELECT [RoleID] FROM @UserInRoles)))
			AND ((@Approved = 0) OR ((@Approved = 1 AND na.Approved = 1) OR (@Approved = 2 AND na.Approved = 0)))
			AND ((@ArticleType = 0) OR ((@ArticleType = 1 AND na.EventArticle = 0) OR (@ArticleType = 2 AND na.EventArticle = 1)))
			AND ((@PermissionsByArticle = 0) OR ((@PermissionsByArticle = 1 AND na.HasPermissions = 1) OR (@PermissionsByArticle = 2 AND na.HasPermissions = 0)))
			AND ((@Published = 0) OR ((@Published = 1 AND na.Active = 1) OR (@Published = 2 AND na.Active = 0)))
			AND ((@Featured = 0) OR ((@Featured = 1 AND na.Featured = 1) OR (@Featured = 2 AND na.Featured = 0)))
			AND ((@FilterAuthorOrAuthors = 0) OR (@FilterAuthorOrAuthors = 1 AND na.UserID IN (SELECT UserID FROM @TempAuthorsIDList)))	 
		)
	 ) AS Result LEFT OUTER JOIN {databaseOwner}[{objectQualifier}Users] AS u ON Result.UserID = u.UserID WHERE Kulike BETWEEN @ItemsFrom AND @ItemsTo ORDER BY
	 CASE WHEN @OrderBy =''PublishDate ASC'' THEN PublishDate END,
	 CASE WHEN @OrderBy =''PublishDate DESC'' THEN PublishDate END DESC,
	 CASE WHEN @OrderBy =''NumberOfViews ASC'' THEN NumberOfViews END,
	 CASE WHEN @OrderBy =''NumberOfViews DESC'' THEN NumberOfViews END DESC,
	 CASE WHEN @OrderBy =''RatingValue ASC'' THEN RatingValue END,
	 CASE WHEN @OrderBy =''RatingValue DESC'' THEN RatingValue END DESC,
	 CASE WHEN @OrderBy =''DateAdded ASC'' THEN DateAdded END,
	 CASE WHEN @OrderBy =''DateAdded DESC'' THEN DateAdded END DESC,
	 CASE WHEN @OrderBy =''ExpireDate ASC'' THEN ExpireDate END,
	 CASE WHEN @OrderBy =''ExpireDate DESC'' THEN ExpireDate END DESC,
	 CASE WHEN @OrderBy =''LastModified ASC'' THEN LastModified END,
	 CASE WHEN @OrderBy =''LastModified DESC'' THEN LastModified END DESC,
	 CASE WHEN @OrderBy =''NumberOfComments ASC'' THEN NumberOfComments END,
	 CASE WHEN @OrderBy =''NumberOfComments DESC'' THEN NumberOfComments END DESC,
	 CASE WHEN @OrderBy =''Title ASC'' THEN Title END,
	 CASE WHEN @OrderBy =''Title DESC'' THEN Title END DESC,
	 CASE WHEN @OrderBy2 =''PublishDate ASC'' THEN PublishDate END,
	 CASE WHEN @OrderBy2 =''PublishDate DESC'' THEN PublishDate END DESC,
	 CASE WHEN @OrderBy2 =''NumberOfViews ASC'' THEN NumberOfViews END,
	 CASE WHEN @OrderBy2 =''NumberOfViews DESC'' THEN NumberOfViews END DESC,
	 CASE WHEN @OrderBy2 =''RatingValue ASC'' THEN RatingValue END,
	 CASE WHEN @OrderBy2 =''RatingValue DESC'' THEN RatingValue END DESC,
	 CASE WHEN @OrderBy2 =''DateAdded ASC'' THEN DateAdded END,
	 CASE WHEN @OrderBy2 =''DateAdded DESC'' THEN DateAdded END DESC,
	 CASE WHEN @OrderBy2 =''ExpireDate ASC'' THEN ExpireDate END,
	 CASE WHEN @OrderBy2 =''ExpireDate DESC'' THEN ExpireDate END DESC,
	 CASE WHEN @OrderBy2 =''LastModified ASC'' THEN LastModified END,
	 CASE WHEN @OrderBy2 =''LastModified DESC'' THEN LastModified END DESC,
	 CASE WHEN @OrderBy2 =''NumberOfComments ASC'' THEN NumberOfComments END,
	 CASE WHEN @OrderBy2 =''NumberOfComments DESC'' THEN NumberOfComments END DESC,
	 CASE WHEN @OrderBy2 =''Title ASC'' THEN Title END,
	 CASE WHEN @OrderBy2 =''Title DESC'' THEN Title END DESC;' 
END
GO
/****** Object:  StoredProcedure {databaseOwner}[{objectQualifier}EasyDNNNewsGetItemsCountItemsFromSearch]    Script Date: 06/24/2013 16:39:07 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'{databaseOwner}[{objectQualifier}EasyDNNNewsGetItemsCountItemsFromSearch]') AND type in (N'P', N'PC'))
BEGIN
EXEC dbo.sp_executesql @statement = N'CREATE PROCEDURE {databaseOwner}[{objectQualifier}EasyDNNNewsGetItemsCountItemsFromSearch]
	@ViewType tinyint = 0, -- 0 - View, 1 - Editor
	@PortalID int, -- current Portal
	@ModuleID int, -- current Module, portal sharing isto sadrzi dobre kategorije, auto add i setingsi su snimljeni kod tog modula
	@UserID int,
	@CurrentDate Datetime, -- = GetUTCDate,
	@OrderBy nvarchar(20) = ''PublishDate DESC'',
	@ItemsFrom int = 1,
	@ItemsTo int = 5,
	@ShowAllAuthors bit = 1, -- gleda se filtriranje autora po modulu ili portalu
	@FilterByAuthor int = 0, -- ako se selektiran jedan autor
	@FilterByGroupID int = 0, -- ako je selektirana grupa
	@FilterByDNNUserID int = 0, -- filter by some UserID / not current user ID
	@FilterByDNNGroupID int = 0, -- filter by DNNGroup/RoleID / not profile GroupID
	@EditOnlyAsOwner bit = 0, -- news settings
	@UserCanApprove bit = 0, -- news settings
	@LocaleCode nvarchar(20) = '''',
	@IsSocialInstance bit = 0,	
	--@FirstOrderBy nvarchar(20) = '''',--''Featured DESC'', -- featured articles on top	
	@Perm_ViewAllCategores bit = 0, -- permission settings View all categories
	@Perm_EditAllCategores bit = 0, -- permission settings Edit all categories
	@AdminOrSuperUser bit = 0,
	@CategoryFilterType tinyint = 1, -- 0 All categories, 1 - SELECTion, 2 - AutoAdd
	@PermissionSettingsSource bit = 1, -- 1 portal, 0 module
	@FillterSettingsSource bit = 1, -- 1 portal, 0 module
	
	-- ODNOSI SE NA SEARCH UNUTAR SEARCH MODULA
	@OuterPermissionSource tinyint= 0, -- 0 none, 1 portal, 2 module
	@OuterPermissionID int = 0,
	@OuterModuleID int = 0,
	
	@SearchType tinyint = 3,
	@SearchCondition nvarchar(300),
	@SearchModulePermissions bit = 0,
	@HideUnlocalizedItems bit = 0
AS
SET NOCOUNT ON;
DECLARE @SearchTable TABLE (Words nvarchar(100) NOT NULL);
BEGIN
	DECLARE @word nvarchar(100), @PosWord int
	SET @SearchCondition = LTRIM(RTRIM(@SearchCondition))+ '':''
	SET @PosWord = CHARINDEX('':'', @SearchCondition, 1)
	IF REPLACE(@SearchCondition, '':'', '''') <> ''''
	BEGIN
		WHILE @PosWord > 0
		BEGIN
			SET @word = LTRIM(RTRIM(LEFT(@SearchCondition, @PosWord - 1)))
			IF @word <> ''''
			BEGIN
				INSERT INTO @SearchTable (Words) VALUES (''%''+@word+''%'') --Use Appropriate conversion
			END
			SET @SearchCondition = RIGHT(@SearchCondition, LEN(@SearchCondition) - @PosWord)
			SET @PosWord = CHARINDEX('':'', @SearchCondition, 1)
		END
	END
END

DECLARE @EditPermission tinyint;
SET @EditPermission = 0;
DECLARE @UserInRoles TABLE (RoleID int NOT NULL PRIMARY KEY);
INSERT INTO @UserInRoles SELECT DISTINCT ur.[RoleID] FROM {databaseOwner}[{objectQualifier}UserRoles] AS ur INNER JOIN {databaseOwner}[{objectQualifier}Roles] AS r ON ur.RoleID = r.RoleID WHERE ur.UserID = @UserID AND r.PortalID = @PortalID AND (ur.ExpiryDate IS NULL OR ur.ExpiryDate > GETUTCDATE()) AND (ur.EffectiveDate IS NULL OR ur.EffectiveDate < GETUTCDATE());
DECLARE @UserViewCategories TABLE (CategoryID int NOT NULL PRIMARY KEY); -- all categories which user can see based on permissions
DECLARE @UserEditCategories TABLE (CategoryID int NOT NULL PRIMARY KEY); -- all categories which user can edit based on permissions
DECLARE @UserViewCategoriesWithFilter TABLE (CategoryID int NOT NULL PRIMARY KEY); -- all categories which user can see based on permissions and Module filter
DECLARE @FiltredByCategories TABLE (CategoryID int NOT NULL PRIMARY KEY); -- all categories that are filtred by module or portal

IF @AdminOrSuperUser = 1 OR @Perm_ViewAllCategores = 1
BEGIN
	INSERT INTO @UserViewCategories SELECT [CategoryID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryList] WHERE PortalID = @PortalID;
END
ELSE IF @SearchModulePermissions = 1 -- ovaj dio se odnosi na dozvole ako se pristupa iz satelitskog modula
BEGIN
	IF @OuterPermissionSource = 0
	BEGIN
		INSERT INTO @UserViewCategories SELECT [CategoryID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryList] WHERE PortalID = @PortalID;
	END
	ELSE IF @UserID = -1
	BEGIN
		IF @OuterPermissionSource = 1 -- portal
		BEGIN
		INSERT INTO @UserViewCategories
			SELECT rpsc.[CategoryID] FROM  {databaseOwner}[{objectQualifier}EasyDNNNewsRolePremissionsShowCategories] AS rpsc 
			INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsRolePremissionSettings] AS rps ON rps.PremissionSettingsID = rpsc.PremissionSettingsID
			WHERE rps.PortalID = @PortalID  AND rps.ModuleID IS NULL AND rps.RoleID IS NULL;
		END
		ELSE IF @OuterPermissionSource = 2 -- module
		BEGIN
			INSERT INTO @UserViewCategories
			SELECT rpsc.[CategoryID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsRolePremissionsShowCategories] AS rpsc
			INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsRolePremissionSettings] AS rps ON rps.PremissionSettingsID = rpsc.PremissionSettingsID
			WHERE rps.PortalID = @PortalID AND rps.ModuleID = @OuterPermissionID AND rps.RoleID IS NULL;
		END
	END
	ELSE -- registrirani korisnik
	BEGIN
		IF @PermissionSettingsSource = 1 -- by portal
		BEGIN
			INSERT INTO @UserViewCategories
			SELECT rpsc.[CategoryID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsRolePremissionsShowCategories] AS rpsc
			INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsRolePremissionSettings] AS rps ON rps.PremissionSettingsID = rpsc.PremissionSettingsID
			INNER JOIN @UserInRoles AS uir ON rps.RoleID = uir.RoleID
			WHERE rps.PortalID = @PortalID AND rps.ModuleID IS NULL GROUP BY rpsc.[CategoryID]
			UNION
			SELECT upsc.[CategoryID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsUserPremissionsShowCategories] AS upsc
			INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsUserPremissionSettings] AS ups ON ups.PremissionSettingsID = upsc.PremissionSettingsID
			WHERE ups.UserID = @UserID AND ups.PortalID = @PortalID AND ups.ModuleID IS NULL GROUP BY upsc.[CategoryID];
		END
		ELSE -- by module
		BEGIN
			INSERT INTO @UserViewCategories
			SELECT rpsc.[CategoryID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsRolePremissionsShowCategories] AS rpsc
			INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsRolePremissionSettings] AS rps ON rps.PremissionSettingsID = rpsc.PremissionSettingsID
			INNER JOIN @UserInRoles AS uir ON rps.RoleID = uir.RoleID
			WHERE rps.PortalID = @PortalID AND rps.ModuleID = @OuterModuleID GROUP BY rpsc.[CategoryID]
			UNION
			SELECT upsc.[CategoryID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsUserPremissionsShowCategories] AS upsc
			INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsUserPremissionSettings] AS ups ON ups.PremissionSettingsID = upsc.PremissionSettingsID
			WHERE ups.UserID = @UserID AND ups.PortalID = @PortalID AND ups.ModuleID = @OuterPermissionID GROUP BY upsc.[CategoryID];
		END
	END 
END
ELSE IF @UserID = -1 -- neregistrirani korisnik
BEGIN	
	IF @PermissionSettingsSource = 1 -- by portal
	BEGIN
		INSERT INTO @UserViewCategories
		SELECT rpsc.[CategoryID] FROM  {databaseOwner}[{objectQualifier}EasyDNNNewsRolePremissionsShowCategories] AS rpsc 
		INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsRolePremissionSettings] AS rps ON rps.PremissionSettingsID = rpsc.PremissionSettingsID
		WHERE rps.PortalID = @PortalID  AND rps.ModuleID IS NULL AND rps.RoleID IS NULL;
	END
	ELSE -- by module
	BEGIN
	INSERT INTO @UserViewCategories
		SELECT rpsc.[CategoryID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsRolePremissionsShowCategories] AS rpsc
		INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsRolePremissionSettings] AS rps ON rps.PremissionSettingsID = rpsc.PremissionSettingsID
		WHERE rps.PortalID = @PortalID AND rps.ModuleID = @ModuleID AND rps.RoleID IS NULL;
	END
END
ELSE -- registrirani korisnik
BEGIN
	IF @PermissionSettingsSource = 1 -- by portal
	BEGIN
		INSERT INTO @UserViewCategories
		SELECT rpsc.[CategoryID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsRolePremissionsShowCategories] AS rpsc
		INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsRolePremissionSettings] AS rps ON rps.PremissionSettingsID = rpsc.PremissionSettingsID
		INNER JOIN @UserInRoles AS uir ON rps.RoleID = uir.RoleID
		WHERE rps.PortalID = @PortalID AND rps.ModuleID IS NULL GROUP BY rpsc.[CategoryID]
		UNION
		SELECT upsc.[CategoryID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsUserPremissionsShowCategories] AS upsc
		INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsUserPremissionSettings] AS ups ON ups.PremissionSettingsID = upsc.PremissionSettingsID
		WHERE ups.UserID = @UserID AND ups.PortalID = @PortalID AND ups.ModuleID IS NULL GROUP BY upsc.[CategoryID];
	END
	ELSE -- by module
	BEGIN
		INSERT INTO @UserViewCategories
		SELECT rpsc.[CategoryID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsRolePremissionsShowCategories] AS rpsc
		INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsRolePremissionSettings] AS rps ON rps.PremissionSettingsID = rpsc.PremissionSettingsID
		INNER JOIN @UserInRoles AS uir ON rps.RoleID = uir.RoleID
		WHERE rps.PortalID = @PortalID AND rps.ModuleID = @ModuleID GROUP BY rpsc.[CategoryID]
		UNION
		SELECT upsc.[CategoryID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsUserPremissionsShowCategories] AS upsc
		INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsUserPremissionSettings] AS ups ON ups.PremissionSettingsID = upsc.PremissionSettingsID
		WHERE ups.UserID = @UserID AND ups.PortalID = @PortalID AND ups.ModuleID = @ModuleID GROUP BY upsc.[CategoryID];
	END
END

IF @OuterModuleID <> 0 -- ovaj dio se odnosi na filter kategorija iz satelitskog modula
BEGIN
	IF @CategoryFilterType = 0 -- 0 All categories
	BEGIN
		INSERT INTO @UserViewCategoriesWithFilter SELECT [CategoryID] FROM @UserViewCategories;
		INSERT INTO @FiltredByCategories SELECT [CategoryID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryList] WHERE PortalID = @PortalID;
	END
	ELSE IF @CategoryFilterType = 1 -- 1 - SELECTion
	BEGIN
		INSERT INTO @UserViewCategoriesWithFilter 
		SELECT cl.[CategoryID] FROM @UserViewCategories AS cl
		INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsModuleCategoryItems] AS mci ON mci.CategoryID = cl.CategoryID AND mci.ModuleID = @OuterModuleID
			
		INSERT INTO @FiltredByCategories SELECT [CategoryID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsModuleCategoryItems] WHERE ModuleID = @OuterModuleID;
	END
	ELSE IF @CategoryFilterType = 2 -- 2 - AutoAdd
	BEGIN
		WITH hierarchy AS(
			SELECT [CategoryID], [ParentCategory]
			FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryList] AS cl
			WHERE (cl.ParentCategory IN (SELECT [CategoryID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsModuleCategoryItems] WHERE ModuleID = @OuterModuleID) OR cl.CategoryID IN (SELECT [CategoryID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsModuleCategoryItems] WHERE ModuleID = @OuterModuleID)) AND PortalID = @PortalID
			UNION ALL
			SELECT c.[CategoryID], c.[ParentCategory]
			FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryList] AS c INNER JOIN hierarchy AS p ON c.ParentCategory = p.CategoryID WHERE c.PortalID = @PortalID
			)
		INSERT INTO @FiltredByCategories SELECT DISTINCT CategoryID FROM hierarchy;	
		INSERT INTO @UserViewCategoriesWithFilter SELECT uvc.CategoryID FROM @FiltredByCategories AS nfc INNER JOIN @UserViewCategories AS uvc ON uvc.CategoryID = nfc.CategoryID;
	END
END
ELSE
BEGIN
	IF @CategoryFilterType = 0 -- 0 All categories
	BEGIN
		INSERT INTO @UserViewCategoriesWithFilter SELECT [CategoryID] FROM @UserViewCategories;
		INSERT INTO @FiltredByCategories SELECT [CategoryID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryList] WHERE PortalID = @PortalID;
	END
	ELSE IF @CategoryFilterType = 1 -- 1 - SELECTion
	BEGIN
		IF @FillterSettingsSource = 1 -- portal
		BEGIN
			INSERT INTO @UserViewCategoriesWithFilter 
			SELECT cl.[CategoryID] FROM @UserViewCategories AS cl
			INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsPortalCategoryItems] AS pci ON pci.CategoryID = cl.CategoryID AND pci.PortalID = @PortalID
			
			INSERT INTO @FiltredByCategories SELECT [CategoryID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsPortalCategoryItems] WHERE PortalID = @PortalID;
		END
		ELSE -- module
		BEGIN
			INSERT INTO @UserViewCategoriesWithFilter 
			SELECT cl.[CategoryID] FROM @UserViewCategories AS cl
			INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsModuleCategoryItems] AS mci ON mci.CategoryID = cl.CategoryID AND mci.ModuleID = @ModuleID
			
			INSERT INTO @FiltredByCategories SELECT [CategoryID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsModuleCategoryItems] WHERE ModuleID = @ModuleID;
		END
	END
	ELSE IF @CategoryFilterType = 2 -- 2 - AutoAdd
	BEGIN
		IF @FillterSettingsSource = 1 -- portal
		BEGIN
			WITH hierarchy AS(
				SELECT [CategoryID], [ParentCategory]
				FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryList] AS cl
				WHERE (cl.ParentCategory IN (SELECT [CategoryID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsPortalCategoryItems] WHERE PortalID = @PortalID) OR cl.CategoryID IN (SELECT [CategoryID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsPortalCategoryItems] WHERE PortalID = @PortalID)) AND PortalID = @PortalID
				UNION ALL
				SELECT c.[CategoryID], c.[ParentCategory]
				FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryList] AS c INNER JOIN hierarchy AS p ON c.ParentCategory = p.CategoryID WHERE c.PortalID = @PortalID
				)
			INSERT INTO @FiltredByCategories SELECT DISTINCT CategoryID FROM hierarchy;	
			INSERT INTO @UserViewCategoriesWithFilter SELECT uvc.CategoryID FROM @FiltredByCategories AS nfc INNER JOIN @UserViewCategories AS uvc ON uvc.CategoryID = nfc.CategoryID;			
		END
		ELSE -- module
		BEGIN
			WITH hierarchy AS(
				SELECT [CategoryID], [ParentCategory]
				FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryList] AS cl
				WHERE (cl.ParentCategory IN (SELECT [CategoryID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsModuleCategoryItems] WHERE ModuleID = @ModuleID) OR cl.CategoryID IN (SELECT [CategoryID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsModuleCategoryItems] WHERE ModuleID = @ModuleID)) AND PortalID = @PortalID
				UNION ALL
				SELECT c.[CategoryID], c.[ParentCategory]
				FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryList] AS c INNER JOIN hierarchy AS p ON c.ParentCategory = p.CategoryID WHERE c.PortalID = @PortalID
				)
			INSERT INTO @FiltredByCategories SELECT DISTINCT CategoryID FROM hierarchy;	
			INSERT INTO @UserViewCategoriesWithFilter SELECT uvc.CategoryID FROM @FiltredByCategories AS nfc INNER JOIN @UserViewCategories AS uvc ON uvc.CategoryID = nfc.CategoryID;
		END
	END
END

DECLARE @FilterBySocialGroup bit;
SET @FilterBySocialGroup = 0;
DECLARE @FilterAuthorOrAuthors bit;
SET @FilterAuthorOrAuthors = 0;

DECLARE @TempAuthorsIDList TABLE (UserID int NOT NULL PRIMARY KEY);
IF @IsSocialInstance = 1
	BEGIN
		IF @FilterByDNNGroupID <> 0
		BEGIN	
			SET @FilterBySocialGroup = 1;
			IF @FilterByAuthor <> 0
			BEGIN
				SET @FilterAuthorOrAuthors = 1;
				SELECT @FilterByAuthor = UserID FROM {databaseOwner}[{objectQualifier}EasyDNNNewsAuthorProfile] WHERE [AuthorProfileID] = @FilterByAuthor;
			END
		END
	END
ELSE
BEGIN
-- ovaj dio odnosi se na filtriranje autora
	IF @OuterModuleID <> 0 AND @ShowAllAuthors = 0 -- filter iu other modula
	BEGIN
		SET @FilterAuthorOrAuthors = 1;
		INSERT INTO @TempAuthorsIDList
			SELECT [UserID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsModuleAuthorsItems] AS mai WHERE mai.ModuleID = @OuterModuleID
			UNION 
			SELECT [UserID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsAuthorProfile] AS ap 
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsAutorGroupItems] AS agi ON ap.AuthorProfileID = agi.AuthorProfileID
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsModuleGroupItems] AS mgi ON mgi.GroupID = agi.GroupID
			WHERE mgi.ModuleID = @OuterModuleID
	END
	ELSE
	BEGIN
		IF @FilterByAuthor = 0 AND @FilterByGroupID = 0 AND @ShowAllAuthors = 0 -- filter glavnog newsa
		BEGIN
			SET @FilterAuthorOrAuthors = 1;
			IF @FillterSettingsSource = 1 -- by portal
			BEGIN
				INSERT INTO @TempAuthorsIDList
				SELECT [UserID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsPortalAuthorsItems] AS pai WHERE pai.PortalID = @PortalID
				UNION 
				SELECT [UserID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsAuthorProfile] AS ap 
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsAutorGroupItems] AS agi ON ap.AuthorProfileID = agi.AuthorProfileID
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsPortalGroupItems] AS pgi ON pgi.GroupID = agi.GroupID
					WHERE pgi.PortalID = @PortalID
			END
			ELSE -- by modul
			BEGIN
				INSERT INTO @TempAuthorsIDList
				SELECT [UserID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsModuleAuthorsItems] AS mai WHERE mai.ModuleID = @ModuleID
				UNION 
				SELECT [UserID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsAuthorProfile] AS ap 
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsAutorGroupItems] AS agi ON ap.AuthorProfileID = agi.AuthorProfileID
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsModuleGroupItems] AS mgi ON mgi.GroupID = agi.GroupID
					WHERE mgi.ModuleID = @ModuleID
			END
		END
		ELSE IF @FilterByAuthor <> 0
		BEGIN
			SET @FilterAuthorOrAuthors = 1;
			INSERT INTO @TempAuthorsIDList SELECT [UserID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsAuthorProfile] WHERE [AuthorProfileID] = @FilterByAuthor;
		END
		ELSE IF @FilterByGroupID <> 0
		BEGIN
			SET @FilterAuthorOrAuthors = 1;
			INSERT INTO @TempAuthorsIDList
			SELECT [UserID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsAuthorProfile] AS ap 
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsAutorGroupItems] AS agi ON ap.AuthorProfileID = agi.AuthorProfileID	
				WHERE agi.GroupID = @FilterByGroupID
		END
	END
END

DECLARE @ArticlesInCategories int;
SET @ArticlesInCategories = 0;
DECLARE @ArticlesInRolesAndUsers int;
SET @ArticlesInRolesAndUsers = 0;

IF @IsSocialInstance = 0
BEGIN
	IF @LocaleCode <> ''''
	BEGIN
		SELECT @ArticlesInCategories = Count(ArticleID) FROM (
			SELECT DISTINCT na.[ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS na
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS cat ON na.ArticleID = cat.ArticleID
				INNER JOIN @UserViewCategoriesWithFilter  AS uvcwf ON uvcwf.CategoryID = cat.CategoryID
				INNER JOIN @SearchTable AS st ON(
					(@SearchType = 3 AND (na.SubTitle Like st.Words OR na.Title Like st.Words OR na.CleanArticleData Like st.Words))
					OR
					(@SearchType = 2 AND na.CleanArticleData Like st.Words)
					OR
					(@SearchType = 1 AND (na.SubTitle Like st.Words OR na.Title Like st.Words))
				)
				LEFT OUTER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsContentLocalization] AS ncl ON ncl.ArticleID = na.ArticleID
			WHERE na.PortalID=@PortalID
				AND ((@EditPermission = 1) OR ((@UserCanApprove = 1 OR na.Approved=1) AND (na.Active=1 OR na.UserID=@UserID)))
				AND na.HasPermissions = 0
				AND na.PublishDate <= @CurrentDate
				AND na.ExpireDate >= @CurrentDate
				AND ((@FilterAuthorOrAuthors = 1 AND na.UserID IN (SELECT UserID FROM @TempAuthorsIDList)) OR (@FilterAuthorOrAuthors = 0))
				AND ((@HideUnlocalizedItems = 1 AND ncl.ArticleID IS NOT NULL AND ncl.LocaleCode = @LocaleCode) OR (@HideUnlocalizedItems = 0))
			UNION
			SELECT DISTINCT na.[ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS na
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS cat ON na.ArticleID = cat.ArticleID
				INNER JOIN @UserViewCategoriesWithFilter  AS uvcwf ON uvcwf.CategoryID = cat.CategoryID
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsTagsItems] AS nt ON na.ArticleID = nt.ArticleID
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsNewTags] AS newt ON nt.TagID = newt.TagID
				INNER JOIN @SearchTable AS st2 ON newt.Name Like st2.Words
				LEFT OUTER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsContentLocalization] AS ncl ON ncl.ArticleID = na.ArticleID
			WHERE na.PortalID=@PortalID
				AND ((@EditPermission = 1) OR ((@UserCanApprove = 1 OR na.Approved=1) AND (na.Active=1 OR na.UserID=@UserID)))
				AND na.HasPermissions = 0
				AND na.PublishDate <= @CurrentDate
				AND na.ExpireDate >= @CurrentDate
				AND ((@FilterAuthorOrAuthors = 1 AND na.UserID IN (SELECT UserID FROM @TempAuthorsIDList)) OR (@FilterAuthorOrAuthors = 0))
				AND ((@HideUnlocalizedItems = 1 AND ncl.ArticleID IS NOT NULL AND ncl.LocaleCode = @LocaleCode) OR (@HideUnlocalizedItems = 0))
		) AS CountTable;
		SELECT @ArticlesInRolesAndUsers = Count(ArticleID) FROM (
			SELECT DISTINCT na.[ArticleID] from {databaseOwner}[{objectQualifier}EasyDNNNews] AS na
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsArticleUserPermissions] AS aup ON na.ArticleID = aup.ArticleID
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS cat ON na.ArticleID = cat.ArticleID
				INNER JOIN @FiltredByCategories AS fbc ON fbc.CategoryID = cat.CategoryID
				INNER JOIN @SearchTable AS st ON(
					(@SearchType = 3 AND (na.SubTitle Like st.Words OR na.Title Like st.Words OR na.CleanArticleData Like st.Words))
					OR
					(@SearchType = 2 AND na.CleanArticleData Like st.Words)
					OR
					(@SearchType = 1 AND (na.SubTitle Like st.Words OR na.Title Like st.Words))
				)
				LEFT OUTER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsContentLocalization] AS ncl ON ncl.ArticleID = na.ArticleID
			WHERE na.PortalID=@PortalID
				AND ((@EditPermission = 1) OR (((@UserID = -1 AND aup.UserID IS NULL) OR (aup.UserID = @UserID))
					AND aup.Show = 1 AND ((@UserCanApprove = 1) OR (na.Approved=1)) AND (na.Active=1 OR na.UserID=@UserID)
				))
				AND na.HasPermissions = 1
				AND na.PublishDate <= @CurrentDate
				AND na.ExpireDate >= @CurrentDate
				AND ((@FilterAuthorOrAuthors = 1 AND na.UserID IN (SELECT UserID FROM @TempAuthorsIDList)) OR (@FilterAuthorOrAuthors = 0))
				AND ((@HideUnlocalizedItems = 1 AND ncl.ArticleID IS NOT NULL AND ncl.LocaleCode = @LocaleCode) OR (@HideUnlocalizedItems = 0))
			UNION
			SELECT DISTINCT na.[ArticleID] from {databaseOwner}[{objectQualifier}EasyDNNNews] AS na
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsArticleUserPermissions] AS aup ON na.ArticleID = aup.ArticleID
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS cat ON na.ArticleID = cat.ArticleID
				INNER JOIN @FiltredByCategories AS fbc ON fbc.CategoryID = cat.CategoryID
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsTagsItems] AS nt ON na.ArticleID = nt.ArticleID
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsNewTags] AS newt ON nt.TagID = newt.TagID
				INNER JOIN @SearchTable AS st2 ON newt.Name Like st2.Words
				LEFT OUTER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsContentLocalization] AS ncl ON ncl.ArticleID = na.ArticleID
			WHERE na.PortalID=@PortalID
				AND ((@EditPermission = 1) OR (((@UserID = -1 AND aup.UserID IS NULL) OR (aup.UserID = @UserID))
					AND aup.Show = 1 AND ((@UserCanApprove = 1) OR (na.Approved=1)) AND (na.Active=1 OR na.UserID=@UserID)
				))
				AND na.HasPermissions = 1
				AND na.PublishDate <= @CurrentDate
				AND na.ExpireDate >= @CurrentDate
				AND ((@FilterAuthorOrAuthors = 1 AND na.UserID IN (SELECT UserID FROM @TempAuthorsIDList)) OR (@FilterAuthorOrAuthors = 0))
				AND ((@HideUnlocalizedItems = 1 AND ncl.ArticleID IS NOT NULL AND ncl.LocaleCode = @LocaleCode) OR (@HideUnlocalizedItems = 0))
			UNION
			SELECT DISTINCT na.[ArticleID] from {databaseOwner}[{objectQualifier}EasyDNNNews] AS na
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsArticleRolePermissions] AS arp ON na.ArticleID = arp.ArticleID
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS cat ON na.ArticleID = cat.ArticleID
				INNER JOIN @FiltredByCategories AS fbc ON fbc.CategoryID = cat.CategoryID
				INNER JOIN @SearchTable AS st ON(
					(@SearchType = 3 AND (na.SubTitle Like st.Words OR na.Title Like st.Words OR na.CleanArticleData Like st.Words))
					OR
					(@SearchType = 2 AND na.CleanArticleData Like st.Words)
					OR
					(@SearchType = 1 AND (na.SubTitle Like st.Words OR na.Title Like st.Words))
				)
				LEFT OUTER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsContentLocalization] AS ncl ON ncl.ArticleID = na.ArticleID
			WHERE na.PortalID=@PortalID
				AND ((@EditPermission = 1) OR (((@UserCanApprove = 1) OR (na.Approved=1))
					AND (na.Active=1 OR na.UserID=@UserID) AND arp.Show = 1 AND arp.RoleID IN (SELECT [RoleID] FROM @UserInRoles)
				))
				AND na.HasPermissions = 1
				AND na.PublishDate <= @CurrentDate
				AND na.ExpireDate >= @CurrentDate
				AND ((@FilterAuthorOrAuthors = 1 AND na.UserID IN (SELECT UserID FROM @TempAuthorsIDList)) OR (@FilterAuthorOrAuthors = 0))
				AND ((@HideUnlocalizedItems = 1 AND ncl.ArticleID IS NOT NULL AND ncl.LocaleCode = @LocaleCode) OR (@HideUnlocalizedItems = 0))
			UNION
			SELECT DISTINCT na.[ArticleID] from {databaseOwner}[{objectQualifier}EasyDNNNews] AS na
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsArticleRolePermissions] AS arp ON na.ArticleID = arp.ArticleID
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS cat ON na.ArticleID = cat.ArticleID
				INNER JOIN @FiltredByCategories AS fbc ON fbc.CategoryID = cat.CategoryID
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsTagsItems] AS nt ON na.ArticleID = nt.ArticleID
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsNewTags] AS newt ON nt.TagID = newt.TagID
				INNER JOIN @SearchTable AS st2 ON newt.Name Like st2.Words
				LEFT OUTER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsContentLocalization] AS ncl ON ncl.ArticleID = na.ArticleID
			WHERE na.PortalID=@PortalID
				AND ((@EditPermission = 1) OR (((@UserCanApprove = 1) OR (na.Approved=1))
					AND (na.Active=1 OR na.UserID=@UserID) AND arp.Show = 1 AND arp.RoleID IN (SELECT [RoleID] FROM @UserInRoles)
				))
				AND na.HasPermissions = 1
				AND na.PublishDate <= @CurrentDate
				AND na.ExpireDate >= @CurrentDate
				AND ((@FilterAuthorOrAuthors = 1 AND na.UserID IN (SELECT UserID FROM @TempAuthorsIDList)) OR (@FilterAuthorOrAuthors = 0))
				AND ((@HideUnlocalizedItems = 1 AND ncl.ArticleID IS NOT NULL AND ncl.LocaleCode = @LocaleCode) OR (@HideUnlocalizedItems = 0))
		) AS final
	END
	ELSE
	BEGIN
		SELECT @ArticlesInCategories = Count(ArticleID) FROM (
			SELECT DISTINCT na.[ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS na
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS cat ON na.ArticleID = cat.ArticleID
				INNER JOIN @UserViewCategoriesWithFilter  AS uvcwf ON uvcwf.CategoryID = cat.CategoryID
				INNER JOIN @SearchTable AS st ON(
					(@SearchType = 3 AND (na.SubTitle Like st.Words OR na.Title Like st.Words OR na.CleanArticleData Like st.Words))
					OR
					(@SearchType = 2 AND na.CleanArticleData Like st.Words)
					OR
					(@SearchType = 1 AND (na.SubTitle Like st.Words OR na.Title Like st.Words))
				)
			WHERE na.PortalID=@PortalID
				AND ((@EditPermission = 1) OR ((@UserCanApprove = 1 OR na.Approved=1) AND (na.Active=1 OR na.UserID=@UserID)))
				AND na.HasPermissions = 0
				AND na.HideDefaultLocale = 0
				AND na.PublishDate <= @CurrentDate
				AND na.ExpireDate >= @CurrentDate
				AND ((@FilterAuthorOrAuthors = 1 AND na.UserID IN (SELECT UserID FROM @TempAuthorsIDList)) OR (@FilterAuthorOrAuthors = 0))
			UNION
			SELECT DISTINCT na.[ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS na
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS cat ON na.ArticleID = cat.ArticleID
				INNER JOIN @UserViewCategoriesWithFilter  AS uvcwf ON uvcwf.CategoryID = cat.CategoryID
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsTagsItems] AS nt ON na.ArticleID = nt.ArticleID
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsNewTags] AS newt ON nt.TagID = newt.TagID
				INNER JOIN @SearchTable AS st2 ON newt.Name Like st2.Words
			WHERE na.PortalID=@PortalID
				AND ((@EditPermission = 1) OR ((@UserCanApprove = 1 OR na.Approved=1) AND (na.Active=1 OR na.UserID=@UserID)))
				AND na.HasPermissions = 0
				AND na.HideDefaultLocale = 0
				AND na.PublishDate <= @CurrentDate
				AND na.ExpireDate >= @CurrentDate
				AND ((@FilterAuthorOrAuthors = 1 AND na.UserID IN (SELECT UserID FROM @TempAuthorsIDList)) OR (@FilterAuthorOrAuthors = 0))	
		) AS CountTable;
		SELECT @ArticlesInRolesAndUsers = Count(ArticleID) FROM (
			SELECT DISTINCT na.[ArticleID] from {databaseOwner}[{objectQualifier}EasyDNNNews] AS na
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsArticleUserPermissions] AS aup ON na.ArticleID = aup.ArticleID
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS cat ON na.ArticleID = cat.ArticleID
				INNER JOIN @FiltredByCategories AS fbc ON fbc.CategoryID = cat.CategoryID
				INNER JOIN @SearchTable AS st ON(
					(@SearchType = 3 AND (na.SubTitle Like st.Words OR na.Title Like st.Words OR na.CleanArticleData Like st.Words))
					OR
					(@SearchType = 2 AND na.CleanArticleData Like st.Words)
					OR
					(@SearchType = 1 AND (na.SubTitle Like st.Words OR na.Title Like st.Words))
				)
			WHERE na.PortalID=@PortalID
				AND ((@EditPermission = 1) OR (((@UserID = -1 AND aup.UserID IS NULL) OR (aup.UserID = @UserID))
					AND aup.Show = 1 AND ((@UserCanApprove = 1) OR (na.Approved=1)) AND (na.Active=1 OR na.UserID=@UserID)
				))
				AND na.HasPermissions = 1
				AND na.HideDefaultLocale = 0
				AND na.PublishDate <= @CurrentDate
				AND na.ExpireDate >= @CurrentDate
				AND ((@FilterAuthorOrAuthors = 1 AND na.UserID IN (SELECT UserID FROM @TempAuthorsIDList)) OR (@FilterAuthorOrAuthors = 0))
			UNION
			SELECT DISTINCT na.[ArticleID] from {databaseOwner}[{objectQualifier}EasyDNNNews] AS na
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsArticleUserPermissions] AS aup ON na.ArticleID = aup.ArticleID
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS cat ON na.ArticleID = cat.ArticleID
				INNER JOIN @FiltredByCategories AS fbc ON fbc.CategoryID = cat.CategoryID
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsTagsItems] AS nt ON na.ArticleID = nt.ArticleID
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsNewTags] AS newt ON nt.TagID = newt.TagID
				INNER JOIN @SearchTable AS st2 ON newt.Name Like st2.Words
			WHERE na.PortalID=@PortalID
				AND ((@EditPermission = 1) OR (((@UserID = -1 AND aup.UserID IS NULL) OR (aup.UserID = @UserID))
					AND aup.Show = 1 AND ((@UserCanApprove = 1) OR (na.Approved=1)) AND (na.Active=1 OR na.UserID=@UserID)
				))
				AND na.HasPermissions = 1
				AND na.HideDefaultLocale = 0
				AND na.PublishDate <= @CurrentDate
				AND na.ExpireDate >= @CurrentDate
				AND ((@FilterAuthorOrAuthors = 1 AND na.UserID IN (SELECT UserID FROM @TempAuthorsIDList)) OR (@FilterAuthorOrAuthors = 0))
			UNION
			SELECT DISTINCT na.[ArticleID] from {databaseOwner}[{objectQualifier}EasyDNNNews] AS na
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsArticleRolePermissions] AS arp ON na.ArticleID = arp.ArticleID
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS cat ON na.ArticleID = cat.ArticleID
				INNER JOIN @FiltredByCategories AS fbc ON fbc.CategoryID = cat.CategoryID
				INNER JOIN @SearchTable AS st ON(
					(@SearchType = 3 AND (na.SubTitle Like st.Words OR na.Title Like st.Words OR na.CleanArticleData Like st.Words))
					OR
					(@SearchType = 2 AND na.CleanArticleData Like st.Words)
					OR
					(@SearchType = 1 AND (na.SubTitle Like st.Words OR na.Title Like st.Words))
				)
			WHERE na.PortalID=@PortalID
				AND ((@EditPermission = 1) OR (((@UserCanApprove = 1) OR (na.Approved=1))
					AND (na.Active=1 OR na.UserID=@UserID) AND arp.Show = 1 AND arp.RoleID IN (SELECT [RoleID] FROM @UserInRoles)
				))
				AND na.HasPermissions = 1
				AND na.HideDefaultLocale = 0
				AND na.PublishDate <= @CurrentDate
				AND na.ExpireDate >= @CurrentDate
				AND ((@FilterAuthorOrAuthors = 1 AND na.UserID IN (SELECT UserID FROM @TempAuthorsIDList)) OR (@FilterAuthorOrAuthors = 0))
			UNION
			SELECT DISTINCT na.[ArticleID] from {databaseOwner}[{objectQualifier}EasyDNNNews] AS na
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsArticleRolePermissions] AS arp ON na.ArticleID = arp.ArticleID
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS cat ON na.ArticleID = cat.ArticleID
				INNER JOIN @FiltredByCategories AS fbc ON fbc.CategoryID = cat.CategoryID
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsTagsItems] AS nt ON na.ArticleID = nt.ArticleID
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsNewTags] AS newt ON nt.TagID = newt.TagID
				INNER JOIN @SearchTable AS st2 ON newt.Name Like st2.Words
			WHERE na.PortalID=@PortalID
				AND ((@EditPermission = 1) OR (((@UserCanApprove = 1) OR (na.Approved=1))
					AND (na.Active=1 OR na.UserID=@UserID) AND arp.Show = 1 AND arp.RoleID IN (SELECT [RoleID] FROM @UserInRoles)
				))
				AND na.HasPermissions = 1
				AND na.HideDefaultLocale = 0
				AND na.PublishDate <= @CurrentDate
				AND na.ExpireDate >= @CurrentDate
				AND ((@FilterAuthorOrAuthors = 1 AND na.UserID IN (SELECT UserID FROM @TempAuthorsIDList)) OR (@FilterAuthorOrAuthors = 0))
		) AS final
	END
END
ELSE IF @FilterBySocialGroup = 1
BEGIN
	IF @LocaleCode <> ''''
	BEGIN
		SELECT @ArticlesInCategories = Count(ArticleID) FROM (
			SELECT DISTINCT na.[ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS na
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS cat ON na.ArticleID = cat.ArticleID
				INNER JOIN @UserViewCategoriesWithFilter  AS uvcwf ON uvcwf.CategoryID = cat.CategoryID
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = na.ArticleID
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialGroupItems] AS sgi ON sgi.ArticleID = na.ArticleID AND sgi.RoleID = @FilterByDNNGroupID
				INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserID, @FilterByDNNGroupID) AS t ON t.seckey = nss.SecurityKey
				INNER JOIN @SearchTable AS st ON(
					(@SearchType = 3 AND (na.SubTitle Like st.Words OR na.Title Like st.Words OR na.CleanArticleData Like st.Words))
					OR
					(@SearchType = 2 AND na.CleanArticleData Like st.Words)
					OR
					(@SearchType = 1 AND (na.SubTitle Like st.Words OR na.Title Like st.Words))
				)
				LEFT OUTER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsContentLocalization] AS ncl ON ncl.ArticleID = na.ArticleID
			WHERE na.PortalID=@PortalID
				AND ((@EditPermission = 1) OR ((@UserCanApprove = 1 OR na.Approved=1) AND (na.Active=1 OR na.UserID=@UserID)))
				AND na.HasPermissions = 0
				AND na.PublishDate <= @CurrentDate
				AND na.ExpireDate >= @CurrentDate
				AND ((@FilterAuthorOrAuthors = 1 AND na.UserID = @FilterByAuthor) OR (@FilterAuthorOrAuthors = 0))
				AND ((@HideUnlocalizedItems = 1 AND ncl.ArticleID IS NOT NULL AND ncl.LocaleCode = @LocaleCode) OR (@HideUnlocalizedItems = 0))
			UNION
			SELECT DISTINCT na.[ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS na
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS cat ON na.ArticleID = cat.ArticleID
				INNER JOIN @UserViewCategoriesWithFilter  AS uvcwf ON uvcwf.CategoryID = cat.CategoryID
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = na.ArticleID
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialGroupItems] AS sgi ON sgi.ArticleID = na.ArticleID AND sgi.RoleID = @FilterByDNNGroupID
				INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserID, @FilterByDNNGroupID) AS t ON t.seckey = nss.SecurityKey
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsTagsItems] AS nt ON na.ArticleID = nt.ArticleID
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsNewTags] AS newt ON nt.TagID = newt.TagID
				INNER JOIN @SearchTable AS st2 ON newt.Name Like st2.Words
				LEFT OUTER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsContentLocalization] AS ncl ON ncl.ArticleID = na.ArticleID
			WHERE na.PortalID=@PortalID
				AND ((@EditPermission = 1) OR ((@UserCanApprove = 1 OR na.Approved=1) AND (na.Active=1 OR na.UserID=@UserID)))
				AND na.HasPermissions = 0
				AND na.PublishDate <= @CurrentDate
				AND na.ExpireDate >= @CurrentDate
				AND ((@FilterAuthorOrAuthors = 1 AND na.UserID = @FilterByAuthor) OR (@FilterAuthorOrAuthors = 0))
				AND ((@HideUnlocalizedItems = 1 AND ncl.ArticleID IS NOT NULL AND ncl.LocaleCode = @LocaleCode) OR (@HideUnlocalizedItems = 0))
		) AS CountTable;
		SELECT @ArticlesInRolesAndUsers = Count(ArticleID) FROM (
			SELECT DISTINCT na.[ArticleID] from {databaseOwner}[{objectQualifier}EasyDNNNews] AS na
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsArticleUserPermissions] AS aup ON na.ArticleID = aup.ArticleID
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS cat ON na.ArticleID = cat.ArticleID
				INNER JOIN @FiltredByCategories AS fbc ON fbc.CategoryID = cat.CategoryID
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = na.ArticleID
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialGroupItems] AS sgi ON sgi.ArticleID = na.ArticleID AND sgi.RoleID = @FilterByDNNGroupID
				INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserID, @FilterByDNNGroupID) AS t ON t.seckey = nss.SecurityKey
				INNER JOIN @SearchTable AS st ON(
					(@SearchType = 3 AND (na.SubTitle Like st.Words OR na.Title Like st.Words OR na.CleanArticleData Like st.Words))
					OR
					(@SearchType = 2 AND na.CleanArticleData Like st.Words)
					OR
					(@SearchType = 1 AND (na.SubTitle Like st.Words OR na.Title Like st.Words))
				)
				LEFT OUTER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsContentLocalization] AS ncl ON ncl.ArticleID = na.ArticleID
			WHERE na.PortalID=@PortalID
				AND ((@EditPermission = 1) OR (((@UserID = -1 AND aup.UserID IS NULL) OR (aup.UserID = @UserID))
					AND aup.Show = 1 AND ((@UserCanApprove = 1) OR (na.Approved=1)) AND (na.Active=1 OR na.UserID=@UserID)
				))
				AND na.HasPermissions = 1
				AND na.PublishDate <= @CurrentDate
				AND na.ExpireDate >= @CurrentDate
				AND ((@FilterAuthorOrAuthors = 1 AND na.UserID = @FilterByAuthor) OR (@FilterAuthorOrAuthors = 0))
				AND ((@HideUnlocalizedItems = 1 AND ncl.ArticleID IS NOT NULL AND ncl.LocaleCode = @LocaleCode) OR (@HideUnlocalizedItems = 0))
			UNION
			SELECT DISTINCT na.[ArticleID] from {databaseOwner}[{objectQualifier}EasyDNNNews] AS na
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsArticleUserPermissions] AS aup ON na.ArticleID = aup.ArticleID
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS cat ON na.ArticleID = cat.ArticleID
				INNER JOIN @FiltredByCategories AS fbc ON fbc.CategoryID = cat.CategoryID
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = na.ArticleID
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialGroupItems] AS sgi ON sgi.ArticleID = na.ArticleID AND sgi.RoleID = @FilterByDNNGroupID
				INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserID, @FilterByDNNGroupID) AS t ON t.seckey = nss.SecurityKey
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsTagsItems] AS nt ON na.ArticleID = nt.ArticleID
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsNewTags] AS newt ON nt.TagID = newt.TagID
				INNER JOIN @SearchTable AS st2 ON newt.Name Like st2.Words
				LEFT OUTER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsContentLocalization] AS ncl ON ncl.ArticleID = na.ArticleID
			WHERE na.PortalID=@PortalID
				AND ((@EditPermission = 1) OR (((@UserID = -1 AND aup.UserID IS NULL) OR (aup.UserID = @UserID))
					AND aup.Show = 1 AND ((@UserCanApprove = 1) OR (na.Approved=1)) AND (na.Active=1 OR na.UserID=@UserID)
				))
				AND na.HasPermissions = 1
				AND na.PublishDate <= @CurrentDate
				AND na.ExpireDate >= @CurrentDate
				AND ((@FilterAuthorOrAuthors = 1 AND na.UserID = @FilterByAuthor) OR (@FilterAuthorOrAuthors = 0))
				AND ((@HideUnlocalizedItems = 1 AND ncl.ArticleID IS NOT NULL AND ncl.LocaleCode = @LocaleCode) OR (@HideUnlocalizedItems = 0))
			UNION
			SELECT DISTINCT na.[ArticleID] from {databaseOwner}[{objectQualifier}EasyDNNNews] AS na
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsArticleRolePermissions] AS arp ON na.ArticleID = arp.ArticleID
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS cat ON na.ArticleID = cat.ArticleID
				INNER JOIN @FiltredByCategories AS fbc ON fbc.CategoryID = cat.CategoryID
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = na.ArticleID
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialGroupItems] AS sgi ON sgi.ArticleID = na.ArticleID AND sgi.RoleID = @FilterByDNNGroupID
				INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserID, @FilterByDNNGroupID) AS t ON t.seckey = nss.SecurityKey
				INNER JOIN @SearchTable AS st ON(
					(@SearchType = 3 AND (na.SubTitle Like st.Words OR na.Title Like st.Words OR na.CleanArticleData Like st.Words))
					OR
					(@SearchType = 2 AND na.CleanArticleData Like st.Words)
					OR
					(@SearchType = 1 AND (na.SubTitle Like st.Words OR na.Title Like st.Words))
				)
				LEFT OUTER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsContentLocalization] AS ncl ON ncl.ArticleID = na.ArticleID
			WHERE na.PortalID=@PortalID
				AND ((@EditPermission = 1) OR (((@UserCanApprove = 1) OR (na.Approved=1))
					AND (na.Active=1 OR na.UserID=@UserID) AND arp.Show = 1 AND arp.RoleID IN (SELECT [RoleID] FROM @UserInRoles)
				))
				AND na.HasPermissions = 1
				AND na.PublishDate <= @CurrentDate
				AND na.ExpireDate >= @CurrentDate
				AND ((@FilterAuthorOrAuthors = 1 AND na.UserID = @FilterByAuthor) OR (@FilterAuthorOrAuthors = 0))
				AND ((@HideUnlocalizedItems = 1 AND ncl.ArticleID IS NOT NULL AND ncl.LocaleCode = @LocaleCode) OR (@HideUnlocalizedItems = 0))
			UNION
			SELECT DISTINCT na.[ArticleID] from {databaseOwner}[{objectQualifier}EasyDNNNews] AS na
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsArticleRolePermissions] AS arp ON na.ArticleID = arp.ArticleID
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS cat ON na.ArticleID = cat.ArticleID
				INNER JOIN @FiltredByCategories AS fbc ON fbc.CategoryID = cat.CategoryID
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = na.ArticleID
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialGroupItems] AS sgi ON sgi.ArticleID = na.ArticleID AND sgi.RoleID = @FilterByDNNGroupID
				INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserID, @FilterByDNNGroupID) AS t ON t.seckey = nss.SecurityKey
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsTagsItems] AS nt ON na.ArticleID = nt.ArticleID
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsNewTags] AS newt ON nt.TagID = newt.TagID
				INNER JOIN @SearchTable AS st2 ON newt.Name Like st2.Words
				LEFT OUTER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsContentLocalization] AS ncl ON ncl.ArticleID = na.ArticleID
			WHERE na.PortalID=@PortalID
				AND ((@EditPermission = 1) OR (((@UserCanApprove = 1) OR (na.Approved=1))
					AND (na.Active=1 OR na.UserID=@UserID) AND arp.Show = 1 AND arp.RoleID IN (SELECT [RoleID] FROM @UserInRoles)
				))
				AND na.HasPermissions = 1
				AND na.PublishDate <= @CurrentDate
				AND na.ExpireDate >= @CurrentDate
				AND ((@FilterAuthorOrAuthors = 1 AND na.UserID = @FilterByAuthor) OR (@FilterAuthorOrAuthors = 0))
				AND ((@HideUnlocalizedItems = 1 AND ncl.ArticleID IS NOT NULL AND ncl.LocaleCode = @LocaleCode) OR (@HideUnlocalizedItems = 0))
		) AS final
	END
	ELSE
	BEGIN
		SELECT @ArticlesInCategories = Count(ArticleID) FROM (
			SELECT DISTINCT na.[ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS na
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS cat ON na.ArticleID = cat.ArticleID
				INNER JOIN @UserViewCategoriesWithFilter  AS uvcwf ON uvcwf.CategoryID = cat.CategoryID
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = na.ArticleID
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialGroupItems] AS sgi ON sgi.ArticleID = na.ArticleID AND sgi.RoleID = @FilterByDNNGroupID
				INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserID, @FilterByDNNGroupID) AS t ON t.seckey = nss.SecurityKey
				INNER JOIN @SearchTable AS st ON(
					(@SearchType = 3 AND (na.SubTitle Like st.Words OR na.Title Like st.Words OR na.CleanArticleData Like st.Words))
					OR
					(@SearchType = 2 AND na.CleanArticleData Like st.Words)
					OR
					(@SearchType = 1 AND (na.SubTitle Like st.Words OR na.Title Like st.Words))
				)
			WHERE na.PortalID=@PortalID
				AND ((@EditPermission = 1) OR ((@UserCanApprove = 1 OR na.Approved=1) AND (na.Active=1 OR na.UserID=@UserID)))
				AND na.HasPermissions = 0
				AND na.HideDefaultLocale = 0
				AND na.PublishDate <= @CurrentDate
				AND na.ExpireDate >= @CurrentDate
				AND((@FilterAuthorOrAuthors = 1 AND na.UserID = @FilterByAuthor) OR (@FilterAuthorOrAuthors = 0))
			UNION
			SELECT DISTINCT na.[ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS na
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS cat ON na.ArticleID = cat.ArticleID
				INNER JOIN @UserViewCategoriesWithFilter  AS uvcwf ON uvcwf.CategoryID = cat.CategoryID
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = na.ArticleID
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialGroupItems] AS sgi ON sgi.ArticleID = na.ArticleID AND sgi.RoleID = @FilterByDNNGroupID
				INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserID, @FilterByDNNGroupID) AS t ON t.seckey = nss.SecurityKey
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsTagsItems] AS nt ON na.ArticleID = nt.ArticleID
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsNewTags] AS newt ON nt.TagID = newt.TagID
				INNER JOIN @SearchTable AS st2 ON newt.Name Like st2.Words
			WHERE na.PortalID=@PortalID
				AND ((@EditPermission = 1) OR ((@UserCanApprove = 1 OR na.Approved=1) AND (na.Active=1 OR na.UserID=@UserID)))
				AND na.HasPermissions = 0
				AND na.HideDefaultLocale = 0
				AND na.PublishDate <= @CurrentDate
				AND na.ExpireDate >= @CurrentDate
				AND((@FilterAuthorOrAuthors = 1 AND na.UserID = @FilterByAuthor) OR (@FilterAuthorOrAuthors = 0))
		) AS CountTable;
		SELECT @ArticlesInRolesAndUsers = Count(ArticleID) FROM (
			SELECT DISTINCT na.[ArticleID] from {databaseOwner}[{objectQualifier}EasyDNNNews] AS na
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsArticleUserPermissions] AS aup ON na.ArticleID = aup.ArticleID
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS cat ON na.ArticleID = cat.ArticleID
				INNER JOIN @FiltredByCategories AS fbc ON fbc.CategoryID = cat.CategoryID
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = na.ArticleID
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialGroupItems] AS sgi ON sgi.ArticleID = na.ArticleID AND sgi.RoleID = @FilterByDNNGroupID
				INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserID, @FilterByDNNGroupID) AS t ON t.seckey = nss.SecurityKey
				INNER JOIN @SearchTable AS st ON(
					(@SearchType = 3 AND (na.SubTitle Like st.Words OR na.Title Like st.Words OR na.CleanArticleData Like st.Words))
					OR
					(@SearchType = 2 AND na.CleanArticleData Like st.Words)
					OR
					(@SearchType = 1 AND (na.SubTitle Like st.Words OR na.Title Like st.Words))
				)
			WHERE na.PortalID=@PortalID
				AND ((@EditPermission = 1) OR (((@UserID = -1 AND aup.UserID IS NULL) OR (aup.UserID = @UserID))
					AND aup.Show = 1 AND ((@UserCanApprove = 1) OR (na.Approved=1)) AND (na.Active=1 OR na.UserID=@UserID)
				))
				AND na.HasPermissions = 1
				AND na.HideDefaultLocale = 0
				AND na.PublishDate <= @CurrentDate
				AND na.ExpireDate >= @CurrentDate
				AND((@FilterAuthorOrAuthors = 1 AND na.UserID = @FilterByAuthor) OR (@FilterAuthorOrAuthors = 0))
			UNION
			SELECT DISTINCT na.[ArticleID] from {databaseOwner}[{objectQualifier}EasyDNNNews] AS na
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsArticleUserPermissions] AS aup ON na.ArticleID = aup.ArticleID
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS cat ON na.ArticleID = cat.ArticleID
				INNER JOIN @FiltredByCategories AS fbc ON fbc.CategoryID = cat.CategoryID
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = na.ArticleID
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialGroupItems] AS sgi ON sgi.ArticleID = na.ArticleID AND sgi.RoleID = @FilterByDNNGroupID
				INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserID, @FilterByDNNGroupID) AS t ON t.seckey = nss.SecurityKey
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsTagsItems] AS nt ON na.ArticleID = nt.ArticleID
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsNewTags] AS newt ON nt.TagID = newt.TagID
				INNER JOIN @SearchTable AS st2 ON newt.Name Like st2.Words
			WHERE na.PortalID=@PortalID
				AND ((@EditPermission = 1) OR (((@UserID = -1 AND aup.UserID IS NULL) OR (aup.UserID = @UserID))
					AND aup.Show = 1 AND ((@UserCanApprove = 1) OR (na.Approved=1)) AND (na.Active=1 OR na.UserID=@UserID)
				))
				AND na.HasPermissions = 1
				AND na.HideDefaultLocale = 0
				AND na.PublishDate <= @CurrentDate
				AND na.ExpireDate >= @CurrentDate
				AND((@FilterAuthorOrAuthors = 1 AND na.UserID = @FilterByAuthor) OR (@FilterAuthorOrAuthors = 0))
			UNION
			SELECT DISTINCT na.[ArticleID] from {databaseOwner}[{objectQualifier}EasyDNNNews] AS na
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsArticleRolePermissions] AS arp ON na.ArticleID = arp.ArticleID
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS cat ON na.ArticleID = cat.ArticleID
				INNER JOIN @FiltredByCategories AS fbc ON fbc.CategoryID = cat.CategoryID
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = na.ArticleID
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialGroupItems] AS sgi ON sgi.ArticleID = na.ArticleID AND sgi.RoleID = @FilterByDNNGroupID
				INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserID, @FilterByDNNGroupID) AS t ON t.seckey = nss.SecurityKey
				INNER JOIN @SearchTable AS st ON(
					(@SearchType = 3 AND (na.SubTitle Like st.Words OR na.Title Like st.Words OR na.CleanArticleData Like st.Words))
					OR
					(@SearchType = 2 AND na.CleanArticleData Like st.Words)
					OR
					(@SearchType = 1 AND (na.SubTitle Like st.Words OR na.Title Like st.Words))
				)
			WHERE na.PortalID=@PortalID
				AND ((@EditPermission = 1) OR (((@UserCanApprove = 1) OR (na.Approved=1))
					AND (na.Active=1 OR na.UserID=@UserID) AND arp.Show = 1 AND arp.RoleID IN (SELECT [RoleID] FROM @UserInRoles)
				))
				AND na.HasPermissions = 1
				AND na.HideDefaultLocale = 0
				AND na.PublishDate <= @CurrentDate
				AND na.ExpireDate >= @CurrentDate
				AND((@FilterAuthorOrAuthors = 1 AND na.UserID = @FilterByAuthor) OR (@FilterAuthorOrAuthors = 0))
			UNION
			SELECT DISTINCT na.[ArticleID] from {databaseOwner}[{objectQualifier}EasyDNNNews] AS na
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsArticleRolePermissions] AS arp ON na.ArticleID = arp.ArticleID
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS cat ON na.ArticleID = cat.ArticleID
				INNER JOIN @FiltredByCategories AS fbc ON fbc.CategoryID = cat.CategoryID
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = na.ArticleID
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialGroupItems] AS sgi ON sgi.ArticleID = na.ArticleID AND sgi.RoleID = @FilterByDNNGroupID
				INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserID, @FilterByDNNGroupID) AS t ON t.seckey = nss.SecurityKey
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsTagsItems] AS nt ON na.ArticleID = nt.ArticleID
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsNewTags] AS newt ON nt.TagID = newt.TagID
				INNER JOIN @SearchTable AS st2 ON newt.Name Like st2.Words
			WHERE na.PortalID=@PortalID
				AND ((@EditPermission = 1) OR (((@UserCanApprove = 1) OR (na.Approved=1))
					AND (na.Active=1 OR na.UserID=@UserID) AND arp.Show = 1 AND arp.RoleID IN (SELECT [RoleID] FROM @UserInRoles)
				))
				AND na.HasPermissions = 1
				AND na.HideDefaultLocale = 0
				AND na.PublishDate <= @CurrentDate
				AND na.ExpireDate >= @CurrentDate
				AND((@FilterAuthorOrAuthors = 1 AND na.UserID = @FilterByAuthor) OR (@FilterAuthorOrAuthors = 0))
		) AS final
	END
END
ELSE IF @FilterByDNNUserID <> 0
BEGIN
	IF @LocaleCode <> ''''
	BEGIN
		SELECT @ArticlesInCategories = Count(ArticleID) FROM (
			SELECT DISTINCT na.[ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS na
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS cat ON na.ArticleID = cat.ArticleID
				INNER JOIN @UserViewCategoriesWithFilter  AS uvcwf ON uvcwf.CategoryID = cat.CategoryID
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = na.ArticleID
				INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserID, @FilterByDNNGroupID) AS t ON t.seckey = nss.SecurityKey
				INNER JOIN @SearchTable AS st ON(
					(@SearchType = 3 AND (na.SubTitle Like st.Words OR na.Title Like st.Words OR na.CleanArticleData Like st.Words))
					OR
					(@SearchType = 2 AND na.CleanArticleData Like st.Words)
					OR
					(@SearchType = 1 AND (na.SubTitle Like st.Words OR na.Title Like st.Words))
				)
				LEFT OUTER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsContentLocalization] AS ncl ON ncl.ArticleID = na.ArticleID
			WHERE na.PortalID=@PortalID
				AND ((@EditPermission = 1) OR ((@UserCanApprove = 1 OR na.Approved=1) AND (na.Active=1 OR na.UserID=@UserID)))
				AND na.HasPermissions = 0
				AND na.PublishDate <= @CurrentDate
				AND na.ExpireDate >= @CurrentDate
				AND na.UserID = @FilterByDNNUserID
				AND ((@HideUnlocalizedItems = 1 AND ncl.ArticleID IS NOT NULL AND ncl.LocaleCode = @LocaleCode) OR (@HideUnlocalizedItems = 0))
			UNION
			SELECT DISTINCT na.[ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS na
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS cat ON na.ArticleID = cat.ArticleID
				INNER JOIN @UserViewCategoriesWithFilter  AS uvcwf ON uvcwf.CategoryID = cat.CategoryID
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = na.ArticleID
				INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserID, @FilterByDNNGroupID) AS t ON t.seckey = nss.SecurityKey
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsTagsItems] AS nt ON na.ArticleID = nt.ArticleID
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsNewTags] AS newt ON nt.TagID = newt.TagID
				INNER JOIN @SearchTable AS st2 ON newt.Name Like st2.Words
				LEFT OUTER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsContentLocalization] AS ncl ON ncl.ArticleID = na.ArticleID
			WHERE na.PortalID=@PortalID
				AND ((@EditPermission = 1) OR ((@UserCanApprove = 1 OR na.Approved=1) AND (na.Active=1 OR na.UserID=@UserID)))
				AND na.HasPermissions = 0
				AND na.PublishDate <= @CurrentDate
				AND na.ExpireDate >= @CurrentDate
				AND na.UserID = @FilterByDNNUserID
				AND ((@HideUnlocalizedItems = 1 AND ncl.ArticleID IS NOT NULL AND ncl.LocaleCode = @LocaleCode) OR (@HideUnlocalizedItems = 0))
		) AS CountTable;
		SELECT @ArticlesInRolesAndUsers = Count(ArticleID) FROM (
			SELECT DISTINCT na.[ArticleID] from {databaseOwner}[{objectQualifier}EasyDNNNews] AS na
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsArticleUserPermissions] AS aup ON na.ArticleID = aup.ArticleID
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS cat ON na.ArticleID = cat.ArticleID
				INNER JOIN @FiltredByCategories AS fbc ON fbc.CategoryID = cat.CategoryID
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = na.ArticleID
				INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserID, @FilterByDNNGroupID) AS t ON t.seckey = nss.SecurityKey
				INNER JOIN @SearchTable AS st ON(
					(@SearchType = 3 AND (na.SubTitle Like st.Words OR na.Title Like st.Words OR na.CleanArticleData Like st.Words))
					OR
					(@SearchType = 2 AND na.CleanArticleData Like st.Words)
					OR
					(@SearchType = 1 AND (na.SubTitle Like st.Words OR na.Title Like st.Words))
				)
				LEFT OUTER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsContentLocalization] AS ncl ON ncl.ArticleID = na.ArticleID
			WHERE na.PortalID=@PortalID
				AND ((@EditPermission = 1) OR (((@UserID = -1 AND aup.UserID IS NULL) OR (aup.UserID = @UserID))
					AND aup.Show = 1 AND ((@UserCanApprove = 1) OR (na.Approved=1)) AND (na.Active=1 OR na.UserID=@UserID)
				))
				AND na.HasPermissions = 1
				AND na.PublishDate <= @CurrentDate
				AND na.ExpireDate >= @CurrentDate
				AND na.UserID = @FilterByDNNUserID
				AND ((@HideUnlocalizedItems = 1 AND ncl.ArticleID IS NOT NULL AND ncl.LocaleCode = @LocaleCode) OR (@HideUnlocalizedItems = 0))
			UNION
			SELECT DISTINCT na.[ArticleID] from {databaseOwner}[{objectQualifier}EasyDNNNews] AS na
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsArticleUserPermissions] AS aup ON na.ArticleID = aup.ArticleID
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS cat ON na.ArticleID = cat.ArticleID
				INNER JOIN @FiltredByCategories AS fbc ON fbc.CategoryID = cat.CategoryID
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = na.ArticleID
				INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserID, @FilterByDNNGroupID) AS t ON t.seckey = nss.SecurityKey
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsTagsItems] AS nt ON na.ArticleID = nt.ArticleID
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsNewTags] AS newt ON nt.TagID = newt.TagID
				INNER JOIN @SearchTable AS st2 ON newt.Name Like st2.Words
				LEFT OUTER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsContentLocalization] AS ncl ON ncl.ArticleID = na.ArticleID
			WHERE na.PortalID=@PortalID
				AND ((@EditPermission = 1) OR (((@UserID = -1 AND aup.UserID IS NULL) OR (aup.UserID = @UserID))
					AND aup.Show = 1 AND ((@UserCanApprove = 1) OR (na.Approved=1)) AND (na.Active=1 OR na.UserID=@UserID)
				))
				AND na.HasPermissions = 1
				AND na.PublishDate <= @CurrentDate
				AND na.ExpireDate >= @CurrentDate
				AND na.UserID = @FilterByDNNUserID
				AND ((@HideUnlocalizedItems = 1 AND ncl.ArticleID IS NOT NULL AND ncl.LocaleCode = @LocaleCode) OR (@HideUnlocalizedItems = 0))
			UNION
			SELECT DISTINCT na.[ArticleID] from {databaseOwner}[{objectQualifier}EasyDNNNews] AS na
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsArticleRolePermissions] AS arp ON na.ArticleID = arp.ArticleID
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS cat ON na.ArticleID = cat.ArticleID
				INNER JOIN @FiltredByCategories AS fbc ON fbc.CategoryID = cat.CategoryID
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = na.ArticleID
				INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserID, @FilterByDNNGroupID) AS t ON t.seckey = nss.SecurityKey
				INNER JOIN @SearchTable AS st ON(
					(@SearchType = 3 AND (na.SubTitle Like st.Words OR na.Title Like st.Words OR na.CleanArticleData Like st.Words))
					OR
					(@SearchType = 2 AND na.CleanArticleData Like st.Words)
					OR
					(@SearchType = 1 AND (na.SubTitle Like st.Words OR na.Title Like st.Words))
				)
				LEFT OUTER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsContentLocalization] AS ncl ON ncl.ArticleID = na.ArticleID
			WHERE na.PortalID=@PortalID
				AND ((@EditPermission = 1) OR (((@UserCanApprove = 1) OR (na.Approved=1))
					AND (na.Active=1 OR na.UserID=@UserID) AND arp.Show = 1 AND arp.RoleID IN (SELECT [RoleID] FROM @UserInRoles)
				))
				AND na.HasPermissions = 1
				AND na.PublishDate <= @CurrentDate
				AND na.ExpireDate >= @CurrentDate
				AND na.UserID = @FilterByDNNUserID
				AND ((@HideUnlocalizedItems = 1 AND ncl.ArticleID IS NOT NULL AND ncl.LocaleCode = @LocaleCode) OR (@HideUnlocalizedItems = 0))
			UNION
			SELECT DISTINCT na.[ArticleID] from {databaseOwner}[{objectQualifier}EasyDNNNews] AS na
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsArticleRolePermissions] AS arp ON na.ArticleID = arp.ArticleID
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS cat ON na.ArticleID = cat.ArticleID
				INNER JOIN @FiltredByCategories AS fbc ON fbc.CategoryID = cat.CategoryID
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = na.ArticleID
				INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserID, @FilterByDNNGroupID) AS t ON t.seckey = nss.SecurityKey
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsTagsItems] AS nt ON na.ArticleID = nt.ArticleID
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsNewTags] AS newt ON nt.TagID = newt.TagID
				INNER JOIN @SearchTable AS st2 ON newt.Name Like st2.Words
				LEFT OUTER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsContentLocalization] AS ncl ON ncl.ArticleID = na.ArticleID
			WHERE na.PortalID=@PortalID
				AND ((@EditPermission = 1) OR (((@UserCanApprove = 1) OR (na.Approved=1))
					AND (na.Active=1 OR na.UserID=@UserID) AND arp.Show = 1 AND arp.RoleID IN (SELECT [RoleID] FROM @UserInRoles)
				))
				AND na.HasPermissions = 1
				AND na.PublishDate <= @CurrentDate
				AND na.ExpireDate >= @CurrentDate
				AND na.UserID = @FilterByDNNUserID
				AND ((@HideUnlocalizedItems = 1 AND ncl.ArticleID IS NOT NULL AND ncl.LocaleCode = @LocaleCode) OR (@HideUnlocalizedItems = 0))
		) AS final
	END
	ELSE
	BEGIN
		SELECT @ArticlesInCategories = Count(ArticleID) FROM (
			SELECT DISTINCT na.[ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS na
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS cat ON na.ArticleID = cat.ArticleID
				INNER JOIN @UserViewCategoriesWithFilter  AS uvcwf ON uvcwf.CategoryID = cat.CategoryID
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = na.ArticleID
				INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserID, @FilterByDNNGroupID) AS t ON t.seckey = nss.SecurityKey
				INNER JOIN @SearchTable AS st ON(
					(@SearchType = 3 AND (na.SubTitle Like st.Words OR na.Title Like st.Words OR na.CleanArticleData Like st.Words))
					OR
					(@SearchType = 2 AND na.CleanArticleData Like st.Words)
					OR
					(@SearchType = 1 AND (na.SubTitle Like st.Words OR na.Title Like st.Words))
				)
			WHERE na.PortalID=@PortalID
				AND ((@EditPermission = 1) OR ((@UserCanApprove = 1 OR na.Approved=1) AND (na.Active=1 OR na.UserID=@UserID)))
				AND na.HasPermissions = 0
				AND na.HideDefaultLocale = 0
				AND na.PublishDate <= @CurrentDate
				AND na.ExpireDate >= @CurrentDate
				AND na.UserID = @FilterByDNNUserID 
			UNION
			SELECT DISTINCT na.[ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS na
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS cat ON na.ArticleID = cat.ArticleID
				INNER JOIN @UserViewCategoriesWithFilter  AS uvcwf ON uvcwf.CategoryID = cat.CategoryID
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = na.ArticleID
				INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserID, @FilterByDNNGroupID) AS t ON t.seckey = nss.SecurityKey
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsTagsItems] AS nt ON na.ArticleID = nt.ArticleID
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsNewTags] AS newt ON nt.TagID = newt.TagID
				INNER JOIN @SearchTable AS st2 ON newt.Name Like st2.Words
			WHERE na.PortalID=@PortalID
				AND ((@EditPermission = 1) OR ((@UserCanApprove = 1 OR na.Approved=1) AND (na.Active=1 OR na.UserID=@UserID)))
				AND na.HasPermissions = 0
				AND na.HideDefaultLocale = 0
				AND na.PublishDate <= @CurrentDate
				AND na.ExpireDate >= @CurrentDate
				AND na.UserID = @FilterByDNNUserID 
		) AS CountTable;
		SELECT @ArticlesInRolesAndUsers = Count(ArticleID) FROM (
			SELECT DISTINCT na.[ArticleID] from {databaseOwner}[{objectQualifier}EasyDNNNews] AS na
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsArticleUserPermissions] AS aup ON na.ArticleID = aup.ArticleID
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS cat ON na.ArticleID = cat.ArticleID
				INNER JOIN @FiltredByCategories AS fbc ON fbc.CategoryID = cat.CategoryID
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = na.ArticleID
				INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserID, @FilterByDNNGroupID) AS t ON t.seckey = nss.SecurityKey
				INNER JOIN @SearchTable AS st ON(
					(@SearchType = 3 AND (na.SubTitle Like st.Words OR na.Title Like st.Words OR na.CleanArticleData Like st.Words))
					OR
					(@SearchType = 2 AND na.CleanArticleData Like st.Words)
					OR
					(@SearchType = 1 AND (na.SubTitle Like st.Words OR na.Title Like st.Words))
				)
			WHERE na.PortalID=@PortalID
				AND ((@EditPermission = 1) OR (((@UserID = -1 AND aup.UserID IS NULL) OR (aup.UserID = @UserID))
					AND aup.Show = 1 AND ((@UserCanApprove = 1) OR (na.Approved=1)) AND (na.Active=1 OR na.UserID=@UserID)
				))
				AND na.HasPermissions = 1
				AND na.HideDefaultLocale = 0
				AND na.PublishDate <= @CurrentDate
				AND na.ExpireDate >= @CurrentDate
				AND na.UserID = @FilterByDNNUserID 
			UNION
			SELECT DISTINCT na.[ArticleID] from {databaseOwner}[{objectQualifier}EasyDNNNews] AS na
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsArticleUserPermissions] AS aup ON na.ArticleID = aup.ArticleID
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS cat ON na.ArticleID = cat.ArticleID
				INNER JOIN @FiltredByCategories AS fbc ON fbc.CategoryID = cat.CategoryID
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = na.ArticleID
				INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserID, @FilterByDNNGroupID) AS t ON t.seckey = nss.SecurityKey
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsTagsItems] AS nt ON na.ArticleID = nt.ArticleID
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsNewTags] AS newt ON nt.TagID = newt.TagID
				INNER JOIN @SearchTable AS st2 ON newt.Name Like st2.Words
			WHERE na.PortalID=@PortalID
				AND ((@EditPermission = 1) OR (((@UserID = -1 AND aup.UserID IS NULL) OR (aup.UserID = @UserID))
					AND aup.Show = 1 AND ((@UserCanApprove = 1) OR (na.Approved=1)) AND (na.Active=1 OR na.UserID=@UserID)
				))
				AND na.HasPermissions = 1
				AND na.HideDefaultLocale = 0
				AND na.PublishDate <= @CurrentDate
				AND na.ExpireDate >= @CurrentDate
				AND na.UserID = @FilterByDNNUserID 
			UNION
			SELECT DISTINCT na.[ArticleID] from {databaseOwner}[{objectQualifier}EasyDNNNews] AS na
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsArticleRolePermissions] AS arp ON na.ArticleID = arp.ArticleID
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS cat ON na.ArticleID = cat.ArticleID
				INNER JOIN @FiltredByCategories AS fbc ON fbc.CategoryID = cat.CategoryID
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = na.ArticleID
				INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserID, @FilterByDNNGroupID) AS t ON t.seckey = nss.SecurityKey
				INNER JOIN @SearchTable AS st ON(
					(@SearchType = 3 AND (na.SubTitle Like st.Words OR na.Title Like st.Words OR na.CleanArticleData Like st.Words))
					OR
					(@SearchType = 2 AND na.CleanArticleData Like st.Words)
					OR
					(@SearchType = 1 AND (na.SubTitle Like st.Words OR na.Title Like st.Words)))
			WHERE na.PortalID=@PortalID
				AND ((@EditPermission = 1) OR (((@UserCanApprove = 1) OR (na.Approved=1))
					AND (na.Active=1 OR na.UserID=@UserID) AND arp.Show = 1 AND arp.RoleID IN (SELECT [RoleID] FROM @UserInRoles)
				))
				AND na.HasPermissions = 1
				AND na.HideDefaultLocale = 0
				AND na.PublishDate <= @CurrentDate
				AND na.ExpireDate >= @CurrentDate
				AND na.UserID = @FilterByDNNUserID
			UNION
			SELECT DISTINCT na.[ArticleID] from {databaseOwner}[{objectQualifier}EasyDNNNews] AS na
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsArticleRolePermissions] AS arp ON na.ArticleID = arp.ArticleID
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS cat ON na.ArticleID = cat.ArticleID
				INNER JOIN @FiltredByCategories AS fbc ON fbc.CategoryID = cat.CategoryID
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = na.ArticleID
				INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserID, @FilterByDNNGroupID) AS t ON t.seckey = nss.SecurityKey
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsTagsItems] AS nt ON na.ArticleID = nt.ArticleID
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsNewTags] AS newt ON nt.TagID = newt.TagID
				INNER JOIN @SearchTable AS st2 ON newt.Name Like st2.Words
			WHERE na.PortalID=@PortalID
				AND ((@EditPermission = 1) OR (((@UserCanApprove = 1) OR (na.Approved=1))
					AND (na.Active=1 OR na.UserID=@UserID) AND arp.Show = 1 AND arp.RoleID IN (SELECT [RoleID] FROM @UserInRoles)
				))
				AND na.HasPermissions = 1
				AND na.HideDefaultLocale = 0
				AND na.PublishDate <= @CurrentDate
				AND na.ExpireDate >= @CurrentDate
				AND na.UserID = @FilterByDNNUserID 
		) AS final
	END
END
SELECT @ArticlesInRolesAndUsers + @ArticlesInCategories' 
END
GO
/****** Object:  StoredProcedure {databaseOwner}[{objectQualifier}EasyDNNNewsGetItemsCountForPageingOnlyEvents]    Script Date: 06/24/2013 16:39:07 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'{databaseOwner}[{objectQualifier}EasyDNNNewsGetItemsCountForPageingOnlyEvents]') AND type in (N'P', N'PC'))
BEGIN
EXEC dbo.sp_executesql @statement = N'CREATE PROCEDURE {databaseOwner}[{objectQualifier}EasyDNNNewsGetItemsCountForPageingOnlyEvents]
	@ViewType tinyint = 0, -- 0 - View, 1 - Editor
	@PortalID int, -- current Portal
	@ModuleID int, -- current Module, portal sharing isto sadrzi dobre kategorije, auto add i setingsi su snimljeni kod tog modula
	@UserID int,
	@CurrentDate Datetime, -- = GetUTCDate,
	@OrderBy nvarchar(20) = ''PublishDate DESC'',
	@ItemsFrom int = 1,
	@ItemsTo int = 5,
	@DateRange bit = 0,
	@FromDate DateTime = ''2012-01-01 00:00:00'',
	@ToDate DateTime = ''2012-01-01 00:00:00'',
	/* od tud ide filter */
	@Featured bit = 0,
	@ShowAllAuthors bit = 1, -- gleda se filtriranje autora po modulu ili portalu
	@FilterByAuthor int = 0,
	@FilterByGroupID int = 0,
	@FilterByTags bit = 0,
	/*@FilterByArticles bit = 0,*/ -- ovoga nema tu !!
	@FilterByDNNUserID int = 0, -- filter by some UserID / not current user ID
	@FilterByDNNGroupID int = 0, -- filter by DNNGroup/RoleID / not profile GroupID
	@EditOnlyAsOwner bit = 0, -- news settings
	@UserCanApprove bit = 0, -- news settings
	@LocaleCode nvarchar(20) = '''',
	@IsSocialInstance bit = 0,	
	@FirstOrderBy nvarchar(20) = '''',--''Featured DESC'', -- featured articles on top	
	@Perm_ViewAllCategores bit = 0, -- permission settings View all categories
	@Perm_EditAllCategores bit = 0, -- permission settings Edit all categories
	@AdminOrSuperUser bit = 0,
	@CategoryFilterType tinyint = 1, -- 0 All categories, 1 - SELECTion, 2 - AutoAdd
	@PermissionSettingsSource bit = 0, -- 0 portal, 1 module
	@FillterSettingsSource bit = 0, -- 0 portal, 1 module
	@StartDate DateTime = ''2012-01-01 00:00:00'',
	@OuterModuleID int = 0,
	@HideUnlocalizedItems bit = 0
AS
SET NOCOUNT ON;
DECLARE @EditPermission tinyint;
SET @EditPermission = 0;
IF @OuterModuleID = 0 AND @FilterByTags = 1
BEGIN
	DECLARE @FilterTagsTable TABLE (TagID int NOT NULL PRIMARY KEY);
	IF @FillterSettingsSource = 1 -- portal settings
		BEGIN
			INSERT INTO @FilterTagsTable SELECT TagID FROM {databaseOwner}[{objectQualifier}EasyDNNNewsPortalFilterByTagID] WHERE FilterPortalID = @PortalID;
		END
	ELSE
		BEGIN
			INSERT INTO @FilterTagsTable SELECT TagID FROM {databaseOwner}[{objectQualifier}EasyDNNNewsFilterByTagID] WHERE FilterModuleID = @ModuleID;
		END
END
DECLARE @UserInRoles TABLE (RoleID int NOT NULL PRIMARY KEY);
INSERT INTO @UserInRoles SELECT DISTINCT ur.[RoleID] FROM {databaseOwner}[{objectQualifier}UserRoles] AS ur INNER JOIN {databaseOwner}[{objectQualifier}Roles] AS r ON ur.RoleID = r.RoleID WHERE ur.UserID = @UserID AND r.PortalID = @PortalID AND (ur.ExpiryDate IS NULL OR ur.ExpiryDate > GETUTCDATE()) AND (ur.EffectiveDate IS NULL OR ur.EffectiveDate < GETUTCDATE());
DECLARE @UserViewCategories TABLE (CategoryID int NOT NULL PRIMARY KEY); -- all categories which user can see based on permissions
DECLARE @UserEditCategories TABLE (CategoryID int NOT NULL PRIMARY KEY); -- all categories which user can edit based on permissions
DECLARE @UserViewCategoriesWithFilter TABLE (CategoryID int NOT NULL PRIMARY KEY); -- all categories which user can see based on permissions and Module filter
DECLARE @FiltredByCategories TABLE (CategoryID int NOT NULL PRIMARY KEY); -- all categories that are filtred by module or portal

IF @UserID = -1
BEGIN	
	IF @Perm_ViewAllCategores = 1
	BEGIN
		INSERT INTO @UserViewCategories SELECT [CategoryID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryList] WHERE PortalID = @PortalID;
	END
	ELSE
	BEGIN
		IF @PermissionSettingsSource = 1 -- by portal
		BEGIN
			INSERT INTO @UserViewCategories
			SELECT rpsc.[CategoryID] FROM  {databaseOwner}[{objectQualifier}EasyDNNNewsRolePremissionsShowCategories] AS rpsc 
			INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsRolePremissionSettings] AS rps ON rps.PremissionSettingsID = rpsc.PremissionSettingsID
			WHERE rps.PortalID = @PortalID  AND rps.ModuleID IS NULL AND rps.RoleID IS NULL;
		END
		ELSE -- by module
		BEGIN
		INSERT INTO @UserViewCategories
			SELECT rpsc.[CategoryID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsRolePremissionsShowCategories] AS rpsc
			INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsRolePremissionSettings] AS rps ON rps.PremissionSettingsID = rpsc.PremissionSettingsID
			WHERE rps.PortalID = @PortalID AND rps.ModuleID = @ModuleID AND rps.RoleID IS NULL;
		END
	END
END
ELSE IF @AdminOrSuperUser = 1
BEGIN
	INSERT INTO @UserViewCategories SELECT [CategoryID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryList] WHERE PortalID = @PortalID;
END
ELSE
BEGIN
	IF @Perm_ViewAllCategores = 1
	BEGIN
		INSERT INTO @UserViewCategories SELECT [CategoryID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryList] WHERE PortalID = @PortalID;
	END
	ELSE
	BEGIN
		IF @PermissionSettingsSource = 1 -- by portal
		BEGIN
			INSERT INTO @UserViewCategories
			SELECT rpsc.[CategoryID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsRolePremissionsShowCategories] AS rpsc
			INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsRolePremissionSettings] AS rps ON rps.PremissionSettingsID = rpsc.PremissionSettingsID
			INNER JOIN @UserInRoles AS uir ON rps.RoleID = uir.RoleID
			WHERE rps.PortalID = @PortalID AND rps.ModuleID IS NULL GROUP BY rpsc.[CategoryID]
			UNION
			SELECT upsc.[CategoryID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsUserPremissionsShowCategories] AS upsc
			INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsUserPremissionSettings] AS ups ON ups.PremissionSettingsID = upsc.PremissionSettingsID
			WHERE ups.UserID = @UserID AND ups.PortalID = @PortalID AND ups.ModuleID IS NULL GROUP BY upsc.[CategoryID];
		END
		ELSE -- by module
		BEGIN
			INSERT INTO @UserViewCategories
			SELECT rpsc.[CategoryID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsRolePremissionsShowCategories] AS rpsc
			INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsRolePremissionSettings] AS rps ON rps.PremissionSettingsID = rpsc.PremissionSettingsID
			INNER JOIN @UserInRoles AS uir ON rps.RoleID = uir.RoleID
			WHERE rps.PortalID = @PortalID AND rps.ModuleID = @ModuleID GROUP BY rpsc.[CategoryID]
			UNION
			SELECT upsc.[CategoryID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsUserPremissionsShowCategories] AS upsc
			INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsUserPremissionSettings] AS ups ON ups.PremissionSettingsID = upsc.PremissionSettingsID
			WHERE ups.UserID = @UserID AND ups.PortalID = @PortalID AND ups.ModuleID = @ModuleID GROUP BY upsc.[CategoryID];
		END
	END
END

IF @OuterModuleID <> 0
BEGIN
	IF @CategoryFilterType = 0 -- 0 All categories
	BEGIN
		INSERT INTO @UserViewCategoriesWithFilter SELECT [CategoryID] FROM @UserViewCategories;
		INSERT INTO @FiltredByCategories SELECT [CategoryID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryList] WHERE PortalID = @PortalID;
	END
	ELSE IF @CategoryFilterType = 1 -- 1 - SELECTion
	BEGIN
		INSERT INTO @UserViewCategoriesWithFilter 
		SELECT cl.[CategoryID] FROM @UserViewCategories AS cl
		INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsModuleCategoryItems] AS mci ON mci.CategoryID = cl.CategoryID AND mci.ModuleID = @OuterModuleID
			
		INSERT INTO @FiltredByCategories SELECT [CategoryID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsModuleCategoryItems] WHERE ModuleID = @OuterModuleID;
	END
	ELSE IF @CategoryFilterType = 2 -- 2 - AutoAdd
	BEGIN
		WITH hierarchy AS(
			SELECT [CategoryID], [ParentCategory]
			FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryList] AS cl
			WHERE (cl.ParentCategory IN (SELECT [CategoryID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsModuleCategoryItems] WHERE ModuleID = @OuterModuleID) OR cl.CategoryID IN (SELECT [CategoryID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsModuleCategoryItems] WHERE ModuleID = @OuterModuleID)) AND PortalID = @PortalID
			UNION ALL
			SELECT c.[CategoryID], c.[ParentCategory]
			FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryList] AS c INNER JOIN hierarchy AS p ON c.ParentCategory = p.CategoryID WHERE c.PortalID = @PortalID
			)
		INSERT INTO @FiltredByCategories SELECT DISTINCT CategoryID FROM hierarchy;	
		INSERT INTO @UserViewCategoriesWithFilter SELECT uvc.CategoryID FROM @FiltredByCategories AS nfc INNER JOIN @UserViewCategories AS uvc ON uvc.CategoryID = nfc.CategoryID;
	END
END
ELSE
BEGIN
	IF @CategoryFilterType = 0 -- 0 All categories
	BEGIN
		INSERT INTO @UserViewCategoriesWithFilter SELECT [CategoryID] FROM @UserViewCategories;
		INSERT INTO @FiltredByCategories SELECT [CategoryID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryList] WHERE PortalID = @PortalID;
	END
	ELSE IF @CategoryFilterType = 1 -- 1 - SELECTion
	BEGIN
		IF @FillterSettingsSource = 1 -- portal
		BEGIN
			INSERT INTO @UserViewCategoriesWithFilter 
			SELECT cl.[CategoryID] FROM @UserViewCategories AS cl
			INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsPortalCategoryItems] AS pci ON pci.CategoryID = cl.CategoryID AND pci.PortalID = @PortalID
			
			INSERT INTO @FiltredByCategories SELECT [CategoryID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsPortalCategoryItems] WHERE PortalID = @PortalID;
		END
		ELSE -- module
		BEGIN
			INSERT INTO @UserViewCategoriesWithFilter 
			SELECT cl.[CategoryID] FROM @UserViewCategories AS cl
			INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsModuleCategoryItems] AS mci ON mci.CategoryID = cl.CategoryID AND mci.ModuleID = @ModuleID
			
			INSERT INTO @FiltredByCategories SELECT [CategoryID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsModuleCategoryItems] WHERE ModuleID = @ModuleID;
		END
	END
	ELSE IF @CategoryFilterType = 2 -- 2 - AutoAdd
	BEGIN
		IF @FillterSettingsSource = 1 -- portal
		BEGIN
			WITH hierarchy AS(
				SELECT [CategoryID], [ParentCategory]
				FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryList] AS cl
				WHERE (cl.ParentCategory IN (SELECT [CategoryID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsPortalCategoryItems] WHERE PortalID = @PortalID) OR cl.CategoryID IN (SELECT [CategoryID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsPortalCategoryItems] WHERE PortalID = @PortalID)) AND PortalID = @PortalID
				UNION ALL
				SELECT c.[CategoryID], c.[ParentCategory]
				FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryList] AS c INNER JOIN hierarchy AS p ON c.ParentCategory = p.CategoryID WHERE c.PortalID = @PortalID
				)
			INSERT INTO @FiltredByCategories SELECT DISTINCT CategoryID FROM hierarchy;	
			INSERT INTO @UserViewCategoriesWithFilter SELECT uvc.CategoryID FROM @FiltredByCategories AS nfc INNER JOIN @UserViewCategories AS uvc ON uvc.CategoryID = nfc.CategoryID;			
		END
		ELSE -- module
		BEGIN
			WITH hierarchy AS(
				SELECT [CategoryID], [ParentCategory]
				FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryList] AS cl
				WHERE (cl.ParentCategory IN (SELECT [CategoryID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsModuleCategoryItems] WHERE ModuleID = @ModuleID) OR cl.CategoryID IN (SELECT [CategoryID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsModuleCategoryItems] WHERE ModuleID = @ModuleID)) AND PortalID = @PortalID
				UNION ALL
				SELECT c.[CategoryID], c.[ParentCategory]
				FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryList] AS c INNER JOIN hierarchy AS p ON c.ParentCategory = p.CategoryID WHERE c.PortalID = @PortalID
				)
			INSERT INTO @FiltredByCategories SELECT DISTINCT CategoryID FROM hierarchy;	
			INSERT INTO @UserViewCategoriesWithFilter SELECT uvc.CategoryID FROM @FiltredByCategories AS nfc INNER JOIN @UserViewCategories AS uvc ON uvc.CategoryID = nfc.CategoryID;
		END
	END
END

DECLARE @FilterBySocialGroup bit;
SET @FilterBySocialGroup = 0;
DECLARE @FilterAuthorOrAuthors bit;
SET @FilterAuthorOrAuthors = 0;

DECLARE @TempAuthorsIDList TABLE (UserID int NOT NULL PRIMARY KEY);
IF @IsSocialInstance = 1
	BEGIN
		IF @FilterByDNNGroupID <> 0
		BEGIN	
			SET @FilterBySocialGroup = 1;
			IF @FilterByAuthor <> 0
			BEGIN
				SET @FilterAuthorOrAuthors = 1;
				SELECT @FilterByAuthor = UserID FROM {databaseOwner}[{objectQualifier}EasyDNNNewsAuthorProfile] WHERE [AuthorProfileID] = @FilterByAuthor;
			END
		END
	END
ELSE
BEGIN
-- ovaj dio odnosi se na filtriranje autora
	IF @OuterModuleID <> 0 AND @ShowAllAuthors = 0 -- filter iu other modula
	BEGIN
		SET @FilterAuthorOrAuthors = 1;
		INSERT INTO @TempAuthorsIDList
			SELECT [UserID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsModuleAuthorsItems] AS mai WHERE mai.ModuleID = @OuterModuleID
			UNION 
			SELECT [UserID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsAuthorProfile] AS ap 
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsAutorGroupItems] AS agi ON ap.AuthorProfileID = agi.AuthorProfileID
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsModuleGroupItems] AS mgi ON mgi.GroupID = agi.GroupID
			WHERE mgi.ModuleID = @OuterModuleID
	END
	ELSE
	BEGIN
		IF @FilterByAuthor = 0 AND @FilterByGroupID = 0 AND @ShowAllAuthors = 0 -- filter glavnog newsa
		BEGIN
			SET @FilterAuthorOrAuthors = 1;
			IF @FillterSettingsSource = 1 -- by portal
			BEGIN
				INSERT INTO @TempAuthorsIDList
				SELECT [UserID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsPortalAuthorsItems] AS pai WHERE pai.PortalID = @PortalID
				UNION 
				SELECT [UserID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsAuthorProfile] AS ap 
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsAutorGroupItems] AS agi ON ap.AuthorProfileID = agi.AuthorProfileID
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsPortalGroupItems] AS pgi ON pgi.GroupID = agi.GroupID
					WHERE pgi.PortalID = @PortalID
			END
			ELSE -- by modul
			BEGIN
				INSERT INTO @TempAuthorsIDList
				SELECT [UserID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsModuleAuthorsItems] AS mai WHERE mai.ModuleID = @ModuleID
				UNION 
				SELECT [UserID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsAuthorProfile] AS ap 
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsAutorGroupItems] AS agi ON ap.AuthorProfileID = agi.AuthorProfileID
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsModuleGroupItems] AS mgi ON mgi.GroupID = agi.GroupID
					WHERE mgi.ModuleID = @ModuleID
			END
		END
		ELSE IF @FilterByAuthor <> 0
		BEGIN
			SET @FilterAuthorOrAuthors = 1;
			INSERT INTO @TempAuthorsIDList SELECT [UserID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsAuthorProfile] WHERE [AuthorProfileID] = @FilterByAuthor;
		END
		ELSE IF @FilterByGroupID <> 0
		BEGIN
			SET @FilterAuthorOrAuthors = 1;
			INSERT INTO @TempAuthorsIDList
			SELECT [UserID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsAuthorProfile] AS ap 
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsAutorGroupItems] AS agi ON ap.AuthorProfileID = agi.AuthorProfileID	
				WHERE agi.GroupID = @FilterByGroupID
		END
	END
END

IF @AdminOrSuperUser = 1 OR @Perm_EditAllCategores = 1
BEGIN	
	SET @EditPermission = 1;
END

DECLARE @ArticlesInCategories int;
SET @ArticlesInCategories = 0;
DECLARE @ArticlesInRolesAndUsers int;
SET @ArticlesInRolesAndUsers = 0;

IF @IsSocialInstance = 0
BEGIN
	IF @LocaleCode <> ''''
	BEGIN
		SELECT @ArticlesInCategories = Count(ArticleID) FROM (SELECT na.[ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS na
			INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS cat ON na.ArticleID = cat.ArticleID
			INNER JOIN @UserViewCategoriesWithFilter  AS uvcwf ON uvcwf.CategoryID = cat.CategoryID
			INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsEventsData] AS ne ON ne.ArticleID = na.ArticleID
			LEFT OUTER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsTagsItems] AS ti ON na.ArticleID = ti.ArticleID
			LEFT OUTER JOIN @FilterTagsTable AS fbt ON ti.TagID = fbt.TagID
			LEFT OUTER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsContentLocalization] AS ncl ON ncl.ArticleID = na.ArticleID 	
		WHERE na.PortalID=@PortalID
			AND ((@EditPermission = 1) OR ((@UserCanApprove = 1 OR na.Approved=1) AND (na.Active=1 OR na.UserID=@UserID)))
			AND na.HasPermissions = 0
			AND (
				(@DateRange = 0 AND ne.StartDate >= @StartDate) OR
				(@DateRange = 1 AND (ne.StartDate <= @ToDate AND ne.EndDate >= @FromDate))  
				) 
			AND ((@Featured = 1 AND na.Featured = 1) OR (@Featured = 0))
			AND na.PublishDate <= @CurrentDate AND na.ExpireDate >= @CurrentDate
			AND ((@FilterAuthorOrAuthors = 1 AND na.UserID IN (SELECT UserID FROM @TempAuthorsIDList)) OR (@FilterAuthorOrAuthors = 0))
			AND ((@FilterByTags = 1 AND fbt.TagID IS NOT NULL) OR (@FilterByTags = 0))
			AND ((@HideUnlocalizedItems = 1 AND ncl.ArticleID IS NOT NULL AND ncl.LocaleCode = @LocaleCode) OR (@HideUnlocalizedItems = 0))
		GROUP BY na.ArticleID) AS CountTable;
		SELECT @ArticlesInRolesAndUsers = Count(ArticleID) FROM (
			SELECT na.[ArticleID] from {databaseOwner}[{objectQualifier}EasyDNNNews] AS na
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsArticleUserPermissions] AS aup ON na.ArticleID = aup.ArticleID
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS cat ON na.ArticleID = cat.ArticleID
				INNER JOIN @FiltredByCategories AS fbc ON fbc.CategoryID = cat.CategoryID
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsEventsData] AS ne ON ne.ArticleID = na.ArticleID
				LEFT OUTER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsTagsItems] AS ti ON na.ArticleID = ti.ArticleID
				LEFT OUTER JOIN @FilterTagsTable AS fbt ON ti.TagID = fbt.TagID
				LEFT OUTER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsContentLocalization] AS ncl ON ncl.ArticleID = na.ArticleID 	
			WHERE na.PortalID=@PortalID
				AND ((@EditPermission = 1) OR (((@UserID = -1 AND aup.UserID IS NULL) OR (aup.UserID = @UserID))
					AND aup.Show = 1 AND ((@UserCanApprove = 1) OR (na.Approved=1)) AND (na.Active=1 OR na.UserID=@UserID)
				))
				AND na.HasPermissions = 1
				AND (
					(@DateRange = 0 AND ne.StartDate >= @StartDate) OR
					(@DateRange = 1 AND (ne.StartDate <= @ToDate AND ne.EndDate >= @FromDate))  
					) 
				AND ((@Featured = 1 AND na.Featured = 1) OR (@Featured = 0))
				AND na.PublishDate <= @CurrentDate AND na.ExpireDate >= @CurrentDate
				AND ((@FilterAuthorOrAuthors = 1 AND na.UserID IN (SELECT UserID FROM @TempAuthorsIDList)) OR (@FilterAuthorOrAuthors = 0))
				AND ((@FilterByTags = 1 AND fbt.TagID IS NOT NULL) OR (@FilterByTags = 0))
				AND ((@HideUnlocalizedItems = 1 AND ncl.ArticleID IS NOT NULL AND ncl.LocaleCode = @LocaleCode) OR (@HideUnlocalizedItems = 0))
			GROUP BY na.ArticleID
			UNION
			SELECT na.[ArticleID] from {databaseOwner}[{objectQualifier}EasyDNNNews] AS na
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsArticleRolePermissions] AS arp ON na.ArticleID = arp.ArticleID
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS cat ON na.ArticleID = cat.ArticleID
				INNER JOIN @FiltredByCategories AS fbc ON fbc.CategoryID = cat.CategoryID
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsEventsData] AS ne ON ne.ArticleID = na.ArticleID
				LEFT OUTER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsTagsItems] AS ti ON na.ArticleID = ti.ArticleID
  				LEFT OUTER JOIN @FilterTagsTable AS fbt ON ti.TagID = fbt.TagID
  				LEFT OUTER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsContentLocalization] AS ncl ON ncl.ArticleID = na.ArticleID 	
			WHERE na.PortalID=@PortalID
				AND ((@EditPermission = 1) OR (((@UserCanApprove = 1) OR (na.Approved=1))
					AND (na.Active=1 OR na.UserID=@UserID) AND arp.Show = 1 AND arp.RoleID IN (SELECT [RoleID] FROM @UserInRoles)
				))
				AND na.HasPermissions = 1
				AND (
					(@DateRange = 0 AND ne.StartDate >= @StartDate) OR
					(@DateRange = 1 AND (ne.StartDate <= @ToDate AND ne.EndDate >= @FromDate))  
					) 
				AND ((@Featured = 1 AND na.Featured = 1) OR (@Featured = 0))
				AND na.PublishDate <= @CurrentDate AND na.ExpireDate >= @CurrentDate
				AND ((@FilterAuthorOrAuthors = 1 AND na.UserID IN (SELECT UserID FROM @TempAuthorsIDList)) OR (@FilterAuthorOrAuthors = 0))
				AND ((@FilterByTags = 1 AND fbt.TagID IS NOT NULL) OR (@FilterByTags = 0))
				AND ((@HideUnlocalizedItems = 1 AND ncl.ArticleID IS NOT NULL AND ncl.LocaleCode = @LocaleCode) OR (@HideUnlocalizedItems = 0))
			GROUP BY na.ArticleID
		) AS final
	END
	ELSE
	BEGIN
		SELECT @ArticlesInCategories = Count(ArticleID) FROM (SELECT na.[ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS na
			INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS cat ON na.ArticleID = cat.ArticleID
			INNER JOIN @UserViewCategoriesWithFilter  AS uvcwf ON uvcwf.CategoryID = cat.CategoryID
			INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsEventsData] AS ne ON ne.ArticleID = na.ArticleID
			LEFT OUTER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsTagsItems] AS ti ON na.ArticleID = ti.ArticleID
			LEFT OUTER JOIN @FilterTagsTable AS fbt ON ti.TagID = fbt.TagID
		WHERE na.PortalID=@PortalID
			AND ((@EditPermission = 1) OR ((@UserCanApprove = 1 OR na.Approved=1) AND (na.Active=1 OR na.UserID=@UserID)))
			AND na.HasPermissions = 0
			AND na.HideDefaultLocale = 0
			AND (
				(@DateRange = 0 AND ne.StartDate >= @StartDate) OR
				(@DateRange = 1 AND (ne.StartDate <= @ToDate AND ne.EndDate >= @FromDate))  
				) 
			AND ((@Featured = 1 AND na.Featured = 1) OR (@Featured = 0))
			AND na.PublishDate <= @CurrentDate AND na.ExpireDate >= @CurrentDate
			AND ((@FilterAuthorOrAuthors = 1 AND na.UserID IN (SELECT UserID FROM @TempAuthorsIDList)) OR (@FilterAuthorOrAuthors = 0))
			AND ((@FilterByTags = 1 AND fbt.TagID IS NOT NULL) OR (@FilterByTags = 0))
		GROUP BY na.ArticleID) AS CountTable;
		SELECT @ArticlesInRolesAndUsers = Count(ArticleID) FROM (
			SELECT na.[ArticleID] from {databaseOwner}[{objectQualifier}EasyDNNNews] AS na
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsArticleUserPermissions] AS aup ON na.ArticleID = aup.ArticleID
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS cat ON na.ArticleID = cat.ArticleID
				INNER JOIN @FiltredByCategories AS fbc ON fbc.CategoryID = cat.CategoryID
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsEventsData] AS ne ON ne.ArticleID = na.ArticleID
				LEFT OUTER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsTagsItems] AS ti ON na.ArticleID = ti.ArticleID
				LEFT OUTER JOIN @FilterTagsTable AS fbt ON ti.TagID = fbt.TagID
			WHERE na.PortalID=@PortalID
				AND ((@EditPermission = 1) OR (((@UserID = -1 AND aup.UserID IS NULL) OR (aup.UserID = @UserID))
					AND aup.Show = 1 AND ((@UserCanApprove = 1) OR (na.Approved=1)) AND (na.Active=1 OR na.UserID=@UserID)
				))
				AND na.HasPermissions = 1
				AND na.HideDefaultLocale = 0
				AND (
					(@DateRange = 0 AND ne.StartDate >= @StartDate) OR
					(@DateRange = 1 AND (ne.StartDate <= @ToDate AND ne.EndDate >= @FromDate))  
					) 
				AND ((@Featured = 1 AND na.Featured = 1) OR (@Featured = 0))
				AND na.PublishDate <= @CurrentDate AND na.ExpireDate >= @CurrentDate
				AND ((@FilterAuthorOrAuthors = 1 AND na.UserID IN (SELECT UserID FROM @TempAuthorsIDList)) OR (@FilterAuthorOrAuthors = 0))
				AND ((@FilterByTags = 1 AND fbt.TagID IS NOT NULL) OR (@FilterByTags = 0))
			GROUP BY na.ArticleID
			UNION
			SELECT na.[ArticleID] from {databaseOwner}[{objectQualifier}EasyDNNNews] AS na
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsArticleRolePermissions] AS arp ON na.ArticleID = arp.ArticleID
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS cat ON na.ArticleID = cat.ArticleID
				INNER JOIN @FiltredByCategories AS fbc ON fbc.CategoryID = cat.CategoryID
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsEventsData] AS ne ON ne.ArticleID = na.ArticleID
				LEFT OUTER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsTagsItems] AS ti ON na.ArticleID = ti.ArticleID
				LEFT OUTER JOIN @FilterTagsTable AS fbt ON ti.TagID = fbt.TagID
			WHERE na.PortalID=@PortalID
				AND ((@EditPermission = 1) OR (((@UserCanApprove = 1) OR (na.Approved=1))
					AND (na.Active=1 OR na.UserID=@UserID) AND arp.Show = 1 AND arp.RoleID IN (SELECT [RoleID] FROM @UserInRoles)
				))
				AND na.HasPermissions = 1
				AND na.HideDefaultLocale = 0
				AND (
					(@DateRange = 0 AND ne.StartDate >= @StartDate) OR
					(@DateRange = 1 AND (ne.StartDate <= @ToDate AND ne.EndDate >= @FromDate))  
					) 
				AND ((@Featured = 1 AND na.Featured = 1) OR (@Featured = 0))
				AND na.PublishDate <= @CurrentDate AND na.ExpireDate >= @CurrentDate
				AND ((@FilterAuthorOrAuthors = 1 AND na.UserID IN (SELECT UserID FROM @TempAuthorsIDList)) OR (@FilterAuthorOrAuthors = 0))
				AND ((@FilterByTags = 1 AND fbt.TagID IS NOT NULL) OR (@FilterByTags = 0))
			GROUP BY na.ArticleID
		) AS final
	END
END
ELSE IF @FilterBySocialGroup = 1
BEGIN
	IF @LocaleCode <> ''''
	BEGIN
		SELECT @ArticlesInCategories = Count(ArticleID) FROM (SELECT na.[ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS na
			INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS cat ON na.ArticleID = cat.ArticleID
			INNER JOIN @UserViewCategoriesWithFilter  AS uvcwf ON uvcwf.CategoryID = cat.CategoryID
			INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsEventsData] AS ne ON ne.ArticleID = na.ArticleID
			INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = na.ArticleID
			INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialGroupItems] AS sgi ON sgi.ArticleID = na.ArticleID AND sgi.RoleID = @FilterByDNNGroupID
			INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserID, @FilterByDNNGroupID) AS t ON t.seckey = nss.SecurityKey
			LEFT OUTER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsTagsItems] AS ti ON na.ArticleID = ti.ArticleID
			LEFT OUTER JOIN @FilterTagsTable AS fbt ON ti.TagID = fbt.TagID
			LEFT OUTER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsContentLocalization] AS ncl ON ncl.ArticleID = na.ArticleID 	
		WHERE na.PortalID=@PortalID
			AND ((@EditPermission = 1) OR ((@UserCanApprove = 1 OR na.Approved=1) AND (na.Active=1 OR na.UserID=@UserID)))
			AND na.HasPermissions = 0
			AND (
				(@DateRange = 0 AND ne.StartDate >= @StartDate) OR
				(@DateRange = 1 AND (ne.StartDate <= @ToDate AND ne.EndDate >= @FromDate))  
				) 
			AND ((@Featured = 1 AND na.Featured = 1) OR (@Featured = 0))
			AND na.PublishDate <= @CurrentDate AND na.ExpireDate >= @CurrentDate
			AND ((@FilterAuthorOrAuthors = 1 AND na.UserID = @FilterByAuthor) OR (@FilterAuthorOrAuthors = 0))
			AND ((@FilterByTags = 1 AND fbt.TagID IS NOT NULL) OR (@FilterByTags = 0))
			AND ((@HideUnlocalizedItems = 1 AND ncl.ArticleID IS NOT NULL AND ncl.LocaleCode = @LocaleCode) OR (@HideUnlocalizedItems = 0))
		GROUP BY na.ArticleID) AS CountTable;
		SELECT @ArticlesInRolesAndUsers = Count(ArticleID) FROM (
			SELECT na.[ArticleID] from {databaseOwner}[{objectQualifier}EasyDNNNews] AS na
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsArticleUserPermissions] AS aup ON na.ArticleID = aup.ArticleID
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS cat ON na.ArticleID = cat.ArticleID
				INNER JOIN @FiltredByCategories AS fbc ON fbc.CategoryID = cat.CategoryID
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsEventsData] AS ne ON ne.ArticleID = na.ArticleID
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = na.ArticleID
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialGroupItems] AS sgi ON sgi.ArticleID = na.ArticleID AND sgi.RoleID = @FilterByDNNGroupID
				INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserID, @FilterByDNNGroupID) AS t ON t.seckey = nss.SecurityKey
				LEFT OUTER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsTagsItems] AS ti ON na.ArticleID = ti.ArticleID
				LEFT OUTER JOIN @FilterTagsTable AS fbt ON ti.TagID = fbt.TagID
				LEFT OUTER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsContentLocalization] AS ncl ON ncl.ArticleID = na.ArticleID 	
			WHERE na.PortalID=@PortalID
				AND ((@EditPermission = 1) OR (((@UserID = -1 AND aup.UserID IS NULL) OR (aup.UserID = @UserID))
					AND aup.Show = 1 AND ((@UserCanApprove = 1) OR (na.Approved=1)) AND (na.Active=1 OR na.UserID=@UserID)
				))
				AND na.HasPermissions = 1
				AND (
					(@DateRange = 0 AND ne.StartDate >= @StartDate) OR
					(@DateRange = 1 AND (ne.StartDate <= @ToDate AND ne.EndDate >= @FromDate))  
					) 
				AND ((@Featured = 1 AND na.Featured = 1) OR (@Featured = 0))
				AND na.PublishDate <= @CurrentDate AND na.ExpireDate >= @CurrentDate
				AND ((@FilterAuthorOrAuthors = 1 AND na.UserID = @FilterByAuthor) OR (@FilterAuthorOrAuthors = 0))
				AND ((@FilterByTags = 1 AND fbt.TagID IS NOT NULL) OR (@FilterByTags = 0))
				AND ((@HideUnlocalizedItems = 1 AND ncl.ArticleID IS NOT NULL AND ncl.LocaleCode = @LocaleCode) OR (@HideUnlocalizedItems = 0))
			GROUP BY na.ArticleID
			UNION
			SELECT na.[ArticleID] from {databaseOwner}[{objectQualifier}EasyDNNNews] AS na
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsArticleRolePermissions] AS arp ON na.ArticleID = arp.ArticleID
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS cat ON na.ArticleID = cat.ArticleID
				INNER JOIN @FiltredByCategories AS fbc ON fbc.CategoryID = cat.CategoryID
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsEventsData] AS ne ON ne.ArticleID = na.ArticleID
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = na.ArticleID
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialGroupItems] AS sgi ON sgi.ArticleID = na.ArticleID AND sgi.RoleID = @FilterByDNNGroupID
				INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserID, @FilterByDNNGroupID) AS t ON t.seckey = nss.SecurityKey
				LEFT OUTER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsTagsItems] AS ti ON na.ArticleID = ti.ArticleID
				LEFT OUTER JOIN @FilterTagsTable AS fbt ON ti.TagID = fbt.TagID
				LEFT OUTER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsContentLocalization] AS ncl ON ncl.ArticleID = na.ArticleID 	
			WHERE na.PortalID=@PortalID
				AND ((@EditPermission = 1) OR (((@UserCanApprove = 1) OR (na.Approved=1))
					AND (na.Active=1 OR na.UserID=@UserID) AND arp.Show = 1 AND arp.RoleID IN (SELECT [RoleID] FROM @UserInRoles)
				))
				AND na.HasPermissions = 1
				AND (
					(@DateRange = 0 AND ne.StartDate >= @StartDate) OR
					(@DateRange = 1 AND (ne.StartDate <= @ToDate AND ne.EndDate >= @FromDate))  
					) 
				AND((@Featured = 1 AND na.Featured = 1) OR (@Featured = 0))
				AND na.PublishDate <= @CurrentDate AND na.ExpireDate >= @CurrentDate
				AND((@FilterAuthorOrAuthors = 1 AND na.UserID = @FilterByAuthor) OR (@FilterAuthorOrAuthors = 0))
				AND ((@FilterByTags = 1 AND fbt.TagID IS NOT NULL) OR (@FilterByTags = 0))
				AND ((@HideUnlocalizedItems = 1 AND ncl.ArticleID IS NOT NULL AND ncl.LocaleCode = @LocaleCode) OR (@HideUnlocalizedItems = 0))
			GROUP BY na.ArticleID
		) AS final
	END
	ELSE
	BEGIN
		SELECT @ArticlesInCategories = Count(ArticleID) FROM (SELECT na.[ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS na
			INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS cat ON na.ArticleID = cat.ArticleID
			INNER JOIN @UserViewCategoriesWithFilter  AS uvcwf ON uvcwf.CategoryID = cat.CategoryID
			INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsEventsData] AS ne ON ne.ArticleID = na.ArticleID
			INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = na.ArticleID
			INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialGroupItems] AS sgi ON sgi.ArticleID = na.ArticleID AND sgi.RoleID = @FilterByDNNGroupID
			INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserID, @FilterByDNNGroupID) AS t ON t.seckey = nss.SecurityKey
			LEFT OUTER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsTagsItems] AS ti ON na.ArticleID = ti.ArticleID
			LEFT OUTER JOIN @FilterTagsTable AS fbt ON ti.TagID = fbt.TagID
		WHERE na.PortalID=@PortalID
			AND ((@EditPermission = 1) OR ((@UserCanApprove = 1 OR na.Approved=1)AND (na.Active=1 OR na.UserID=@UserID)))
			AND na.HasPermissions = 0
			AND na.HideDefaultLocale = 0
			AND (
				(@DateRange = 0 AND ne.StartDate >= @StartDate) OR
				(@DateRange = 1 AND (ne.StartDate <= @ToDate AND ne.EndDate >= @FromDate))  
				) 
			AND ((@Featured = 1 AND na.Featured = 1) OR (@Featured = 0))
			AND na.PublishDate <= @CurrentDate AND na.ExpireDate >= @CurrentDate
			AND ((@FilterAuthorOrAuthors = 1 AND na.UserID = @FilterByAuthor) OR (@FilterAuthorOrAuthors = 0))
			AND ((@FilterByTags = 1 AND fbt.TagID IS NOT NULL) OR (@FilterByTags = 0))
		GROUP BY na.ArticleID) AS CountTable;
		SELECT @ArticlesInRolesAndUsers = Count(ArticleID) FROM (
			SELECT na.[ArticleID] from {databaseOwner}[{objectQualifier}EasyDNNNews] AS na
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsArticleUserPermissions] AS aup ON na.ArticleID = aup.ArticleID
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS cat ON na.ArticleID = cat.ArticleID
				INNER JOIN @FiltredByCategories AS fbc ON fbc.CategoryID = cat.CategoryID
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsEventsData] AS ne ON ne.ArticleID = na.ArticleID
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = na.ArticleID
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialGroupItems] AS sgi ON sgi.ArticleID = na.ArticleID AND sgi.RoleID = @FilterByDNNGroupID
				INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserID, @FilterByDNNGroupID) AS t ON t.seckey = nss.SecurityKey
				LEFT OUTER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsTagsItems] AS ti ON na.ArticleID = ti.ArticleID
				LEFT OUTER JOIN @FilterTagsTable AS fbt ON ti.TagID = fbt.TagID
			WHERE na.PortalID=@PortalID
				AND ((@EditPermission = 1) OR (((@UserID = -1 AND aup.UserID IS NULL) OR (aup.UserID = @UserID))
					AND aup.Show = 1 AND ((@UserCanApprove = 1) OR (na.Approved=1)) AND (na.Active=1 OR na.UserID=@UserID)
				))
				AND na.HasPermissions = 1
				AND na.HideDefaultLocale = 0
				AND (
					(@DateRange = 0 AND ne.StartDate >= @StartDate) OR
					(@DateRange = 1 AND (ne.StartDate <= @ToDate AND ne.EndDate >= @FromDate))  
					) 
				AND ((@Featured = 1 AND na.Featured = 1) OR (@Featured = 0))
				AND na.PublishDate <= @CurrentDate AND na.ExpireDate >= @CurrentDate
				AND ((@FilterAuthorOrAuthors = 1 AND na.UserID = @FilterByAuthor) OR (@FilterAuthorOrAuthors = 0))
				AND ((@FilterByTags = 1 AND fbt.TagID IS NOT NULL) OR (@FilterByTags = 0))
			GROUP BY na.ArticleID
			UNION
			SELECT na.[ArticleID] from {databaseOwner}[{objectQualifier}EasyDNNNews] AS na
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsArticleRolePermissions] AS arp ON na.ArticleID = arp.ArticleID
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS cat ON na.ArticleID = cat.ArticleID
				INNER JOIN @FiltredByCategories AS fbc ON fbc.CategoryID = cat.CategoryID
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsEventsData] AS ne ON ne.ArticleID = na.ArticleID
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = na.ArticleID
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialGroupItems] AS sgi ON sgi.ArticleID = na.ArticleID AND sgi.RoleID = @FilterByDNNGroupID
				INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserID, @FilterByDNNGroupID) AS t ON t.seckey = nss.SecurityKey
				LEFT OUTER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsTagsItems] AS ti ON na.ArticleID = ti.ArticleID
				LEFT OUTER JOIN @FilterTagsTable AS fbt ON ti.TagID = fbt.TagID
			WHERE na.PortalID=@PortalID
				AND ((@EditPermission = 1) OR (((@UserCanApprove = 1) OR (na.Approved=1))
					AND (na.Active=1 OR na.UserID=@UserID) AND arp.Show = 1 AND arp.RoleID IN (SELECT [RoleID] FROM @UserInRoles)
				))
				AND na.HasPermissions = 1
				AND na.HideDefaultLocale = 0
				AND (
					(@DateRange = 0 AND ne.StartDate >= @StartDate) OR
					(@DateRange = 1 AND (ne.StartDate <= @ToDate AND ne.EndDate >= @FromDate))  
					) 
			   AND((@Featured = 1 AND na.Featured = 1) OR (@Featured = 0))
			   AND na.PublishDate <= @CurrentDate AND na.ExpireDate >= @CurrentDate
			   AND((@FilterAuthorOrAuthors = 1 AND na.UserID = @FilterByAuthor) OR (@FilterAuthorOrAuthors = 0))
			   AND ((@FilterByTags = 1 AND fbt.TagID IS NOT NULL) OR (@FilterByTags = 0))
			GROUP BY na.ArticleID
		) AS final
	END
END
ELSE IF @FilterByDNNUserID <> 0
BEGIN
	IF @LocaleCode <> ''''
	BEGIN
		SELECT @ArticlesInCategories = Count(ArticleID) FROM (SELECT na.[ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS na
			INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS cat ON na.ArticleID = cat.ArticleID
			INNER JOIN @UserViewCategoriesWithFilter  AS uvcwf ON uvcwf.CategoryID = cat.CategoryID
			INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsEventsData] AS ne ON ne.ArticleID = na.ArticleID
			INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = na.ArticleID
			INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserID, @FilterByDNNGroupID) AS t ON t.seckey = nss.SecurityKey
			LEFT OUTER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsTagsItems] AS ti ON na.ArticleID = ti.ArticleID
  			LEFT OUTER JOIN @FilterTagsTable AS fbt ON ti.TagID = fbt.TagID
  			LEFT OUTER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsContentLocalization] AS ncl ON ncl.ArticleID = na.ArticleID 	
		WHERE na.PortalID=@PortalID
			AND ((@EditPermission = 1) OR ((@UserCanApprove = 1 OR na.Approved=1) AND (na.Active=1 OR na.UserID=@UserID)))
			AND na.HasPermissions = 0
			AND (
				(@DateRange = 0 AND ne.StartDate >= @StartDate) OR
				(@DateRange = 1 AND (ne.StartDate <= @ToDate AND ne.EndDate >= @FromDate))  
				) 
			AND((@Featured = 1 AND na.Featured = 1) OR (@Featured = 0))
			AND na.PublishDate <= @CurrentDate AND na.ExpireDate >= @CurrentDate
			AND na.UserID = @FilterByDNNUserID
			AND ((@FilterByTags = 1 AND fbt.TagID IS NOT NULL) OR (@FilterByTags = 0))
			AND ((@HideUnlocalizedItems = 1 AND ncl.ArticleID IS NOT NULL AND ncl.LocaleCode = @LocaleCode) OR (@HideUnlocalizedItems = 0))
		GROUP BY na.ArticleID) AS CountTable;
		SELECT @ArticlesInRolesAndUsers = Count(ArticleID) FROM (
			SELECT na.[ArticleID] from {databaseOwner}[{objectQualifier}EasyDNNNews] AS na
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsArticleUserPermissions] AS aup ON na.ArticleID = aup.ArticleID
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS cat ON na.ArticleID = cat.ArticleID
				INNER JOIN @FiltredByCategories AS fbc ON fbc.CategoryID = cat.CategoryID
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsEventsData] AS ne ON ne.ArticleID = na.ArticleID
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = na.ArticleID
				INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserID, @FilterByDNNGroupID) AS t ON t.seckey = nss.SecurityKey
				LEFT OUTER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsTagsItems] AS ti ON na.ArticleID = ti.ArticleID
				LEFT OUTER JOIN @FilterTagsTable AS fbt ON ti.TagID = fbt.TagID
				LEFT OUTER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsContentLocalization] AS ncl ON ncl.ArticleID = na.ArticleID 	
			WHERE na.PortalID=@PortalID
				AND ((@EditPermission = 1) OR (((@UserID = -1 AND aup.UserID IS NULL) OR (aup.UserID = @UserID))
					AND aup.Show = 1 AND ((@UserCanApprove = 1) OR (na.Approved=1)) AND (na.Active=1 OR na.UserID=@UserID)
				))
				AND na.HasPermissions = 1
			    AND (
					(@DateRange = 0 AND ne.StartDate >= @StartDate) OR
					(@DateRange = 1 AND (ne.StartDate <= @ToDate AND ne.EndDate >= @FromDate))  
					) 
			    AND ((@Featured = 1 AND na.Featured = 1) OR (@Featured = 0))
			    AND na.PublishDate <= @CurrentDate AND na.ExpireDate >= @CurrentDate
			    AND na.UserID = @FilterByDNNUserID
				AND ((@FilterByTags = 1 AND fbt.TagID IS NOT NULL) OR (@FilterByTags = 0))
				AND ((@HideUnlocalizedItems = 1 AND ncl.ArticleID IS NOT NULL AND ncl.LocaleCode = @LocaleCode) OR (@HideUnlocalizedItems = 0))
			GROUP BY na.ArticleID
			UNION
			SELECT na.[ArticleID] from {databaseOwner}[{objectQualifier}EasyDNNNews] AS na
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsArticleRolePermissions] AS arp ON na.ArticleID = arp.ArticleID
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS cat ON na.ArticleID = cat.ArticleID
				INNER JOIN @FiltredByCategories AS fbc ON fbc.CategoryID = cat.CategoryID
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsEventsData] AS ne ON ne.ArticleID = na.ArticleID
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = na.ArticleID
				INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserID, @FilterByDNNGroupID) AS t ON t.seckey = nss.SecurityKey
				LEFT OUTER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsTagsItems] AS ti ON na.ArticleID = ti.ArticleID
				LEFT OUTER JOIN @FilterTagsTable AS fbt ON ti.TagID = fbt.TagID
				LEFT OUTER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsContentLocalization] AS ncl ON ncl.ArticleID = na.ArticleID 	
			WHERE na.PortalID=@PortalID
				AND ((@EditPermission = 1) OR (((@UserCanApprove = 1) OR (na.Approved=1))
					AND (na.Active=1 OR na.UserID=@UserID) AND arp.Show = 1 AND arp.RoleID IN (SELECT [RoleID] FROM @UserInRoles)
				))
				AND na.HasPermissions = 1
				AND (
					(@DateRange = 0 AND ne.StartDate >= @StartDate) OR
					(@DateRange = 1 AND (ne.StartDate <= @ToDate AND ne.EndDate >= @FromDate))  
					) 
				AND ((@Featured = 1 AND na.Featured = 1) OR (@Featured = 0))
				AND na.PublishDate <= @CurrentDate AND na.ExpireDate >= @CurrentDate
				AND na.UserID = @FilterByDNNUserID
				AND ((@FilterByTags = 1 AND fbt.TagID IS NOT NULL) OR (@FilterByTags = 0))
				AND ((@HideUnlocalizedItems = 1 AND ncl.ArticleID IS NOT NULL AND ncl.LocaleCode = @LocaleCode) OR (@HideUnlocalizedItems = 0))
			GROUP BY na.ArticleID
		) AS final
	END
	ELSE
	BEGIN
		SELECT @ArticlesInCategories = Count(ArticleID) FROM (SELECT na.[ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS na
			INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS cat ON na.ArticleID = cat.ArticleID
			INNER JOIN @UserViewCategoriesWithFilter  AS uvcwf ON uvcwf.CategoryID = cat.CategoryID
			INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsEventsData] AS ne ON ne.ArticleID = na.ArticleID
			INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = na.ArticleID
			INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserID, @FilterByDNNGroupID) AS t ON t.seckey = nss.SecurityKey
			LEFT OUTER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsTagsItems] AS ti ON na.ArticleID = ti.ArticleID
			LEFT OUTER JOIN @FilterTagsTable AS fbt ON ti.TagID = fbt.TagID
		WHERE na.PortalID=@PortalID
			AND ((@EditPermission = 1) OR ((@UserCanApprove = 1 OR na.Approved=1) AND (na.Active=1 OR na.UserID=@UserID)))
			AND na.HasPermissions = 0
			AND na.HideDefaultLocale = 0
			AND (
				(@DateRange = 0 AND ne.StartDate >= @StartDate) OR
				(@DateRange = 1 AND (ne.StartDate <= @ToDate AND ne.EndDate >= @FromDate))  
				) 
			AND((@Featured = 1 AND na.Featured = 1) OR (@Featured = 0))
			AND na.PublishDate <= @CurrentDate AND na.ExpireDate >= @CurrentDate
			AND na.UserID = @FilterByDNNUserID
			AND ((@FilterByTags = 1 AND fbt.TagID IS NOT NULL) OR (@FilterByTags = 0))
		GROUP BY na.ArticleID) AS CountTable;
		SELECT @ArticlesInRolesAndUsers = Count(ArticleID) FROM (
			SELECT na.[ArticleID] from {databaseOwner}[{objectQualifier}EasyDNNNews] AS na
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsArticleUserPermissions] AS aup ON na.ArticleID = aup.ArticleID
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS cat ON na.ArticleID = cat.ArticleID
				INNER JOIN @FiltredByCategories AS fbc ON fbc.CategoryID = cat.CategoryID
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsEventsData] AS ne ON ne.ArticleID = na.ArticleID
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = na.ArticleID
				INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserID, @FilterByDNNGroupID) AS t ON t.seckey = nss.SecurityKey
				LEFT OUTER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsTagsItems] AS ti ON na.ArticleID = ti.ArticleID
				LEFT OUTER JOIN @FilterTagsTable AS fbt ON ti.TagID = fbt.TagID
			WHERE na.PortalID=@PortalID
				AND ((@EditPermission = 1) OR (((@UserID = -1 AND aup.UserID IS NULL) OR (aup.UserID = @UserID))
					AND aup.Show = 1 AND ((@UserCanApprove = 1) OR (na.Approved=1)) AND (na.Active=1 OR na.UserID=@UserID)
				))
				AND na.HasPermissions = 1
				AND na.HideDefaultLocale = 0
			    AND (
					(@DateRange = 0 AND ne.StartDate >= @StartDate) OR
					(@DateRange = 1 AND (ne.StartDate <= @ToDate AND ne.EndDate >= @FromDate))  
					) 
			    AND((@Featured = 1 AND na.Featured = 1) OR (@Featured = 0))
			    AND na.PublishDate <= @CurrentDate AND na.ExpireDate >= @CurrentDate
			    AND na.UserID = @FilterByDNNUserID
				AND ((@FilterByTags = 1 AND fbt.TagID IS NOT NULL) OR (@FilterByTags = 0))
			GROUP BY na.ArticleID
			UNION
			SELECT na.[ArticleID] from {databaseOwner}[{objectQualifier}EasyDNNNews] AS na
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsArticleRolePermissions] AS arp ON na.ArticleID = arp.ArticleID
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS cat ON na.ArticleID = cat.ArticleID
				INNER JOIN @FiltredByCategories AS fbc ON fbc.CategoryID = cat.CategoryID
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsEventsData] AS ne ON ne.ArticleID = na.ArticleID
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = na.ArticleID
				INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserID, @FilterByDNNGroupID) AS t ON t.seckey = nss.SecurityKey
				LEFT OUTER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsTagsItems] AS ti ON na.ArticleID = ti.ArticleID
				LEFT OUTER JOIN @FilterTagsTable AS fbt ON ti.TagID = fbt.TagID
			WHERE na.PortalID=@PortalID
				AND ((@EditPermission = 1) OR (((@UserCanApprove = 1) OR (na.Approved=1))
					AND (na.Active=1 OR na.UserID=@UserID) AND arp.Show = 1 AND arp.RoleID IN (SELECT [RoleID] FROM @UserInRoles)
				))
				AND na.HasPermissions = 1
				AND na.HideDefaultLocale = 0
			    AND (
					(@DateRange = 0 AND ne.StartDate >= @StartDate) OR
					(@DateRange = 1 AND (ne.StartDate <= @ToDate AND ne.EndDate >= @FromDate))  
					) 
			    AND((@Featured = 1 AND na.Featured = 1) OR (@Featured = 0))
			    AND na.PublishDate <= @CurrentDate AND na.ExpireDate >= @CurrentDate
			    AND na.UserID = @FilterByDNNUserID
			    AND ((@FilterByTags = 1 AND fbt.TagID IS NOT NULL) OR (@FilterByTags = 0))
			GROUP BY na.ArticleID
		) AS final
	END
END
SELECT @ArticlesInRolesAndUsers + @ArticlesInCategories
     
     ' 
END
GO
/****** Object:  StoredProcedure {databaseOwner}[{objectQualifier}EasyDNNNewsGetItemsCountForPageingDateWithEventsRange]    Script Date: 06/24/2013 16:39:07 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'{databaseOwner}[{objectQualifier}EasyDNNNewsGetItemsCountForPageingDateWithEventsRange]') AND type in (N'P', N'PC'))
BEGIN
EXEC dbo.sp_executesql @statement = N'CREATE PROCEDURE {databaseOwner}[{objectQualifier}EasyDNNNewsGetItemsCountForPageingDateWithEventsRange]
	@ViewType tinyint = 0, -- 0 - View, 1 - Editor
	@PortalID int, -- current Portal
	@ModuleID int, -- current Module, portal sharing isto sadrzi dobre kategorije, auto add i setingsi su snimljeni kod tog modula
	@UserID int,
	@CurrentDate Datetime, -- = GetUTCDate,
	@OrderBy nvarchar(20) = ''PublishDate DESC'',
	@ItemsFrom int = 1,
	@ItemsTo int = 5,
	@FromDate DateTime = ''2012-01-01 00:00:00'', -- ovo ne treba za only events
	@ToDate DateTime = ''2012-01-01 00:00:00'', -- ovo ne treba za only events
	/* od tud ide filter */
	@Featured bit = 0,
	@ShowAllAuthors bit = 1, -- gleda se filtriranje autora po modulu ili portalu
	@FilterByAuthor int = 0,
	@FilterByGroupID int = 0,
--	@FilterByTags bit = 0,
	/*@FilterByArticles bit = 0,*/ -- ovoga nema tu !!
	@FilterByDNNUserID int = 0, -- filter by some UserID / not current user ID
	@FilterByDNNGroupID int = 0, -- filter by DNNGroup/RoleID / not profile GroupID
	@EditOnlyAsOwner bit = 0, -- news settings
	@UserCanApprove bit = 0, -- news settings
	@LocaleCode nvarchar(20) = '''',
	@IsSocialInstance bit = 0,	
	--@FirstOrderBy nvarchar(20) = '''',--''Featured DESC'', -- featured articles on top	
	@Perm_ViewAllCategores bit = 0, -- permission settings View all categories
	@Perm_EditAllCategores bit = 0, -- permission settings Edit all categories
	@AdminOrSuperUser bit = 0,
	@CategoryFilterType tinyint = 1, -- 0 All categories, 1 - SELECTion, 2 - AutoAdd
	@PermissionSettingsSource bit = 0, -- 0 portal, 1 module
	@FillterSettingsSource bit = 0, -- 0 portal, 1 module
	@OuterModuleID int = 0,
	@HideUnlocalizedItems bit = 0
AS
SET NOCOUNT ON;
DECLARE @EditPermission tinyint;
SET @EditPermission = 0;

DECLARE @UserInRoles TABLE (RoleID int NOT NULL PRIMARY KEY);
INSERT INTO @UserInRoles SELECT DISTINCT ur.[RoleID] FROM {databaseOwner}[{objectQualifier}UserRoles] AS ur INNER JOIN {databaseOwner}[{objectQualifier}Roles] AS r ON ur.RoleID = r.RoleID WHERE ur.UserID = @UserID AND r.PortalID = @PortalID AND (ur.ExpiryDate IS NULL OR ur.ExpiryDate > GETUTCDATE()) AND (ur.EffectiveDate IS NULL OR ur.EffectiveDate < GETUTCDATE());

DECLARE @UserViewCategories TABLE (CategoryID int NOT NULL PRIMARY KEY); -- all categories which user can see based on permissions
DECLARE @UserEditCategories TABLE (CategoryID int NOT NULL PRIMARY KEY); -- all categories which user can edit based on permissions
DECLARE @UserViewCategoriesWithFilter TABLE (CategoryID int NOT NULL PRIMARY KEY); -- all categories which user can see based on permissions and Module filter
DECLARE @FiltredByCategories TABLE (CategoryID int NOT NULL PRIMARY KEY); -- all categories that are filtred by module or portal

IF @AdminOrSuperUser = 1 OR @Perm_ViewAllCategores = 1
BEGIN
	INSERT INTO @UserViewCategories SELECT [CategoryID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryList] WHERE PortalID = @PortalID;
END
ELSE IF @UserID = -1
BEGIN	
	IF @PermissionSettingsSource = 1 -- by portal
	BEGIN
		INSERT INTO @UserViewCategories
		SELECT rpsc.[CategoryID] FROM  {databaseOwner}[{objectQualifier}EasyDNNNewsRolePremissionsShowCategories] AS rpsc 
		INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsRolePremissionSettings] AS rps ON rps.PremissionSettingsID = rpsc.PremissionSettingsID
		WHERE rps.PortalID = @PortalID  AND rps.ModuleID IS NULL AND rps.RoleID IS NULL;
	END
	ELSE -- by module
	BEGIN
	INSERT INTO @UserViewCategories
		SELECT rpsc.[CategoryID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsRolePremissionsShowCategories] AS rpsc
		INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsRolePremissionSettings] AS rps ON rps.PremissionSettingsID = rpsc.PremissionSettingsID
		WHERE rps.PortalID = @PortalID AND rps.ModuleID = @ModuleID AND rps.RoleID IS NULL;
	END
END
ELSE -- registrirani korisnik
BEGIN
	IF @PermissionSettingsSource = 1 -- by portal
	BEGIN
		INSERT INTO @UserViewCategories
		SELECT rpsc.[CategoryID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsRolePremissionsShowCategories] AS rpsc
		INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsRolePremissionSettings] AS rps ON rps.PremissionSettingsID = rpsc.PremissionSettingsID
		INNER JOIN @UserInRoles AS uir ON rps.RoleID = uir.RoleID
		WHERE rps.PortalID = @PortalID AND rps.ModuleID IS NULL GROUP BY rpsc.[CategoryID]
		UNION
		SELECT upsc.[CategoryID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsUserPremissionsShowCategories] AS upsc
		INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsUserPremissionSettings] AS ups ON ups.PremissionSettingsID = upsc.PremissionSettingsID
		WHERE ups.UserID = @UserID AND ups.PortalID = @PortalID AND ups.ModuleID IS NULL GROUP BY upsc.[CategoryID];
	END
	ELSE -- by module
	BEGIN
		INSERT INTO @UserViewCategories
		SELECT rpsc.[CategoryID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsRolePremissionsShowCategories] AS rpsc
		INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsRolePremissionSettings] AS rps ON rps.PremissionSettingsID = rpsc.PremissionSettingsID
		INNER JOIN @UserInRoles AS uir ON rps.RoleID = uir.RoleID
		WHERE rps.PortalID = @PortalID AND rps.ModuleID = @ModuleID GROUP BY rpsc.[CategoryID]
		UNION
		SELECT upsc.[CategoryID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsUserPremissionsShowCategories] AS upsc
		INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsUserPremissionSettings] AS ups ON ups.PremissionSettingsID = upsc.PremissionSettingsID
		WHERE ups.UserID = @UserID AND ups.PortalID = @PortalID AND ups.ModuleID = @ModuleID GROUP BY upsc.[CategoryID];
	END
END

IF @OuterModuleID <> 0
BEGIN
	IF @CategoryFilterType = 0 -- 0 All categories
	BEGIN
		INSERT INTO @UserViewCategoriesWithFilter SELECT [CategoryID] FROM @UserViewCategories;
		INSERT INTO @FiltredByCategories SELECT [CategoryID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryList] WHERE PortalID = @PortalID;
	END
	ELSE IF @CategoryFilterType = 1 -- 1 - SELECTion
	BEGIN
		INSERT INTO @UserViewCategoriesWithFilter 
		SELECT cl.[CategoryID] FROM @UserViewCategories AS cl
		INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsModuleCategoryItems] AS mci ON mci.CategoryID = cl.CategoryID AND mci.ModuleID = @OuterModuleID
			
		INSERT INTO @FiltredByCategories SELECT [CategoryID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsModuleCategoryItems] WHERE ModuleID = @OuterModuleID;
	END
	ELSE IF @CategoryFilterType = 2 -- 2 - AutoAdd
	BEGIN
		WITH hierarchy AS(
			SELECT [CategoryID], [ParentCategory]
			FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryList] AS cl
			WHERE (cl.ParentCategory IN (SELECT [CategoryID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsModuleCategoryItems] WHERE ModuleID = @OuterModuleID) OR cl.CategoryID IN (SELECT [CategoryID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsModuleCategoryItems] WHERE ModuleID = @OuterModuleID)) AND PortalID = @PortalID
			UNION ALL
			SELECT c.[CategoryID], c.[ParentCategory]
			FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryList] AS c INNER JOIN hierarchy AS p ON c.ParentCategory = p.CategoryID WHERE c.PortalID = @PortalID
			)
		INSERT INTO @FiltredByCategories SELECT DISTINCT CategoryID FROM hierarchy;	
		INSERT INTO @UserViewCategoriesWithFilter SELECT uvc.CategoryID FROM @FiltredByCategories AS nfc INNER JOIN @UserViewCategories AS uvc ON uvc.CategoryID = nfc.CategoryID;
	END
END
ELSE
BEGIN
	IF @CategoryFilterType = 0 -- 0 All categories
	BEGIN
		INSERT INTO @UserViewCategoriesWithFilter SELECT [CategoryID] FROM @UserViewCategories;
		INSERT INTO @FiltredByCategories SELECT [CategoryID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryList] WHERE PortalID = @PortalID;
	END
	ELSE IF @CategoryFilterType = 1 -- 1 - SELECTion
	BEGIN
		IF @FillterSettingsSource = 1 -- portal
		BEGIN
			INSERT INTO @UserViewCategoriesWithFilter 
			SELECT cl.[CategoryID] FROM @UserViewCategories AS cl
			INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsPortalCategoryItems] AS pci ON pci.CategoryID = cl.CategoryID AND pci.PortalID = @PortalID
			
			INSERT INTO @FiltredByCategories SELECT [CategoryID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsPortalCategoryItems] WHERE PortalID = @PortalID;
		END
		ELSE -- module
		BEGIN
			INSERT INTO @UserViewCategoriesWithFilter 
			SELECT cl.[CategoryID] FROM @UserViewCategories AS cl
			INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsModuleCategoryItems] AS mci ON mci.CategoryID = cl.CategoryID AND mci.ModuleID = @ModuleID
			
			INSERT INTO @FiltredByCategories SELECT [CategoryID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsModuleCategoryItems] WHERE ModuleID = @ModuleID;
		END
	END
	ELSE IF @CategoryFilterType = 2 -- 2 - AutoAdd
	BEGIN
		IF @FillterSettingsSource = 1 -- portal
		BEGIN
			WITH hierarchy AS(
				SELECT [CategoryID], [ParentCategory]
				FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryList] AS cl
				WHERE (cl.ParentCategory IN (SELECT [CategoryID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsPortalCategoryItems] WHERE PortalID = @PortalID) OR cl.CategoryID IN (SELECT [CategoryID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsPortalCategoryItems] WHERE PortalID = @PortalID)) AND PortalID = @PortalID
				UNION ALL
				SELECT c.[CategoryID], c.[ParentCategory]
				FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryList] AS c INNER JOIN hierarchy AS p ON c.ParentCategory = p.CategoryID WHERE c.PortalID = @PortalID
				)
			INSERT INTO @FiltredByCategories SELECT DISTINCT CategoryID FROM hierarchy;	
			INSERT INTO @UserViewCategoriesWithFilter SELECT uvc.CategoryID FROM @FiltredByCategories AS nfc INNER JOIN @UserViewCategories AS uvc ON uvc.CategoryID = nfc.CategoryID;			
		END
		ELSE -- module
		BEGIN
			WITH hierarchy AS(
				SELECT [CategoryID], [ParentCategory]
				FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryList] AS cl
				WHERE (cl.ParentCategory IN (SELECT [CategoryID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsModuleCategoryItems] WHERE ModuleID = @ModuleID) OR cl.CategoryID IN (SELECT [CategoryID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsModuleCategoryItems] WHERE ModuleID = @ModuleID)) AND PortalID = @PortalID
				UNION ALL
				SELECT c.[CategoryID], c.[ParentCategory]
				FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryList] AS c INNER JOIN hierarchy AS p ON c.ParentCategory = p.CategoryID WHERE c.PortalID = @PortalID
				)
			INSERT INTO @FiltredByCategories SELECT DISTINCT CategoryID FROM hierarchy;	
			INSERT INTO @UserViewCategoriesWithFilter SELECT uvc.CategoryID FROM @FiltredByCategories AS nfc INNER JOIN @UserViewCategories AS uvc ON uvc.CategoryID = nfc.CategoryID;
		END
	END
END

DECLARE @FilterBySocialGroup bit;
SET @FilterBySocialGroup = 0;
DECLARE @FilterAuthorOrAuthors bit;
SET @FilterAuthorOrAuthors = 0;

DECLARE @TempAuthorsIDList TABLE (UserID int NOT NULL PRIMARY KEY);
IF @IsSocialInstance = 1
	BEGIN
		IF @FilterByDNNGroupID <> 0
		BEGIN	
			SET @FilterBySocialGroup = 1;
			IF @FilterByAuthor <> 0
			BEGIN
				SET @FilterAuthorOrAuthors = 1;
				SELECT @FilterByAuthor = UserID FROM {databaseOwner}[{objectQualifier}EasyDNNNewsAuthorProfile] WHERE [AuthorProfileID] = @FilterByAuthor;
			END
		END
	END
ELSE
BEGIN
-- ovaj dio odnosi se na filtriranje autora
	IF @OuterModuleID <> 0 AND @ShowAllAuthors = 0 -- filter iz other modula
	BEGIN
		SET @FilterAuthorOrAuthors = 1;
		INSERT INTO @TempAuthorsIDList
			SELECT [UserID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsModuleAuthorsItems] AS mai WHERE mai.ModuleID = @OuterModuleID
			UNION 
			SELECT [UserID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsAuthorProfile] AS ap 
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsAutorGroupItems] AS agi ON ap.AuthorProfileID = agi.AuthorProfileID
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsModuleGroupItems] AS mgi ON mgi.GroupID = agi.GroupID
			WHERE mgi.ModuleID = @OuterModuleID
	END
	ELSE
	BEGIN
		IF @FilterByAuthor = 0 AND @FilterByGroupID = 0 AND @ShowAllAuthors = 0 -- filter glavnog newsa
		BEGIN
			SET @FilterAuthorOrAuthors = 1;
			IF @FillterSettingsSource = 1 -- by portal
			BEGIN
				INSERT INTO @TempAuthorsIDList
				SELECT [UserID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsPortalAuthorsItems] AS pai WHERE pai.PortalID = @PortalID
				UNION 
				SELECT [UserID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsAuthorProfile] AS ap 
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsAutorGroupItems] AS agi ON ap.AuthorProfileID = agi.AuthorProfileID
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsPortalGroupItems] AS pgi ON pgi.GroupID = agi.GroupID
					WHERE pgi.PortalID = @PortalID
			END
			ELSE -- by modul
			BEGIN
				INSERT INTO @TempAuthorsIDList
				SELECT [UserID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsModuleAuthorsItems] AS mai WHERE mai.ModuleID = @ModuleID
				UNION 
				SELECT [UserID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsAuthorProfile] AS ap 
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsAutorGroupItems] AS agi ON ap.AuthorProfileID = agi.AuthorProfileID
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsModuleGroupItems] AS mgi ON mgi.GroupID = agi.GroupID
					WHERE mgi.ModuleID = @ModuleID
			END
		END
		ELSE IF @FilterByAuthor <> 0
		BEGIN
			SET @FilterAuthorOrAuthors = 1;
			INSERT INTO @TempAuthorsIDList SELECT [UserID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsAuthorProfile] WHERE [AuthorProfileID] = @FilterByAuthor;
		END
		ELSE IF @FilterByGroupID <> 0
		BEGIN
			SET @FilterAuthorOrAuthors = 1;
			INSERT INTO @TempAuthorsIDList
			SELECT [UserID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsAuthorProfile] AS ap 
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsAutorGroupItems] AS agi ON ap.AuthorProfileID = agi.AuthorProfileID	
				WHERE agi.GroupID = @FilterByGroupID
		END
	END
END

DECLARE @ArticlesInCategories int;
SET @ArticlesInCategories = 0;
DECLARE @ArticlesInRolesAndUsers int;
SET @ArticlesInRolesAndUsers = 0;

IF @IsSocialInstance = 0
BEGIN
	IF @LocaleCode <> ''''
	BEGIN
		SELECT @ArticlesInCategories = Count(CountTable.ArticleID) FROM (
			SELECT na.[ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS na
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS cat ON na.ArticleID = cat.ArticleID
				INNER JOIN @UserViewCategoriesWithFilter  AS uvcwf ON uvcwf.CategoryID = cat.CategoryID
				LEFT OUTER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsContentLocalization] AS ncl ON ncl.ArticleID = na.ArticleID
			WHERE na.PortalID=@PortalID
				AND ((@EditPermission = 1) OR ((@UserCanApprove = 1 OR na.Approved=1) AND (na.Active=1 OR na.UserID=@UserID)))
				AND na.HasPermissions = 0
				AND ((@Featured = 1 AND na.Featured = 1) OR (@Featured = 0))
				AND PublishDate >= @FromDate AND PublishDate <= @ToDate AND ExpireDate >= @CurrentDate
				AND ((@FilterAuthorOrAuthors = 1 AND na.UserID IN (SELECT UserID FROM @TempAuthorsIDList)) OR (@FilterAuthorOrAuthors = 0))
				AND ((@HideUnlocalizedItems = 1 AND ncl.ArticleID IS NOT NULL AND ncl.LocaleCode = @LocaleCode) OR (@HideUnlocalizedItems = 0))
			GROUP BY na.ArticleID
			UNION
			SELECT na.[ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS na
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS cat ON na.ArticleID = cat.ArticleID
				INNER JOIN @UserViewCategoriesWithFilter  AS uvcwf ON uvcwf.CategoryID = cat.CategoryID
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsEventsData] AS ne on na.ArticleID = ne.ArticleID
				LEFT OUTER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsContentLocalization] AS ncl ON ncl.ArticleID = na.ArticleID
			WHERE na.PortalID=@PortalID
				AND ((@EditPermission = 1) OR ((@UserCanApprove = 1 OR na.Approved=1) AND (na.Active=1 OR na.UserID=@UserID)))
				AND na.HasPermissions = 0
				AND ne.StartDate <= @ToDate AND ne.EndDate >= @FromDate
				AND na.PublishDate <= @CurrentDate AND na.ExpireDate >= @CurrentDate
				AND ((@Featured = 1 AND na.Featured = 1) OR (@Featured = 0))
				AND ((@FilterAuthorOrAuthors = 1 AND na.UserID IN (SELECT UserID FROM @TempAuthorsIDList)) OR (@FilterAuthorOrAuthors = 0))
				AND ((@HideUnlocalizedItems = 1 AND ncl.ArticleID IS NOT NULL AND ncl.LocaleCode = @LocaleCode) OR (@HideUnlocalizedItems = 0))
			GROUP BY na.ArticleID
		) AS CountTable;
		SELECT @ArticlesInRolesAndUsers = Count(ArticleID) FROM (
			SELECT na.[ArticleID] from {databaseOwner}[{objectQualifier}EasyDNNNews] AS na
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsArticleUserPermissions] AS aup ON na.ArticleID = aup.ArticleID
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS cat ON na.ArticleID = cat.ArticleID
				INNER JOIN @FiltredByCategories AS fbc ON fbc.CategoryID = cat.CategoryID
				LEFT OUTER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsContentLocalization] AS ncl ON ncl.ArticleID = na.ArticleID
			WHERE na.PortalID=@PortalID
				AND ((@EditPermission = 1) OR (((@UserID = -1 AND aup.UserID IS NULL) OR (aup.UserID = @UserID))
					AND aup.Show = 1 AND ((@UserCanApprove = 1) OR (na.Approved=1)) AND (na.Active=1 OR na.UserID=@UserID)
				))
				AND na.HasPermissions = 1
				AND ((@Featured = 1 AND na.Featured = 1) OR (@Featured = 0))
				AND PublishDate >= @FromDate AND PublishDate <= @ToDate AND ExpireDate >= @CurrentDate
				AND ((@FilterAuthorOrAuthors = 1 AND na.UserID IN (SELECT UserID FROM @TempAuthorsIDList)) OR (@FilterAuthorOrAuthors = 0))
				AND ((@HideUnlocalizedItems = 1 AND ncl.ArticleID IS NOT NULL AND ncl.LocaleCode = @LocaleCode) OR (@HideUnlocalizedItems = 0))
			GROUP BY na.ArticleID
			UNION 
			SELECT na.[ArticleID] from {databaseOwner}[{objectQualifier}EasyDNNNews] AS na
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsArticleUserPermissions] AS aup ON na.ArticleID = aup.ArticleID
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS cat ON na.ArticleID = cat.ArticleID
				INNER JOIN @FiltredByCategories AS fbc ON fbc.CategoryID = cat.CategoryID
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsEventsData] AS ne on na.ArticleID = ne.ArticleID
				LEFT OUTER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsContentLocalization] AS ncl ON ncl.ArticleID = na.ArticleID
			WHERE na.PortalID=@PortalID
				AND ((@EditPermission = 1) OR (((@UserID = -1 AND aup.UserID IS NULL) OR (aup.UserID = @UserID))
					AND aup.Show = 1 AND ((@UserCanApprove = 1) OR (na.Approved=1)) AND (na.Active=1 OR na.UserID=@UserID)
				))
				AND na.HasPermissions = 1
				AND ne.StartDate <= @ToDate AND ne.EndDate >= @FromDate
				AND ((@Featured = 1 AND na.Featured = 1) OR (@Featured = 0))
				AND na.PublishDate <= @CurrentDate AND na.ExpireDate >= @CurrentDate
				AND ((@FilterAuthorOrAuthors = 1 AND na.UserID IN (SELECT UserID FROM @TempAuthorsIDList)) OR (@FilterAuthorOrAuthors = 0))
				AND ((@HideUnlocalizedItems = 1 AND ncl.ArticleID IS NOT NULL AND ncl.LocaleCode = @LocaleCode) OR (@HideUnlocalizedItems = 0))
			GROUP BY na.ArticleID
			UNION
			SELECT na.[ArticleID] from {databaseOwner}[{objectQualifier}EasyDNNNews] AS na
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsArticleRolePermissions] AS arp ON na.ArticleID = arp.ArticleID
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS cat ON na.ArticleID = cat.ArticleID
				INNER JOIN @FiltredByCategories AS fbc ON fbc.CategoryID = cat.CategoryID
				LEFT OUTER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsContentLocalization] AS ncl ON ncl.ArticleID = na.ArticleID
			WHERE na.PortalID=@PortalID
				AND ((@EditPermission = 1) OR (((@UserCanApprove = 1) OR (na.Approved=1))
					AND (na.Active=1 OR na.UserID=@UserID) AND arp.Show = 1 AND arp.RoleID IN (SELECT [RoleID] FROM @UserInRoles)
				))
				AND na.HasPermissions = 1
				AND ((@Featured = 1 AND na.Featured = 1) OR (@Featured = 0))
				AND PublishDate >= @FromDate AND PublishDate <= @ToDate AND ExpireDate >= @CurrentDate
				AND ((@FilterAuthorOrAuthors = 1 AND na.UserID IN (SELECT UserID FROM @TempAuthorsIDList)) OR (@FilterAuthorOrAuthors = 0))
				AND ((@HideUnlocalizedItems = 1 AND ncl.ArticleID IS NOT NULL AND ncl.LocaleCode = @LocaleCode) OR (@HideUnlocalizedItems = 0))
			GROUP BY na.ArticleID
			UNION
			SELECT na.[ArticleID] from {databaseOwner}[{objectQualifier}EasyDNNNews] AS na
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsArticleRolePermissions] AS arp ON na.ArticleID = arp.ArticleID
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS cat ON na.ArticleID = cat.ArticleID
				INNER JOIN @FiltredByCategories AS fbc ON fbc.CategoryID = cat.CategoryID
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsEventsData] AS ne on na.ArticleID = ne.ArticleID
				LEFT OUTER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsContentLocalization] AS ncl ON ncl.ArticleID = na.ArticleID
			WHERE na.PortalID=@PortalID
				AND ((@EditPermission = 1) OR (((@UserCanApprove = 1) OR (na.Approved=1))
					AND (na.Active=1 OR na.UserID=@UserID)AND arp.Show = 1 AND arp.RoleID IN (SELECT [RoleID] FROM @UserInRoles)
				))
				AND na.HasPermissions = 1
				AND ne.StartDate <= @ToDate AND ne.EndDate >= @FromDate
				AND ((@Featured = 1 AND na.Featured = 1) OR (@Featured = 0))
				AND na.PublishDate <= @CurrentDate AND na.ExpireDate >= @CurrentDate
				AND ((@FilterAuthorOrAuthors = 1 AND na.UserID IN (SELECT UserID FROM @TempAuthorsIDList)) OR (@FilterAuthorOrAuthors = 0))
				AND ((@HideUnlocalizedItems = 1 AND ncl.ArticleID IS NOT NULL AND ncl.LocaleCode = @LocaleCode) OR (@HideUnlocalizedItems = 0))
			GROUP BY na.ArticleID
		) AS final
	END
	ELSE
	BEGIN
		SELECT @ArticlesInCategories = Count(CountTable.ArticleID) FROM (
			SELECT na.[ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS na
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS cat ON na.ArticleID = cat.ArticleID
				INNER JOIN @UserViewCategoriesWithFilter  AS uvcwf ON uvcwf.CategoryID = cat.CategoryID
			WHERE na.PortalID=@PortalID
				AND ((@EditPermission = 1) OR ((@UserCanApprove = 1 OR na.Approved=1) AND (na.Active=1 OR na.UserID=@UserID)))
				AND na.HasPermissions = 0
				AND na.HideDefaultLocale = 0
				AND ((@Featured = 1 AND na.Featured = 1) OR (@Featured = 0))
				AND PublishDate >= @FromDate AND PublishDate <= @ToDate AND ExpireDate >= @CurrentDate
				AND ((@FilterAuthorOrAuthors = 1 AND na.UserID IN (SELECT UserID FROM @TempAuthorsIDList)) OR (@FilterAuthorOrAuthors = 0))
			GROUP BY na.ArticleID
			UNION
			SELECT na.[ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS na
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS cat ON na.ArticleID = cat.ArticleID
				INNER JOIN @UserViewCategoriesWithFilter  AS uvcwf ON uvcwf.CategoryID = cat.CategoryID
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsEventsData] AS ne on na.ArticleID = ne.ArticleID
			WHERE na.PortalID=@PortalID
				AND ((@EditPermission = 1) OR ((@UserCanApprove = 1 OR na.Approved=1) AND (na.Active=1 OR na.UserID=@UserID)))
				AND na.HasPermissions = 0
				AND na.HideDefaultLocale = 0
				AND ne.StartDate <= @ToDate AND ne.EndDate >= @FromDate
				AND na.PublishDate <= @CurrentDate AND na.ExpireDate >= @CurrentDate
				AND ((@Featured = 1 AND na.Featured = 1) OR (@Featured = 0))
				AND ((@FilterAuthorOrAuthors = 1 AND na.UserID IN (SELECT UserID FROM @TempAuthorsIDList)) OR (@FilterAuthorOrAuthors = 0))
			GROUP BY na.ArticleID
		) AS CountTable;
		SELECT @ArticlesInRolesAndUsers = Count(ArticleID) FROM (
			SELECT na.[ArticleID] from {databaseOwner}[{objectQualifier}EasyDNNNews] AS na
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsArticleUserPermissions] AS aup ON na.ArticleID = aup.ArticleID
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS cat ON na.ArticleID = cat.ArticleID
				INNER JOIN @FiltredByCategories AS fbc ON fbc.CategoryID = cat.CategoryID
			WHERE na.PortalID=@PortalID
				AND ((@EditPermission = 1) OR (((@UserID = -1 AND aup.UserID IS NULL) OR (aup.UserID = @UserID))
					AND aup.Show = 1 AND ((@UserCanApprove = 1) OR (na.Approved=1)) AND (na.Active=1 OR na.UserID=@UserID)
				))
				AND na.HasPermissions = 1
				AND na.HideDefaultLocale = 0
				AND ((@Featured = 1 AND na.Featured = 1) OR (@Featured = 0))
				AND PublishDate >= @FromDate AND PublishDate <= @ToDate AND ExpireDate >= @CurrentDate
				AND ((@FilterAuthorOrAuthors = 1 AND na.UserID IN (SELECT UserID FROM @TempAuthorsIDList)) OR (@FilterAuthorOrAuthors = 0))
			GROUP BY na.ArticleID
			UNION 
			SELECT na.[ArticleID] from {databaseOwner}[{objectQualifier}EasyDNNNews] AS na
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsArticleUserPermissions] AS aup ON na.ArticleID = aup.ArticleID
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS cat ON na.ArticleID = cat.ArticleID
				INNER JOIN @FiltredByCategories AS fbc ON fbc.CategoryID = cat.CategoryID
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsEventsData] AS ne on na.ArticleID = ne.ArticleID
			WHERE na.PortalID=@PortalID
				AND ((@EditPermission = 1) OR (((@UserID = -1 AND aup.UserID IS NULL) OR (aup.UserID = @UserID))
					AND aup.Show = 1 AND ((@UserCanApprove = 1) OR (na.Approved=1)) AND (na.Active=1 OR na.UserID=@UserID)
				))
				AND na.HasPermissions = 1
				AND na.HideDefaultLocale = 0
				AND ne.StartDate <= @ToDate AND ne.EndDate >= @FromDate
				AND na.PublishDate <= @CurrentDate AND na.ExpireDate >= @CurrentDate
				AND ((@Featured = 1 AND na.Featured = 1) OR (@Featured = 0))
				AND ((@FilterAuthorOrAuthors = 1 AND na.UserID IN (SELECT UserID FROM @TempAuthorsIDList)) OR (@FilterAuthorOrAuthors = 0))
			GROUP BY na.ArticleID
			UNION
			SELECT na.[ArticleID] from {databaseOwner}[{objectQualifier}EasyDNNNews] AS na
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsArticleRolePermissions] AS arp ON na.ArticleID = arp.ArticleID
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS cat ON na.ArticleID = cat.ArticleID
				INNER JOIN @FiltredByCategories AS fbc ON fbc.CategoryID = cat.CategoryID
			WHERE na.PortalID=@PortalID
				AND ((@EditPermission = 1) OR (((@UserCanApprove = 1) OR (na.Approved=1))
					AND (na.Active=1 OR na.UserID=@UserID) AND arp.Show = 1 AND arp.RoleID IN (SELECT [RoleID] FROM @UserInRoles)
				))
				AND na.HasPermissions = 1
				AND na.HideDefaultLocale = 0
				AND ((@Featured = 1 AND na.Featured = 1) OR (@Featured = 0))
				AND PublishDate >= @FromDate AND PublishDate <= @ToDate AND ExpireDate >= @CurrentDate
				AND ((@FilterAuthorOrAuthors = 1 AND na.UserID IN (SELECT UserID FROM @TempAuthorsIDList)) OR (@FilterAuthorOrAuthors = 0))
			GROUP BY na.ArticleID
			UNION
			SELECT na.[ArticleID] from {databaseOwner}[{objectQualifier}EasyDNNNews] AS na
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsArticleRolePermissions] AS arp ON na.ArticleID = arp.ArticleID
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS cat ON na.ArticleID = cat.ArticleID
				INNER JOIN @FiltredByCategories AS fbc ON fbc.CategoryID = cat.CategoryID
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsEventsData] AS ne on na.ArticleID = ne.ArticleID
			WHERE na.PortalID=@PortalID
				AND ((@EditPermission = 1) OR (((@UserCanApprove = 1) OR (na.Approved=1))
					AND (na.Active=1 OR na.UserID=@UserID) AND arp.Show = 1 AND arp.RoleID IN (SELECT [RoleID] FROM @UserInRoles)
				))
				AND na.HasPermissions = 1
				AND na.HideDefaultLocale = 0
				AND ne.StartDate <= @ToDate AND ne.EndDate >= @FromDate
				AND na.PublishDate <= @CurrentDate AND na.ExpireDate >= @CurrentDate
				AND ((@Featured = 1 AND na.Featured = 1) OR (@Featured = 0))
				AND ((@FilterAuthorOrAuthors = 1 AND na.UserID IN (SELECT UserID FROM @TempAuthorsIDList)) OR (@FilterAuthorOrAuthors = 0))
			GROUP BY na.ArticleID
		) AS final
	END
END
ELSE IF @FilterBySocialGroup = 1
BEGIN
	IF @LocaleCode <> ''''
	BEGIN
		SELECT @ArticlesInCategories = Count(CountTable.ArticleID) FROM (
			SELECT na.[ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS na
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS cat ON na.ArticleID = cat.ArticleID
				INNER JOIN @UserViewCategoriesWithFilter  AS uvcwf ON uvcwf.CategoryID = cat.CategoryID
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = na.ArticleID
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialGroupItems] AS sgi ON sgi.ArticleID = na.ArticleID AND sgi.RoleID = @FilterByDNNGroupID
				INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserID, @FilterByDNNGroupID) AS t ON t.seckey = nss.SecurityKey
				LEFT OUTER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsContentLocalization] AS ncl ON ncl.ArticleID = na.ArticleID
			WHERE na.PortalID=@PortalID
				AND ((@EditPermission = 1) OR ((@UserCanApprove = 1 OR na.Approved=1) AND (na.Active=1 OR na.UserID=@UserID)))
				AND na.HasPermissions = 0
				AND ((@Featured = 1 AND na.Featured = 1) OR (@Featured = 0))
				AND PublishDate >= @FromDate AND PublishDate <= @ToDate AND ExpireDate >= @CurrentDate
				AND ((@FilterAuthorOrAuthors = 1 AND na.UserID = @FilterByAuthor) OR (@FilterAuthorOrAuthors = 0))
				AND ((@HideUnlocalizedItems = 1 AND ncl.ArticleID IS NOT NULL AND ncl.LocaleCode = @LocaleCode) OR (@HideUnlocalizedItems = 0))
			GROUP BY na.ArticleID
			UNION
			SELECT na.[ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS na
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS cat ON na.ArticleID = cat.ArticleID
				INNER JOIN @UserViewCategoriesWithFilter  AS uvcwf ON uvcwf.CategoryID = cat.CategoryID
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsEventsData] AS ne on na.ArticleID = ne.ArticleID
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = na.ArticleID
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialGroupItems] AS sgi ON sgi.ArticleID = na.ArticleID AND sgi.RoleID = @FilterByDNNGroupID
				INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserID, @FilterByDNNGroupID) AS t ON t.seckey = nss.SecurityKey
				LEFT OUTER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsContentLocalization] AS ncl ON ncl.ArticleID = na.ArticleID
			WHERE na.PortalID=@PortalID
				AND ((@EditPermission = 1) OR ((@UserCanApprove = 1 OR na.Approved=1)AND (na.Active=1 OR na.UserID=@UserID)))
				AND na.HasPermissions = 0
				AND ne.StartDate <= @ToDate AND ne.EndDate >= @FromDate
				AND ((@Featured = 1 AND na.Featured = 1) OR (@Featured = 0))
				AND na.PublishDate <= @CurrentDate AND na.ExpireDate >= @CurrentDate
				AND ((@FilterAuthorOrAuthors = 1 AND na.UserID = @FilterByAuthor) OR (@FilterAuthorOrAuthors = 0))
				AND ((@HideUnlocalizedItems = 1 AND ncl.ArticleID IS NOT NULL AND ncl.LocaleCode = @LocaleCode) OR (@HideUnlocalizedItems = 0))
			GROUP BY na.ArticleID
		) AS CountTable;	
		SELECT @ArticlesInRolesAndUsers = Count(ArticleID) FROM (
			SELECT na.[ArticleID] from {databaseOwner}[{objectQualifier}EasyDNNNews] AS na
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsArticleUserPermissions] AS aup ON na.ArticleID = aup.ArticleID
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS cat ON na.ArticleID = cat.ArticleID
				INNER JOIN @FiltredByCategories AS fbc ON fbc.CategoryID = cat.CategoryID
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = na.ArticleID
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialGroupItems] AS sgi ON sgi.ArticleID = na.ArticleID AND sgi.RoleID = @FilterByDNNGroupID
				INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserID, @FilterByDNNGroupID) AS t ON t.seckey = nss.SecurityKey
				LEFT OUTER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsContentLocalization] AS ncl ON ncl.ArticleID = na.ArticleID
			WHERE na.PortalID=@PortalID
				AND ((@EditPermission = 1) OR (((@UserID = -1 AND aup.UserID IS NULL) OR (aup.UserID = @UserID))
					AND aup.Show = 1 AND ((@UserCanApprove = 1) OR (na.Approved=1)) AND (na.Active=1 OR na.UserID=@UserID)
				))
				AND na.HasPermissions = 1
				AND ((@Featured = 1 AND na.Featured = 1) OR (@Featured = 0))
				AND PublishDate >= @FromDate AND PublishDate <= @ToDate AND ExpireDate >= @CurrentDate
				AND ((@FilterAuthorOrAuthors = 1 AND na.UserID = @FilterByAuthor) OR (@FilterAuthorOrAuthors = 0))
				AND ((@HideUnlocalizedItems = 1 AND ncl.ArticleID IS NOT NULL AND ncl.LocaleCode = @LocaleCode) OR (@HideUnlocalizedItems = 0))
			GROUP BY na.ArticleID
			UNION 
			SELECT na.[ArticleID] from {databaseOwner}[{objectQualifier}EasyDNNNews] AS na
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsArticleUserPermissions] AS aup ON na.ArticleID = aup.ArticleID
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS cat ON na.ArticleID = cat.ArticleID
				INNER JOIN @FiltredByCategories AS fbc ON fbc.CategoryID = cat.CategoryID
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsEventsData] AS ne on na.ArticleID = ne.ArticleID
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = na.ArticleID
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialGroupItems] AS sgi ON sgi.ArticleID = na.ArticleID AND sgi.RoleID = @FilterByDNNGroupID
				INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserID, @FilterByDNNGroupID) AS t ON t.seckey = nss.SecurityKey
				LEFT OUTER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsContentLocalization] AS ncl ON ncl.ArticleID = na.ArticleID
			WHERE na.PortalID=@PortalID
				AND ((@EditPermission = 1) OR (((@UserID = -1 AND aup.UserID IS NULL) OR (aup.UserID = @UserID))
					AND aup.Show = 1 AND ((@UserCanApprove = 1) OR (na.Approved=1)) AND (na.Active=1 OR na.UserID=@UserID)
				))
				AND na.HasPermissions = 1
				AND ne.StartDate <= @ToDate AND ne.EndDate >= @FromDate
				AND na.PublishDate <= @CurrentDate AND na.ExpireDate >= @CurrentDate
				AND ((@Featured = 1 AND na.Featured = 1) OR (@Featured = 0))
				AND ((@FilterAuthorOrAuthors = 1 AND na.UserID = @FilterByAuthor) OR (@FilterAuthorOrAuthors = 0))
				AND ((@HideUnlocalizedItems = 1 AND ncl.ArticleID IS NOT NULL AND ncl.LocaleCode = @LocaleCode) OR (@HideUnlocalizedItems = 0))
			GROUP BY na.ArticleID
			UNION
			SELECT na.[ArticleID] from {databaseOwner}[{objectQualifier}EasyDNNNews] AS na
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsArticleRolePermissions] AS arp ON na.ArticleID = arp.ArticleID
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS cat ON na.ArticleID = cat.ArticleID
				INNER JOIN @FiltredByCategories AS fbc ON fbc.CategoryID = cat.CategoryID
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = na.ArticleID
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialGroupItems] AS sgi ON sgi.ArticleID = na.ArticleID AND sgi.RoleID = @FilterByDNNGroupID
				INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserID, @FilterByDNNGroupID) AS t ON t.seckey = nss.SecurityKey
				LEFT OUTER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsContentLocalization] AS ncl ON ncl.ArticleID = na.ArticleID
			WHERE na.PortalID=@PortalID
				AND ((@EditPermission = 1) OR (((@UserCanApprove = 1) OR (na.Approved=1))
					AND (na.Active=1 OR na.UserID=@UserID) AND arp.Show = 1 AND arp.RoleID IN (SELECT [RoleID] FROM @UserInRoles)
				))
				AND na.HasPermissions = 1
				AND ((@Featured = 1 AND na.Featured = 1) OR (@Featured = 0))
				AND PublishDate >= @FromDate AND PublishDate <= @ToDate AND ExpireDate >= @CurrentDate
				AND((@FilterAuthorOrAuthors = 1 AND na.UserID = @FilterByAuthor) OR (@FilterAuthorOrAuthors = 0))
				AND ((@HideUnlocalizedItems = 1 AND ncl.ArticleID IS NOT NULL AND ncl.LocaleCode = @LocaleCode) OR (@HideUnlocalizedItems = 0))
			GROUP BY na.ArticleID
			UNION
			SELECT na.[ArticleID] from {databaseOwner}[{objectQualifier}EasyDNNNews] AS na
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsArticleRolePermissions] AS arp ON na.ArticleID = arp.ArticleID
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS cat ON na.ArticleID = cat.ArticleID
				INNER JOIN @FiltredByCategories AS fbc ON fbc.CategoryID = cat.CategoryID
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsEventsData] AS ne on na.ArticleID = ne.ArticleID
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = na.ArticleID
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialGroupItems] AS sgi ON sgi.ArticleID = na.ArticleID AND sgi.RoleID = @FilterByDNNGroupID
				INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserID, @FilterByDNNGroupID) AS t ON t.seckey = nss.SecurityKey
				LEFT OUTER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsContentLocalization] AS ncl ON ncl.ArticleID = na.ArticleID
			WHERE na.PortalID=@PortalID
				AND ((@EditPermission = 1) OR (((@UserCanApprove = 1) OR (na.Approved=1))
					AND (na.Active=1 OR na.UserID=@UserID) AND arp.Show = 1 AND arp.RoleID IN (SELECT [RoleID] FROM @UserInRoles)
				))
				AND na.HasPermissions = 1
				AND ne.StartDate <= @ToDate AND ne.EndDate >= @FromDate
				AND ((@Featured = 1 AND na.Featured = 1) OR (@Featured = 0))
				AND na.PublishDate <= @CurrentDate AND na.ExpireDate >= @CurrentDate
				AND ((@FilterAuthorOrAuthors = 1 AND na.UserID = @FilterByAuthor) OR (@FilterAuthorOrAuthors = 0))
				AND ((@HideUnlocalizedItems = 1 AND ncl.ArticleID IS NOT NULL AND ncl.LocaleCode = @LocaleCode) OR (@HideUnlocalizedItems = 0))
			GROUP BY na.ArticleID
		) AS final
	END
	ELSE
	BEGIN
		SELECT @ArticlesInCategories = Count(CountTable.ArticleID) FROM (
			SELECT na.[ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS na
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS cat ON na.ArticleID = cat.ArticleID
				INNER JOIN @UserViewCategoriesWithFilter  AS uvcwf ON uvcwf.CategoryID = cat.CategoryID
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = na.ArticleID
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialGroupItems] AS sgi ON sgi.ArticleID = na.ArticleID AND sgi.RoleID = @FilterByDNNGroupID
				INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserID, @FilterByDNNGroupID) AS t ON t.seckey = nss.SecurityKey
			WHERE na.PortalID=@PortalID
				AND ((@EditPermission = 1) OR ((@UserCanApprove = 1 OR na.Approved=1) AND (na.Active=1 OR na.UserID=@UserID)))
				AND na.HasPermissions = 0
				AND na.HideDefaultLocale = 0
				AND ((@Featured = 1 AND na.Featured = 1) OR (@Featured = 0))
				AND PublishDate >= @FromDate AND PublishDate <= @ToDate AND ExpireDate >= @CurrentDate
				AND ((@FilterAuthorOrAuthors = 1 AND na.UserID = @FilterByAuthor) OR (@FilterAuthorOrAuthors = 0))
			GROUP BY na.ArticleID
			UNION
			SELECT na.[ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS na
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS cat ON na.ArticleID = cat.ArticleID
				INNER JOIN @UserViewCategoriesWithFilter  AS uvcwf ON uvcwf.CategoryID = cat.CategoryID
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsEventsData] AS ne on na.ArticleID = ne.ArticleID
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = na.ArticleID
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialGroupItems] AS sgi ON sgi.ArticleID = na.ArticleID AND sgi.RoleID = @FilterByDNNGroupID
				INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserID, @FilterByDNNGroupID) AS t ON t.seckey = nss.SecurityKey
			WHERE na.PortalID=@PortalID
				AND ((@EditPermission = 1) OR ((@UserCanApprove = 1 OR na.Approved=1) AND (na.Active=1 OR na.UserID=@UserID)))
				AND na.HasPermissions = 0
				AND na.HideDefaultLocale = 0
				AND ne.StartDate <= @ToDate AND ne.EndDate >= @FromDate
				AND na.PublishDate <= @CurrentDate AND na.ExpireDate >= @CurrentDate
				AND ((@Featured = 1 AND na.Featured = 1) OR (@Featured = 0))
				AND ((@FilterAuthorOrAuthors = 1 AND na.UserID = @FilterByAuthor) OR (@FilterAuthorOrAuthors = 0))
			GROUP BY na.ArticleID
		) AS CountTable;	
		SELECT @ArticlesInRolesAndUsers = Count(ArticleID) FROM (
			SELECT na.[ArticleID] from {databaseOwner}[{objectQualifier}EasyDNNNews] AS na
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsArticleUserPermissions] AS aup ON na.ArticleID = aup.ArticleID
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS cat ON na.ArticleID = cat.ArticleID
				INNER JOIN @FiltredByCategories AS fbc ON fbc.CategoryID = cat.CategoryID
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = na.ArticleID
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialGroupItems] AS sgi ON sgi.ArticleID = na.ArticleID AND sgi.RoleID = @FilterByDNNGroupID
				INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserID, @FilterByDNNGroupID) AS t ON t.seckey = nss.SecurityKey
			WHERE na.PortalID=@PortalID
				AND ((@EditPermission = 1) OR (((@UserID = -1 AND aup.UserID IS NULL) OR (aup.UserID = @UserID))
					AND aup.Show = 1 AND ((@UserCanApprove = 1) OR (na.Approved=1)) AND (na.Active=1 OR na.UserID=@UserID)
				))
				AND na.HasPermissions = 1
				AND na.HideDefaultLocale = 0
				AND ((@Featured = 1 AND na.Featured = 1) OR (@Featured = 0))
				AND PublishDate >= @FromDate AND PublishDate <= @ToDate AND ExpireDate >= @CurrentDate
				AND ((@FilterAuthorOrAuthors = 1 AND na.UserID = @FilterByAuthor) OR (@FilterAuthorOrAuthors = 0))
			GROUP BY na.ArticleID
			UNION 
			SELECT na.[ArticleID] from {databaseOwner}[{objectQualifier}EasyDNNNews] AS na
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsArticleUserPermissions] AS aup ON na.ArticleID = aup.ArticleID
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS cat ON na.ArticleID = cat.ArticleID
				INNER JOIN @FiltredByCategories AS fbc ON fbc.CategoryID = cat.CategoryID
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsEventsData] AS ne on na.ArticleID = ne.ArticleID
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = na.ArticleID
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialGroupItems] AS sgi ON sgi.ArticleID = na.ArticleID AND sgi.RoleID = @FilterByDNNGroupID
				INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserID, @FilterByDNNGroupID) AS t ON t.seckey = nss.SecurityKey
			WHERE na.PortalID=@PortalID
				AND ((@EditPermission = 1) OR (((@UserID = -1 AND aup.UserID IS NULL) OR (aup.UserID = @UserID))
					AND aup.Show = 1 AND ((@UserCanApprove = 1) OR (na.Approved=1)) AND (na.Active=1 OR na.UserID=@UserID)
				))
				AND na.HasPermissions = 1
				AND na.HideDefaultLocale = 0
				AND ne.StartDate <= @ToDate AND ne.EndDate >= @FromDate
				AND na.PublishDate <= @CurrentDate AND na.ExpireDate >= @CurrentDate
				AND ((@Featured = 1 AND na.Featured = 1) OR (@Featured = 0))
				AND ((@FilterAuthorOrAuthors = 1 AND na.UserID = @FilterByAuthor) OR (@FilterAuthorOrAuthors = 0))
			GROUP BY na.ArticleID
			UNION
			SELECT na.[ArticleID] from {databaseOwner}[{objectQualifier}EasyDNNNews] AS na
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsArticleRolePermissions] AS arp ON na.ArticleID = arp.ArticleID
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS cat ON na.ArticleID = cat.ArticleID
				INNER JOIN @FiltredByCategories AS fbc ON fbc.CategoryID = cat.CategoryID
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = na.ArticleID
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialGroupItems] AS sgi ON sgi.ArticleID = na.ArticleID AND sgi.RoleID = @FilterByDNNGroupID
				INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserID, @FilterByDNNGroupID) AS t ON t.seckey = nss.SecurityKey
			WHERE na.PortalID=@PortalID
				AND ((@EditPermission = 1) OR (((@UserCanApprove = 1) OR (na.Approved=1))
					AND (na.Active=1 OR na.UserID=@UserID) AND arp.Show = 1 AND arp.RoleID IN (SELECT [RoleID] FROM @UserInRoles)
				))
				AND na.HasPermissions = 1
				AND na.HideDefaultLocale = 0
				AND ((@Featured = 1 AND na.Featured = 1) OR (@Featured = 0))
				AND PublishDate >= @FromDate AND PublishDate <= @ToDate AND ExpireDate >= @CurrentDate
				AND ((@FilterAuthorOrAuthors = 1 AND na.UserID = @FilterByAuthor) OR (@FilterAuthorOrAuthors = 0))
			GROUP BY na.ArticleID
			UNION
			SELECT na.[ArticleID] from {databaseOwner}[{objectQualifier}EasyDNNNews] AS na
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsArticleRolePermissions] AS arp ON na.ArticleID = arp.ArticleID
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS cat ON na.ArticleID = cat.ArticleID
				INNER JOIN @FiltredByCategories AS fbc ON fbc.CategoryID = cat.CategoryID
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsEventsData] AS ne on na.ArticleID = ne.ArticleID
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = na.ArticleID
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialGroupItems] AS sgi ON sgi.ArticleID = na.ArticleID AND sgi.RoleID = @FilterByDNNGroupID
				INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserID, @FilterByDNNGroupID) AS t ON t.seckey = nss.SecurityKey
			WHERE na.PortalID=@PortalID
				AND ((@EditPermission = 1) OR (((@UserCanApprove = 1) OR (na.Approved=1))
					AND (na.Active=1 OR na.UserID=@UserID) AND arp.Show = 1 AND arp.RoleID IN (SELECT [RoleID] FROM @UserInRoles)
				))
				AND na.HasPermissions = 1
				AND na.HideDefaultLocale = 0
				AND ne.StartDate <= @ToDate AND ne.EndDate >= @FromDate
				AND na.PublishDate <= @CurrentDate AND na.ExpireDate >= @CurrentDate
				AND ((@Featured = 1 AND na.Featured = 1) OR (@Featured = 0))
				AND((@FilterAuthorOrAuthors = 1 AND na.UserID = @FilterByAuthor) OR (@FilterAuthorOrAuthors = 0))
			GROUP BY na.ArticleID
		) AS final
	END
END
ELSE IF @FilterByDNNUserID <> 0
BEGIN
	IF @LocaleCode <> ''''
	BEGIN
		SELECT @ArticlesInCategories = Count(CountTable.ArticleID) FROM (
			SELECT na.[ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS na
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS cat ON na.ArticleID = cat.ArticleID
				INNER JOIN @UserViewCategoriesWithFilter  AS uvcwf ON uvcwf.CategoryID = cat.CategoryID
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = na.ArticleID
				INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserID, @FilterByDNNGroupID) AS t ON t.seckey = nss.SecurityKey
				LEFT OUTER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsContentLocalization] AS ncl ON ncl.ArticleID = na.ArticleID
			WHERE na.PortalID=@PortalID
				AND ((@EditPermission = 1) OR ((@UserCanApprove = 1 OR na.Approved=1) AND (na.Active=1 OR na.UserID=@UserID)))
				AND na.HasPermissions = 0
				AND ((@Featured = 1 AND na.Featured = 1) OR (@Featured = 0))
				AND PublishDate >= @FromDate AND PublishDate <= @ToDate AND ExpireDate >= @CurrentDate
				AND na.UserID = @FilterByDNNUserID
				AND ((@HideUnlocalizedItems = 1 AND ncl.ArticleID IS NOT NULL AND ncl.LocaleCode = @LocaleCode) OR (@HideUnlocalizedItems = 0))
			GROUP BY na.ArticleID
			UNION
			SELECT na.[ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS na
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS cat ON na.ArticleID = cat.ArticleID
				INNER JOIN @UserViewCategoriesWithFilter  AS uvcwf ON uvcwf.CategoryID = cat.CategoryID
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsEventsData] AS ne on na.ArticleID = ne.ArticleID
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = na.ArticleID
				INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserID, @FilterByDNNGroupID) AS t ON t.seckey = nss.SecurityKey
				LEFT OUTER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsContentLocalization] AS ncl ON ncl.ArticleID = na.ArticleID
			WHERE na.PortalID=@PortalID
				AND ((@EditPermission = 1) OR ((@UserCanApprove = 1 OR na.Approved=1) AND (na.Active=1 OR na.UserID=@UserID)))
				AND na.HasPermissions = 0
				AND ne.StartDate <= @ToDate AND ne.EndDate >= @FromDate
				AND na.PublishDate <= @CurrentDate AND na.ExpireDate >= @CurrentDate
				AND ((@Featured = 1 AND na.Featured = 1) OR (@Featured = 0))
				AND na.UserID = @FilterByDNNUserID
				AND ((@HideUnlocalizedItems = 1 AND ncl.ArticleID IS NOT NULL AND ncl.LocaleCode = @LocaleCode) OR (@HideUnlocalizedItems = 0))
			GROUP BY na.ArticleID
		) AS CountTable;
		SELECT @ArticlesInRolesAndUsers = Count(ArticleID) FROM (
			SELECT na.[ArticleID] from {databaseOwner}[{objectQualifier}EasyDNNNews] AS na
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsArticleUserPermissions] AS aup ON na.ArticleID = aup.ArticleID
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS cat ON na.ArticleID = cat.ArticleID
				INNER JOIN @FiltredByCategories AS fbc ON fbc.CategoryID = cat.CategoryID
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = na.ArticleID
				INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserID, @FilterByDNNGroupID) AS t ON t.seckey = nss.SecurityKey
				LEFT OUTER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsContentLocalization] AS ncl ON ncl.ArticleID = na.ArticleID
			WHERE na.PortalID=@PortalID
				AND ((@EditPermission = 1) OR (((@UserID = -1 AND aup.UserID IS NULL) OR (aup.UserID = @UserID))
					AND aup.Show = 1 AND ((@UserCanApprove = 1) OR (na.Approved=1)) AND (na.Active=1 OR na.UserID=@UserID)
				))
				AND na.HasPermissions = 1
				AND ((@Featured = 1 AND na.Featured = 1) OR (@Featured = 0))
				AND PublishDate >= @FromDate AND PublishDate <= @ToDate AND ExpireDate >= @CurrentDate
				AND na.UserID = @FilterByDNNUserID
				AND ((@HideUnlocalizedItems = 1 AND ncl.ArticleID IS NOT NULL AND ncl.LocaleCode = @LocaleCode) OR (@HideUnlocalizedItems = 0))
			GROUP BY na.ArticleID
			UNION 
			SELECT na.[ArticleID] from {databaseOwner}[{objectQualifier}EasyDNNNews] AS na
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsArticleUserPermissions] AS aup ON na.ArticleID = aup.ArticleID
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS cat ON na.ArticleID = cat.ArticleID
				INNER JOIN @FiltredByCategories AS fbc ON fbc.CategoryID = cat.CategoryID
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsEventsData] AS ne on na.ArticleID = ne.ArticleID
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = na.ArticleID
				INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserID, @FilterByDNNGroupID) AS t ON t.seckey = nss.SecurityKey
				LEFT OUTER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsContentLocalization] AS ncl ON ncl.ArticleID = na.ArticleID
			WHERE na.PortalID=@PortalID
				AND ((@EditPermission = 1) OR (((@UserID = -1 AND aup.UserID IS NULL) OR (aup.UserID = @UserID))
					AND aup.Show = 1 AND ((@UserCanApprove = 1) OR (na.Approved=1)) AND (na.Active=1 OR na.UserID=@UserID)
				))
				AND na.HasPermissions = 1
				AND ne.StartDate <= @ToDate AND ne.EndDate >= @FromDate
				AND na.PublishDate <= @CurrentDate AND na.ExpireDate >= @CurrentDate
				AND ((@Featured = 1 AND na.Featured = 1) OR (@Featured = 0))
				AND na.UserID = @FilterByDNNUserID
				AND ((@HideUnlocalizedItems = 1 AND ncl.ArticleID IS NOT NULL AND ncl.LocaleCode = @LocaleCode) OR (@HideUnlocalizedItems = 0))
			GROUP BY na.ArticleID
			UNION
			SELECT na.[ArticleID] from {databaseOwner}[{objectQualifier}EasyDNNNews] AS na
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsArticleRolePermissions] AS arp ON na.ArticleID = arp.ArticleID
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS cat ON na.ArticleID = cat.ArticleID
				INNER JOIN @FiltredByCategories AS fbc ON fbc.CategoryID = cat.CategoryID
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = na.ArticleID
				INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserID, @FilterByDNNGroupID) AS t ON t.seckey = nss.SecurityKey
				LEFT OUTER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsContentLocalization] AS ncl ON ncl.ArticleID = na.ArticleID
			WHERE na.PortalID=@PortalID
				AND ((@EditPermission = 1) OR (((@UserCanApprove = 1) OR (na.Approved=1))
					AND (na.Active=1 OR na.UserID=@UserID) AND arp.Show = 1 AND arp.RoleID IN (SELECT [RoleID] FROM @UserInRoles)
				))
				AND na.HasPermissions = 1
				AND ((@Featured = 1 AND na.Featured = 1) OR (@Featured = 0))
				AND PublishDate >= @FromDate AND PublishDate <= @ToDate AND ExpireDate >= @CurrentDate
				AND na.UserID = @FilterByDNNUserID
				AND ((@HideUnlocalizedItems = 1 AND ncl.ArticleID IS NOT NULL AND ncl.LocaleCode = @LocaleCode) OR (@HideUnlocalizedItems = 0))
			GROUP BY na.ArticleID
			UNION
			SELECT na.[ArticleID] from {databaseOwner}[{objectQualifier}EasyDNNNews] AS na
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsArticleRolePermissions] AS arp ON na.ArticleID = arp.ArticleID
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS cat ON na.ArticleID = cat.ArticleID
				INNER JOIN @FiltredByCategories AS fbc ON fbc.CategoryID = cat.CategoryID
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsEventsData] AS ne on na.ArticleID = ne.ArticleID
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = na.ArticleID
				INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserID, @FilterByDNNGroupID) AS t ON t.seckey = nss.SecurityKey
				LEFT OUTER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsContentLocalization] AS ncl ON ncl.ArticleID = na.ArticleID
			WHERE na.PortalID=@PortalID
				AND ((@EditPermission = 1) OR (((@UserCanApprove = 1) OR (na.Approved=1))
					AND (na.Active=1 OR na.UserID=@UserID) AND arp.Show = 1 AND arp.RoleID IN (SELECT [RoleID] FROM @UserInRoles)
				))
				AND na.HasPermissions = 1
				AND ne.StartDate <= @ToDate AND ne.EndDate >= @FromDate
				AND na.PublishDate <= @CurrentDate AND na.ExpireDate >= @CurrentDate
				AND ((@Featured = 1 AND na.Featured = 1) OR (@Featured = 0))
				AND na.UserID = @FilterByDNNUserID
				AND ((@HideUnlocalizedItems = 1 AND ncl.ArticleID IS NOT NULL AND ncl.LocaleCode = @LocaleCode) OR (@HideUnlocalizedItems = 0))
			GROUP BY na.ArticleID
		) AS final
	END
	ELSE
	BEGIN
		SELECT @ArticlesInCategories = Count(CountTable.ArticleID) FROM (
			SELECT na.[ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS na
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS cat ON na.ArticleID = cat.ArticleID
				INNER JOIN @UserViewCategoriesWithFilter  AS uvcwf ON uvcwf.CategoryID = cat.CategoryID
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = na.ArticleID
				INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserID, @FilterByDNNGroupID) AS t ON t.seckey = nss.SecurityKey
			WHERE na.PortalID=@PortalID
				AND ((@EditPermission = 1) OR ((@UserCanApprove = 1 OR na.Approved=1) AND (na.Active=1 OR na.UserID=@UserID)))
				AND na.HasPermissions = 0
				AND na.HideDefaultLocale = 0
				AND ((@Featured = 1 AND na.Featured = 1) OR (@Featured = 0))
				AND PublishDate >= @FromDate AND PublishDate <= @ToDate AND ExpireDate >= @CurrentDate
				AND na.UserID = @FilterByDNNUserID
			GROUP BY na.ArticleID
			UNION
			SELECT na.[ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS na
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS cat ON na.ArticleID = cat.ArticleID
				INNER JOIN @UserViewCategoriesWithFilter  AS uvcwf ON uvcwf.CategoryID = cat.CategoryID
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsEventsData] AS ne on na.ArticleID = ne.ArticleID
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = na.ArticleID
				INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserID, @FilterByDNNGroupID) AS t ON t.seckey = nss.SecurityKey
			WHERE na.PortalID=@PortalID
				AND ((@EditPermission = 1) OR ((@UserCanApprove = 1 OR na.Approved=1) AND (na.Active=1 OR na.UserID=@UserID)))
				AND na.HasPermissions = 0
				AND na.HideDefaultLocale = 0
				AND ne.StartDate <= @ToDate AND ne.EndDate >= @FromDate
				AND na.PublishDate <= @CurrentDate AND na.ExpireDate >= @CurrentDate
				AND ((@Featured = 1 AND na.Featured = 1) OR (@Featured = 0))
				AND na.UserID = @FilterByDNNUserID
			GROUP BY na.ArticleID
		) AS CountTable;
		SELECT @ArticlesInRolesAndUsers = Count(ArticleID) FROM (
			SELECT na.[ArticleID] from {databaseOwner}[{objectQualifier}EasyDNNNews] AS na
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsArticleUserPermissions] AS aup ON na.ArticleID = aup.ArticleID
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS cat ON na.ArticleID = cat.ArticleID
				INNER JOIN @FiltredByCategories AS fbc ON fbc.CategoryID = cat.CategoryID
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = na.ArticleID
				INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserID, @FilterByDNNGroupID) AS t ON t.seckey = nss.SecurityKey
			WHERE na.PortalID=@PortalID
				AND ((@EditPermission = 1) OR (((@UserID = -1 AND aup.UserID IS NULL) OR (aup.UserID = @UserID))
					AND aup.Show = 1 AND ((@UserCanApprove = 1) OR (na.Approved=1)) AND (na.Active=1 OR na.UserID=@UserID)
				))
				AND na.HasPermissions = 1
				AND na.HideDefaultLocale = 0
				AND ((@Featured = 1 AND na.Featured = 1) OR (@Featured = 0))
				AND PublishDate >= @FromDate AND PublishDate <= @ToDate AND ExpireDate >= @CurrentDate
				AND na.UserID = @FilterByDNNUserID
			GROUP BY na.ArticleID
			UNION 
			SELECT na.[ArticleID] from {databaseOwner}[{objectQualifier}EasyDNNNews] AS na
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsArticleUserPermissions] AS aup ON na.ArticleID = aup.ArticleID
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS cat ON na.ArticleID = cat.ArticleID
				INNER JOIN @FiltredByCategories AS fbc ON fbc.CategoryID = cat.CategoryID
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsEventsData] AS ne on na.ArticleID = ne.ArticleID
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = na.ArticleID
				INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserID, @FilterByDNNGroupID) AS t ON t.seckey = nss.SecurityKey
			WHERE na.PortalID=@PortalID
				AND ((@EditPermission = 1) OR (((@UserID = -1 AND aup.UserID IS NULL) OR (aup.UserID = @UserID))
					AND aup.Show = 1 AND ((@UserCanApprove = 1) OR (na.Approved=1)) AND (na.Active=1 OR na.UserID=@UserID)
				))
				AND na.HasPermissions = 1
				AND na.HideDefaultLocale = 0
				AND ne.StartDate <= @ToDate AND ne.EndDate >= @FromDate
				AND na.PublishDate <= @CurrentDate AND na.ExpireDate >= @CurrentDate
				AND ((@Featured = 1 AND na.Featured = 1) OR (@Featured = 0))
				AND na.UserID = @FilterByDNNUserID
			GROUP BY na.ArticleID
			UNION
			SELECT na.[ArticleID] from {databaseOwner}[{objectQualifier}EasyDNNNews] AS na
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsArticleRolePermissions] AS arp ON na.ArticleID = arp.ArticleID
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS cat ON na.ArticleID = cat.ArticleID
				INNER JOIN @FiltredByCategories AS fbc ON fbc.CategoryID = cat.CategoryID
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = na.ArticleID
				INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserID, @FilterByDNNGroupID) AS t ON t.seckey = nss.SecurityKey
			WHERE na.PortalID=@PortalID
				AND ((@EditPermission = 1) OR (((@UserCanApprove = 1) OR (na.Approved=1))
					AND (na.Active=1 OR na.UserID=@UserID) AND arp.Show = 1 AND arp.RoleID IN (SELECT [RoleID] FROM @UserInRoles)
				))
				AND na.HasPermissions = 1
				AND na.HideDefaultLocale = 0
				AND ((@Featured = 1 AND na.Featured = 1) OR (@Featured = 0))
				AND PublishDate >= @FromDate AND PublishDate <= @ToDate AND ExpireDate >= @CurrentDate
				AND na.UserID = @FilterByDNNUserID
			GROUP BY na.ArticleID
			UNION
			SELECT na.[ArticleID] from {databaseOwner}[{objectQualifier}EasyDNNNews] AS na
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsArticleRolePermissions] AS arp ON na.ArticleID = arp.ArticleID
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS cat ON na.ArticleID = cat.ArticleID
				INNER JOIN @FiltredByCategories AS fbc ON fbc.CategoryID = cat.CategoryID
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsEventsData] AS ne on na.ArticleID = ne.ArticleID
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = na.ArticleID
				INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserID, @FilterByDNNGroupID) AS t ON t.seckey = nss.SecurityKey
			WHERE na.PortalID=@PortalID
				AND ((@EditPermission = 1) OR (((@UserCanApprove = 1) OR (na.Approved=1))
					AND (na.Active=1 OR na.UserID=@UserID) AND arp.Show = 1 AND arp.RoleID IN (SELECT [RoleID] FROM @UserInRoles)
				))
				AND na.HasPermissions = 1
				AND na.HideDefaultLocale = 0
				AND ne.StartDate <= @ToDate AND ne.EndDate >= @FromDate
				AND ((@Featured = 1 AND na.Featured = 1) OR (@Featured = 0))
				AND na.PublishDate <= @CurrentDate AND na.ExpireDate >= @CurrentDate
				AND na.UserID = @FilterByDNNUserID
			GROUP BY na.ArticleID
		) AS final
	END
END

SELECT @ArticlesInRolesAndUsers + @ArticlesInCategories
     
     ' 
END
GO
/****** Object:  StoredProcedure {databaseOwner}[{objectQualifier}EasyDNNNewsGetItemsCountForPageing]    Script Date: 06/24/2013 16:39:07 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'{databaseOwner}[{objectQualifier}EasyDNNNewsGetItemsCountForPageing]') AND type in (N'P', N'PC'))
BEGIN
EXEC dbo.sp_executesql @statement = N'CREATE PROCEDURE {databaseOwner}[{objectQualifier}EasyDNNNewsGetItemsCountForPageing]
	@ViewType tinyint = 0, -- 0 - View, 1 - Editor
	@PortalID int, -- current Portal
	@ModuleID int, -- current Module, portal sharing isto sadrzi dobre kategorije, auto add i setingsi su snimljeni kod tog modula
	@UserID int,
	@CurrentDate Datetime, -- = GetUTCDate,
	@OrderBy nvarchar(20) = ''PublishDate DESC'',
	@ItemsFrom int = 1,
	@ItemsTo int = 5,
	@DateRange bit = 0,
	@FromDate DateTime = ''2012-01-01 00:00:00'',
	@ToDate DateTime = ''2012-01-01 00:00:00'',
	/* od tud ide filter */
	@OnlyOneCategory int = 0, -- used for category menu or vhen need to filter by one category
	@Featured bit = 0,
	@ShowAllAuthors bit = 1, -- gleda se filtriranje autora po modulu ili portalu
	@FilterByAuthor int = 0, -- ako se selektiran jedan autor
	@FilterByGroupID int = 0, -- ako je selektirana grupa
	@FilterByTags bit = 0,
	@FilterByArticles bit = 0,
	@FilterByDNNUserID int = 0, -- filter by some UserID / not current user ID
	@FilterByDNNGroupID int = 0, -- filter by DNNGroup/RoleID / not profile GroupID
	@EditOnlyAsOwner bit = 0, -- news settings
	@UserCanApprove bit = 0, -- news settings
	@LocaleCode nvarchar(20) = '''',
	@IsSocialInstance bit = 0,	
	@FirstOrderBy nvarchar(20) = '''',--''Featured DESC'', -- featured articles on top	
	@Perm_ViewAllCategores bit = 0, -- permission settings View all categories
	@Perm_EditAllCategores bit = 0, -- permission settings Edit all categories
	@AdminOrSuperUser bit = 0,
	@CategoryFilterType tinyint = 1, -- 0 All categories, 1 - SELECTion, 2 - AutoAdd
	@PermissionSettingsSource bit = 1, -- 1 portal, 0 module
	@FillterSettingsSource bit = 1, -- 1 portal, 0 module
	@OuterModuleID int = 0,
	@HideUnlocalizedItems bit = 0
AS
SET NOCOUNT ON;
DECLARE @EditPermission tinyint;
SET @EditPermission = 0;
IF @OuterModuleID = 0 AND @FilterByArticles = 1
BEGIN
	DECLARE @FilterArticlesTable TABLE (ArticleID int NOT NULL PRIMARY KEY);
	IF @FillterSettingsSource = 1 -- portal settings
		BEGIN
			INSERT INTO @FilterArticlesTable SELECT ArticleID FROM {databaseOwner}[{objectQualifier}EasyDNNNewsPortalFilterByArticles] WHERE FilterPortalID = @PortalID;
		END
	ELSE
		BEGIN
			INSERT INTO @FilterArticlesTable SELECT ArticleID FROM {databaseOwner}[{objectQualifier}EasyDNNNewsFilterByArticles] WHERE FilterModuleID = @ModuleID;
		END
END
-- temp TABLE contains list of TagIDs to filter -> @FilterTagsTable
IF @OuterModuleID = 0 AND @FilterByTags = 1
BEGIN
	DECLARE @FilterTagsTable TABLE (TagID int NOT NULL PRIMARY KEY);
	IF @FillterSettingsSource = 1 -- portal settings
		BEGIN
			INSERT INTO @FilterTagsTable SELECT TagID FROM {databaseOwner}[{objectQualifier}EasyDNNNewsPortalFilterByTagID] WHERE FilterPortalID = @PortalID;
		END
	ELSE
		BEGIN
			INSERT INTO @FilterTagsTable SELECT TagID FROM {databaseOwner}[{objectQualifier}EasyDNNNewsFilterByTagID] WHERE FilterModuleID = @ModuleID;
		END
END

DECLARE @UserInRoles TABLE (RoleID int NOT NULL PRIMARY KEY);
INSERT INTO @UserInRoles SELECT DISTINCT ur.[RoleID] FROM {databaseOwner}[{objectQualifier}UserRoles] AS ur INNER JOIN {databaseOwner}[{objectQualifier}Roles] AS r ON ur.RoleID = r.RoleID WHERE ur.UserID = @UserID AND r.PortalID = @PortalID AND (ur.ExpiryDate IS NULL OR ur.ExpiryDate > GETUTCDATE()) AND (ur.EffectiveDate IS NULL OR ur.EffectiveDate < GETUTCDATE());

DECLARE @UserViewCategories TABLE (CategoryID int NOT NULL PRIMARY KEY); -- all categories which user can see based on permissions
DECLARE @UserEditCategories TABLE (CategoryID int NOT NULL PRIMARY KEY); -- all categories which user can edit based on permissions
DECLARE @UserViewCategoriesWithFilter TABLE (CategoryID int NOT NULL PRIMARY KEY); -- all categories which user can see based on permissions and Module filter
DECLARE @FiltredByCategories TABLE (CategoryID int NOT NULL PRIMARY KEY); -- all categories that are filtred by module or portal,

IF @AdminOrSuperUser = 1 OR @Perm_ViewAllCategores = 1
BEGIN
	INSERT INTO @UserViewCategories SELECT [CategoryID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryList] WHERE PortalID = @PortalID;
END
ELSE IF @UserID = -1
BEGIN	
	IF @PermissionSettingsSource = 1 -- by portal
	BEGIN
		INSERT INTO @UserViewCategories
		SELECT rpsc.[CategoryID] FROM  {databaseOwner}[{objectQualifier}EasyDNNNewsRolePremissionsShowCategories] AS rpsc 
		INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsRolePremissionSettings] AS rps ON rps.PremissionSettingsID = rpsc.PremissionSettingsID
		WHERE rps.PortalID = @PortalID  AND rps.ModuleID IS NULL AND rps.RoleID IS NULL;
	END
	ELSE -- by module
	BEGIN
	INSERT INTO @UserViewCategories
		SELECT rpsc.[CategoryID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsRolePremissionsShowCategories] AS rpsc
		INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsRolePremissionSettings] AS rps ON rps.PremissionSettingsID = rpsc.PremissionSettingsID
		WHERE rps.PortalID = @PortalID AND rps.ModuleID = @ModuleID AND rps.RoleID IS NULL;
	END
END
ELSE -- registrirani korisnik
BEGIN
	IF @PermissionSettingsSource = 1 -- by portal
	BEGIN
		INSERT INTO @UserViewCategories
		SELECT rpsc.[CategoryID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsRolePremissionsShowCategories] AS rpsc
		INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsRolePremissionSettings] AS rps ON rps.PremissionSettingsID = rpsc.PremissionSettingsID
		INNER JOIN @UserInRoles AS uir ON rps.RoleID = uir.RoleID
		WHERE rps.PortalID = @PortalID AND rps.ModuleID IS NULL GROUP BY rpsc.[CategoryID]
		UNION
		SELECT upsc.[CategoryID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsUserPremissionsShowCategories] AS upsc
		INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsUserPremissionSettings] AS ups ON ups.PremissionSettingsID = upsc.PremissionSettingsID
		WHERE ups.UserID = @UserID AND ups.PortalID = @PortalID AND ups.ModuleID IS NULL GROUP BY upsc.[CategoryID];
	END
	ELSE -- by module
	BEGIN
		INSERT INTO @UserViewCategories
		SELECT rpsc.[CategoryID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsRolePremissionsShowCategories] AS rpsc
		INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsRolePremissionSettings] AS rps ON rps.PremissionSettingsID = rpsc.PremissionSettingsID
		INNER JOIN @UserInRoles AS uir ON rps.RoleID = uir.RoleID
		WHERE rps.PortalID = @PortalID AND rps.ModuleID = @ModuleID GROUP BY rpsc.[CategoryID]
		UNION
		SELECT upsc.[CategoryID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsUserPremissionsShowCategories] AS upsc
		INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsUserPremissionSettings] AS ups ON ups.PremissionSettingsID = upsc.PremissionSettingsID
		WHERE ups.UserID = @UserID AND ups.PortalID = @PortalID AND ups.ModuleID = @ModuleID GROUP BY upsc.[CategoryID];
	END
END

IF @OnlyOneCategory <> 0 -- filtrira se po jednoj kategoriji
BEGIN
	INSERT INTO @UserViewCategoriesWithFilter SELECT [CategoryID] FROM @UserViewCategories WHERE CategoryID = @OnlyOneCategory;
	INSERT INTO @FiltredByCategories SELECT @OnlyOneCategory;
END
ELSE IF @OuterModuleID <> 0
BEGIN
	IF @CategoryFilterType = 0 -- 0 All categories
	BEGIN
		INSERT INTO @UserViewCategoriesWithFilter SELECT [CategoryID] FROM @UserViewCategories;
		INSERT INTO @FiltredByCategories SELECT [CategoryID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryList] WHERE PortalID = @PortalID;
	END
	ELSE IF @CategoryFilterType = 1 -- 1 - SELECTion
	BEGIN
		INSERT INTO @UserViewCategoriesWithFilter 
		SELECT cl.[CategoryID] FROM @UserViewCategories AS cl
		INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsModuleCategoryItems] AS mci ON mci.CategoryID = cl.CategoryID AND mci.ModuleID = @OuterModuleID
			
		INSERT INTO @FiltredByCategories SELECT [CategoryID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsModuleCategoryItems] WHERE ModuleID = @OuterModuleID;
	END
	ELSE IF @CategoryFilterType = 2 -- 2 - AutoAdd
	BEGIN
		WITH hierarchy AS(
			SELECT [CategoryID], [ParentCategory]
			FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryList] AS cl
			WHERE (cl.ParentCategory IN (SELECT [CategoryID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsModuleCategoryItems] WHERE ModuleID = @OuterModuleID) OR cl.CategoryID IN (SELECT [CategoryID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsModuleCategoryItems] WHERE ModuleID = @OuterModuleID)) AND PortalID = @PortalID
			UNION ALL
			SELECT c.[CategoryID], c.[ParentCategory]
			FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryList] AS c INNER JOIN hierarchy AS p ON c.ParentCategory = p.CategoryID WHERE c.PortalID = @PortalID
			)
		INSERT INTO @FiltredByCategories SELECT DISTINCT CategoryID FROM hierarchy;	
		INSERT INTO @UserViewCategoriesWithFilter SELECT uvc.CategoryID FROM @FiltredByCategories AS nfc INNER JOIN @UserViewCategories AS uvc ON uvc.CategoryID = nfc.CategoryID;
	END
END
ELSE
BEGIN
	IF @CategoryFilterType = 0 -- 0 All categories
	BEGIN
		INSERT INTO @UserViewCategoriesWithFilter SELECT [CategoryID] FROM @UserViewCategories;
		INSERT INTO @FiltredByCategories SELECT [CategoryID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryList] WHERE PortalID = @PortalID;
	END
	ELSE IF @CategoryFilterType = 1 -- 1 - SELECTion
	BEGIN
		IF @FillterSettingsSource = 1 -- portal
		BEGIN
			INSERT INTO @UserViewCategoriesWithFilter 
			SELECT cl.[CategoryID] FROM @UserViewCategories AS cl
			INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsPortalCategoryItems] AS pci ON pci.CategoryID = cl.CategoryID AND pci.PortalID = @PortalID
			
			INSERT INTO @FiltredByCategories SELECT [CategoryID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsPortalCategoryItems] WHERE PortalID = @PortalID;
		END
		ELSE -- module
		BEGIN
			INSERT INTO @UserViewCategoriesWithFilter 
			SELECT cl.[CategoryID] FROM @UserViewCategories AS cl
			INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsModuleCategoryItems] AS mci ON mci.CategoryID = cl.CategoryID AND mci.ModuleID = @ModuleID
			
			INSERT INTO @FiltredByCategories SELECT [CategoryID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsModuleCategoryItems] WHERE ModuleID = @ModuleID;
		END
	END
	ELSE IF @CategoryFilterType = 2 -- 2 - AutoAdd
	BEGIN
		IF @FillterSettingsSource = 1 -- portal
		BEGIN
			WITH hierarchy AS(
				SELECT [CategoryID], [ParentCategory]
				FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryList] AS cl
				WHERE (cl.ParentCategory IN (SELECT [CategoryID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsPortalCategoryItems] WHERE PortalID = @PortalID) OR cl.CategoryID IN (SELECT [CategoryID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsPortalCategoryItems] WHERE PortalID = @PortalID)) AND PortalID = @PortalID
				UNION ALL
				SELECT c.[CategoryID], c.[ParentCategory]
				FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryList] AS c INNER JOIN hierarchy AS p ON c.ParentCategory = p.CategoryID WHERE c.PortalID = @PortalID
				)
			INSERT INTO @FiltredByCategories SELECT DISTINCT CategoryID FROM hierarchy;	
			INSERT INTO @UserViewCategoriesWithFilter SELECT uvc.CategoryID FROM @FiltredByCategories AS nfc INNER JOIN @UserViewCategories AS uvc ON uvc.CategoryID = nfc.CategoryID;			
		END
		ELSE -- module
		BEGIN
			WITH hierarchy AS(
				SELECT [CategoryID], [ParentCategory]
				FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryList] AS cl
				WHERE (cl.ParentCategory IN (SELECT [CategoryID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsModuleCategoryItems] WHERE ModuleID = @ModuleID) OR cl.CategoryID IN (SELECT [CategoryID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsModuleCategoryItems] WHERE ModuleID = @ModuleID)) AND PortalID = @PortalID
				UNION ALL
				SELECT c.[CategoryID], c.[ParentCategory]
				FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryList] AS c INNER JOIN hierarchy AS p ON c.ParentCategory = p.CategoryID WHERE c.PortalID = @PortalID
				)
			INSERT INTO @FiltredByCategories SELECT DISTINCT CategoryID FROM hierarchy;	
			INSERT INTO @UserViewCategoriesWithFilter SELECT uvc.CategoryID FROM @FiltredByCategories AS nfc INNER JOIN @UserViewCategories AS uvc ON uvc.CategoryID = nfc.CategoryID;
		END
	END
END

DECLARE @FilterBySocialGroup bit;
SET @FilterBySocialGroup = 0;
DECLARE @FilterAuthorOrAuthors bit;
SET @FilterAuthorOrAuthors = 0;

DECLARE @TempAuthorsIDList TABLE (UserID int NOT NULL PRIMARY KEY);
IF @IsSocialInstance = 1
	BEGIN
		IF @FilterByDNNGroupID <> 0
		BEGIN	
			SET @FilterBySocialGroup = 1;
			IF @FilterByAuthor <> 0
			BEGIN
				SET @FilterAuthorOrAuthors = 1;
				SELECT @FilterByAuthor = UserID FROM {databaseOwner}[{objectQualifier}EasyDNNNewsAuthorProfile] WHERE [AuthorProfileID] = @FilterByAuthor;
			END
		END
	END
ELSE
BEGIN
-- ovaj dio odnosi se na filtriranje autora
	IF @OuterModuleID <> 0 AND @ShowAllAuthors = 0 -- filter iu other modula
	BEGIN
		SET @FilterAuthorOrAuthors = 1;
		INSERT INTO @TempAuthorsIDList
			SELECT [UserID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsModuleAuthorsItems] AS mai WHERE mai.ModuleID = @OuterModuleID
			UNION 
			SELECT [UserID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsAuthorProfile] AS ap 
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsAutorGroupItems] AS agi ON ap.AuthorProfileID = agi.AuthorProfileID
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsModuleGroupItems] AS mgi ON mgi.GroupID = agi.GroupID
			WHERE mgi.ModuleID = @OuterModuleID
	END
	ELSE
	BEGIN
		IF @FilterByAuthor = 0 AND @FilterByGroupID = 0 AND @ShowAllAuthors = 0 -- filter glavnog newsa
		BEGIN
			SET @FilterAuthorOrAuthors = 1;
			IF @FillterSettingsSource = 1 -- by portal
			BEGIN
				INSERT INTO @TempAuthorsIDList
				SELECT [UserID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsPortalAuthorsItems] AS pai WHERE pai.PortalID = @PortalID
				UNION 
				SELECT [UserID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsAuthorProfile] AS ap 
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsAutorGroupItems] AS agi ON ap.AuthorProfileID = agi.AuthorProfileID
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsPortalGroupItems] AS pgi ON pgi.GroupID = agi.GroupID
					WHERE pgi.PortalID = @PortalID
			END
			ELSE -- by modul
			BEGIN
				INSERT INTO @TempAuthorsIDList
				SELECT [UserID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsModuleAuthorsItems] AS mai WHERE mai.ModuleID = @ModuleID
				UNION 
				SELECT [UserID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsAuthorProfile] AS ap 
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsAutorGroupItems] AS agi ON ap.AuthorProfileID = agi.AuthorProfileID
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsModuleGroupItems] AS mgi ON mgi.GroupID = agi.GroupID
					WHERE mgi.ModuleID = @ModuleID
			END
		END
		ELSE IF @FilterByAuthor <> 0
		BEGIN
			SET @FilterAuthorOrAuthors = 1;
			INSERT INTO @TempAuthorsIDList SELECT [UserID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsAuthorProfile] WHERE [AuthorProfileID] = @FilterByAuthor;
		END
		ELSE IF @FilterByGroupID <> 0
		BEGIN
			SET @FilterAuthorOrAuthors = 1;
			INSERT INTO @TempAuthorsIDList
			SELECT [UserID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsAuthorProfile] AS ap 
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsAutorGroupItems] AS agi ON ap.AuthorProfileID = agi.AuthorProfileID	
				WHERE agi.GroupID = @FilterByGroupID
		END
	END
END
-- kategorije sa edit pravima
IF @AdminOrSuperUser = 1 OR @Perm_EditAllCategores = 1
BEGIN	
	SET @EditPermission = 1;
END

DECLARE @ArticlesInCategories int;
SET @ArticlesInCategories = 0;
DECLARE @ArticlesInRolesAndUsers int;
SET @ArticlesInRolesAndUsers = 0;

IF @IsSocialInstance = 0
BEGIN
	IF @LocaleCode <> ''''
	BEGIN
		SELECT @ArticlesInCategories = Count(CountTable.ArticleID) FROM (
			SELECT na.[ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS na
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS cat ON na.ArticleID = cat.ArticleID
				INNER JOIN @UserViewCategoriesWithFilter  AS uvcwf ON uvcwf.CategoryID = cat.CategoryID
				LEFT OUTER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsTagsItems] AS ti ON na.ArticleID = ti.ArticleID
  				LEFT OUTER JOIN @FilterTagsTable AS fbt ON ti.TagID = fbt.TagID 
  				LEFT OUTER JOIN @FilterArticlesTable AS fba ON fba.ArticleID = na.ArticleID
  				LEFT OUTER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsContentLocalization] AS ncl ON ncl.ArticleID = na.ArticleID 
			WHERE na.PortalID=@PortalID
				AND na.HasPermissions = 0
				AND ((@EditPermission = 1) OR ((@UserCanApprove = 1 OR na.Approved=1) AND (na.Active = 1 OR na.UserID=@UserID)))
				AND ((@Featured = 1 AND na.Featured = 1) OR (@Featured = 0))
				AND ((@DateRange = 0 AND (na.PublishDate <= @CurrentDate AND na.ExpireDate >= @CurrentDate)) OR (@DateRange = 1 AND ((PublishDate >= @FromDate AND PublishDate <= @ToDate) AND (ExpireDate >= @CurrentDate))))
				AND ((@FilterAuthorOrAuthors = 1 AND na.UserID IN (SELECT UserID FROM @TempAuthorsIDList)) OR (@FilterAuthorOrAuthors = 0))
				AND ((@FilterByTags = 1 AND fbt.TagID IS NOT NULL) OR (@FilterByTags = 0))
				AND ((@FilterByArticles = 1 AND fba.ArticleID IS NOT NULL) OR (@FilterByArticles = 0))
				AND ((@HideUnlocalizedItems = 1 AND ncl.ArticleID IS NOT NULL AND ncl.LocaleCode = @LocaleCode) OR (@HideUnlocalizedItems = 0))
			GROUP BY na.ArticleID
		) AS CountTable;
		SELECT @ArticlesInRolesAndUsers = Count(ArticleID) FROM (
			SELECT na.[ArticleID] from {databaseOwner}[{objectQualifier}EasyDNNNews] AS na
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsArticleUserPermissions] AS aup ON na.ArticleID = aup.ArticleID
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS cat ON na.ArticleID = cat.ArticleID
				INNER JOIN @FiltredByCategories AS fbc ON fbc.CategoryID = cat.CategoryID
				LEFT OUTER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsTagsItems] AS ti ON na.ArticleID = ti.ArticleID
  				LEFT OUTER JOIN @FilterTagsTable AS fbt ON ti.TagID = fbt.TagID
  				LEFT OUTER JOIN @FilterArticlesTable AS fba ON fba.ArticleID = na.ArticleID
  				LEFT OUTER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsContentLocalization] AS ncl ON ncl.ArticleID = na.ArticleID 	
			WHERE na.PortalID=@PortalID
				AND na.HasPermissions = 1
				AND ((@EditPermission = 1) OR (((@UserID = -1 AND aup.UserID IS NULL) OR (aup.UserID = @UserID))
					AND aup.Show = 1 AND ((@UserCanApprove = 1) OR (na.Approved=1)) AND (na.Active = 1 OR na.UserID=@UserID)
				))
				AND ((@Featured = 1 AND na.Featured = 1) OR (@Featured = 0))
				AND ((@DateRange = 0 AND (na.PublishDate <= @CurrentDate AND na.ExpireDate >= @CurrentDate)) OR (@DateRange = 1 AND ((PublishDate >= @FromDate AND PublishDate <= @ToDate) AND (ExpireDate >= @CurrentDate))))
				AND ((@FilterAuthorOrAuthors = 1 AND na.UserID IN (SELECT UserID FROM @TempAuthorsIDList)) OR (@FilterAuthorOrAuthors = 0))
				AND ((@FilterByTags = 1 AND fbt.TagID IS NOT NULL) OR (@FilterByTags = 0))
				AND ((@FilterByArticles = 1 AND fba.ArticleID IS NOT NULL) OR (@FilterByArticles = 0))
				AND ((@HideUnlocalizedItems = 1 AND ncl.ArticleID IS NOT NULL AND ncl.LocaleCode = @LocaleCode) OR (@HideUnlocalizedItems = 0))
			GROUP BY na.ArticleID
			UNION
			SELECT na.[ArticleID] from {databaseOwner}[{objectQualifier}EasyDNNNews] AS na
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsArticleRolePermissions] AS arp ON na.ArticleID = arp.ArticleID
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS cat ON na.ArticleID = cat.ArticleID
				INNER JOIN @FiltredByCategories AS fbc ON fbc.CategoryID = cat.CategoryID		
				LEFT OUTER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsTagsItems] AS ti ON na.ArticleID = ti.ArticleID
  				LEFT OUTER JOIN @FilterTagsTable AS fbt ON ti.TagID = fbt.TagID
  				LEFT OUTER JOIN @FilterArticlesTable AS fba ON fba.ArticleID = na.ArticleID
  				LEFT OUTER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsContentLocalization] AS ncl ON ncl.ArticleID = na.ArticleID  	
			WHERE na.PortalID=@PortalID
				AND na.HasPermissions = 1
				AND ((@EditPermission = 1) OR (((@UserCanApprove = 1) OR (na.Approved=1))
					AND (na.Active = 1 OR na.UserID=@UserID) AND arp.Show = 1 AND arp.RoleID IN (SELECT [RoleID] FROM @UserInRoles)
				))
				AND ((@Featured = 1 AND na.Featured = 1) OR (@Featured = 0))
				AND ((@DateRange = 0 AND (na.PublishDate <= @CurrentDate AND na.ExpireDate >= @CurrentDate)) OR (@DateRange = 1 AND ((PublishDate >= @FromDate AND PublishDate <= @ToDate) AND (ExpireDate >= @CurrentDate))))
				AND ((@FilterAuthorOrAuthors = 1 AND na.UserID IN (SELECT UserID FROM @TempAuthorsIDList)) OR (@FilterAuthorOrAuthors = 0))
				AND ((@FilterByTags = 1 AND fbt.TagID IS NOT NULL) OR (@FilterByTags = 0))
				AND ((@FilterByArticles = 1 AND fba.ArticleID IS NOT NULL) OR (@FilterByArticles = 0))
				AND ((@HideUnlocalizedItems = 1 AND ncl.ArticleID IS NOT NULL AND ncl.LocaleCode = @LocaleCode) OR (@HideUnlocalizedItems = 0))
			GROUP BY na.ArticleID
		) AS final
	END
	ELSE
	BEGIN
		SELECT @ArticlesInCategories = Count(CountTable.ArticleID) FROM (
			SELECT na.[ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS na
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS cat ON na.ArticleID = cat.ArticleID
				INNER JOIN @UserViewCategoriesWithFilter  AS uvcwf ON uvcwf.CategoryID = cat.CategoryID
				LEFT OUTER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsTagsItems] AS ti ON na.ArticleID = ti.ArticleID
  				LEFT OUTER JOIN @FilterTagsTable AS fbt ON ti.TagID = fbt.TagID 
  				LEFT OUTER JOIN @FilterArticlesTable AS fba ON fba.ArticleID = na.ArticleID
			WHERE na.PortalID=@PortalID
				AND na.HasPermissions = 0
				AND na.HideDefaultLocale = 0
				AND ((@EditPermission = 1) OR ((@UserCanApprove = 1 OR na.Approved=1) AND (na.Active = 1 OR na.UserID=@UserID)))
				AND ((@Featured = 1 AND na.Featured = 1) OR (@Featured = 0))
				AND ((@DateRange = 0 AND (na.PublishDate <= @CurrentDate AND na.ExpireDate >= @CurrentDate)) OR (@DateRange = 1 AND ((PublishDate >= @FromDate AND PublishDate <= @ToDate) AND (ExpireDate >= @CurrentDate))))
				AND ((@FilterAuthorOrAuthors = 1 AND na.UserID IN (SELECT UserID FROM @TempAuthorsIDList)) OR (@FilterAuthorOrAuthors = 0))
				AND ((@FilterByTags = 1 AND fbt.TagID IS NOT NULL) OR (@FilterByTags = 0))
				AND ((@FilterByArticles = 1 AND fba.ArticleID IS NOT NULL) OR (@FilterByArticles = 0))
			GROUP BY na.ArticleID
		) AS CountTable;
		SELECT @ArticlesInRolesAndUsers = Count(ArticleID) FROM (
			SELECT na.[ArticleID] from {databaseOwner}[{objectQualifier}EasyDNNNews] AS na
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsArticleUserPermissions] AS aup ON na.ArticleID = aup.ArticleID
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS cat ON na.ArticleID = cat.ArticleID
				INNER JOIN @FiltredByCategories AS fbc ON fbc.CategoryID = cat.CategoryID
				LEFT OUTER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsTagsItems] AS ti ON na.ArticleID = ti.ArticleID
  				LEFT OUTER JOIN @FilterTagsTable AS fbt ON ti.TagID = fbt.TagID
  				LEFT OUTER JOIN @FilterArticlesTable AS fba ON fba.ArticleID = na.ArticleID
			WHERE na.PortalID=@PortalID
				AND na.HasPermissions = 1
				AND na.HideDefaultLocale = 0
				AND ((@EditPermission = 1) OR (((@UserID = -1 AND aup.UserID IS NULL) OR (aup.UserID = @UserID))
					AND aup.Show = 1 AND ((@UserCanApprove = 1) OR (na.Approved=1)) AND (na.Active = 1 OR na.UserID=@UserID)
				))
				AND ((@Featured = 1 AND na.Featured = 1) OR (@Featured = 0))
				AND ((@DateRange = 0 AND (na.PublishDate <= @CurrentDate AND na.ExpireDate >= @CurrentDate)) OR (@DateRange = 1 AND ((PublishDate >= @FromDate AND PublishDate <= @ToDate) AND (ExpireDate >= @CurrentDate))))
				AND ((@FilterAuthorOrAuthors = 1 AND na.UserID IN (SELECT UserID FROM @TempAuthorsIDList)) OR (@FilterAuthorOrAuthors = 0))
				AND ((@FilterByTags = 1 AND fbt.TagID IS NOT NULL) OR (@FilterByTags = 0))
				AND ((@FilterByArticles = 1 AND fba.ArticleID IS NOT NULL) OR (@FilterByArticles = 0))
			GROUP BY na.ArticleID
			UNION
			SELECT na.[ArticleID] from {databaseOwner}[{objectQualifier}EasyDNNNews] AS na
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsArticleRolePermissions] AS arp ON na.ArticleID = arp.ArticleID
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS cat ON na.ArticleID = cat.ArticleID
				INNER JOIN @FiltredByCategories AS fbc ON fbc.CategoryID = cat.CategoryID		
				LEFT OUTER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsTagsItems] AS ti ON na.ArticleID = ti.ArticleID
  				LEFT OUTER JOIN @FilterTagsTable AS fbt ON ti.TagID = fbt.TagID
  				LEFT OUTER JOIN @FilterArticlesTable AS fba ON fba.ArticleID = na.ArticleID
			WHERE na.PortalID=@PortalID
				AND na.HasPermissions = 1
				AND na.HideDefaultLocale = 0
				AND ((@EditPermission = 1) OR (((@UserCanApprove = 1) OR (na.Approved=1))
					AND (na.Active = 1 OR na.UserID=@UserID) AND arp.Show = 1 AND arp.RoleID IN (SELECT [RoleID] FROM @UserInRoles)
				))
				AND ((@Featured = 1 AND na.Featured = 1) OR (@Featured = 0))
				AND ((@DateRange = 0 AND (na.PublishDate <= @CurrentDate AND na.ExpireDate >= @CurrentDate)) OR (@DateRange = 1 AND ((PublishDate >= @FromDate AND PublishDate <= @ToDate) AND (ExpireDate >= @CurrentDate))))
				AND ((@FilterAuthorOrAuthors = 1 AND na.UserID IN (SELECT UserID FROM @TempAuthorsIDList)) OR (@FilterAuthorOrAuthors = 0))
				AND ((@FilterByTags = 1 AND fbt.TagID IS NOT NULL) OR (@FilterByTags = 0))
				AND ((@FilterByArticles = 1 AND fba.ArticleID IS NOT NULL) OR (@FilterByArticles = 0))
			GROUP BY na.ArticleID
		) AS final
	END
END
ELSE IF @FilterBySocialGroup = 1
BEGIN
	IF @LocaleCode <> ''''
	BEGIN
		SELECT @ArticlesInCategories = Count(CountTable.ArticleID) FROM (
			SELECT na.[ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS na
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS cat ON na.ArticleID = cat.ArticleID
				INNER JOIN @UserViewCategoriesWithFilter  AS uvcwf ON uvcwf.CategoryID = cat.CategoryID
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = na.ArticleID
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialGroupItems] AS sgi ON sgi.ArticleID = na.ArticleID AND sgi.RoleID = @FilterByDNNGroupID
				INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId, @UserID, @FilterByDNNGroupID) AS t ON t.seckey = nss.SecurityKey
				LEFT OUTER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsTagsItems] AS ti ON na.ArticleID = ti.ArticleID
  				LEFT OUTER JOIN @FilterTagsTable AS fbt ON ti.TagID = fbt.TagID
  				LEFT OUTER JOIN @FilterArticlesTable AS fba ON fba.ArticleID = na.ArticleID
  				LEFT OUTER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsContentLocalization] AS ncl ON ncl.ArticleID = na.ArticleID  	
			WHERE na.PortalID=@PortalID
				AND na.HasPermissions = 0
				AND ((@EditPermission = 1) OR ((@UserCanApprove = 1 OR na.Approved=1) AND (na.Active = 1 OR na.UserID=@UserID)))
				AND ((@Featured = 1 AND na.Featured = 1) OR (@Featured = 0))
				AND ((@DateRange = 0 AND (na.PublishDate <= @CurrentDate AND na.ExpireDate >= @CurrentDate)) OR (@DateRange = 1 AND ((PublishDate >= @FromDate AND PublishDate <= @ToDate) AND (ExpireDate >= @CurrentDate))))
				AND ((@FilterAuthorOrAuthors = 1 AND na.UserID = @FilterByAuthor) OR (@FilterAuthorOrAuthors = 0))
				AND ((@FilterByTags = 1 AND fbt.TagID IS NOT NULL) OR (@FilterByTags = 0))
				AND ((@FilterByArticles = 1 AND fba.ArticleID IS NOT NULL) OR (@FilterByArticles = 0))
				AND ((@HideUnlocalizedItems = 1 AND ncl.ArticleID IS NOT NULL AND ncl.LocaleCode = @LocaleCode) OR (@HideUnlocalizedItems = 0))
			GROUP BY na.ArticleID
		) AS CountTable;
		SELECT @ArticlesInRolesAndUsers = Count(ArticleID) FROM (
			SELECT na.[ArticleID] from {databaseOwner}[{objectQualifier}EasyDNNNews] AS na
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsArticleUserPermissions] AS aup ON na.ArticleID = aup.ArticleID
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS cat ON na.ArticleID = cat.ArticleID
				INNER JOIN @FiltredByCategories AS fbc ON fbc.CategoryID = cat.CategoryID
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = na.ArticleID
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialGroupItems] AS sgi ON sgi.ArticleID = na.ArticleID AND sgi.RoleID = @FilterByDNNGroupID
				INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId, @UserID, @FilterByDNNGroupID) AS t ON t.seckey = nss.SecurityKey
				LEFT OUTER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsTagsItems] AS ti ON na.ArticleID = ti.ArticleID
  				LEFT OUTER JOIN @FilterTagsTable AS fbt ON ti.TagID = fbt.TagID
  				LEFT OUTER JOIN @FilterArticlesTable AS fba ON fba.ArticleID = na.ArticleID
  				LEFT OUTER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsContentLocalization] AS ncl ON ncl.ArticleID = na.ArticleID
			WHERE na.PortalID=@PortalID
				AND na.HasPermissions = 1
				AND ((@EditPermission = 1) OR (((@UserID = -1 AND aup.UserID IS NULL) OR (aup.UserID = @UserID))
					AND aup.Show = 1 AND ((@UserCanApprove = 1) OR (na.Approved=1)) AND (na.Active = 1 OR na.UserID=@UserID)
				))
				AND ((@Featured = 1 AND na.Featured = 1) OR (@Featured = 0))
				AND ((@DateRange = 0 AND (na.PublishDate <= @CurrentDate AND na.ExpireDate >= @CurrentDate)) OR (@DateRange = 1 AND ((PublishDate >= @FromDate AND PublishDate <= @ToDate) AND (ExpireDate >= @CurrentDate))))
				AND ((@FilterAuthorOrAuthors = 1 AND na.UserID = @FilterByAuthor) OR (@FilterAuthorOrAuthors = 0))
				AND ((@FilterByTags = 1 AND fbt.TagID IS NOT NULL) OR (@FilterByTags = 0))
				AND ((@FilterByArticles = 1 AND fba.ArticleID IS NOT NULL) OR (@FilterByArticles = 0))
				AND ((@HideUnlocalizedItems = 1 AND ncl.ArticleID IS NOT NULL AND ncl.LocaleCode = @LocaleCode) OR (@HideUnlocalizedItems = 0))
			GROUP BY na.ArticleID
			UNION
			SELECT na.[ArticleID] from {databaseOwner}[{objectQualifier}EasyDNNNews] AS na
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsArticleRolePermissions] AS arp ON na.ArticleID = arp.ArticleID
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS cat ON na.ArticleID = cat.ArticleID
				INNER JOIN @FiltredByCategories AS fbc ON fbc.CategoryID = cat.CategoryID
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = na.ArticleID
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialGroupItems] AS sgi ON sgi.ArticleID = na.ArticleID AND sgi.RoleID = @FilterByDNNGroupID
				INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId, @UserID, @FilterByDNNGroupID) AS t ON t.seckey = nss.SecurityKey
				LEFT OUTER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsTagsItems] AS ti ON na.ArticleID = ti.ArticleID
  				LEFT OUTER JOIN @FilterTagsTable AS fbt ON ti.TagID = fbt.TagID
  				LEFT OUTER JOIN @FilterArticlesTable AS fba ON fba.ArticleID = na.ArticleID
  				LEFT OUTER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsContentLocalization] AS ncl ON ncl.ArticleID = na.ArticleID  	 	
			WHERE na.PortalID=@PortalID
				AND na.HasPermissions = 1
				AND ((@EditPermission = 1) OR (((@UserCanApprove = 1) OR (na.Approved=1))
					AND (na.Active = 1 OR na.UserID=@UserID) AND arp.Show = 1 AND arp.RoleID IN (SELECT [RoleID] FROM @UserInRoles)
				))
				AND ((@Featured = 1 AND na.Featured = 1) OR (@Featured = 0))
				AND ((@DateRange = 0 AND (na.PublishDate <= @CurrentDate AND na.ExpireDate >= @CurrentDate)) OR (@DateRange = 1 AND ((PublishDate >= @FromDate AND PublishDate <= @ToDate) AND (ExpireDate >= @CurrentDate))))
				AND ((@FilterAuthorOrAuthors = 1 AND na.UserID = @FilterByAuthor) OR (@FilterAuthorOrAuthors = 0))
				AND ((@FilterByTags = 1 AND fbt.TagID IS NOT NULL) OR (@FilterByTags = 0))
				AND ((@FilterByArticles = 1 AND fba.ArticleID IS NOT NULL) OR (@FilterByArticles = 0))
				AND ((@HideUnlocalizedItems = 1 AND ncl.ArticleID IS NOT NULL AND ncl.LocaleCode = @LocaleCode) OR (@HideUnlocalizedItems = 0))
			GROUP BY na.ArticleID
		) AS final
	END
	ELSE
	BEGIN
		SELECT @ArticlesInCategories = Count(CountTable.ArticleID) FROM (
			SELECT na.[ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS na
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS cat ON na.ArticleID = cat.ArticleID
				INNER JOIN @UserViewCategoriesWithFilter  AS uvcwf ON uvcwf.CategoryID = cat.CategoryID
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = na.ArticleID
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialGroupItems] AS sgi ON sgi.ArticleID = na.ArticleID AND sgi.RoleID = @FilterByDNNGroupID
				INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId, @UserID, @FilterByDNNGroupID) AS t ON t.seckey = nss.SecurityKey
				LEFT OUTER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsTagsItems] AS ti ON na.ArticleID = ti.ArticleID
  				LEFT OUTER JOIN @FilterTagsTable AS fbt ON ti.TagID = fbt.TagID
  				LEFT OUTER JOIN @FilterArticlesTable AS fba ON fba.ArticleID = na.ArticleID
			WHERE na.PortalID=@PortalID
				AND na.HasPermissions = 0
				AND na.HideDefaultLocale = 0
				AND ((@EditPermission = 1) OR ((@UserCanApprove = 1 OR na.Approved=1) AND (na.Active = 1 OR na.UserID=@UserID)))
				AND ((@Featured = 1 AND na.Featured = 1) OR (@Featured = 0))
				AND ((@DateRange = 0 AND (na.PublishDate <= @CurrentDate AND na.ExpireDate >= @CurrentDate)) OR (@DateRange = 1 AND ((PublishDate >= @FromDate AND PublishDate <= @ToDate) AND (ExpireDate >= @CurrentDate))))
				AND ((@FilterAuthorOrAuthors = 1 AND na.UserID = @FilterByAuthor) OR (@FilterAuthorOrAuthors = 0))
				AND ((@FilterByTags = 1 AND fbt.TagID IS NOT NULL) OR (@FilterByTags = 0))
				AND ((@FilterByArticles = 1 AND fba.ArticleID IS NOT NULL) OR (@FilterByArticles = 0))
			GROUP BY na.ArticleID
		) AS CountTable;
		SELECT @ArticlesInRolesAndUsers = Count(ArticleID) FROM (
			SELECT na.[ArticleID] from {databaseOwner}[{objectQualifier}EasyDNNNews] AS na
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsArticleUserPermissions] AS aup ON na.ArticleID = aup.ArticleID
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS cat ON na.ArticleID = cat.ArticleID
				INNER JOIN @FiltredByCategories AS fbc ON fbc.CategoryID = cat.CategoryID
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = na.ArticleID
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialGroupItems] AS sgi ON sgi.ArticleID = na.ArticleID AND sgi.RoleID = @FilterByDNNGroupID
				INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId, @UserID, @FilterByDNNGroupID) AS t ON t.seckey = nss.SecurityKey
				LEFT OUTER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsTagsItems] AS ti ON na.ArticleID = ti.ArticleID
  				LEFT OUTER JOIN @FilterTagsTable AS fbt ON ti.TagID = fbt.TagID
  				LEFT OUTER JOIN @FilterArticlesTable AS fba ON fba.ArticleID = na.ArticleID
			WHERE na.PortalID=@PortalID
				AND na.HasPermissions = 1
				AND na.HideDefaultLocale = 0
				AND ((@EditPermission = 1) OR (((@UserID = -1 AND aup.UserID IS NULL) OR (aup.UserID = @UserID))
					AND aup.Show = 1 AND ((@UserCanApprove = 1) OR (na.Approved=1)) AND (na.Active = 1 OR na.UserID=@UserID)
				))
				AND ((@Featured = 1 AND na.Featured = 1) OR (@Featured = 0))
				AND ((@DateRange = 0 AND (na.PublishDate <= @CurrentDate AND na.ExpireDate >= @CurrentDate)) OR (@DateRange = 1 AND ((PublishDate >= @FromDate AND PublishDate <= @ToDate) AND (ExpireDate >= @CurrentDate))))
				AND((@FilterAuthorOrAuthors = 1 AND na.UserID = @FilterByAuthor) OR (@FilterAuthorOrAuthors = 0))
				AND ((@FilterByTags = 1 AND fbt.TagID IS NOT NULL) OR (@FilterByTags = 0))
				AND ((@FilterByArticles = 1 AND fba.ArticleID IS NOT NULL) OR (@FilterByArticles = 0))
			GROUP BY na.ArticleID
			UNION
			SELECT na.[ArticleID] from {databaseOwner}[{objectQualifier}EasyDNNNews] AS na
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsArticleRolePermissions] AS arp ON na.ArticleID = arp.ArticleID
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS cat ON na.ArticleID = cat.ArticleID
				INNER JOIN @FiltredByCategories AS fbc ON fbc.CategoryID = cat.CategoryID
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = na.ArticleID
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialGroupItems] AS sgi ON sgi.ArticleID = na.ArticleID AND sgi.RoleID = @FilterByDNNGroupID
				INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId, @UserID, @FilterByDNNGroupID) AS t ON t.seckey = nss.SecurityKey
				LEFT OUTER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsTagsItems] AS ti ON na.ArticleID = ti.ArticleID
  				LEFT OUTER JOIN @FilterTagsTable AS fbt ON ti.TagID = fbt.TagID
  				LEFT OUTER JOIN @FilterArticlesTable AS fba ON fba.ArticleID = na.ArticleID	
			WHERE na.PortalID=@PortalID
				AND na.HasPermissions = 1
				AND na.HideDefaultLocale = 0
				AND ((@EditPermission = 1) OR (((@UserCanApprove = 1) OR (na.Approved=1))
					AND (na.Active = 1 OR na.UserID=@UserID) AND arp.Show = 1 AND arp.RoleID IN (SELECT [RoleID] FROM @UserInRoles)
				))
				AND ((@Featured = 1 AND na.Featured = 1) OR (@Featured = 0))
				AND ((@DateRange = 0 AND (na.PublishDate <= @CurrentDate AND na.ExpireDate >= @CurrentDate)) OR (@DateRange = 1 AND ((PublishDate >= @FromDate AND PublishDate <= @ToDate) AND (ExpireDate >= @CurrentDate))))
				AND((@FilterAuthorOrAuthors = 1 AND na.UserID = @FilterByAuthor) OR (@FilterAuthorOrAuthors = 0))
				AND ((@FilterByTags = 1 AND fbt.TagID IS NOT NULL) OR (@FilterByTags = 0))
				AND ((@FilterByArticles = 1 AND fba.ArticleID IS NOT NULL) OR (@FilterByArticles = 0))
			GROUP BY na.ArticleID
		) AS final
	END
END 
ELSE IF @FilterByDNNUserID <> 0
BEGIN
	IF @LocaleCode <> ''''
	BEGIN
		SELECT @ArticlesInCategories = Count(CountTable.ArticleID) FROM (
			SELECT na.[ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS na
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS cat ON na.ArticleID = cat.ArticleID
				INNER JOIN @UserViewCategoriesWithFilter  AS uvcwf ON uvcwf.CategoryID = cat.CategoryID
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = na.ArticleID
				INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserID, @FilterByDNNGroupID) AS t ON t.seckey = nss.SecurityKey
				LEFT OUTER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsTagsItems] AS ti ON na.ArticleID = ti.ArticleID
  				LEFT OUTER JOIN @FilterTagsTable AS fbt ON ti.TagID = fbt.TagID
  				LEFT OUTER JOIN @FilterArticlesTable AS fba ON fba.ArticleID = na.ArticleID
  				LEFT OUTER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsContentLocalization] AS ncl ON ncl.ArticleID = na.ArticleID
			WHERE na.PortalID=@PortalID
				AND na.HasPermissions = 0
				AND ((@EditPermission = 1) OR ((@UserCanApprove = 1 OR na.Approved=1) AND (na.Active = 1 OR na.UserID=@UserID)))
				AND ((@Featured = 1 AND na.Featured = 1) OR (@Featured = 0))
				AND ((@DateRange = 0 AND (na.PublishDate <= @CurrentDate AND na.ExpireDate >= @CurrentDate)) OR (@DateRange = 1 AND ((PublishDate >= @FromDate AND PublishDate <= @ToDate) AND (ExpireDate >= @CurrentDate))))
				AND na.UserID = @FilterByDNNUserID
				AND ((@FilterByTags = 1 AND fbt.TagID IS NOT NULL) OR (@FilterByTags = 0))
				AND ((@FilterByArticles = 1 AND fba.ArticleID IS NOT NULL) OR (@FilterByArticles = 0))
				AND ((@HideUnlocalizedItems = 1 AND ncl.ArticleID IS NOT NULL AND ncl.LocaleCode = @LocaleCode) OR (@HideUnlocalizedItems = 0))
			GROUP BY na.ArticleID
		) AS CountTable;
		SELECT @ArticlesInRolesAndUsers = Count(ArticleID) FROM (
			SELECT na.[ArticleID] from {databaseOwner}[{objectQualifier}EasyDNNNews] AS na
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsArticleUserPermissions] AS aup ON na.ArticleID = aup.ArticleID
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS cat ON na.ArticleID = cat.ArticleID
				INNER JOIN @FiltredByCategories AS fbc ON fbc.CategoryID = cat.CategoryID
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = na.ArticleID
				INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserID, @FilterByDNNGroupID) AS t ON t.seckey = nss.SecurityKey
				LEFT OUTER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsTagsItems] AS ti ON na.ArticleID = ti.ArticleID
  				LEFT OUTER JOIN @FilterTagsTable AS fbt ON ti.TagID = fbt.TagID 
  				LEFT OUTER JOIN @FilterArticlesTable AS fba ON fba.ArticleID = na.ArticleID
  				LEFT OUTER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsContentLocalization] AS ncl ON ncl.ArticleID = na.ArticleID  		
			WHERE na.PortalID=@PortalID
				AND na.HasPermissions = 1
				AND na.UserID = @FilterByDNNUserID
				AND ((@EditPermission = 1) OR (((@UserID = -1 AND aup.UserID IS NULL) OR (aup.UserID = @UserID))
					AND aup.Show = 1 AND ((@UserCanApprove = 1) OR (na.Approved=1)) AND (na.Active = 1 OR na.UserID=@UserID)
				))
				AND ((@Featured = 1 AND na.Featured = 1) OR (@Featured = 0))
				AND ((@DateRange = 0 AND (na.PublishDate <= @CurrentDate AND na.ExpireDate >= @CurrentDate)) OR (@DateRange = 1 AND ((PublishDate >= @FromDate AND PublishDate <= @ToDate) AND (ExpireDate >= @CurrentDate))))
				AND ((@FilterByTags = 1 AND fbt.TagID IS NOT NULL) OR (@FilterByTags = 0))
				AND ((@FilterByArticles = 1 AND fba.ArticleID IS NOT NULL) OR (@FilterByArticles = 0))
				AND ((@HideUnlocalizedItems = 1 AND ncl.ArticleID IS NOT NULL AND ncl.LocaleCode = @LocaleCode) OR (@HideUnlocalizedItems = 0))
			GROUP BY na.ArticleID
			UNION
			SELECT na.[ArticleID] from {databaseOwner}[{objectQualifier}EasyDNNNews] AS na
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsArticleRolePermissions] AS arp ON na.ArticleID = arp.ArticleID
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS cat ON na.ArticleID = cat.ArticleID
				INNER JOIN @FiltredByCategories AS fbc ON fbc.CategoryID = cat.CategoryID
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = na.ArticleID
				INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserID, @FilterByDNNGroupID) AS t ON t.seckey = nss.SecurityKey
				LEFT OUTER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsTagsItems] AS ti ON na.ArticleID = ti.ArticleID
  				LEFT OUTER JOIN @FilterTagsTable AS fbt ON ti.TagID = fbt.TagID
  				LEFT OUTER JOIN @FilterArticlesTable AS fba ON fba.ArticleID = na.ArticleID
  				LEFT OUTER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsContentLocalization] AS ncl ON ncl.ArticleID = na.ArticleID  	
			WHERE na.PortalID=@PortalID
				AND na.HasPermissions = 1
				AND na.UserID = @FilterByDNNUserID
				AND ((@EditPermission = 1) OR (((@UserCanApprove = 1) OR (na.Approved=1))
					AND (na.Active = 1 OR na.UserID=@UserID) AND arp.Show = 1 AND arp.RoleID IN (SELECT [RoleID] FROM @UserInRoles)
				))
				AND ((@Featured = 1 AND na.Featured = 1) OR (@Featured = 0))
				AND ((@DateRange = 0 AND (na.PublishDate <= @CurrentDate AND na.ExpireDate >= @CurrentDate)) OR (@DateRange = 1 AND ((PublishDate >= @FromDate AND PublishDate <= @ToDate) AND (ExpireDate >= @CurrentDate))))
				AND ((@FilterByTags = 1 AND fbt.TagID IS NOT NULL) OR (@FilterByTags = 0))
				AND ((@FilterByArticles = 1 AND fba.ArticleID IS NOT NULL) OR (@FilterByArticles = 0))
				AND ((@HideUnlocalizedItems = 1 AND ncl.ArticleID IS NOT NULL AND ncl.LocaleCode = @LocaleCode) OR (@HideUnlocalizedItems = 0))
			GROUP BY na.ArticleID
		) AS final
	END
	ELSE
	BEGIN
		SELECT @ArticlesInCategories = Count(CountTable.ArticleID) FROM (
			SELECT na.[ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS na
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS cat ON na.ArticleID = cat.ArticleID
				INNER JOIN @UserViewCategoriesWithFilter  AS uvcwf ON uvcwf.CategoryID = cat.CategoryID
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = na.ArticleID
				INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserID, @FilterByDNNGroupID) AS t ON t.seckey = nss.SecurityKey
				LEFT OUTER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsTagsItems] AS ti ON na.ArticleID = ti.ArticleID
  				LEFT OUTER JOIN @FilterTagsTable AS fbt ON ti.TagID = fbt.TagID
  				LEFT OUTER JOIN @FilterArticlesTable AS fba ON fba.ArticleID = na.ArticleID
			WHERE na.PortalID=@PortalID
				AND na.HasPermissions = 0
				AND na.HideDefaultLocale = 0
				AND na.UserID = @FilterByDNNUserID
				AND ((@EditPermission = 1) OR ((@UserCanApprove = 1 OR na.Approved=1) AND (na.Active = 1 OR na.UserID=@UserID)))
				AND ((@Featured = 1 AND na.Featured = 1) OR (@Featured = 0))
				AND((@DateRange = 0 AND (na.PublishDate <= @CurrentDate AND na.ExpireDate >= @CurrentDate)) OR (@DateRange = 1 AND ((PublishDate >= @FromDate AND PublishDate <= @ToDate) AND (ExpireDate >= @CurrentDate))))
				AND ((@FilterByTags = 1 AND fbt.TagID IS NOT NULL) OR (@FilterByTags = 0))
				AND ((@FilterByArticles = 1 AND fba.ArticleID IS NOT NULL) OR (@FilterByArticles = 0))
			GROUP BY na.ArticleID
		) AS CountTable;
		SELECT @ArticlesInRolesAndUsers = Count(ArticleID) FROM (
			SELECT na.[ArticleID] from {databaseOwner}[{objectQualifier}EasyDNNNews] AS na
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsArticleUserPermissions] AS aup ON na.ArticleID = aup.ArticleID
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS cat ON na.ArticleID = cat.ArticleID
				INNER JOIN @FiltredByCategories AS fbc ON fbc.CategoryID = cat.CategoryID
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = na.ArticleID
				INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserID, @FilterByDNNGroupID) AS t ON t.seckey = nss.SecurityKey
				LEFT OUTER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsTagsItems] AS ti ON na.ArticleID = ti.ArticleID
  				LEFT OUTER JOIN @FilterTagsTable AS fbt ON ti.TagID = fbt.TagID 
  				LEFT OUTER JOIN @FilterArticlesTable AS fba ON fba.ArticleID = na.ArticleID
			WHERE na.PortalID=@PortalID
				AND na.HasPermissions = 1
				AND na.HideDefaultLocale = 0
				AND na.UserID = @FilterByDNNUserID
				AND ((@EditPermission = 1) OR (((@UserID = -1 AND aup.UserID IS NULL) OR (aup.UserID = @UserID))
					AND aup.Show = 1 AND ((@UserCanApprove = 1) OR (na.Approved=1)) AND (na.Active = 1 OR na.UserID=@UserID)
				))
				AND ((@Featured = 1 AND na.Featured = 1) OR (@Featured = 0))
				AND ((@DateRange = 0 AND (na.PublishDate <= @CurrentDate AND na.ExpireDate >= @CurrentDate)) OR (@DateRange = 1 AND ((PublishDate >= @FromDate AND PublishDate <= @ToDate) AND (ExpireDate >= @CurrentDate))))
				AND ((@FilterByTags = 1 AND fbt.TagID IS NOT NULL) OR (@FilterByTags = 0))
				AND ((@FilterByArticles = 1 AND fba.ArticleID IS NOT NULL) OR (@FilterByArticles = 0))
			GROUP BY na.ArticleID
			UNION
			SELECT na.[ArticleID] from {databaseOwner}[{objectQualifier}EasyDNNNews] AS na
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsArticleRolePermissions] AS arp ON na.ArticleID = arp.ArticleID
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS cat ON na.ArticleID = cat.ArticleID
				INNER JOIN @FiltredByCategories AS fbc ON fbc.CategoryID = cat.CategoryID
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = na.ArticleID
				INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserID, @FilterByDNNGroupID) AS t ON t.seckey = nss.SecurityKey
				LEFT OUTER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsTagsItems] AS ti ON na.ArticleID = ti.ArticleID
  				LEFT OUTER JOIN @FilterTagsTable AS fbt ON ti.TagID = fbt.TagID
  				LEFT OUTER JOIN @FilterArticlesTable AS fba ON fba.ArticleID = na.ArticleID
			WHERE na.PortalID=@PortalID
				AND na.HasPermissions = 1
				AND na.HideDefaultLocale = 0
				AND na.UserID = @FilterByDNNUserID
				AND ((@EditPermission = 1) OR (((@UserCanApprove = 1) OR (na.Approved=1))
					AND (na.Active = 1 OR na.UserID=@UserID) AND arp.Show = 1 AND arp.RoleID IN (SELECT [RoleID] FROM @UserInRoles)
				))
				AND ((@Featured = 1 AND na.Featured = 1) OR (@Featured = 0))
				AND ((@DateRange = 0 AND (na.PublishDate <= @CurrentDate AND na.ExpireDate >= @CurrentDate)) OR (@DateRange = 1 AND ((PublishDate >= @FromDate AND PublishDate <= @ToDate) AND (ExpireDate >= @CurrentDate))))
				AND ((@FilterByTags = 1 AND fbt.TagID IS NOT NULL) OR (@FilterByTags = 0))
				AND ((@FilterByArticles = 1 AND fba.ArticleID IS NOT NULL) OR (@FilterByArticles = 0))
			GROUP BY na.ArticleID
		) AS final
	END
END
SELECT @ArticlesInRolesAndUsers + @ArticlesInCategories' 
END
GO
/****** Object:  StoredProcedure {databaseOwner}[{objectQualifier}EasyDNNNewsGetItemsCountForArticleEditor]    Script Date: 06/24/2013 16:39:07 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'{databaseOwner}[{objectQualifier}EasyDNNNewsGetItemsCountForArticleEditor]') AND type in (N'P', N'PC'))
BEGIN
EXEC dbo.sp_executesql @statement = N'CREATE PROCEDURE {databaseOwner}[{objectQualifier}EasyDNNNewsGetItemsCountForArticleEditor]
	@PortalID int, -- current Portal
	@ModuleID int, -- current Module, portal sharing isto sadrzi dobre kategorije, auto add i setingsi su snimljeni kod tog modula
	@UserID int,
	@ItemsFrom int = 1,
	@ItemsTo int = 5,
	@OnlyOneCategory int = 0, -- used for category menu or vhen need to filter by one category
	@FilterByAuthor int = 0, -- ako se selektiran jedan autor
	@FilterByGroupID int = 0, -- ako je selektirana grupa
	@EditOnlyAsOwner bit = 0, -- news settings
	@UserCanApprove bit = 0, -- news settings
	@Perm_ViewAllCategores bit = 0, -- permission settings View all categories
	@Perm_EditAllCategores bit = 0, -- permission settings Edit all categories
	@AdminOrSuperUser bit = 0,
	@PermissionSettingsSource bit = 1, -- 1 portal, 0 module
	@OrderBy nvarchar(20) = ''PublishDate DESC'',
	@OrderBy2 nvarchar(20) = '''',
	
	@Featured tinyint = 0,
	@Published tinyint = 0,
	@Approved tinyint = 0,
	@ArticleType tinyint = 0,
	@PermissionsByArticle tinyint = 0	
AS
SET NOCOUNT ON;
DECLARE @EditPermission tinyint;
SET @EditPermission = 0;
DECLARE @UserInRoles TABLE (RoleID int);
INSERT INTO @UserInRoles SELECT DISTINCT ur.[RoleID] FROM {databaseOwner}[{objectQualifier}UserRoles] AS ur INNER JOIN {databaseOwner}[{objectQualifier}Roles] AS r ON ur.RoleID = r.RoleID WHERE ur.UserID = @UserID AND r.PortalID = @PortalID AND (ur.ExpiryDate IS NULL OR ur.ExpiryDate > GETUTCDATE()) AND (ur.EffectiveDate IS NULL OR ur.EffectiveDate < GETUTCDATE());
DECLARE @UserViewCategories TABLE (CategoryID int NOT NULL PRIMARY KEY); -- all categories which user can see based on permissions
DECLARE @UserEditCategories TABLE (CategoryID int NOT NULL PRIMARY KEY); -- all categories which user can edit based on permissions
DECLARE @UserViewCategoriesWithFilter TABLE (CategoryID int NOT NULL PRIMARY KEY); -- all categories which user can see based on permissions and Module filter
DECLARE @FiltredByCategories TABLE (CategoryID int NOT NULL PRIMARY KEY); -- all categories that are filtred by module or portal

IF @AdminOrSuperUser = 1 OR @Perm_ViewAllCategores = 1
BEGIN
	INSERT INTO @UserViewCategories SELECT [CategoryID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryList] WHERE PortalID = @PortalID;
END
ELSE IF @UserID = -1
BEGIN	
	IF @PermissionSettingsSource = 1 -- by portal
	BEGIN
		INSERT INTO @UserViewCategories
		SELECT rpsc.[CategoryID] FROM  {databaseOwner}[{objectQualifier}EasyDNNNewsRolePremissionsShowCategories] AS rpsc 
		INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsRolePremissionSettings] AS rps ON rps.PremissionSettingsID = rpsc.PremissionSettingsID
		WHERE rps.PortalID = @PortalID  AND rps.ModuleID IS NULL AND rps.RoleID IS NULL;
	END
	ELSE -- by module
	BEGIN
	INSERT INTO @UserViewCategories
		SELECT rpsc.[CategoryID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsRolePremissionsShowCategories] AS rpsc
		INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsRolePremissionSettings] AS rps ON rps.PremissionSettingsID = rpsc.PremissionSettingsID
		WHERE rps.PortalID = @PortalID AND rps.ModuleID = @ModuleID AND rps.RoleID IS NULL;
	END
END
ELSE -- registrirani korisnik
BEGIN
	IF @PermissionSettingsSource = 1 -- by portal
	BEGIN
		INSERT INTO @UserViewCategories
		SELECT rpsc.[CategoryID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsRolePremissionsShowCategories] AS rpsc
		INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsRolePremissionSettings] AS rps ON rps.PremissionSettingsID = rpsc.PremissionSettingsID
		INNER JOIN @UserInRoles AS uir ON rps.RoleID = uir.RoleID
		WHERE rps.PortalID = @PortalID AND rps.ModuleID IS NULL GROUP BY rpsc.[CategoryID]
		UNION
		SELECT upsc.[CategoryID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsUserPremissionsShowCategories] AS upsc
		INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsUserPremissionSettings] AS ups ON ups.PremissionSettingsID = upsc.PremissionSettingsID
		WHERE ups.UserID = @UserID AND ups.PortalID = @PortalID AND ups.ModuleID IS NULL GROUP BY upsc.[CategoryID];
	END
	ELSE -- by module
	BEGIN
		INSERT INTO @UserViewCategories
		SELECT rpsc.[CategoryID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsRolePremissionsShowCategories] AS rpsc
		INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsRolePremissionSettings] AS rps ON rps.PremissionSettingsID = rpsc.PremissionSettingsID
		INNER JOIN @UserInRoles AS uir ON rps.RoleID = uir.RoleID
		WHERE rps.PortalID = @PortalID AND rps.ModuleID = @ModuleID GROUP BY rpsc.[CategoryID]
		UNION
		SELECT upsc.[CategoryID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsUserPremissionsShowCategories] AS upsc
		INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsUserPremissionSettings] AS ups ON ups.PremissionSettingsID = upsc.PremissionSettingsID
		WHERE ups.UserID = @UserID AND ups.PortalID = @PortalID AND ups.ModuleID = @ModuleID GROUP BY upsc.[CategoryID];
	END
END

IF @OnlyOneCategory <> 0 -- filtrira se po jednoj kategoriji
BEGIN
	INSERT INTO @UserViewCategoriesWithFilter SELECT [CategoryID] FROM @UserViewCategories WHERE CategoryID = @OnlyOneCategory;
	INSERT INTO @FiltredByCategories SELECT @OnlyOneCategory;
END
ELSE
BEGIN
	INSERT INTO @UserViewCategoriesWithFilter SELECT [CategoryID] FROM @UserViewCategories;
	INSERT INTO @FiltredByCategories SELECT [CategoryID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryList] WHERE PortalID = @PortalID;
END

DECLARE @FilterAuthorOrAuthors bit;
SET @FilterAuthorOrAuthors = 0;
DECLARE @TempAuthorsIDList TABLE (UserID int NOT NULL PRIMARY KEY);
IF @FilterByAuthor <> 0
BEGIN
	SET @FilterAuthorOrAuthors = 1;
	INSERT INTO @TempAuthorsIDList SELECT @FilterByAuthor;
END
ELSE IF @FilterByGroupID <> 0
BEGIN
	SET @FilterAuthorOrAuthors = 1;
	INSERT INTO @TempAuthorsIDList
	SELECT [UserID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsAuthorProfile] AS ap 
		INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsAutorGroupItems] AS agi ON ap.AuthorProfileID = agi.AuthorProfileID	
		WHERE agi.GroupID = @FilterByGroupID
END

DECLARE @ArticlesInCategories int;
SET @ArticlesInCategories = 0;
DECLARE @ArticlesInRolesAndUsers int;
SET @ArticlesInRolesAndUsers = 0;


SELECT @ArticlesInCategories = Count(ArticleID) FROM (SELECT na.[ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS na
	INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS cat ON na.ArticleID = cat.ArticleID
	INNER JOIN @UserViewCategoriesWithFilter  AS uvcwf ON uvcwf.CategoryID = cat.CategoryID
WHERE na.PortalID=@PortalID
	AND na.HasPermissions = 0
	AND ((@Approved = 0) OR ((@Approved = 1 AND na.Approved = 1) OR (@Approved = 2 AND na.Approved = 0)))
	AND ((@ArticleType = 0) OR ((@ArticleType = 1 AND na.EventArticle = 0) OR (@ArticleType = 2 AND na.EventArticle = 1)))
	AND ((@PermissionsByArticle = 0) OR ((@PermissionsByArticle = 1 AND na.HasPermissions = 1) OR (@PermissionsByArticle = 2 AND na.HasPermissions = 0)))
	AND ((@Published = 0) OR ((@Published = 1 AND na.Active = 1) OR (@Published = 2 AND na.Active = 0)))
	AND ((@Featured = 0) OR ((@Featured = 1 AND na.Featured = 1) OR (@Featured = 2 AND na.Featured = 0)))
	AND ((@FilterAuthorOrAuthors = 0) OR (@FilterAuthorOrAuthors = 1 AND na.UserID IN (SELECT UserID FROM @TempAuthorsIDList)))
GROUP BY na.ArticleID) AS CountTable;

SELECT @ArticlesInRolesAndUsers = Count(ArticleID) FROM (
	SELECT na.[ArticleID] from {databaseOwner}[{objectQualifier}EasyDNNNews] AS na
		INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsArticleUserPermissions] AS aup ON na.ArticleID = aup.ArticleID
		INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS cat ON na.ArticleID = cat.ArticleID
		INNER JOIN @FiltredByCategories AS fbc ON fbc.CategoryID = cat.CategoryID
	WHERE na.PortalID=@PortalID
		AND ((@EditPermission = 1) OR ((aup.Edit = 1) AND ((@UserID = -1 AND aup.UserID IS NULL) OR (aup.UserID = @UserID))))
		AND na.HasPermissions = 1
		AND ((@Approved = 0) OR ((@Approved = 1 AND na.Approved = 1) OR (@Approved = 2 AND na.Approved = 0)))
		AND ((@ArticleType = 0) OR ((@ArticleType = 1 AND na.EventArticle = 0) OR (@ArticleType = 2 AND na.EventArticle = 1)))
	    AND ((@PermissionsByArticle = 0) OR ((@PermissionsByArticle = 1 AND na.HasPermissions = 1) OR (@PermissionsByArticle = 2 AND na.HasPermissions = 0)))
		AND ((@Published = 0) OR ((@Published = 1 AND na.Active = 1) OR (@Published = 2 AND na.Active = 0)))
		AND ((@Featured = 0) OR ((@Featured = 1 AND na.Featured = 1) OR (@Featured = 2 AND na.Featured = 0)))
		AND ((@FilterAuthorOrAuthors = 0) OR (@FilterAuthorOrAuthors = 1 AND na.UserID IN (SELECT UserID FROM @TempAuthorsIDList)))
	GROUP BY na.ArticleID
	UNION
	SELECT na.[ArticleID] from {databaseOwner}[{objectQualifier}EasyDNNNews] AS na
		INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsArticleRolePermissions] AS arp ON na.ArticleID = arp.ArticleID
		INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS cat ON na.ArticleID = cat.ArticleID
		INNER JOIN @FiltredByCategories AS fbc ON fbc.CategoryID = cat.CategoryID
	WHERE na.PortalID=@PortalID
		AND na.HasPermissions = 1
		AND ((@EditPermission = 1) OR ((arp.Edit = 1) AND arp.RoleID IN (SELECT [RoleID] FROM @UserInRoles)))
		AND ((@Approved = 0) OR ((@Approved = 1 AND na.Approved = 1) OR (@Approved = 2 AND na.Approved = 0)))
		AND ((@ArticleType = 0) OR ((@ArticleType = 1 AND na.EventArticle = 0) OR (@ArticleType = 2 AND na.EventArticle = 1)))
	    AND ((@PermissionsByArticle = 0) OR ((@PermissionsByArticle = 1 AND na.HasPermissions = 1) OR (@PermissionsByArticle = 2 AND na.HasPermissions = 0)))
		AND ((@Published = 0) OR ((@Published = 1 AND na.Active = 1) OR (@Published = 2 AND na.Active = 0)))
		AND ((@Featured = 0) OR ((@Featured = 1 AND na.Featured = 1) OR (@Featured = 2 AND na.Featured = 0)))
		AND ((@FilterAuthorOrAuthors = 0) OR (@FilterAuthorOrAuthors = 1 AND na.UserID IN (SELECT UserID FROM @TempAuthorsIDList)))
	GROUP BY na.ArticleID
) AS final

SELECT @ArticlesInRolesAndUsers + @ArticlesInCategories
     
     ' 
END
GO
/****** Object:  StoredProcedure {databaseOwner}[{objectQualifier}EasyDNNNewsGetItemsCalendarEventsArchive]    Script Date: 06/24/2013 16:39:07 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'{databaseOwner}[{objectQualifier}EasyDNNNewsGetItemsCalendarEventsArchive]') AND type in (N'P', N'PC'))
BEGIN
EXEC dbo.sp_executesql @statement = N'CREATE PROCEDURE {databaseOwner}[{objectQualifier}EasyDNNNewsGetItemsCalendarEventsArchive]
	@PortalID int,
	@UserID int,
	@CalendarModuleID int,
	@AdminOrSuperUser bit  = 0,
	@CurrentDate DateTime,
	@RowCount int = 10,
	@LocaleCode nvarchar(20) = '''',
	@IsSocialInstance bit = 0,
	@FilterByDNNUserID int = 0, -- filter by some UserID / not current user ID
	@FilterByDNNGroupID int = 0, -- filter by DNNGroup/RoleID / not profile GroupID
	@ShowAllAuthors bit = 1, -- filter postavka menija
	@CategoryFilterType tinyint = 0, --0 All categories, 1 - Selection, 2 - AutoAdd
	@HideUnlocalizedItems bit = 0,
	@PermissionSettingsSource tinyint = 0, -- None, 1 - portal, 2 - module
	@PermissionsModuleID int = 0 -- NewsModuleID

AS
SET NOCOUNT ON;
DECLARE @UserCanApprove bit;
SET @UserCanApprove = 0;
DECLARE @UserInRoles TABLE (RoleID int NOT NULL PRIMARY KEY);
INSERT INTO @UserInRoles SELECT DISTINCT ur.[RoleID] FROM {databaseOwner}[{objectQualifier}UserRoles] AS ur INNER JOIN {databaseOwner}[{objectQualifier}Roles] AS r ON ur.RoleID = r.RoleID WHERE ur.UserID = @UserID AND r.PortalID = @PortalID AND (ur.ExpiryDate IS NULL OR ur.ExpiryDate > GETUTCDATE()) AND (ur.EffectiveDate IS NULL OR ur.EffectiveDate < GETUTCDATE());

DECLARE @UserViewCategories TABLE (CategoryID int NOT NULL PRIMARY KEY); -- all categories which user can see based on permissions
DECLARE @UserViewCategoriesWithFilter TABLE (CategoryID int NOT NULL PRIMARY KEY); -- all categories which user can see based on permissions and Module filter
DECLARE @FiltredByCategories TABLE (CategoryID int NOT NULL PRIMARY KEY); -- all categories that are filtred by module or portal

DECLARE @SettingsSource bit; SET @SettingsSource = 1;
IF @AdminOrSuperUser = 1 OR @PermissionSettingsSource = 0
BEGIN
	INSERT INTO @UserViewCategories SELECT [CategoryID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryList] WHERE PortalID = @PortalID;
END
ELSE IF @UserID = -1
BEGIN	
	IF @PermissionSettingsSource = 1 -- by portal
	BEGIN
		IF EXISTS (SELECT ShowAllCategories FROM {databaseOwner}[{objectQualifier}EasyDNNNewsRolePremissionSettings] as rps WHERE rps.PortalID = @PortalID  AND rps.ModuleID IS NULL AND rps.RoleID IS NULL AND rps.ShowAllCategories = 1)
		BEGIN
			INSERT INTO @UserViewCategories SELECT [CategoryID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryList] WHERE PortalID = @PortalID;
		END
		ELSE
		BEGIN
			INSERT INTO @UserViewCategories
			SELECT rpsc.[CategoryID] FROM  {databaseOwner}[{objectQualifier}EasyDNNNewsRolePremissionsShowCategories] as rpsc 
			INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsRolePremissionSettings] as rps ON rps.PremissionSettingsID = rpsc.PremissionSettingsID
			WHERE rps.PortalID = @PortalID  AND rps.ModuleID IS NULL AND rps.RoleID IS NULL;
		END
	END
	ELSE -- by module
	BEGIN
		SELECT @SettingsSource = PermissionsPMSource FROM {databaseOwner}[{objectQualifier}EasyDNNNewsModuleSettings] WHERE ModuleID = @PermissionsModuleID;
		IF @SettingsSource = 1
		BEGIN
			IF EXISTS (SELECT ShowAllCategories FROM {databaseOwner}[{objectQualifier}EasyDNNNewsRolePremissionSettings] as rps WHERE rps.PortalID = @PortalID  AND rps.ModuleID IS NULL AND rps.RoleID IS NULL AND rps.ShowAllCategories = 1)
			BEGIN
				INSERT INTO @UserViewCategories SELECT [CategoryID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryList] WHERE PortalID = @PortalID;
			END
			ELSE
			BEGIN
				INSERT INTO @UserViewCategories
				SELECT rpsc.[CategoryID] FROM  {databaseOwner}[{objectQualifier}EasyDNNNewsRolePremissionsShowCategories] as rpsc 
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsRolePremissionSettings] as rps ON rps.PremissionSettingsID = rpsc.PremissionSettingsID
				WHERE rps.PortalID = @PortalID  AND rps.ModuleID IS NULL AND rps.RoleID IS NULL;
			END
		END
		ELSE
		BEGIN
			IF EXISTS (SELECT ShowAllCategories FROM {databaseOwner}[{objectQualifier}EasyDNNNewsRolePremissionSettings] as rps WHERE rps.PortalID = @PortalID AND rps.ModuleID = @PermissionsModuleID AND rps.RoleID IS NULL AND rps.ShowAllCategories = 1)
			BEGIN
				INSERT INTO @UserViewCategories SELECT [CategoryID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryList] WHERE PortalID = @PortalID;
			END
			ELSE
			BEGIN
				INSERT INTO @UserViewCategories
				SELECT rpsc.[CategoryID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsRolePremissionsShowCategories] as rpsc
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsRolePremissionSettings] as rps ON rps.PremissionSettingsID = rpsc.PremissionSettingsID
				WHERE rps.PortalID = @PortalID AND rps.ModuleID = @PermissionsModuleID AND rps.RoleID IS NULL;
			END
		END
	END
END
ELSE -- registrirani korisnik
BEGIN
	IF @PermissionSettingsSource = 1 -- by portal
	BEGIN
		IF EXISTS (
				SELECT TOP (1) ShowAllCategories FROM {databaseOwner}[{objectQualifier}EasyDNNNewsRolePremissionSettings] as rps
					INNER JOIN @UserInRoles as uir ON rps.RoleID = uir.RoleID
					WHERE rps.PortalID = @PortalID AND rps.ModuleID IS NULL AND rps.ShowAllCategories = 1
				UNION
				SELECT ShowAllCategories FROM {databaseOwner}[{objectQualifier}EasyDNNNewsUserPremissionSettings] as ups
				WHERE ups.UserID = @UserID AND ups.PortalID = @PortalID AND ups.ModuleID IS NULL AND ups.ShowAllCategories = 1
		)
		BEGIN
			INSERT INTO @UserViewCategories SELECT [CategoryID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryList] WHERE PortalID = @PortalID;
		END
		ELSE
		BEGIN
			INSERT INTO @UserViewCategories
			SELECT rpsc.[CategoryID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsRolePremissionsShowCategories] as rpsc
			INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsRolePremissionSettings] as rps ON rps.PremissionSettingsID = rpsc.PremissionSettingsID
			INNER JOIN @UserInRoles as uir ON rps.RoleID = uir.RoleID
			WHERE rps.PortalID = @PortalID AND rps.ModuleID IS NULL GROUP BY rpsc.[CategoryID]
			UNION
			SELECT upsc.[CategoryID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsUserPremissionsShowCategories] as upsc
			INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsUserPremissionSettings] as ups ON ups.PremissionSettingsID = upsc.PremissionSettingsID
			WHERE ups.UserID = @UserID AND ups.PortalID = @PortalID AND ups.ModuleID IS NULL GROUP BY upsc.[CategoryID];
		END
	END
	ELSE -- by module
	BEGIN
		SELECT @SettingsSource = PermissionsPMSource FROM {databaseOwner}[{objectQualifier}EasyDNNNewsModuleSettings] WHERE ModuleID = @PermissionsModuleID;
		IF @SettingsSource = 1
		BEGIN
			IF EXISTS (
				SELECT TOP (1) ShowAllCategories FROM {databaseOwner}[{objectQualifier}EasyDNNNewsRolePremissionSettings] as rps
					INNER JOIN @UserInRoles as uir ON rps.RoleID = uir.RoleID
					WHERE rps.PortalID = @PortalID AND rps.ModuleID IS NULL AND rps.ShowAllCategories = 1
				UNION
				SELECT ShowAllCategories FROM {databaseOwner}[{objectQualifier}EasyDNNNewsUserPremissionSettings] as ups
				WHERE ups.UserID = @UserID AND ups.PortalID = @PortalID AND ups.ModuleID IS NULL AND ups.ShowAllCategories = 1
			)
			BEGIN
				INSERT INTO @UserViewCategories SELECT [CategoryID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryList] WHERE PortalID = @PortalID;
			END
			ELSE
			BEGIN
				INSERT INTO @UserViewCategories
				SELECT rpsc.[CategoryID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsRolePremissionsShowCategories] as rpsc
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsRolePremissionSettings] as rps ON rps.PremissionSettingsID = rpsc.PremissionSettingsID
				INNER JOIN @UserInRoles as uir ON rps.RoleID = uir.RoleID
				WHERE rps.PortalID = @PortalID AND rps.ModuleID IS NULL GROUP BY rpsc.[CategoryID]
				UNION
				SELECT upsc.[CategoryID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsUserPremissionsShowCategories] as upsc
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsUserPremissionSettings] as ups ON ups.PremissionSettingsID = upsc.PremissionSettingsID
				WHERE ups.UserID = @UserID AND ups.PortalID = @PortalID AND ups.ModuleID IS NULL GROUP BY upsc.[CategoryID];
			END
		END
		ELSE
		BEGIN
			IF EXISTS (
				SELECT TOP (1) ShowAllCategories FROM {databaseOwner}[{objectQualifier}EasyDNNNewsRolePremissionSettings] as rps
					INNER JOIN @UserInRoles as uir ON rps.RoleID = uir.RoleID
					WHERE rps.PortalID = @PortalID AND rps.ModuleID = @PermissionsModuleID AND rps.ShowAllCategories = 1
				UNION
				SELECT ShowAllCategories FROM {databaseOwner}[{objectQualifier}EasyDNNNewsUserPremissionSettings] as ups
				WHERE ups.UserID = @UserID AND ups.PortalID = @PortalID AND ups.ModuleID = @PermissionsModuleID AND ups.ShowAllCategories = 1
			)
			BEGIN
				INSERT INTO @UserViewCategories SELECT [CategoryID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryList] WHERE PortalID = @PortalID;
			END
			ELSE
			BEGIN
				INSERT INTO @UserViewCategories
				SELECT rpsc.[CategoryID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsRolePremissionsShowCategories] as rpsc
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsRolePremissionSettings] as rps ON rps.PremissionSettingsID = rpsc.PremissionSettingsID
				INNER JOIN @UserInRoles as uir ON rps.RoleID = uir.RoleID
				WHERE rps.PortalID = @PortalID AND rps.ModuleID = @PermissionsModuleID GROUP BY rpsc.[CategoryID]
				UNION
				SELECT upsc.[CategoryID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsUserPremissionsShowCategories] as upsc
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsUserPremissionSettings] as ups ON ups.PremissionSettingsID = upsc.PremissionSettingsID
				WHERE ups.UserID = @UserID AND ups.PortalID = @PortalID AND ups.ModuleID = @PermissionsModuleID GROUP BY upsc.[CategoryID];
			END
		END
	END
END

IF @CategoryFilterType = 0 -- 0 All categories
BEGIN
	INSERT INTO @UserViewCategoriesWithFilter SELECT [CategoryID] FROM @UserViewCategories;
	INSERT INTO @FiltredByCategories SELECT [CategoryID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryList] WHERE PortalID = @PortalID;
END
ELSE IF @CategoryFilterType = 1 -- 1 - Selection
BEGIN
		INSERT INTO @UserViewCategoriesWithFilter 
		SELECT cl.[CategoryID] FROM @UserViewCategories as cl
		INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsModuleCategoryItems] AS mci ON mci.CategoryID = cl.CategoryID AND mci.ModuleID = @CalendarModuleID
		
		INSERT INTO @FiltredByCategories SELECT [CategoryID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsModuleCategoryItems] WHERE ModuleID = @CalendarModuleID;
END
ELSE IF @CategoryFilterType = 2 -- 2 - AutoAdd
BEGIN
	WITH hierarchy AS(
		SELECT [CategoryID], [ParentCategory]
		FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryList] AS cl
		WHERE (cl.ParentCategory IN (SELECT [CategoryID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsModuleCategoryItems] WHERE ModuleID = @CalendarModuleID) OR cl.CategoryID IN (SELECT [CategoryID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsModuleCategoryItems] WHERE ModuleID = @CalendarModuleID)) AND PortalID = @PortalID
		UNION ALL
		SELECT c.[CategoryID], c.[ParentCategory]
		FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryList] AS c INNER JOIN hierarchy AS p ON c.ParentCategory = p.CategoryID WHERE c.PortalID = @PortalID
		)
		INSERT INTO @FiltredByCategories SELECT DISTINCT CategoryID FROM hierarchy;	
		INSERT INTO @UserViewCategoriesWithFilter SELECT uvc.CategoryID FROM @FiltredByCategories as nfc INNER JOIN @UserViewCategories as uvc ON uvc.CategoryID = nfc.CategoryID;
END

DECLARE @FilterBySocialGroup bit;
SET @FilterBySocialGroup = 0;
DECLARE @FilterAuthorOrAuthors bit;
SET @FilterAuthorOrAuthors = 0;

DECLARE @TempAuthorsIDList TABLE (UserID int NOT NULL PRIMARY KEY);
IF @IsSocialInstance = 1
BEGIN
	IF @FilterByDNNGroupID <> 0
	BEGIN	
		SET @FilterBySocialGroup = 1;
	END
END
ELSE
BEGIN
	IF @ShowAllAuthors = 0
	BEGIN
		SET @FilterAuthorOrAuthors = 1;
		INSERT INTO @TempAuthorsIDList
		SELECT [UserID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsModuleAuthorsItems] AS mai WHERE mai.ModuleID = @CalendarModuleID
		UNION 
		SELECT [UserID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsAuthorProfile] AS ap 
			INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsAutorGroupItems] AS agi ON ap.AuthorProfileID = agi.AuthorProfileID
			INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsModuleGroupItems] AS mgi ON mgi.GroupID = agi.GroupID
			WHERE mgi.ModuleID = @CalendarModuleID
	END
END

IF @RowCount <> 0
BEGIN
	SET ROWCOUNT @RowCount;
END

IF @IsSocialInstance = 0
BEGIN
	IF @LocaleCode <> ''''
	BEGIN
		WITH FinalArticleIDsSet (ArticleID) AS (
			SELECT ArticleID FROM {databaseOwner}[{objectQualifier}EasyDNNNews] as n WHERE ArticleID IN(
				Select DISTINCT na.[ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNews] as na
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] as cat ON na.ArticleID = cat.ArticleID
					INNER JOIN @UserViewCategoriesWithFilter as uvcwf ON uvcwf.CategoryID = cat.CategoryID
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsEventsData] as ne on na.ArticleID = ne.ArticleID
					LEFT OUTER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsContentLocalization] AS ncl ON ncl.ArticleID = na.ArticleID
				WHERE na.PortalID=@PortalID
					AND ((@AdminOrSuperUser = 1) OR ((@UserCanApprove = 1 OR na.Approved=1) AND (na.Active=1 OR na.UserID=@UserID)))
					AND na.HasPermissions = 0
					AND na.EventArticle = 1
					AND (na.PublishDate <= @CurrentDate AND na.ExpireDate >= @CurrentDate) 
					AND (ne.StartDate >= @CurrentDate) 
					AND ((@FilterAuthorOrAuthors = 1 AND na.UserID IN (SELECT UserID FROM @TempAuthorsIDList)) OR (@FilterAuthorOrAuthors = 0))
					AND ((@HideUnlocalizedItems = 1 AND ncl.ArticleID IS NOT NULL AND ncl.LocaleCode = @LocaleCode) OR (@HideUnlocalizedItems = 0))
				UNION ALL
				Select na.[ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNews] as na
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsArticleUserPermissions] as aup ON na.ArticleID = aup.ArticleID
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] as cat ON na.ArticleID = cat.ArticleID
					INNER JOIN @FiltredByCategories AS fbc ON fbc.CategoryID = cat.CategoryID
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsEventsData] as ne on na.ArticleID = ne.ArticleID
					LEFT OUTER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsContentLocalization] AS ncl ON ncl.ArticleID = na.ArticleID
				WHERE na.PortalID=@PortalID
					AND ((@AdminOrSuperUser = 1) OR (
						((@UserID = -1 AND aup.UserID IS NULL) OR (aup.UserID = @UserID)) AND aup.Show = 1 AND ((@UserCanApprove = 1) OR (na.Approved=1)) AND (na.Active=1 OR na.UserID=@UserID)))
					AND na.HasPermissions = 1
					AND na.EventArticle = 1
					AND (na.PublishDate <= @CurrentDate AND na.ExpireDate >= @CurrentDate)  
					AND (ne.StartDate >= @CurrentDate) 
					AND ((@FilterAuthorOrAuthors = 1 AND na.UserID IN (SELECT UserID FROM @TempAuthorsIDList)) OR (@FilterAuthorOrAuthors = 0))
					AND ((@HideUnlocalizedItems = 1 AND ncl.ArticleID IS NOT NULL AND ncl.LocaleCode = @LocaleCode) OR (@HideUnlocalizedItems = 0))
				UNION
				Select DISTINCT na.[ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNews] as na
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsArticleRolePermissions] as arp ON na.ArticleID = arp.ArticleID
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] as cat ON na.ArticleID = cat.ArticleID
					INNER JOIN @FiltredByCategories AS fbc ON fbc.CategoryID = cat.CategoryID
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsEventsData] as ne on na.ArticleID = ne.ArticleID
					LEFT OUTER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsContentLocalization] AS ncl ON ncl.ArticleID = na.ArticleID
				WHERE na.PortalID=@PortalID
					AND ((@AdminOrSuperUser = 1) OR (
						((@UserCanApprove = 1) OR (na.Approved=1)) AND (na.Active=1 OR na.UserID=@UserID) AND arp.Show = 1 AND arp.RoleID IN (SELECT [RoleID] FROM @UserInRoles)))
					AND na.HasPermissions = 1
					AND na.EventArticle = 1 
					AND (na.PublishDate <= @CurrentDate AND na.ExpireDate >= @CurrentDate)  
					AND (ne.StartDate >= @CurrentDate) 
					AND ((@FilterAuthorOrAuthors = 1 AND na.UserID IN (SELECT UserID FROM @TempAuthorsIDList)) OR (@FilterAuthorOrAuthors = 0))
					AND ((@HideUnlocalizedItems = 1 AND ncl.ArticleID IS NOT NULL AND ncl.LocaleCode = @LocaleCode) OR (@HideUnlocalizedItems = 0))
			)
		),
		FinalLocalizedArticleIDsSet (ArticleID,Title,SubTitle,Summary,Article,DetailTypeData,TitleLink,MetaDecription,MetaKeywords) AS (
			SELECT ArticleID,Title,SubTitle,Summary,Article,DetailTypeData,clTitleLink AS TitleLink ,MetaDecription,MetaKeywords FROM {databaseOwner}[{objectQualifier}EasyDNNNewsContentLocalization] WHERE ArticleID IN (SELECT ArticleID FROM FinalArticleIDsSet) AND LocaleCode = @LocaleCode
		)
		SELECT Result.*, ne.StartDate, ne.EndDate,ne.WhloeDay,ne.ShowEndDate,
		CASE Result.EventArticle
			WHEN 1 THEN (SELECT PointData FROM {databaseOwner}[{objectQualifier}EasyDNNnewsGoogleMapsData] as md inner join  {databaseOwner}[{objectQualifier}EasyDNNNewsArticleGoogleMapConnection]  as mc ON md.GoogleMapID = mc.GoogleMapID WHERE mc.ArticleID =  Result.ArticleID)
			WHEN 0 THEN ''''
		END AS ''GoogleMapData''
		FROM (
			SELECT na.ArticleID, na.PublishDate, na.Title, na.TitleLink, na.ArticleImage, na.Summary, na.EventArticle
				FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS na WHERE na.ArticleID IN (SELECT ArticleID FROM FinalArticleIDsSet WHERE ArticleID NOT IN (SELECT ArticleID FROM FinalLocalizedArticleIDsSet))
			UNION ALL
			SELECT na.ArticleID, na.PublishDate, fla.Title, fla.TitleLink, na.ArticleImage, fla.Summary, na.EventArticle
				FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS na INNER JOIN FinalLocalizedArticleIDsSet AS fla ON fla.ArticleID = na.ArticleID
		) As Result LEFT OUTER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsEventsData] as ne on Result.ArticleID = ne.ArticleID ORDER BY ne.StartDate;
	END
	ELSE
	BEGIN
		SELECT TOP (500) *,
		CASE Result.EventArticle
			WHEN 1 THEN (SELECT PointData FROM {databaseOwner}[{objectQualifier}EasyDNNnewsGoogleMapsData] as md inner join  {databaseOwner}[{objectQualifier}EasyDNNNewsArticleGoogleMapConnection]  as mc ON md.GoogleMapID = mc.GoogleMapID WHERE mc.ArticleID =  Result.ArticleID)
			WHEN 0 THEN ''''
		END AS ''GoogleMapData''
		FROM (
			SELECT na.ArticleID, na.PublishDate, na.Title, na.TitleLink, na.ArticleImage, na.Summary, na.EventArticle, ne.StartDate, ne.EndDate,ne.WhloeDay,ne.ShowEndDate FROM {databaseOwner}[{objectQualifier}EasyDNNNews] as na
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsEventsData] as ne ON na.ArticleID = ne.ArticleID
			WHERE na.ArticleID in (
				SELECT na.[ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNews] as na
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] as cat ON na.ArticleID = cat.ArticleID
					INNER JOIN @UserViewCategoriesWithFilter as uvcwf ON uvcwf.CategoryID = cat.CategoryID
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsEventsData] as ne ON ne.ArticleID = na.ArticleID
				WHERE na.PortalID=@PortalID
					AND ((@AdminOrSuperUser = 1) OR ((@UserCanApprove = 1 OR na.Approved=1) AND (na.Active=1 OR na.UserID=@UserID)))
					AND na.HasPermissions = 0
					AND na.HideDefaultLocale = 0
					AND na.EventArticle = 1
					AND (na.PublishDate <= @CurrentDate AND na.ExpireDate >= @CurrentDate)		
					AND (ne.StartDate >= @CurrentDate)
					AND ((@FilterAuthorOrAuthors = 1 AND na.UserID IN (SELECT UserID FROM @TempAuthorsIDList)) OR (@FilterAuthorOrAuthors = 0))
				GROUP BY na.ArticleID
				UNION ALL
				SELECT na.[ArticleID] from {databaseOwner}[{objectQualifier}EasyDNNNews] as na
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsArticleUserPermissions] as aup ON na.ArticleID = aup.ArticleID
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] as cat ON na.ArticleID = cat.ArticleID
					INNER JOIN @FiltredByCategories AS fbc ON fbc.CategoryID = cat.CategoryID
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsEventsData] as ne ON ne.ArticleID = na.ArticleID
				WHERE na.PortalID=@PortalID
					AND ((@AdminOrSuperUser = 1) OR (
						((@UserID = -1 AND aup.UserID IS NULL) OR (aup.UserID = @UserID)) AND aup.Show = 1 AND ((@UserCanApprove = 1) OR (na.Approved=1)) AND (na.Active=1 OR na.UserID=@UserID)))
					AND na.HasPermissions = 1
					AND na.HideDefaultLocale = 0
					AND na.EventArticle = 1
					AND (na.PublishDate <= @CurrentDate AND na.ExpireDate >= @CurrentDate)		
					AND (ne.StartDate >= @CurrentDate)
					AND ((@UserID = -1 AND na.UserID IN (SELECT UserID FROM @TempAuthorsIDList)) OR (@FilterAuthorOrAuthors = 0))
				GROUP BY na.ArticleID
				UNION
				SELECT na.[ArticleID] from {databaseOwner}[{objectQualifier}EasyDNNNews] as na
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsArticleRolePermissions] as arp ON na.ArticleID = arp.ArticleID
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] as cat ON na.ArticleID = cat.ArticleID
					INNER JOIN @FiltredByCategories AS fbc ON fbc.CategoryID = cat.CategoryID
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsEventsData] as ne ON ne.ArticleID = na.ArticleID
				WHERE na.PortalID=@PortalID
					AND ((@AdminOrSuperUser = 1) OR (
						((@UserCanApprove = 1) OR (na.Approved=1)) AND (na.Active=1 OR na.UserID=@UserID) AND arp.Show = 1 AND arp.RoleID IN (SELECT [RoleID] FROM @UserInRoles)))
					AND na.HasPermissions = 1
					AND na.HideDefaultLocale = 0
					AND na.EventArticle = 1
					AND (na.PublishDate <= @CurrentDate AND na.ExpireDate >= @CurrentDate)		
					AND (ne.StartDate >= @CurrentDate)
					AND ((@FilterAuthorOrAuthors = 1 AND na.UserID IN (SELECT UserID FROM @TempAuthorsIDList)) OR (@FilterAuthorOrAuthors = 0))
				GROUP BY na.ArticleID
			)
		) AS Result ORDER BY StartDate;
	END
END
ELSE IF @FilterBySocialGroup = 1
BEGIN
	IF @LocaleCode <> ''''
	BEGIN
		WITH FinalArticleIDsSet (ArticleID) AS(
			SELECT ArticleID FROM {databaseOwner}[{objectQualifier}EasyDNNNews] as n WHERE ArticleID IN(
				SELECT na.[ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNews] as na
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] as cat ON na.ArticleID = cat.ArticleID
					INNER JOIN @UserViewCategoriesWithFilter as uvcwf ON uvcwf.CategoryID = cat.CategoryID
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsEventsData] as ne ON ne.ArticleID = na.ArticleID
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = na.ArticleID
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialGroupItems] AS sgi ON sgi.ArticleID = na.ArticleID AND sgi.RoleID = @FilterByDNNGroupID
					INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserID, @FilterByDNNGroupID) as t ON t.seckey = nss.SecurityKey
					LEFT OUTER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsContentLocalization] AS ncl ON ncl.ArticleID = na.ArticleID
				WHERE na.PortalID=@PortalID
					AND ((@AdminOrSuperUser = 1) OR ((@UserCanApprove = 1 OR na.Approved=1) AND (na.Active=1 OR na.UserID=@UserID)))
					AND na.HasPermissions = 0
					AND na.EventArticle = 1
					AND (na.PublishDate <= @CurrentDate AND na.ExpireDate >= @CurrentDate)		
					AND (ne.StartDate >= @CurrentDate)
					AND ((@HideUnlocalizedItems = 1 AND ncl.ArticleID IS NOT NULL AND ncl.LocaleCode = @LocaleCode) OR (@HideUnlocalizedItems = 0))
				GROUP BY na.ArticleID
				UNION ALL
				SELECT na.[ArticleID] from {databaseOwner}[{objectQualifier}EasyDNNNews] as na
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsArticleUserPermissions] as aup ON na.ArticleID = aup.ArticleID
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] as cat ON na.ArticleID = cat.ArticleID
					INNER JOIN @FiltredByCategories AS fbc ON fbc.CategoryID = cat.CategoryID
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsEventsData] as ne ON ne.ArticleID = na.ArticleID
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = na.ArticleID
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialGroupItems] AS sgi ON sgi.ArticleID = na.ArticleID AND sgi.RoleID = @FilterByDNNGroupID
					INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserID, @FilterByDNNGroupID) as t ON t.seckey = nss.SecurityKey
					LEFT OUTER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsContentLocalization] AS ncl ON ncl.ArticleID = na.ArticleID
				WHERE na.PortalID=@PortalID
					AND ((@AdminOrSuperUser = 1) OR (
						((@UserID = -1 AND aup.UserID IS NULL) OR (aup.UserID = @UserID)) AND aup.Show = 1 AND ((@UserCanApprove = 1) OR (na.Approved=1)) AND (na.Active=1 OR na.UserID=@UserID)))
					AND na.HasPermissions = 1
					AND na.EventArticle = 1
					AND (na.PublishDate <= @CurrentDate AND na.ExpireDate >= @CurrentDate)		
					AND (ne.StartDate >= @CurrentDate)
					AND ((@HideUnlocalizedItems = 1 AND ncl.ArticleID IS NOT NULL AND ncl.LocaleCode = @LocaleCode) OR (@HideUnlocalizedItems = 0))
				GROUP BY na.ArticleID
				UNION
				SELECT na.[ArticleID] from {databaseOwner}[{objectQualifier}EasyDNNNews] as na
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsArticleRolePermissions] as arp ON na.ArticleID = arp.ArticleID
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] as cat ON na.ArticleID = cat.ArticleID
					INNER JOIN @FiltredByCategories AS fbc ON fbc.CategoryID = cat.CategoryID
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsEventsData] as ne ON ne.ArticleID = na.ArticleID
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = na.ArticleID
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialGroupItems] AS sgi ON sgi.ArticleID = na.ArticleID AND sgi.RoleID = @FilterByDNNGroupID
					INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserID, @FilterByDNNGroupID) as t ON t.seckey = nss.SecurityKey
					LEFT OUTER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsContentLocalization] AS ncl ON ncl.ArticleID = na.ArticleID
				WHERE na.PortalID=@PortalID
					AND ((@AdminOrSuperUser = 1) OR (
						((@UserCanApprove = 1) OR (na.Approved=1)) AND (na.Active=1 OR na.UserID=@UserID) AND arp.Show = 1 AND arp.RoleID IN (SELECT [RoleID] FROM @UserInRoles)))
					AND na.HasPermissions = 1
					AND na.EventArticle = 1
					AND (na.PublishDate <= @CurrentDate AND na.ExpireDate >= @CurrentDate)		
					AND (ne.StartDate >= @CurrentDate)
					AND ((@HideUnlocalizedItems = 1 AND ncl.ArticleID IS NOT NULL AND ncl.LocaleCode = @LocaleCode) OR (@HideUnlocalizedItems = 0))
				GROUP BY na.ArticleID
			)
		),
		FinalLocalizedArticleIDsSet (ArticleID,Title,SubTitle,Summary,Article,DetailTypeData,TitleLink,MetaDecription,MetaKeywords) AS(
			SELECT ArticleID,Title,SubTitle,Summary,Article,DetailTypeData,clTitleLink AS TitleLink ,MetaDecription,MetaKeywords FROM {databaseOwner}[{objectQualifier}EasyDNNNewsContentLocalization] WHERE ArticleID IN (SELECT ArticleID FROM FinalArticleIDsSet) AND LocaleCode = @LocaleCode
		)
		SELECT Result.*, ne.StartDate, ne.EndDate,ne.WhloeDay,ne.ShowEndDate,
		CASE Result.EventArticle
			WHEN 1 THEN (SELECT PointData FROM {databaseOwner}[{objectQualifier}EasyDNNnewsGoogleMapsData] as md inner join {databaseOwner}[{objectQualifier}EasyDNNNewsArticleGoogleMapConnection] as mc ON md.GoogleMapID = mc.GoogleMapID WHERE mc.ArticleID =  Result.ArticleID)
			WHEN 0 THEN ''''
		END AS ''GoogleMapData''
		FROM (
			SELECT na.ArticleID, na.PublishDate, na.Title, na.TitleLink, na.ArticleImage, na.Summary, na.EventArticle
				FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS na WHERE na.ArticleID IN (SELECT ArticleID FROM FinalArticleIDsSet WHERE ArticleID NOT IN (SELECT ArticleID FROM FinalLocalizedArticleIDsSet))
			UNION ALL
			SELECT na.ArticleID, na.PublishDate, fla.Title, fla.TitleLink, na.ArticleImage, fla.Summary, na.EventArticle
				FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS na INNER JOIN FinalLocalizedArticleIDsSet AS fla ON fla.ArticleID = na.ArticleID
		) As Result LEFT OUTER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsEventsData] as ne on Result.ArticleID = ne.ArticleID ORDER BY ne.StartDate;
	END
	ELSE
	BEGIN
		SELECT TOP (500) *,
		CASE Result.EventArticle
			WHEN 1 THEN (SELECT PointData FROM {databaseOwner}[{objectQualifier}EasyDNNnewsGoogleMapsData] as md inner join  {databaseOwner}[{objectQualifier}EasyDNNNewsArticleGoogleMapConnection]  as mc ON md.GoogleMapID = mc.GoogleMapID WHERE mc.ArticleID =  Result.ArticleID)
			WHEN 0 THEN ''''
		END AS ''GoogleMapData''
		FROM (
			SELECT na.ArticleID, na.PublishDate, na.Title, na.TitleLink, na.ArticleImage, na.Summary, na.EventArticle, ne.StartDate, ne.EndDate,ne.WhloeDay,ne.ShowEndDate FROM {databaseOwner}[{objectQualifier}EasyDNNNews] as na
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsEventsData] as ne ON na.ArticleID = ne.ArticleID
			WHERE na.ArticleID in (
				SELECT na.[ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNews] as na
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] as cat ON na.ArticleID = cat.ArticleID
					INNER JOIN @UserViewCategoriesWithFilter as uvcwf ON uvcwf.CategoryID = cat.CategoryID
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsEventsData] as ne ON ne.ArticleID = na.ArticleID
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = na.ArticleID
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialGroupItems] AS sgi ON sgi.ArticleID = na.ArticleID AND sgi.RoleID = @FilterByDNNGroupID
					INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserID, @FilterByDNNGroupID) as t ON t.seckey = nss.SecurityKey
				WHERE na.PortalID=@PortalID
					AND ((@AdminOrSuperUser = 1) OR ((@UserCanApprove = 1 OR na.Approved=1) AND (na.Active=1 OR na.UserID=@UserID)))
					AND na.HasPermissions = 0
					AND na.HideDefaultLocale = 0
					AND na.EventArticle = 1
					AND (na.PublishDate <= @CurrentDate AND na.ExpireDate >= @CurrentDate)		
					AND (ne.StartDate >= @CurrentDate)
				GROUP BY na.ArticleID
				UNION ALL
				SELECT na.[ArticleID] from {databaseOwner}[{objectQualifier}EasyDNNNews] as na
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsArticleUserPermissions] as aup ON na.ArticleID = aup.ArticleID
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] as cat ON na.ArticleID = cat.ArticleID
					INNER JOIN @FiltredByCategories AS fbc ON fbc.CategoryID = cat.CategoryID
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsEventsData] as ne ON ne.ArticleID = na.ArticleID
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = na.ArticleID
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialGroupItems] AS sgi ON sgi.ArticleID = na.ArticleID AND sgi.RoleID = @FilterByDNNGroupID
					INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserID, @FilterByDNNGroupID) as t ON t.seckey = nss.SecurityKey
				WHERE na.PortalID=@PortalID
					AND ((@AdminOrSuperUser = 1) OR (
						((@UserID = -1 AND aup.UserID IS NULL) OR (aup.UserID = @UserID)) AND aup.Show = 1 AND ((@UserCanApprove = 1) OR (na.Approved=1)) AND (na.Active=1 OR na.UserID=@UserID)))
					AND na.HasPermissions = 1
					AND na.HideDefaultLocale = 0
					AND na.EventArticle = 1
					AND (na.PublishDate <= @CurrentDate AND na.ExpireDate >= @CurrentDate)		
					AND (ne.StartDate >= @CurrentDate)
					GROUP BY na.ArticleID
				UNION
				SELECT na.[ArticleID] from {databaseOwner}[{objectQualifier}EasyDNNNews] as na
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsArticleRolePermissions] as arp ON na.ArticleID = arp.ArticleID
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] as cat ON na.ArticleID = cat.ArticleID
					INNER JOIN @FiltredByCategories AS fbc ON fbc.CategoryID = cat.CategoryID
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsEventsData] as ne ON ne.ArticleID = na.ArticleID
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = na.ArticleID
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialGroupItems] AS sgi ON sgi.ArticleID = na.ArticleID AND sgi.RoleID = @FilterByDNNGroupID
					INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserID, @FilterByDNNGroupID) as t ON t.seckey = nss.SecurityKey
				WHERE na.PortalID=@PortalID
					AND ((@AdminOrSuperUser = 1) OR (
						((@UserCanApprove = 1) OR (na.Approved=1)) AND (na.Active=1 OR na.UserID=@UserID) AND arp.Show = 1 AND arp.RoleID IN (SELECT [RoleID] FROM @UserInRoles)))
					AND na.HasPermissions = 1
					AND na.HideDefaultLocale = 0
					AND na.EventArticle = 1
					AND (na.PublishDate <= @CurrentDate AND na.ExpireDate >= @CurrentDate)		
					AND (ne.StartDate >= @CurrentDate)
				GROUP BY na.ArticleID
			)
		) AS Result ORDER BY StartDate;
	END
END
ELSE IF @FilterByDNNUserID <> 0
BEGIN
	IF @LocaleCode <> ''''
	BEGIN
		WITH FinalArticleIDsSet (ArticleID) AS(
			SELECT ArticleID FROM {databaseOwner}[{objectQualifier}EasyDNNNews] as n WHERE ArticleID in (
				SELECT na.[ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNews] as na
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] as cat ON na.ArticleID = cat.ArticleID
					INNER JOIN @UserViewCategoriesWithFilter as uvcwf ON uvcwf.CategoryID = cat.CategoryID
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsEventsData] as ne ON ne.ArticleID = na.ArticleID
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = na.ArticleID
					INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserID, @FilterByDNNGroupID) as t ON t.seckey = nss.SecurityKey
					LEFT OUTER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsContentLocalization] AS ncl ON ncl.ArticleID = na.ArticleID
				WHERE na.PortalID=@PortalID
					AND ((@AdminOrSuperUser = 1) OR (
						(@UserCanApprove = 1 OR na.Approved=1) AND (na.Active=1 OR na.UserID=@UserID)))
					AND na.HasPermissions = 0
					AND na.EventArticle = 1
					AND (na.PublishDate <= @CurrentDate AND na.ExpireDate >= @CurrentDate)		
					AND (ne.StartDate >= @CurrentDate)
					AND na.UserID = @FilterByDNNUserID
					AND ((@HideUnlocalizedItems = 1 AND ncl.ArticleID IS NOT NULL AND ncl.LocaleCode = @LocaleCode) OR (@HideUnlocalizedItems = 0))
				GROUP BY na.ArticleID
				UNION ALL
				SELECT na.[ArticleID] from {databaseOwner}[{objectQualifier}EasyDNNNews] as na
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsArticleUserPermissions] as aup ON na.ArticleID = aup.ArticleID
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] as cat ON na.ArticleID = cat.ArticleID
					INNER JOIN @FiltredByCategories AS fbc ON fbc.CategoryID = cat.CategoryID
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsEventsData] as ne ON ne.ArticleID = na.ArticleID
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = na.ArticleID
					INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserID, @FilterByDNNGroupID) as t ON t.seckey = nss.SecurityKey
					LEFT OUTER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsContentLocalization] AS ncl ON ncl.ArticleID = na.ArticleID
				WHERE na.PortalID=@PortalID
					AND ((@AdminOrSuperUser = 1) OR (
						((@UserID = -1 AND aup.UserID IS NULL) OR (aup.UserID = @UserID)) AND aup.Show = 1 AND ((@UserCanApprove = 1) OR (na.Approved=1)) AND (na.Active=1 OR na.UserID=@UserID)))
					AND na.HasPermissions = 1
					AND na.EventArticle = 1
					AND (na.PublishDate <= @CurrentDate AND na.ExpireDate >= @CurrentDate)		
					AND (ne.StartDate >= @CurrentDate)
					AND na.UserID = @FilterByDNNUserID
					AND ((@HideUnlocalizedItems = 1 AND ncl.ArticleID IS NOT NULL AND ncl.LocaleCode = @LocaleCode) OR (@HideUnlocalizedItems = 0))
				GROUP BY na.ArticleID
				UNION
				SELECT na.[ArticleID] from {databaseOwner}[{objectQualifier}EasyDNNNews] as na
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsArticleRolePermissions] as arp ON na.ArticleID = arp.ArticleID
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] as cat ON na.ArticleID = cat.ArticleID
					INNER JOIN @FiltredByCategories AS fbc ON fbc.CategoryID = cat.CategoryID
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsEventsData] as ne ON ne.ArticleID = na.ArticleID
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = na.ArticleID
					INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserID, @FilterByDNNGroupID) as t ON t.seckey = nss.SecurityKey
					LEFT OUTER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsContentLocalization] AS ncl ON ncl.ArticleID = na.ArticleID
				WHERE na.PortalID=@PortalID
					AND ((@AdminOrSuperUser = 1) OR (
						((@UserCanApprove = 1) OR (na.Approved=1)) AND (na.Active=1 OR na.UserID=@UserID) AND arp.Show = 1 AND arp.RoleID IN (SELECT [RoleID] FROM @UserInRoles) ))
					AND na.HasPermissions = 1
					AND na.EventArticle = 1
					AND (na.PublishDate <= @CurrentDate AND na.ExpireDate >= @CurrentDate)		
					AND (ne.StartDate >= @CurrentDate)
					AND na.UserID = @FilterByDNNUserID
					AND ((@HideUnlocalizedItems = 1 AND ncl.ArticleID IS NOT NULL AND ncl.LocaleCode = @LocaleCode) OR (@HideUnlocalizedItems = 0))
				GROUP BY na.ArticleID
				)
			),
			FinalLocalizedArticleIDsSet (ArticleID,Title,SubTitle,Summary,Article,DetailTypeData,TitleLink,MetaDecription,MetaKeywords) AS(
				SELECT ArticleID,Title,SubTitle,Summary,Article,DetailTypeData,clTitleLink AS TitleLink ,MetaDecription,MetaKeywords FROM {databaseOwner}[{objectQualifier}EasyDNNNewsContentLocalization] WHERE ArticleID IN (SELECT ArticleID FROM FinalArticleIDsSet) AND LocaleCode = @LocaleCode
			)
			SELECT Result.*, ne.StartDate, ne.EndDate,ne.WhloeDay,ne.ShowEndDate,
			CASE Result.EventArticle
				WHEN 1 THEN (SELECT PointData FROM {databaseOwner}[{objectQualifier}EasyDNNnewsGoogleMapsData] as md inner join  {databaseOwner}[{objectQualifier}EasyDNNNewsArticleGoogleMapConnection]  as mc ON md.GoogleMapID = mc.GoogleMapID WHERE mc.ArticleID =  Result.ArticleID)
				WHEN 0 THEN ''''
			END AS ''GoogleMapData''
			FROM (
				SELECT na.ArticleID, na.PublishDate, na.Title, na.TitleLink, na.ArticleImage, na.Summary, na.EventArticle
					   FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS na WHERE na.ArticleID IN (SELECT ArticleID FROM FinalArticleIDsSet WHERE ArticleID NOT IN (SELECT ArticleID FROM FinalLocalizedArticleIDsSet))
				UNION ALL
				SELECT na.ArticleID, na.PublishDate, fla.Title, fla.TitleLink, na.ArticleImage, fla.Summary, na.EventArticle
					FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS na INNER JOIN FinalLocalizedArticleIDsSet AS fla ON fla.ArticleID = na.ArticleID
			) As Result LEFT OUTER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsEventsData] as ne on Result.ArticleID = ne.ArticleID ORDER BY ne.StartDate;
	END
	ELSE
	BEGIN
		SELECT TOP (500) *,
		CASE Result.EventArticle
			WHEN 1 THEN (SELECT PointData FROM {databaseOwner}[{objectQualifier}EasyDNNnewsGoogleMapsData] as md inner join  {databaseOwner}[{objectQualifier}EasyDNNNewsArticleGoogleMapConnection]  as mc ON md.GoogleMapID = mc.GoogleMapID WHERE mc.ArticleID =  Result.ArticleID)
			WHEN 0 THEN ''''
		END AS ''GoogleMapData''
		FROM (
			SELECT na.ArticleID, na.PublishDate, na.Title, na.TitleLink, na.ArticleImage, na.Summary, na.EventArticle, ne.StartDate, ne.EndDate,ne.WhloeDay,ne.ShowEndDate FROM {databaseOwner}[{objectQualifier}EasyDNNNews] as na
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsEventsData] as ne ON na.ArticleID = ne.ArticleID
			WHERE na.ArticleID in (
				SELECT na.[ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNews] as na
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] as cat ON na.ArticleID = cat.ArticleID
					INNER JOIN @UserViewCategoriesWithFilter as uvcwf ON uvcwf.CategoryID = cat.CategoryID
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsEventsData] as ne ON ne.ArticleID = na.ArticleID
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = na.ArticleID
					INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserID, @FilterByDNNGroupID) as t ON t.seckey = nss.SecurityKey
				WHERE na.PortalID=@PortalID
					AND ((@AdminOrSuperUser = 1) OR (
						(@UserCanApprove = 1 OR na.Approved=1) AND (na.Active=1 OR na.UserID=@UserID)))
					AND na.HasPermissions = 0
					AND na.HideDefaultLocale = 0
					AND na.EventArticle = 1
					AND (na.PublishDate <= @CurrentDate AND na.ExpireDate >= @CurrentDate)		
					AND (ne.StartDate >= @CurrentDate)
					AND na.UserID = @FilterByDNNUserID
				GROUP BY na.ArticleID
				UNION ALL
				SELECT na.[ArticleID] from {databaseOwner}[{objectQualifier}EasyDNNNews] as na
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsArticleUserPermissions] as aup ON na.ArticleID = aup.ArticleID
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] as cat ON na.ArticleID = cat.ArticleID
					INNER JOIN @FiltredByCategories AS fbc ON fbc.CategoryID = cat.CategoryID
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsEventsData] as ne ON ne.ArticleID = na.ArticleID
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = na.ArticleID
					INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserID, @FilterByDNNGroupID) as t ON t.seckey = nss.SecurityKey
				WHERE na.PortalID=@PortalID
					AND ((@AdminOrSuperUser = 1) OR (
						((@UserID = -1 AND aup.UserID IS NULL) OR (aup.UserID = @UserID)) AND aup.Show = 1 AND ((@UserCanApprove = 1) OR (na.Approved=1)) AND (na.Active=1 OR na.UserID=@UserID)))
					AND na.HasPermissions = 1
					AND na.HideDefaultLocale = 0
					AND na.EventArticle = 1
					AND (na.PublishDate <= @CurrentDate AND na.ExpireDate >= @CurrentDate)		
					AND (ne.StartDate >= @CurrentDate)
					AND na.UserID = @FilterByDNNUserID
				GROUP BY na.ArticleID
				UNION
				SELECT na.[ArticleID] from {databaseOwner}[{objectQualifier}EasyDNNNews] as na
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsArticleRolePermissions] as arp ON na.ArticleID = arp.ArticleID
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] as cat ON na.ArticleID = cat.ArticleID
					INNER JOIN @FiltredByCategories AS fbc ON fbc.CategoryID = cat.CategoryID
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsEventsData] as ne ON ne.ArticleID = na.ArticleID
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = na.ArticleID
					INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserID, @FilterByDNNGroupID) as t ON t.seckey = nss.SecurityKey
				WHERE na.PortalID=@PortalID
					AND ((@AdminOrSuperUser = 1) OR (
						((@UserCanApprove = 1) OR (na.Approved=1)) AND (na.Active=1 OR na.UserID=@UserID) AND arp.Show = 1 AND arp.RoleID IN (SELECT [RoleID] FROM @UserInRoles) ))
					AND na.HasPermissions = 1
					AND na.HideDefaultLocale = 0
					AND na.EventArticle = 1
					AND (na.PublishDate <= @CurrentDate AND na.ExpireDate >= @CurrentDate)		
					AND (ne.StartDate >= @CurrentDate)
					AND na.UserID = @FilterByDNNUserID
				GROUP BY na.ArticleID
			)
		) AS Result ORDER BY StartDate;
	END
END

IF @RowCount <> 0
BEGIN
	SET ROWCOUNT 0;
END
' 
END
GO
/****** Object:  StoredProcedure {databaseOwner}[{objectQualifier}EasyDNNNewsGetItemsByTagIDCountForPageing]    Script Date: 06/24/2013 16:39:07 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'{databaseOwner}[{objectQualifier}EasyDNNNewsGetItemsByTagIDCountForPageing]') AND type in (N'P', N'PC'))
BEGIN
EXEC dbo.sp_executesql @statement = N'CREATE PROCEDURE {databaseOwner}[{objectQualifier}EasyDNNNewsGetItemsByTagIDCountForPageing]
	@ViewType tinyint = 0, -- 0 - View, 1 - Editor
	@PortalID int, -- current Portal
	@ModuleID int, -- current Module(news), portal sharing isto sadrzi dobre kategorije, auto add i setingsi su snimljeni kod tog modula
	@UserID int,
	@CurrentDate Datetime, -- = GetUTCDate,
	@OrderBy nvarchar(20) = ''PublishDate DESC'',
	@ItemsFrom int = 1,
	@ItemsTo int = 5,

	/* od tud ide filter */
	@ShowAllAuthors bit = 1, -- gleda se filtriranje autora po modulu ili portalu
	@FilterByAuthor int = 0, -- ako se selektiran jedan autor
	@FilterByGroupID int = 0, -- ako je selektirana grupa
	
	@FilterByDNNUserID int = 0, -- filter by some UserID / not current user ID
	@FilterByDNNGroupID int = 0, -- filter by DNNGroup/RoleID / not profile GroupID
	@EditOnlyAsOwner bit = 0, -- news settings
	@UserCanApprove bit = 0, -- news settings
	@LocaleCode nvarchar(20) = '''',
	@IsSocialInstance bit = 0,	

	@Perm_ViewAllCategores bit = 0, -- permission settings View all categories
	@Perm_EditAllCategores bit = 0, -- permission settings Edit all categories
	@AdminOrSuperUser bit = 0,
	@CategoryFilterType tinyint = 1, -- 0 All categories, 1 - SELECTion, 2 - AutoAdd
	@PermissionSettingsSource bit = 1, -- 1 portal, 0 module
	@FillterSettingsSource bit = 1, -- 1 portal, 0 module	
	@OuterModuleID int = 0,
	@TagID int = 0,
	@HideUnlocalizedItems bit = 0
AS
SET NOCOUNT ON;
DECLARE @ArticlesInCategories int;
SET @ArticlesInCategories = 0;
DECLARE @ArticlesInRolesAndUsers int;
SET @ArticlesInRolesAndUsers = 0;
DECLARE @EditPermission tinyint;
SET @EditPermission = 0;
DECLARE @UserInRoles TABLE (RoleID int NOT NULL PRIMARY KEY);
INSERT INTO @UserInRoles SELECT DISTINCT ur.[RoleID] FROM {databaseOwner}[{objectQualifier}UserRoles] AS ur INNER JOIN {databaseOwner}[{objectQualifier}Roles] AS r ON ur.RoleID = r.RoleID WHERE ur.UserID = @UserID AND r.PortalID = @PortalID AND (ur.ExpiryDate IS NULL OR ur.ExpiryDate > GETUTCDATE()) AND (ur.EffectiveDate IS NULL OR ur.EffectiveDate < GETUTCDATE());
DECLARE @UserViewCategories TABLE (CategoryID int NOT NULL PRIMARY KEY); -- all categories which user can see based on permissions
DECLARE @UserEditCategories TABLE (CategoryID int NOT NULL PRIMARY KEY); -- all categories which user can edit based on permissions
DECLARE @UserViewCategoriesWithFilter TABLE (CategoryID int NOT NULL PRIMARY KEY); -- all categories which user can see based on permissions and Module filter
DECLARE @FiltredByCategories TABLE (CategoryID int NOT NULL PRIMARY KEY); -- all categories that are filtred by module or portal

IF @AdminOrSuperUser = 1 OR @Perm_ViewAllCategores = 1
BEGIN
	INSERT INTO @UserViewCategories SELECT [CategoryID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryList] WHERE PortalID = @PortalID;
END
ELSE IF @UserID = -1
BEGIN	
	IF @PermissionSettingsSource = 1 -- by portal
	BEGIN
		INSERT INTO @UserViewCategories
		SELECT rpsc.[CategoryID] FROM  {databaseOwner}[{objectQualifier}EasyDNNNewsRolePremissionsShowCategories] AS rpsc 
		INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsRolePremissionSettings] AS rps ON rps.PremissionSettingsID = rpsc.PremissionSettingsID
		WHERE rps.PortalID = @PortalID  AND rps.ModuleID IS NULL AND rps.RoleID IS NULL;
	END
	ELSE -- by module
	BEGIN
	INSERT INTO @UserViewCategories
		SELECT rpsc.[CategoryID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsRolePremissionsShowCategories] AS rpsc
		INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsRolePremissionSettings] AS rps ON rps.PremissionSettingsID = rpsc.PremissionSettingsID
		WHERE rps.PortalID = @PortalID AND rps.ModuleID = @ModuleID AND rps.RoleID IS NULL;
	END
END
ELSE -- registrirani korisnik
BEGIN
	IF @PermissionSettingsSource = 1 -- by portal
	BEGIN
		INSERT INTO @UserViewCategories
		SELECT rpsc.[CategoryID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsRolePremissionsShowCategories] AS rpsc
		INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsRolePremissionSettings] AS rps ON rps.PremissionSettingsID = rpsc.PremissionSettingsID
		INNER JOIN @UserInRoles AS uir ON rps.RoleID = uir.RoleID
		WHERE rps.PortalID = @PortalID AND rps.ModuleID IS NULL GROUP BY rpsc.[CategoryID]
		UNION
		SELECT upsc.[CategoryID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsUserPremissionsShowCategories] AS upsc
		INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsUserPremissionSettings] AS ups ON ups.PremissionSettingsID = upsc.PremissionSettingsID
		WHERE ups.UserID = @UserID AND ups.PortalID = @PortalID AND ups.ModuleID IS NULL GROUP BY upsc.[CategoryID];
	END
	ELSE -- by module
	BEGIN
		INSERT INTO @UserViewCategories
		SELECT rpsc.[CategoryID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsRolePremissionsShowCategories] AS rpsc
		INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsRolePremissionSettings] AS rps ON rps.PremissionSettingsID = rpsc.PremissionSettingsID
		INNER JOIN @UserInRoles AS uir ON rps.RoleID = uir.RoleID
		WHERE rps.PortalID = @PortalID AND rps.ModuleID = @ModuleID GROUP BY rpsc.[CategoryID]
		UNION
		SELECT upsc.[CategoryID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsUserPremissionsShowCategories] AS upsc
		INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsUserPremissionSettings] AS ups ON ups.PremissionSettingsID = upsc.PremissionSettingsID
		WHERE ups.UserID = @UserID AND ups.PortalID = @PortalID AND ups.ModuleID = @ModuleID GROUP BY upsc.[CategoryID];
	END
END

IF @OuterModuleID <> 0
BEGIN
	IF @CategoryFilterType = 0 -- 0 All categories
	BEGIN
		INSERT INTO @UserViewCategoriesWithFilter SELECT [CategoryID] FROM @UserViewCategories;
		INSERT INTO @FiltredByCategories SELECT [CategoryID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryList] WHERE PortalID = @PortalID;
	END
	ELSE IF @CategoryFilterType = 1 -- 1 - SELECTion
	BEGIN
		INSERT INTO @UserViewCategoriesWithFilter 
		SELECT cl.[CategoryID] FROM @UserViewCategories AS cl
		INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsModuleCategoryItems] AS mci ON mci.CategoryID = cl.CategoryID AND mci.ModuleID = @OuterModuleID
			
		INSERT INTO @FiltredByCategories SELECT [CategoryID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsModuleCategoryItems] WHERE ModuleID = @OuterModuleID;
	END
	ELSE IF @CategoryFilterType = 2 -- 2 - AutoAdd
	BEGIN
		WITH hierarchy AS(
			SELECT [CategoryID], [ParentCategory]
			FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryList] AS cl
			WHERE (cl.ParentCategory IN (SELECT [CategoryID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsModuleCategoryItems] WHERE ModuleID = @OuterModuleID) OR cl.CategoryID IN (SELECT [CategoryID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsModuleCategoryItems] WHERE ModuleID = @OuterModuleID)) AND PortalID = @PortalID
			UNION ALL
			SELECT c.[CategoryID], c.[ParentCategory]
			FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryList] AS c INNER JOIN hierarchy AS p ON c.ParentCategory = p.CategoryID WHERE c.PortalID = @PortalID
			)
		INSERT INTO @FiltredByCategories SELECT DISTINCT CategoryID FROM hierarchy;	
		INSERT INTO @UserViewCategoriesWithFilter SELECT uvc.CategoryID FROM @FiltredByCategories AS nfc INNER JOIN @UserViewCategories AS uvc ON uvc.CategoryID = nfc.CategoryID;
	END
END
ELSE -- znaci da je skip filter, nema filtera po autorima ili kategorijama
BEGIN
	INSERT INTO @UserViewCategoriesWithFilter SELECT [CategoryID] FROM @UserViewCategories;
	INSERT INTO @FiltredByCategories SELECT [CategoryID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryList] WHERE PortalID = @PortalID;
END

DECLARE @FilterBySocialGroup bit;
SET @FilterBySocialGroup = 0;
DECLARE @FilterAuthorOrAuthors bit;
SET @FilterAuthorOrAuthors = 0;

DECLARE @TempAuthorsIDList TABLE (UserID int NOT NULL PRIMARY KEY);
IF @IsSocialInstance = 1
	BEGIN
		IF @FilterByDNNGroupID <> 0
		BEGIN	
			SET @FilterBySocialGroup = 1;
			IF @FilterByAuthor <> 0
			BEGIN
				SET @FilterAuthorOrAuthors = 1;
				SELECT @FilterByAuthor = UserID FROM {databaseOwner}[{objectQualifier}EasyDNNNewsAuthorProfile] WHERE [AuthorProfileID] = @FilterByAuthor;
			END
		END
	END
ELSE
BEGIN
-- ovaj dio odnosi se na filtriranje autora
	IF @OuterModuleID <> 0 AND @ShowAllAuthors = 0 -- filter iz other modula
	BEGIN
		SET @FilterAuthorOrAuthors = 1;
		INSERT INTO @TempAuthorsIDList
			SELECT [UserID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsModuleAuthorsItems] AS mai WHERE mai.ModuleID = @OuterModuleID
			UNION 
			SELECT [UserID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsAuthorProfile] AS ap 
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsAutorGroupItems] AS agi ON ap.AuthorProfileID = agi.AuthorProfileID
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsModuleGroupItems] AS mgi ON mgi.GroupID = agi.GroupID
			WHERE mgi.ModuleID = @OuterModuleID
	END
	ELSE
	BEGIN
		IF @FilterByAuthor = 0 AND @FilterByGroupID = 0 AND @ShowAllAuthors = 0 -- filter glavnog newsa
		BEGIN
			SET @FilterAuthorOrAuthors = 1;
			IF @FillterSettingsSource = 1 -- by portal
			BEGIN
				INSERT INTO @TempAuthorsIDList
				SELECT [UserID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsPortalAuthorsItems] AS pai WHERE pai.PortalID = @PortalID
				UNION 
				SELECT [UserID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsAuthorProfile] AS ap 
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsAutorGroupItems] AS agi ON ap.AuthorProfileID = agi.AuthorProfileID
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsPortalGroupItems] AS pgi ON pgi.GroupID = agi.GroupID
					WHERE pgi.PortalID = @PortalID
			END
			ELSE -- by modul
			BEGIN
				INSERT INTO @TempAuthorsIDList
				SELECT [UserID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsModuleAuthorsItems] AS mai WHERE mai.ModuleID = @ModuleID
				UNION 
				SELECT [UserID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsAuthorProfile] AS ap 
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsAutorGroupItems] AS agi ON ap.AuthorProfileID = agi.AuthorProfileID
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsModuleGroupItems] AS mgi ON mgi.GroupID = agi.GroupID
					WHERE mgi.ModuleID = @ModuleID
			END
		END
		ELSE IF @FilterByAuthor <> 0
		BEGIN
			SET @FilterAuthorOrAuthors = 1;
			INSERT INTO @TempAuthorsIDList SELECT [UserID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsAuthorProfile] WHERE [AuthorProfileID] = @FilterByAuthor;
		END
		ELSE IF @FilterByGroupID <> 0
		BEGIN
			SET @FilterAuthorOrAuthors = 1;
			INSERT INTO @TempAuthorsIDList
			SELECT [UserID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsAuthorProfile] AS ap 
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsAutorGroupItems] AS agi ON ap.AuthorProfileID = agi.AuthorProfileID	
				WHERE agi.GroupID = @FilterByGroupID
		END
	END
END

IF @IsSocialInstance = 0
BEGIN
	IF @LocaleCode <> ''''
	BEGIN
		SELECT @ArticlesInCategories = Count(ArticleID) FROM (
			SELECT na.[ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS na
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS cat ON na.ArticleID = cat.ArticleID
				INNER JOIN @UserViewCategoriesWithFilter  AS uvcwf ON uvcwf.CategoryID = cat.CategoryID
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsTagsItems] AS nt ON na.ArticleID = nt.ArticleID
				LEFT OUTER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsContentLocalization] AS ncl ON ncl.ArticleID = na.ArticleID
			WHERE na.PortalID=@PortalID
				AND ((@EditPermission = 1) OR ((@UserCanApprove = 1 OR na.Approved=1) AND (na.Active=1 OR na.UserID=@UserID)))
				AND na.HasPermissions = 0
				AND nt.TagID = @TagID
				AND na.PublishDate <= @CurrentDate AND na.ExpireDate >= @CurrentDate
				AND ((@FilterAuthorOrAuthors = 1 AND na.UserID IN (SELECT UserID FROM @TempAuthorsIDList)) OR (@FilterAuthorOrAuthors = 0))
				AND ((@HideUnlocalizedItems = 1 AND ncl.ArticleID IS NOT NULL AND ncl.LocaleCode = @LocaleCode) OR (@HideUnlocalizedItems = 0))
			GROUP BY na.ArticleID
		) AS CountTable;
		SELECT @ArticlesInRolesAndUsers = Count(ArticleID) FROM (
			SELECT na.[ArticleID] from {databaseOwner}[{objectQualifier}EasyDNNNews] AS na
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsArticleUserPermissions] AS aup ON na.ArticleID = aup.ArticleID
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsTagsItems] AS nt ON na.ArticleID = nt.ArticleID
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS cat ON na.ArticleID = cat.ArticleID
				INNER JOIN @FiltredByCategories AS fbc ON fbc.CategoryID = cat.CategoryID
				LEFT OUTER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsContentLocalization] AS ncl ON ncl.ArticleID = na.ArticleID
			WHERE na.PortalID=@PortalID
				AND ((@EditPermission = 1) OR (((@UserID = -1 AND aup.UserID IS NULL) OR (aup.UserID = @UserID))
					AND aup.Show = 1 AND ((@UserCanApprove = 1) OR (na.Approved=1)) AND (na.Active=1 OR na.UserID=@UserID)
				))
				AND na.HasPermissions = 1
				AND nt.TagID = @TagID
				AND na.PublishDate <= @CurrentDate AND na.ExpireDate >= @CurrentDate
				AND ((@FilterAuthorOrAuthors = 1 AND na.UserID IN (SELECT UserID FROM @TempAuthorsIDList)) OR (@FilterAuthorOrAuthors = 0))
				AND ((@HideUnlocalizedItems = 1 AND ncl.ArticleID IS NOT NULL AND ncl.LocaleCode = @LocaleCode) OR (@HideUnlocalizedItems = 0))
			GROUP BY na.ArticleID
			UNION 
			SELECT na.[ArticleID] from {databaseOwner}[{objectQualifier}EasyDNNNews] AS na
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsArticleRolePermissions] AS arp ON na.ArticleID = arp.ArticleID
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsTagsItems] AS nt ON na.ArticleID = nt.ArticleID
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS cat ON na.ArticleID = cat.ArticleID
				INNER JOIN @FiltredByCategories AS fbc ON fbc.CategoryID = cat.CategoryID
				LEFT OUTER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsContentLocalization] AS ncl ON ncl.ArticleID = na.ArticleID
			WHERE na.PortalID=@PortalID
				AND ((@EditPermission = 1) OR (((@UserCanApprove = 1) OR (na.Approved=1))
					AND (na.Active=1 OR na.UserID=@UserID) AND arp.Show = 1 AND arp.RoleID IN (SELECT [RoleID] FROM @UserInRoles)
				))
				AND na.HasPermissions = 1 
				AND nt.TagID = @TagID
				AND na.PublishDate <= @CurrentDate AND na.ExpireDate >= @CurrentDate
				AND ((@FilterAuthorOrAuthors = 1 AND na.UserID IN (SELECT UserID FROM @TempAuthorsIDList)) OR (@FilterAuthorOrAuthors = 0))
				AND ((@HideUnlocalizedItems = 1 AND ncl.ArticleID IS NOT NULL AND ncl.LocaleCode = @LocaleCode) OR (@HideUnlocalizedItems = 0))
			GROUP BY na.ArticleID
		) AS final
	END
	ELSE
	BEGIN
		SELECT @ArticlesInCategories = Count(ArticleID) FROM (
			SELECT na.[ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS na
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS cat ON na.ArticleID = cat.ArticleID
				INNER JOIN @UserViewCategoriesWithFilter  AS uvcwf ON uvcwf.CategoryID = cat.CategoryID
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsTagsItems] AS nt ON na.ArticleID = nt.ArticleID
			WHERE na.PortalID=@PortalID
				AND ((@EditPermission = 1) OR ((@UserCanApprove = 1 OR na.Approved=1) AND (na.Active=1 OR na.UserID=@UserID)))
				AND na.HasPermissions = 0
				AND na.HideDefaultLocale = 0
				AND nt.TagID = @TagID
				AND na.PublishDate <= @CurrentDate AND na.ExpireDate >= @CurrentDate
				AND ((@FilterAuthorOrAuthors = 1 AND na.UserID IN (SELECT UserID FROM @TempAuthorsIDList)) OR (@FilterAuthorOrAuthors = 0))
			GROUP BY na.ArticleID
		) AS CountTable;
		SELECT @ArticlesInRolesAndUsers = Count(ArticleID) FROM (
			SELECT na.[ArticleID] from {databaseOwner}[{objectQualifier}EasyDNNNews] AS na
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsArticleUserPermissions] AS aup ON na.ArticleID = aup.ArticleID
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsTagsItems] AS nt ON na.ArticleID = nt.ArticleID
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS cat ON na.ArticleID = cat.ArticleID
				INNER JOIN @FiltredByCategories AS fbc ON fbc.CategoryID = cat.CategoryID
			WHERE na.PortalID=@PortalID
				AND ((@EditPermission = 1) OR (((@UserID = -1 AND aup.UserID IS NULL) OR (aup.UserID = @UserID))
					AND aup.Show = 1 AND ((@UserCanApprove = 1) OR (na.Approved=1)) AND (na.Active=1 OR na.UserID=@UserID)
				))
				AND na.HasPermissions = 1
				AND na.HideDefaultLocale = 0
				AND nt.TagID = @TagID
				AND na.PublishDate <= @CurrentDate AND na.ExpireDate >= @CurrentDate
				AND ((@FilterAuthorOrAuthors = 1 AND na.UserID IN (SELECT UserID FROM @TempAuthorsIDList)) OR (@FilterAuthorOrAuthors = 0))
			GROUP BY na.ArticleID
			UNION 
			SELECT na.[ArticleID] from {databaseOwner}[{objectQualifier}EasyDNNNews] AS na
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsArticleRolePermissions] AS arp ON na.ArticleID = arp.ArticleID
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsTagsItems] AS nt ON na.ArticleID = nt.ArticleID
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS cat ON na.ArticleID = cat.ArticleID
				INNER JOIN @FiltredByCategories AS fbc ON fbc.CategoryID = cat.CategoryID
			WHERE na.PortalID=@PortalID
				AND ((@EditPermission = 1) OR (((@UserCanApprove = 1) OR (na.Approved=1))
					AND (na.Active=1 OR na.UserID=@UserID) AND arp.Show = 1 AND arp.RoleID IN (SELECT [RoleID] FROM @UserInRoles)
				))
				AND na.HasPermissions = 1
				AND na.HideDefaultLocale = 0 
				AND nt.TagID = @TagID
				AND na.PublishDate <= @CurrentDate AND na.ExpireDate >= @CurrentDate
				AND ((@FilterAuthorOrAuthors = 1 AND na.UserID IN (SELECT UserID FROM @TempAuthorsIDList)) OR (@FilterAuthorOrAuthors = 0))
			GROUP BY na.ArticleID
		) AS final
	END
END
ELSE IF @FilterBySocialGroup = 1
BEGIN
	IF @LocaleCode <> ''''
	BEGIN
		SELECT @ArticlesInCategories = Count(ArticleID) FROM (
			SELECT na.[ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS na
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS cat ON na.ArticleID = cat.ArticleID
				INNER JOIN @UserViewCategoriesWithFilter  AS uvcwf ON uvcwf.CategoryID = cat.CategoryID
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsTagsItems] AS nt ON na.ArticleID = nt.ArticleID
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = na.ArticleID
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialGroupItems] AS sgi ON sgi.ArticleID = na.ArticleID AND sgi.RoleID = @FilterByDNNGroupID
				INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserID, @FilterByDNNGroupID) AS t ON t.seckey = nss.SecurityKey
				LEFT OUTER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsContentLocalization] AS ncl ON ncl.ArticleID = na.ArticleID
			WHERE na.PortalID=@PortalID
				AND ((@EditPermission = 1) OR ((@UserCanApprove = 1 OR na.Approved=1) AND (na.Active=1 OR na.UserID=@UserID)))
				AND na.HasPermissions = 0
				AND nt.TagID = @TagID
				AND na.PublishDate <= @CurrentDate AND na.ExpireDate >= @CurrentDate
				AND ((@FilterAuthorOrAuthors = 1 AND na.UserID = @FilterByAuthor) OR (@FilterAuthorOrAuthors = 0))
				AND ((@HideUnlocalizedItems = 1 AND ncl.ArticleID IS NOT NULL AND ncl.LocaleCode = @LocaleCode) OR (@HideUnlocalizedItems = 0))
			GROUP BY na.ArticleID
		) AS CountTable;
		SELECT @ArticlesInRolesAndUsers = Count(ArticleID) FROM (
			SELECT na.[ArticleID] from {databaseOwner}[{objectQualifier}EasyDNNNews] AS na
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsArticleUserPermissions] AS aup ON na.ArticleID = aup.ArticleID
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsTagsItems] AS nt ON na.ArticleID = nt.ArticleID
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS cat ON na.ArticleID = cat.ArticleID
				INNER JOIN @FiltredByCategories AS fbc ON fbc.CategoryID = cat.CategoryID
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = na.ArticleID
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialGroupItems] AS sgi ON sgi.ArticleID = na.ArticleID AND sgi.RoleID = @FilterByDNNGroupID
				INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserID, @FilterByDNNGroupID) AS t ON t.seckey = nss.SecurityKey
				LEFT OUTER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsContentLocalization] AS ncl ON ncl.ArticleID = na.ArticleID
			WHERE na.PortalID=@PortalID
				AND ((@EditPermission = 1) OR (((@UserID = -1 AND aup.UserID IS NULL) OR (aup.UserID = @UserID))
					AND aup.Show = 1 AND ((@UserCanApprove = 1) OR (na.Approved=1)) AND (na.Active=1 OR na.UserID=@UserID)
				))
				AND na.HasPermissions = 1
				AND nt.TagID = @TagID
				AND na.PublishDate <= @CurrentDate AND na.ExpireDate >= @CurrentDate
				AND ((@FilterAuthorOrAuthors = 1 AND na.UserID = @FilterByAuthor) OR (@FilterAuthorOrAuthors = 0))
				AND ((@HideUnlocalizedItems = 1 AND ncl.ArticleID IS NOT NULL AND ncl.LocaleCode = @LocaleCode) OR (@HideUnlocalizedItems = 0))
			GROUP BY na.ArticleID
			UNION 
			SELECT na.[ArticleID] from {databaseOwner}[{objectQualifier}EasyDNNNews] AS na
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsArticleRolePermissions] AS arp ON na.ArticleID = arp.ArticleID
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsTagsItems] AS nt ON na.ArticleID = nt.ArticleID
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS cat ON na.ArticleID = cat.ArticleID
				INNER JOIN @FiltredByCategories AS fbc ON fbc.CategoryID = cat.CategoryID
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = na.ArticleID
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialGroupItems] AS sgi ON sgi.ArticleID = na.ArticleID AND sgi.RoleID = @FilterByDNNGroupID
				INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserID, @FilterByDNNGroupID) AS t ON t.seckey = nss.SecurityKey
				LEFT OUTER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsContentLocalization] AS ncl ON ncl.ArticleID = na.ArticleID
			WHERE na.PortalID=@PortalID
				AND ((@EditPermission = 1) OR (((@UserCanApprove = 1) OR (na.Approved=1))
					AND (na.Active=1 OR na.UserID=@UserID) AND arp.Show = 1 AND arp.RoleID IN (SELECT [RoleID] FROM @UserInRoles)
				))
				AND na.HasPermissions = 1 
				AND nt.TagID = @TagID
				AND na.PublishDate <= @CurrentDate AND na.ExpireDate >= @CurrentDate
				AND ((@FilterAuthorOrAuthors = 1 AND na.UserID = @FilterByAuthor) OR (@FilterAuthorOrAuthors = 0))
				AND ((@HideUnlocalizedItems = 1 AND ncl.ArticleID IS NOT NULL AND ncl.LocaleCode = @LocaleCode) OR (@HideUnlocalizedItems = 0))
			GROUP BY na.ArticleID
		) AS final
	END
	ELSE
	BEGIN
		SELECT @ArticlesInCategories = Count(ArticleID) FROM (
			SELECT na.[ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS na
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS cat ON na.ArticleID = cat.ArticleID
				INNER JOIN @UserViewCategoriesWithFilter  AS uvcwf ON uvcwf.CategoryID = cat.CategoryID
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsTagsItems] AS nt ON na.ArticleID = nt.ArticleID
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = na.ArticleID
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialGroupItems] AS sgi ON sgi.ArticleID = na.ArticleID AND sgi.RoleID = @FilterByDNNGroupID
				INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserID, @FilterByDNNGroupID) AS t ON t.seckey = nss.SecurityKey
			WHERE na.PortalID=@PortalID
				AND ((@EditPermission = 1) OR ((@UserCanApprove = 1 OR na.Approved=1) AND (na.Active=1 OR na.UserID=@UserID)))
				AND na.HasPermissions = 0
				AND na.HideDefaultLocale = 0
				AND nt.TagID = @TagID
				AND na.PublishDate <= @CurrentDate AND na.ExpireDate >= @CurrentDate
				AND((@FilterAuthorOrAuthors = 1 AND na.UserID = @FilterByAuthor) OR (@FilterAuthorOrAuthors = 0))
			GROUP BY na.ArticleID
		) AS CountTable;
		SELECT @ArticlesInRolesAndUsers = Count(ArticleID) FROM (
			SELECT na.[ArticleID] from {databaseOwner}[{objectQualifier}EasyDNNNews] AS na
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsArticleUserPermissions] AS aup ON na.ArticleID = aup.ArticleID
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsTagsItems] AS nt ON na.ArticleID = nt.ArticleID
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS cat ON na.ArticleID = cat.ArticleID
				INNER JOIN @FiltredByCategories AS fbc ON fbc.CategoryID = cat.CategoryID
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = na.ArticleID
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialGroupItems] AS sgi ON sgi.ArticleID = na.ArticleID AND sgi.RoleID = @FilterByDNNGroupID
				INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserID, @FilterByDNNGroupID) AS t ON t.seckey = nss.SecurityKey
			WHERE na.PortalID=@PortalID
				AND ((@EditPermission = 1) OR (((@UserID = -1 AND aup.UserID IS NULL) OR (aup.UserID = @UserID))
					AND aup.Show = 1 AND ((@UserCanApprove = 1) OR (na.Approved=1)) AND (na.Active=1 OR na.UserID=@UserID)
				))
				AND na.HasPermissions = 1
				AND na.HideDefaultLocale = 0
				AND nt.TagID = @TagID
				AND na.PublishDate <= @CurrentDate AND na.ExpireDate >= @CurrentDate
				AND((@FilterAuthorOrAuthors = 1 AND na.UserID = @FilterByAuthor) OR (@FilterAuthorOrAuthors = 0))
			GROUP BY na.ArticleID
			UNION 
			SELECT na.[ArticleID] from {databaseOwner}[{objectQualifier}EasyDNNNews] AS na
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsArticleRolePermissions] AS arp ON na.ArticleID = arp.ArticleID
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsTagsItems] AS nt ON na.ArticleID = nt.ArticleID
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS cat ON na.ArticleID = cat.ArticleID
				INNER JOIN @FiltredByCategories AS fbc ON fbc.CategoryID = cat.CategoryID
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = na.ArticleID
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialGroupItems] AS sgi ON sgi.ArticleID = na.ArticleID AND sgi.RoleID = @FilterByDNNGroupID
				INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserID, @FilterByDNNGroupID) AS t ON t.seckey = nss.SecurityKey
			WHERE na.PortalID=@PortalID
				AND ((@EditPermission = 1) OR (((@UserCanApprove = 1) OR (na.Approved=1))
					AND (na.Active=1 OR na.UserID=@UserID) AND arp.Show = 1 AND arp.RoleID IN (SELECT [RoleID] FROM @UserInRoles)
				))
				AND na.HasPermissions = 1 
				AND na.HideDefaultLocale = 0
				AND nt.TagID = @TagID
				AND na.PublishDate <= @CurrentDate AND na.ExpireDate >= @CurrentDate
				AND((@FilterAuthorOrAuthors = 1 AND na.UserID = @FilterByAuthor) OR (@FilterAuthorOrAuthors = 0))
			GROUP BY na.ArticleID
		) AS final
	END
END
ELSE IF @FilterByDNNUserID <> 0
BEGIN
	IF @LocaleCode <> ''''
	BEGIN
		SELECT @ArticlesInCategories = Count(ArticleID) FROM (
			SELECT na.[ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS na
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS cat ON na.ArticleID = cat.ArticleID
				INNER JOIN @UserViewCategoriesWithFilter  AS uvcwf ON uvcwf.CategoryID = cat.CategoryID
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsTagsItems] AS nt ON na.ArticleID = nt.ArticleID
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = na.ArticleID
				INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserID, @FilterByDNNGroupID) AS t ON t.seckey = nss.SecurityKey
				LEFT OUTER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsContentLocalization] AS ncl ON ncl.ArticleID = na.ArticleID
			WHERE na.PortalID=@PortalID
				AND ((@EditPermission = 1) OR ((@UserCanApprove = 1 OR na.Approved=1) AND (na.Active=1 OR na.UserID=@UserID)))
				AND na.HasPermissions = 0
				AND nt.TagID = @TagID
				AND na.PublishDate <= @CurrentDate AND na.ExpireDate >= @CurrentDate
				AND na.UserID = @FilterByDNNUserID
				AND ((@HideUnlocalizedItems = 1 AND ncl.ArticleID IS NOT NULL AND ncl.LocaleCode = @LocaleCode) OR (@HideUnlocalizedItems = 0))
			GROUP BY na.ArticleID
		) AS CountTable;
		SELECT @ArticlesInRolesAndUsers = Count(ArticleID) FROM (
			SELECT na.[ArticleID] from {databaseOwner}[{objectQualifier}EasyDNNNews] AS na
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsArticleUserPermissions] AS aup ON na.ArticleID = aup.ArticleID
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsTagsItems] AS nt ON na.ArticleID = nt.ArticleID
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS cat ON na.ArticleID = cat.ArticleID
				INNER JOIN @FiltredByCategories AS fbc ON fbc.CategoryID = cat.CategoryID
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = na.ArticleID
				INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserID, @FilterByDNNGroupID) AS t ON t.seckey = nss.SecurityKey
				LEFT OUTER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsContentLocalization] AS ncl ON ncl.ArticleID = na.ArticleID
			WHERE na.PortalID=@PortalID
				AND ((@EditPermission = 1) OR (((@UserID = -1 AND aup.UserID IS NULL) OR (aup.UserID = @UserID))
					AND aup.Show = 1 AND ((@UserCanApprove = 1) OR (na.Approved=1)) AND (na.Active=1 OR na.UserID=@UserID)
				))
				AND na.HasPermissions = 1
				AND nt.TagID = @TagID
				AND na.PublishDate <= @CurrentDate AND na.ExpireDate >= @CurrentDate
				AND na.UserID = @FilterByDNNUserID
				AND ((@HideUnlocalizedItems = 1 AND ncl.ArticleID IS NOT NULL AND ncl.LocaleCode = @LocaleCode) OR (@HideUnlocalizedItems = 0))
			GROUP BY na.ArticleID
			UNION 
			SELECT na.[ArticleID] from {databaseOwner}[{objectQualifier}EasyDNNNews] AS na
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsArticleRolePermissions] AS arp ON na.ArticleID = arp.ArticleID
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsTagsItems] AS nt ON na.ArticleID = nt.ArticleID
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS cat ON na.ArticleID = cat.ArticleID
				INNER JOIN @FiltredByCategories AS fbc ON fbc.CategoryID = cat.CategoryID
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = na.ArticleID
				INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserID, @FilterByDNNGroupID) AS t ON t.seckey = nss.SecurityKey
				LEFT OUTER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsContentLocalization] AS ncl ON ncl.ArticleID = na.ArticleID
			WHERE na.PortalID=@PortalID
				AND ((@EditPermission = 1) OR (((@UserCanApprove = 1) OR (na.Approved=1))
					AND (na.Active=1 OR na.UserID=@UserID) AND arp.Show = 1 AND arp.RoleID IN (SELECT [RoleID] FROM @UserInRoles)
				))
				AND na.HasPermissions = 1 
				AND nt.TagID = @TagID
				AND na.PublishDate <= @CurrentDate AND na.ExpireDate >= @CurrentDate
				AND na.UserID = @FilterByDNNUserID
				AND ((@HideUnlocalizedItems = 1 AND ncl.ArticleID IS NOT NULL AND ncl.LocaleCode = @LocaleCode) OR (@HideUnlocalizedItems = 0))
			GROUP BY na.ArticleID
		) AS final
	END
	ELSE
	BEGIN
		SELECT @ArticlesInCategories = Count(ArticleID) FROM (
			SELECT na.[ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS na
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS cat ON na.ArticleID = cat.ArticleID
				INNER JOIN @UserViewCategoriesWithFilter  AS uvcwf ON uvcwf.CategoryID = cat.CategoryID
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsTagsItems] AS nt ON na.ArticleID = nt.ArticleID
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = na.ArticleID
				INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserID, @FilterByDNNGroupID) AS t ON t.seckey = nss.SecurityKey
			WHERE na.PortalID=@PortalID
				AND ((@EditPermission = 1) OR ((@UserCanApprove = 1 OR na.Approved=1) AND (na.Active=1 OR na.UserID=@UserID)))
				AND na.HasPermissions = 0
				AND na.HideDefaultLocale = 0
				AND nt.TagID = @TagID
				AND na.PublishDate <= @CurrentDate AND na.ExpireDate >= @CurrentDate
				AND na.UserID = @FilterByDNNUserID
			GROUP BY na.ArticleID
		) AS CountTable;
		SELECT @ArticlesInRolesAndUsers = Count(ArticleID) FROM (
			SELECT na.[ArticleID] from {databaseOwner}[{objectQualifier}EasyDNNNews] AS na
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsArticleUserPermissions] AS aup ON na.ArticleID = aup.ArticleID
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsTagsItems] AS nt ON na.ArticleID = nt.ArticleID
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS cat ON na.ArticleID = cat.ArticleID
				INNER JOIN @FiltredByCategories AS fbc ON fbc.CategoryID = cat.CategoryID
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = na.ArticleID
				INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserID, @FilterByDNNGroupID) AS t ON t.seckey = nss.SecurityKey
			WHERE na.PortalID=@PortalID
				AND ((@EditPermission = 1) OR (((@UserID = -1 AND aup.UserID IS NULL) OR (aup.UserID = @UserID))
					AND aup.Show = 1 AND ((@UserCanApprove = 1) OR (na.Approved=1)) AND (na.Active=1 OR na.UserID=@UserID)
				))
				AND na.HasPermissions = 1
				AND na.HideDefaultLocale = 0
				AND nt.TagID = @TagID
				AND na.PublishDate <= @CurrentDate AND na.ExpireDate >= @CurrentDate
				AND na.UserID = @FilterByDNNUserID
			GROUP BY na.ArticleID
			UNION 
			SELECT na.[ArticleID] from {databaseOwner}[{objectQualifier}EasyDNNNews] AS na
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsArticleRolePermissions] AS arp ON na.ArticleID = arp.ArticleID
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsTagsItems] AS nt ON na.ArticleID = nt.ArticleID
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS cat ON na.ArticleID = cat.ArticleID
				INNER JOIN @FiltredByCategories AS fbc ON fbc.CategoryID = cat.CategoryID
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = na.ArticleID
				INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserID, @FilterByDNNGroupID) AS t ON t.seckey = nss.SecurityKey
			WHERE na.PortalID=@PortalID
				AND ((@EditPermission = 1) OR (((@UserCanApprove = 1) OR (na.Approved=1))
					AND (na.Active=1 OR na.UserID=@UserID) AND arp.Show = 1 AND arp.RoleID IN (SELECT [RoleID] FROM @UserInRoles)
				))
				AND na.HasPermissions = 1
				AND na.HideDefaultLocale = 0 
				AND nt.TagID = @TagID
				AND na.PublishDate <= @CurrentDate AND na.ExpireDate >= @CurrentDate
				AND na.UserID = @FilterByDNNUserID
			GROUP BY na.ArticleID
		) AS final
	END
END
SELECT @ArticlesInRolesAndUsers + @ArticlesInCategories ' 
END
GO
/****** Object:  StoredProcedure {databaseOwner}[{objectQualifier}EasyDNNNewsGetItemsByTagID]    Script Date: 06/24/2013 16:39:06 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'{databaseOwner}[{objectQualifier}EasyDNNNewsGetItemsByTagID]') AND type in (N'P', N'PC'))
BEGIN
EXEC dbo.sp_executesql @statement = N'CREATE PROCEDURE {databaseOwner}[{objectQualifier}EasyDNNNewsGetItemsByTagID]
	@ViewType tinyint = 0, -- 0 - View, 1 - Editor
	@PortalID int, -- current Portal
	@ModuleID int, -- current Module(news), portal sharing isto sadrzi dobre kategorije, auto add i setingsi su snimljeni kod tog modula
	@UserID int,
	@CurrentDate Datetime, -- = GetUTCDate,
	@OrderBy nvarchar(20) = ''PublishDate DESC'',
	@ItemsFrom int = 1,
	@ItemsTo int = 5,

	/* od tud ide filter */
	@ShowAllAuthors bit = 1, -- gleda se filtriranje autora po modulu ili portalu
	@FilterByAuthor int = 0, -- ako se selektiran jedan autor
	@FilterByGroupID int = 0, -- ako je selektirana grupa
	
	@FilterByDNNUserID int = 0, -- filter by some UserID / not current user ID
	@FilterByDNNGroupID int = 0, -- filter by DNNGroup/RoleID / not profile GroupID
	@EditOnlyAsOwner bit = 0, -- news settings
	@UserCanApprove bit = 0, -- news settings
	@LocaleCode nvarchar(20) = '''',
	@IsSocialInstance bit = 0,	

	@Perm_ViewAllCategores bit = 0, -- permission settings View all categories
	@Perm_EditAllCategores bit = 0, -- permission settings Edit all categories
	@AdminOrSuperUser bit = 0,
	@CategoryFilterType tinyint = 1, -- 0 All categories, 1 - SELECTion, 2 - AutoAdd
	@PermissionSettingsSource bit = 1, -- 1 portal, 0 module
	@FillterSettingsSource bit = 1, -- 1 portal, 0 module	
	@OuterModuleID int = 0,
	@TagID int = 0,
	@HideUnlocalizedItems bit = 0
AS
SET NOCOUNT ON;
DECLARE @EditPermission tinyint;
SET @EditPermission = 0;
DECLARE @UserInRoles TABLE (RoleID int NOT NULL PRIMARY KEY);
INSERT INTO @UserInRoles SELECT DISTINCT ur.[RoleID] FROM {databaseOwner}[{objectQualifier}UserRoles] AS ur INNER JOIN {databaseOwner}[{objectQualifier}Roles] AS r ON ur.RoleID = r.RoleID WHERE ur.UserID = @UserID AND r.PortalID = @PortalID AND (ur.ExpiryDate IS NULL OR ur.ExpiryDate > GETUTCDATE()) AND (ur.EffectiveDate IS NULL OR ur.EffectiveDate < GETUTCDATE());
DECLARE @UserViewCategories TABLE (CategoryID int NOT NULL PRIMARY KEY); -- all categories which user can see based on permissions
DECLARE @UserEditCategories TABLE (CategoryID int NOT NULL PRIMARY KEY); -- all categories which user can edit based on permissions
DECLARE @UserViewCategoriesWithFilter TABLE (CategoryID int NOT NULL PRIMARY KEY); -- all categories which user can see based on permissions and Module filter
DECLARE @FiltredByCategories TABLE (CategoryID int NOT NULL PRIMARY KEY); -- all categories that are filtred by module or portal

IF @AdminOrSuperUser = 1 OR @Perm_ViewAllCategores = 1
BEGIN
	INSERT INTO @UserViewCategories SELECT [CategoryID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryList] WHERE PortalID = @PortalID;
END
ELSE IF @UserID = -1
BEGIN	
	IF @PermissionSettingsSource = 1 -- by portal
	BEGIN
		INSERT INTO @UserViewCategories
		SELECT rpsc.[CategoryID] FROM  {databaseOwner}[{objectQualifier}EasyDNNNewsRolePremissionsShowCategories] AS rpsc 
		INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsRolePremissionSettings] AS rps ON rps.PremissionSettingsID = rpsc.PremissionSettingsID
		WHERE rps.PortalID = @PortalID  AND rps.ModuleID IS NULL AND rps.RoleID IS NULL;
	END
	ELSE -- by module
	BEGIN
	INSERT INTO @UserViewCategories
		SELECT rpsc.[CategoryID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsRolePremissionsShowCategories] AS rpsc
		INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsRolePremissionSettings] AS rps ON rps.PremissionSettingsID = rpsc.PremissionSettingsID
		WHERE rps.PortalID = @PortalID AND rps.ModuleID = @ModuleID AND rps.RoleID IS NULL;
	END
END
ELSE -- registrirani korisnik
BEGIN
	IF @PermissionSettingsSource = 1 -- by portal
	BEGIN
		INSERT INTO @UserViewCategories
		SELECT rpsc.[CategoryID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsRolePremissionsShowCategories] AS rpsc
		INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsRolePremissionSettings] AS rps ON rps.PremissionSettingsID = rpsc.PremissionSettingsID
		INNER JOIN @UserInRoles AS uir ON rps.RoleID = uir.RoleID
		WHERE rps.PortalID = @PortalID AND rps.ModuleID IS NULL GROUP BY rpsc.[CategoryID]
		UNION
		SELECT upsc.[CategoryID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsUserPremissionsShowCategories] AS upsc
		INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsUserPremissionSettings] AS ups ON ups.PremissionSettingsID = upsc.PremissionSettingsID
		WHERE ups.UserID = @UserID AND ups.PortalID = @PortalID AND ups.ModuleID IS NULL GROUP BY upsc.[CategoryID];
	END
	ELSE -- by module
	BEGIN
		INSERT INTO @UserViewCategories
		SELECT rpsc.[CategoryID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsRolePremissionsShowCategories] AS rpsc
		INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsRolePremissionSettings] AS rps ON rps.PremissionSettingsID = rpsc.PremissionSettingsID
		INNER JOIN @UserInRoles AS uir ON rps.RoleID = uir.RoleID
		WHERE rps.PortalID = @PortalID AND rps.ModuleID = @ModuleID GROUP BY rpsc.[CategoryID]
		UNION
		SELECT upsc.[CategoryID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsUserPremissionsShowCategories] AS upsc
		INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsUserPremissionSettings] AS ups ON ups.PremissionSettingsID = upsc.PremissionSettingsID
		WHERE ups.UserID = @UserID AND ups.PortalID = @PortalID AND ups.ModuleID = @ModuleID GROUP BY upsc.[CategoryID];
	END
END

IF @OuterModuleID <> 0
BEGIN
	IF @CategoryFilterType = 0 -- 0 All categories
	BEGIN
		INSERT INTO @UserViewCategoriesWithFilter SELECT [CategoryID] FROM @UserViewCategories;
		INSERT INTO @FiltredByCategories SELECT [CategoryID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryList] WHERE PortalID = @PortalID;
	END
	ELSE IF @CategoryFilterType = 1 -- 1 - SELECTion
	BEGIN
		INSERT INTO @UserViewCategoriesWithFilter 
		SELECT cl.[CategoryID] FROM @UserViewCategories AS cl
		INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsModuleCategoryItems] AS mci ON mci.CategoryID = cl.CategoryID AND mci.ModuleID = @OuterModuleID
			
		INSERT INTO @FiltredByCategories SELECT [CategoryID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsModuleCategoryItems] WHERE ModuleID = @OuterModuleID;
	END
	ELSE IF @CategoryFilterType = 2 -- 2 - AutoAdd
	BEGIN
		WITH hierarchy AS(
			SELECT [CategoryID], [ParentCategory]
			FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryList] AS cl
			WHERE (cl.ParentCategory IN (SELECT [CategoryID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsModuleCategoryItems] WHERE ModuleID = @OuterModuleID) OR cl.CategoryID IN (SELECT [CategoryID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsModuleCategoryItems] WHERE ModuleID = @OuterModuleID)) AND PortalID = @PortalID
			UNION ALL
			SELECT c.[CategoryID], c.[ParentCategory]
			FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryList] AS c INNER JOIN hierarchy AS p ON c.ParentCategory = p.CategoryID WHERE c.PortalID = @PortalID
			)
		INSERT INTO @FiltredByCategories SELECT DISTINCT CategoryID FROM hierarchy;	
		INSERT INTO @UserViewCategoriesWithFilter SELECT uvc.CategoryID FROM @FiltredByCategories AS nfc INNER JOIN @UserViewCategories AS uvc ON uvc.CategoryID = nfc.CategoryID;
	END
END
ELSE -- znaci da je skip filter, nema filtera po autorima ili kategorijama
BEGIN
	INSERT INTO @UserViewCategoriesWithFilter SELECT [CategoryID] FROM @UserViewCategories;
	INSERT INTO @FiltredByCategories SELECT [CategoryID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryList] WHERE PortalID = @PortalID;
END
DECLARE @FilterBySocialGroup bit;
SET @FilterBySocialGroup = 0;
DECLARE @FilterAuthorOrAuthors bit;
SET @FilterAuthorOrAuthors = 0;

DECLARE @TempAuthorsIDList TABLE (UserID int NOT NULL PRIMARY KEY);
IF @IsSocialInstance = 1
	BEGIN
		IF @FilterByDNNGroupID <> 0
		BEGIN	
			SET @FilterBySocialGroup = 1;
			IF @FilterByAuthor <> 0
			BEGIN
				SET @FilterAuthorOrAuthors = 1;
				SELECT @FilterByAuthor = UserID FROM {databaseOwner}[{objectQualifier}EasyDNNNewsAuthorProfile] WHERE [AuthorProfileID] = @FilterByAuthor;
			END
		END
	END
ELSE
BEGIN
-- ovaj dio odnosi se na filtriranje autora
	IF @OuterModuleID <> 0 AND @ShowAllAuthors = 0 -- filter iz other modula
	BEGIN
		SET @FilterAuthorOrAuthors = 1;
		INSERT INTO @TempAuthorsIDList
			SELECT [UserID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsModuleAuthorsItems] AS mai WHERE mai.ModuleID = @OuterModuleID
			UNION 
			SELECT [UserID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsAuthorProfile] AS ap 
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsAutorGroupItems] AS agi ON ap.AuthorProfileID = agi.AuthorProfileID
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsModuleGroupItems] AS mgi ON mgi.GroupID = agi.GroupID
			WHERE mgi.ModuleID = @OuterModuleID
	END
	ELSE
	BEGIN
		IF @FilterByAuthor = 0 AND @FilterByGroupID = 0 AND @ShowAllAuthors = 0 -- filter glavnog newsa
		BEGIN
			SET @FilterAuthorOrAuthors = 1;
			IF @FillterSettingsSource = 1 -- by portal
			BEGIN
				INSERT INTO @TempAuthorsIDList
				SELECT [UserID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsPortalAuthorsItems] AS pai WHERE pai.PortalID = @PortalID
				UNION 
				SELECT [UserID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsAuthorProfile] AS ap 
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsAutorGroupItems] AS agi ON ap.AuthorProfileID = agi.AuthorProfileID
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsPortalGroupItems] AS pgi ON pgi.GroupID = agi.GroupID
					WHERE pgi.PortalID = @PortalID
			END
			ELSE -- by modul
			BEGIN
				INSERT INTO @TempAuthorsIDList
				SELECT [UserID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsModuleAuthorsItems] AS mai WHERE mai.ModuleID = @ModuleID
				UNION 
				SELECT [UserID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsAuthorProfile] AS ap 
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsAutorGroupItems] AS agi ON ap.AuthorProfileID = agi.AuthorProfileID
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsModuleGroupItems] AS mgi ON mgi.GroupID = agi.GroupID
					WHERE mgi.ModuleID = @ModuleID
			END
		END
		ELSE IF @FilterByAuthor <> 0
		BEGIN
			SET @FilterAuthorOrAuthors = 1;
			INSERT INTO @TempAuthorsIDList SELECT [UserID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsAuthorProfile] WHERE [AuthorProfileID] = @FilterByAuthor;
		END
		ELSE IF @FilterByGroupID <> 0
		BEGIN
			SET @FilterAuthorOrAuthors = 1;
			INSERT INTO @TempAuthorsIDList
			SELECT [UserID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsAuthorProfile] AS ap 
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsAutorGroupItems] AS agi ON ap.AuthorProfileID = agi.AuthorProfileID	
				WHERE agi.GroupID = @FilterByGroupID
		END
	END
END
-- kategorije sa edit pravima
IF @AdminOrSuperUser = 1 OR @Perm_EditAllCategores = 1
BEGIN	
	INSERT INTO @UserEditCategories SELECT CategoryID FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryList] WHERE PortalID = @PortalID;
	SET @EditPermission = 1;
END
ELSE
BEGIN
	IF @UserID = -1
	BEGIN
		IF @PermissionSettingsSource = 1 -- by portal
		BEGIN
			INSERT INTO @UserEditCategories
			SELECT rpatc.[CategoryID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsRolePremissionsAddToCategories] AS rpatc
			INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsRolePremissionSettings] AS rps ON rps.PremissionSettingsID = rpatc.PremissionSettingsID
			WHERE rps.PortalID = @PortalID AND rps.ModuleID IS NULL AND rps.RoleID IS NULL;
		END
		ELSE -- by module
		BEGIN
		INSERT INTO @UserEditCategories
			SELECT rpatc.[CategoryID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsRolePremissionsAddToCategories] AS rpatc
			INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsRolePremissionSettings] AS rps ON rps.PremissionSettingsID = rpatc.PremissionSettingsID
			WHERE rps.RoleID IS NULL AND rps.PortalID = @PortalID AND rps.ModuleID = @ModuleID;
		END
	END
	ELSE -- registrirani korisnik
	BEGIN
		IF @PermissionSettingsSource = 1 -- by portal
		BEGIN
			INSERT INTO @UserEditCategories
			SELECT rpatc.[CategoryID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsRolePremissionsAddToCategories] AS rpatc
			INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsRolePremissionSettings] AS rps ON rps.PremissionSettingsID = rpatc.PremissionSettingsID
			INNER JOIN @UserInRoles AS uir ON rps.RoleID = uir.RoleID
			WHERE rps.PortalID = @PortalID AND rps.ModuleID IS NULL GROUP BY rpatc.[CategoryID]
			UNION
			SELECT upatc.[CategoryID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsUserPremissionsAddToCategories] AS upatc
			INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsUserPremissionSettings] AS ups ON ups.PremissionSettingsID = upatc.PremissionSettingsID
			WHERE ups.UserID = @UserID AND ups.PortalID = @PortalID AND ups.ModuleID IS NULL GROUP BY upatc.[CategoryID];
		END
		ELSE -- by module
		BEGIN
			INSERT INTO @UserEditCategories
			SELECT rpatc.[CategoryID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsRolePremissionsAddToCategories] AS rpatc
			INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsRolePremissionSettings] AS rps ON rps.PremissionSettingsID = rpatc.PremissionSettingsID
			INNER JOIN @UserInRoles AS uir ON rps.RoleID = uir.RoleID
			WHERE rps.PortalID = @PortalID AND rps.ModuleID = @ModuleID GROUP BY rpatc.[CategoryID]
			UNION
			SELECT upatc.[CategoryID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsUserPremissionsAddToCategories] AS upatc
			INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsUserPremissionSettings] AS ups ON ups.PremissionSettingsID = upatc.PremissionSettingsID
			WHERE ups.UserID = @UserID AND ups.PortalID = @PortalID AND ups.ModuleID = @ModuleID GROUP BY upatc.[CategoryID];
		END	
	END
	IF EXISTS(SELECT * FROM @UserEditCategories) BEGIN SET @EditPermission = 2; END
END

DECLARE @LocalizedCategories TABLE (ID int NOT NULL PRIMARY KEY, Name nvarchar(200), Position int, CategoryURL nvarchar(1500));
IF @LocaleCode <> ''''
BEGIN
	WITH LocCategories(ID, Name, Position, CategoryURL) AS (
		SELECT Cat.CategoryID AS ID, cl.Title AS Name, Cat.Position, Cat.CategoryURL FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryList] AS Cat INNER JOIN @UserViewCategories AS uvc ON uvc.CategoryID = Cat.CategoryID INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryLocalization] AS cl ON uvc.CategoryID = cl.CategoryID WHERE Cat.PortalID = @PortalID AND cl.LocaleCode = @LocaleCode
	),
	NotLocCategories(ID, Name, Position, CategoryURL) AS (
		SELECT Cat.CategoryID AS ID, Cat.CategoryName AS Name, Cat.Position, Cat.CategoryURL FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryList] AS Cat INNER JOIN @UserViewCategories AS uvc ON uvc.CategoryID = Cat.CategoryID WHERE Cat.PortalID = @PortalID AND Cat.CategoryID NOT IN (SELECT ID FROM LocCategories)
	)
	INSERT INTO @LocalizedCategories SELECT ID, Name, Position, CategoryURL FROM (SELECT ID, Name, Position, CategoryURL FROM LocCategories UNION ALL SELECT ID, Name, Position, CategoryURL FROM NotLocCategories) AS ArticleCategories
END
ELSE
BEGIN
	INSERT INTO @LocalizedCategories SELECT Cat.CategoryID AS ID, Cat.CategoryName AS Name, Cat.Position, Cat.CategoryURL FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryList] AS Cat INNER JOIN @UserViewCategories AS uvc ON uvc.CategoryID = cat.CategoryID WHERE Cat.PortalID = @PortalID
END

IF @IsSocialInstance = 0
BEGIN
	IF @LocaleCode <> ''''
	BEGIN
		WITH FinalArticleIDsSet (ArticleID) AS(
		SELECT TOP (@ItemsTo - @ItemsFrom + 1) ArticleID FROM (SELECT *, ROW_NUMBER() OVER (ORDER BY 
		CASE WHEN @OrderBy =''PublishDate ASC'' THEN PublishDate END,
		CASE WHEN @OrderBy =''PublishDate DESC'' THEN PublishDate END DESC,
		CASE WHEN @OrderBy =''NumberOfViews ASC'' THEN NumberOfViews END,
		CASE WHEN @OrderBy =''NumberOfViews DESC'' THEN NumberOfViews END DESC,
		CASE WHEN @OrderBy =''RatingValue ASC'' THEN RatingValue END,
		CASE WHEN @OrderBy =''RatingValue DESC'' THEN RatingValue END DESC,
		CASE WHEN @OrderBy =''DateAdded ASC'' THEN DateAdded END,
		CASE WHEN @OrderBy =''DateAdded DESC'' THEN DateAdded END DESC,
		CASE WHEN @OrderBy =''ExpireDate ASC'' THEN ExpireDate END,
		CASE WHEN @OrderBy =''ExpireDate DESC'' THEN ExpireDate END DESC,
		CASE WHEN @OrderBy =''LastModified ASC'' THEN LastModified END,
		CASE WHEN @OrderBy =''LastModified DESC'' THEN LastModified END DESC,
		CASE WHEN @OrderBy =''NumberOfComments ASC'' THEN NumberOfComments END,
		CASE WHEN @OrderBy =''NumberOfComments DESC'' THEN NumberOfComments END DESC,
		CASE WHEN @OrderBy =''Title ASC'' THEN Title END,
		CASE WHEN @OrderBy =''Title DESC'' THEN Title END DESC) AS Kulike
		FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS n WHERE ArticleID IN(
			SELECT DISTINCT na.[ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS na
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS cat ON na.ArticleID = cat.ArticleID
				INNER JOIN @UserViewCategoriesWithFilter  AS uvcwf ON uvcwf.CategoryID = cat.CategoryID
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsTagsItems] AS nt ON na.ArticleID = nt.ArticleID
				LEFT OUTER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsContentLocalization] AS ncl ON ncl.ArticleID = na.ArticleID
			WHERE na.PortalID=@PortalID
				AND na.HasPermissions = 0
				AND nt.TagID = @TagID
				AND na.PublishDate <= @CurrentDate AND na.ExpireDate >= @CurrentDate
				AND ((@EditPermission = 1) OR ((@UserCanApprove = 1 OR na.Approved=1) AND (na.Active=1 OR na.UserID=@UserID)))
				AND ((@FilterAuthorOrAuthors = 1 AND na.UserID IN (SELECT UserID FROM @TempAuthorsIDList)) OR (@FilterAuthorOrAuthors = 0))
				AND ((@HideUnlocalizedItems = 1 AND ncl.ArticleID IS NOT NULL AND ncl.LocaleCode = @LocaleCode) OR (@HideUnlocalizedItems = 0))
			UNION ALL
			SELECT na.[ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS na
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsArticleUserPermissions] AS aup ON na.ArticleID = aup.ArticleID 
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsTagsItems] AS nt ON na.ArticleID = nt.ArticleID
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS cat ON na.ArticleID = cat.ArticleID
				INNER JOIN @FiltredByCategories AS fbc ON fbc.CategoryID = cat.CategoryID
				LEFT OUTER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsContentLocalization] AS ncl ON ncl.ArticleID = na.ArticleID
			WHERE na.PortalID=@PortalID
				AND na.HasPermissions = 1
				AND nt.TagID = @TagID
				AND na.PublishDate <= @CurrentDate AND na.ExpireDate >= @CurrentDate
				AND ((@EditPermission = 1) OR (((@UserID = -1 AND aup.UserID IS NULL) OR (aup.UserID = @UserID))
					AND aup.Show = 1 AND ((@UserCanApprove = 1) OR (na.Approved=1)) AND (na.Active=1 OR na.UserID=@UserID)
				))
				AND ((@FilterAuthorOrAuthors = 1 AND na.UserID IN (SELECT UserID FROM @TempAuthorsIDList)) OR (@FilterAuthorOrAuthors = 0))
				AND ((@HideUnlocalizedItems = 1 AND ncl.ArticleID IS NOT NULL AND ncl.LocaleCode = @LocaleCode) OR (@HideUnlocalizedItems = 0))
			UNION
			SELECT DISTINCT na.[ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS na
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsArticleRolePermissions] AS arp ON na.ArticleID = arp.ArticleID
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsTagsItems] AS nt ON na.ArticleID = nt.ArticleID
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS cat ON na.ArticleID = cat.ArticleID
				INNER JOIN @FiltredByCategories AS fbc ON fbc.CategoryID = cat.CategoryID
				LEFT OUTER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsContentLocalization] AS ncl ON ncl.ArticleID = na.ArticleID
			WHERE na.PortalID=@PortalID
				AND na.HasPermissions = 1
				AND nt.TagID = @TagID
				AND na.PublishDate <= @CurrentDate AND na.ExpireDate >= @CurrentDate
				AND ((@EditPermission = 1) OR (((@UserCanApprove = 1) OR (na.Approved=1))
					AND (na.Active=1 OR na.UserID=@UserID) AND arp.Show = 1 AND arp.RoleID IN (SELECT [RoleID] FROM @UserInRoles)
				))
				AND ((@FilterAuthorOrAuthors = 1 AND na.UserID IN (SELECT UserID FROM @TempAuthorsIDList)) OR (@FilterAuthorOrAuthors = 0))
				AND ((@HideUnlocalizedItems = 1 AND ncl.ArticleID IS NOT NULL AND ncl.LocaleCode = @LocaleCode) OR (@HideUnlocalizedItems = 0))
			)
		 ) AS Result WHERE Kulike BETWEEN @ItemsFrom AND @ItemsTo ORDER BY
			 CASE WHEN @OrderBy =''PublishDate ASC'' THEN PublishDate END,
			 CASE WHEN @OrderBy =''PublishDate DESC'' THEN PublishDate END DESC,
			 CASE WHEN @OrderBy =''NumberOfViews ASC'' THEN NumberOfViews END,
			 CASE WHEN @OrderBy =''NumberOfViews DESC'' THEN NumberOfViews END DESC,
			 CASE WHEN @OrderBy =''RatingValue ASC'' THEN RatingValue END,
			 CASE WHEN @OrderBy =''RatingValue DESC'' THEN RatingValue END DESC,
			 CASE WHEN @OrderBy =''DateAdded ASC'' THEN DateAdded END,
			 CASE WHEN @OrderBy =''DateAdded DESC'' THEN DateAdded END DESC,
			 CASE WHEN @OrderBy =''ExpireDate ASC'' THEN ExpireDate END,
			 CASE WHEN @OrderBy =''ExpireDate DESC'' THEN ExpireDate END DESC,
			 CASE WHEN @OrderBy =''LastModified ASC'' THEN LastModified END,
			 CASE WHEN @OrderBy =''LastModified DESC'' THEN LastModified END DESC,
			 CASE WHEN @OrderBy =''NumberOfComments ASC'' THEN NumberOfComments END,
			 CASE WHEN @OrderBy =''NumberOfComments DESC'' THEN NumberOfComments END DESC,
			 CASE WHEN @OrderBy =''Title ASC'' THEN Title END,
			 CASE WHEN @OrderBy =''Title DESC'' THEN Title END DESC
	),
	FinalLocalizedArticleIDsSet (ArticleID,Title,SubTitle,Summary,Article,DetailTypeData,TitleLink,MetaDecription,MetaKeywords,MainImageTitle,MainImageDescription) AS(
		SELECT ArticleID,Title,SubTitle,Summary,Article,DetailTypeData,clTitleLink AS TitleLink ,MetaDecription,MetaKeywords,MainImageTitle,MainImageDescription FROM {databaseOwner}[{objectQualifier}EasyDNNNewsContentLocalization] WHERE ArticleID IN (SELECT ArticleID FROM FinalArticleIDsSet) AND LocaleCode = @LocaleCode
	)
	SELECT *,
		CASE @EditPermission 
			WHEN 0 THEN 0
			WHEN 1 THEN 1
			WHEN 2 THEN
			CASE @EditOnlyAsOwner
				WHEN 0 THEN			
					CASE WHEN EXISTS(SELECT CategoryID FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS c WHERE c.ArticleID = Result.ArticleID AND c.CategoryID IN (SELECT CategoryID FROM @UserEditCategories))
						THEN 1
						ELSE
							CASE WHEN EXISTS(SELECT [ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsArticleRolePermissions] AS arp WHERE arp.ArticleID = Result.ArticleID AND arp.Edit = 1 AND arp.RoleID IN(SELECT RoleID FROM @UserInRoles))
							THEN 1
							ELSE
								CASE WHEN EXISTS (SELECT [ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsArticleUserPermissions] AS aup WHERE aup.ArticleID = Result.ArticleID AND aup.Edit = 1 AND aup.UserID = @UserID)
									THEN 1
									ELSE 0
								END
							END
					END  			
				WHEN 1 THEN
					CASE WHEN EXISTS(SELECT CategoryID FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS c WHERE Result.UserID = @UserID AND c.ArticleID = Result.ArticleID AND c.CategoryID IN (SELECT CategoryID FROM @UserEditCategories))
						THEN 1
						ELSE
							CASE WHEN EXISTS(SELECT [ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsArticleRolePermissions] AS arp WHERE arp.ArticleID = Result.ArticleID AND arp.Edit = 1 AND arp.RoleID IN(SELECT RoleID FROM @UserInRoles))
							THEN 1
							ELSE
								CASE WHEN EXISTS (SELECT [ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsArticleUserPermissions] AS aup WHERE aup.ArticleID = Result.ArticleID AND aup.Edit = 1 AND aup.UserID = @UserID)
									THEN 1
									ELSE 0
								END
							END 
					END
			END
			WHEN 3 THEN
				CASE WHEN EXISTS(SELECT [ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsArticleRolePermissions] AS arp WHERE arp.ArticleID = Result.ArticleID AND arp.Edit = 1 AND arp.RoleID IN(SELECT RoleID FROM @UserInRoles))
					THEN 1
					ELSE
					CASE WHEN EXISTS (SELECT [ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsArticleUserPermissions] AS aup WHERE aup.ArticleID = Result.ArticleID AND aup.Edit = 1 AND aup.UserID = @UserID)
						THEN 1
						ELSE 0
						END
					END 
		END AS ''CanEdit'',
		(SELECT cat.ID, cat.Name, cat.CategoryURL FROM @LocalizedCategories AS Cat INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS c ON c.CategoryID = Cat.ID WHERE c.ArticleID = Result.ArticleID ORDER BY Position FOR XML AUTO, ROOT(''root'')) AS ''CatToShow'',
		 CASE Result.Active
			WHEN 1 THEN 0
			WHEN 0 THEN 1
		 END AS ''Published'',
		 CASE @UserCanApprove
			WHEN 0 THEN 0
			WHEN 1 THEN
				CASE Result.Approved
				 WHEN 1 THEN 0
				 WHEN 0 THEN
					 CASE Result.Active
						WHEN 1 THEN 1
						WHEN 0 THEN 0
					END
				END
		 END AS ''Approve''
		 FROM (
			SELECT n.[ArticleID],n.[UserID],n.[Title],n.[SubTitle],n.[Summary],n.[Article],n.[ArticleImage],n.[DateAdded],n.[LastModified],n.[PublishDate]
				,n.[ExpireDate],n.[Approved],n.[Featured],n.[NumberOfViews],n.[RatingValue],n.[RatingCount],n.[AllowComments],n.[Active]
				,n.[TitleLink],n.[DetailType],n.[DetailTypeData],n.[DetailsTemplate],n.[DetailsTheme],n.[GalleryPosition],n.[GalleryDisplayType]
				,n.[ShowMainImage],n.[ShowMainImageFront],n.[CommentsTheme],n.[ArticleImageFolder],n.[NumberOfComments]
				,n.[ArticleImageSet],n.[MetaDecription],n.[MetaKeywords],n.[DisplayStyle],n.[DetailTarget]
				,n.[ArticleFromRSS],n.[HasPermissions],n.[EventArticle],n.[DetailMediaType],n.[DetailMediaData],n.[AuthorAliasName],n.[ShowGallery],n.[ArticleGalleryID],n.[MainImageTitle],n.[MainImageDescription]
				FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS n WHERE ArticleID IN (SELECT ArticleID FROM FinalArticleIDsSet WHERE ArticleID NOT IN (SELECT ArticleID FROM FinalLocalizedArticleIDsSet))
			UNION ALL
			SELECT n.[ArticleID],n.[UserID],fla.[Title],fla.[SubTitle],fla.[Summary],fla.[Article],n.[ArticleImage],n.[DateAdded],n.[LastModified],n.[PublishDate]
				,n.[ExpireDate],n.[Approved],n.[Featured],n.[NumberOfViews],n.[RatingValue],n.[RatingCount],n.[AllowComments],n.[Active]
				,fla.[TitleLink],n.[DetailType],fla.[DetailTypeData],n.[DetailsTemplate],n.[DetailsTheme],n.[GalleryPosition],n.[GalleryDisplayType]
				,n.[ShowMainImage],n.[ShowMainImageFront],n.[CommentsTheme],n.[ArticleImageFolder],n.[NumberOfComments]
				,n.[ArticleImageSet],fla.[MetaDecription],fla.[MetaKeywords],n.[DisplayStyle],n.[DetailTarget]
				,n.[ArticleFromRSS],n.[HasPermissions],n.[EventArticle],n.[DetailMediaType],n.[DetailMediaData],n.[AuthorAliasName],n.[ShowGallery],n.[ArticleGalleryID],fla.[MainImageTitle],fla.[MainImageDescription]
			FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS n INNER JOIN FinalLocalizedArticleIDsSet AS fla ON fla.ArticleID = n.ArticleID) As Result
		 ORDER BY
			 CASE WHEN @OrderBy =''PublishDate ASC'' THEN PublishDate END,
			 CASE WHEN @OrderBy =''PublishDate DESC'' THEN PublishDate END DESC,
			 CASE WHEN @OrderBy =''NumberOfViews ASC'' THEN NumberOfViews END,
			 CASE WHEN @OrderBy =''NumberOfViews DESC'' THEN NumberOfViews END DESC,
			 CASE WHEN @OrderBy =''RatingValue ASC'' THEN RatingValue END,
			 CASE WHEN @OrderBy =''RatingValue DESC'' THEN RatingValue END DESC,
			 CASE WHEN @OrderBy =''DateAdded ASC'' THEN DateAdded END,
			 CASE WHEN @OrderBy =''DateAdded DESC'' THEN DateAdded END DESC,
			 CASE WHEN @OrderBy =''ExpireDate ASC'' THEN ExpireDate END,
			 CASE WHEN @OrderBy =''ExpireDate DESC'' THEN ExpireDate END DESC,
			 CASE WHEN @OrderBy =''LastModified ASC'' THEN LastModified END,
			 CASE WHEN @OrderBy =''LastModified DESC'' THEN LastModified END DESC,
			 CASE WHEN @OrderBy =''NumberOfComments ASC'' THEN NumberOfComments END,
			 CASE WHEN @OrderBy =''NumberOfComments DESC'' THEN NumberOfComments END DESC,
			 CASE WHEN @OrderBy =''Title ASC'' THEN Title END,
			 CASE WHEN @OrderBy =''Title DESC'' THEN Title END DESC;
	END
	ELSE
	BEGIN
		SELECT *,
		CASE @EditPermission 
			WHEN 0 THEN 0
			WHEN 1 THEN 1
			WHEN 2 THEN
			CASE @EditOnlyAsOwner
				WHEN 0 THEN			
					CASE WHEN EXISTS(SELECT CategoryID FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS c WHERE c.ArticleID = Result.ArticleID AND c.CategoryID IN (SELECT CategoryID FROM @UserEditCategories))
						THEN 1
						ELSE
							CASE WHEN EXISTS(SELECT [ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsArticleRolePermissions] AS arp WHERE arp.ArticleID = Result.ArticleID AND arp.Edit = 1 AND arp.RoleID IN(SELECT RoleID FROM @UserInRoles))
							THEN 1
							ELSE
								CASE WHEN EXISTS (SELECT [ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsArticleUserPermissions] AS aup WHERE aup.ArticleID = Result.ArticleID AND aup.Edit = 1 AND aup.UserID = @UserID)
									THEN 1
									ELSE 0
								END
							END
					END  			
				WHEN 1 THEN
					CASE WHEN EXISTS(SELECT CategoryID FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS c WHERE Result.UserID = @UserID AND c.ArticleID = Result.ArticleID AND c.CategoryID IN (SELECT CategoryID FROM @UserEditCategories))
						THEN 1
						ELSE
							CASE WHEN EXISTS(SELECT [ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsArticleRolePermissions] AS arp WHERE arp.ArticleID = Result.ArticleID AND arp.Edit = 1 AND arp.RoleID IN(SELECT RoleID FROM @UserInRoles))
							THEN 1
							ELSE
								CASE WHEN EXISTS (SELECT [ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsArticleUserPermissions] AS aup WHERE aup.ArticleID = Result.ArticleID AND aup.Edit = 1 AND aup.UserID = @UserID)
									THEN 1
									ELSE 0
								END
							END 
					END
			END
			WHEN 3 THEN
				CASE WHEN EXISTS(SELECT [ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsArticleRolePermissions] AS arp WHERE arp.ArticleID = Result.ArticleID AND arp.Edit = 1 AND arp.RoleID IN(SELECT RoleID FROM @UserInRoles))
					THEN 1
					ELSE
					CASE WHEN EXISTS (SELECT [ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsArticleUserPermissions] AS aup WHERE aup.ArticleID = Result.ArticleID AND aup.Edit = 1 AND aup.UserID = @UserID)
						THEN 1
						ELSE 0
						END
					END 
		 END AS ''CanEdit'',
		(SELECT cat.ID, cat.Name, cat.CategoryURL FROM @LocalizedCategories AS Cat INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS c ON c.CategoryID = Cat.ID WHERE c.ArticleID = Result.ArticleID ORDER BY Position FOR XML AUTO, ROOT(''root'')) AS ''CatToShow'',
		 CASE Result.Active
			WHEN 1 THEN 0
			WHEN 0 THEN 1
		 END AS ''Published'',
		 CASE @UserCanApprove
			WHEN 0 THEN 0
			WHEN 1 THEN
				CASE Result.Approved
				 WHEN 1 THEN 0
				 WHEN 0 THEN
					 CASE Result.Active
						WHEN 1 THEN 1
						WHEN 0 THEN 0
					END
				END
		 END AS ''Approve''
		 FROM (SELECT
		 n.[ArticleID],n.[UserID],n.[Title],n.[SubTitle],n.[Summary],n.[Article],n.[ArticleImage],n.[DateAdded],n.[LastModified],n.[PublishDate]
		  ,n.[ExpireDate],n.[Approved],n.[Featured],n.[NumberOfViews],n.[RatingValue],n.[RatingCount],n.[AllowComments],n.[Active]
		  ,n.[TitleLink],n.[DetailType],n.[DetailTypeData],n.[DetailsTemplate],n.[DetailsTheme],n.[GalleryPosition],n.[GalleryDisplayType]
		  ,n.[ShowMainImage],n.[ShowMainImageFront],n.[CommentsTheme],n.[ArticleImageFolder],n.[NumberOfComments]
		  ,n.[ArticleImageSet],n.[MetaDecription],n.[MetaKeywords],n.[DisplayStyle],n.[DetailTarget]
		  ,n.[ArticleFromRSS],n.[HasPermissions],n.[EventArticle],n.[DetailMediaType],n.[DetailMediaData],n.[AuthorAliasName],n.[ShowGallery],n.[ArticleGalleryID],n.[MainImageTitle],n.[MainImageDescription], ROW_NUMBER() OVER (ORDER BY 
		 CASE WHEN @OrderBy =''PublishDate ASC'' THEN PublishDate END,
		 CASE WHEN @OrderBy =''PublishDate DESC'' THEN PublishDate END DESC,
		 CASE WHEN @OrderBy =''NumberOfViews ASC'' THEN NumberOfViews END,
		 CASE WHEN @OrderBy =''NumberOfViews DESC'' THEN NumberOfViews END DESC,
		 CASE WHEN @OrderBy =''RatingValue ASC'' THEN RatingValue END,
		 CASE WHEN @OrderBy =''RatingValue DESC'' THEN RatingValue END DESC,
		 CASE WHEN @OrderBy =''DateAdded ASC'' THEN DateAdded END,
		 CASE WHEN @OrderBy =''DateAdded DESC'' THEN DateAdded END DESC,
		 CASE WHEN @OrderBy =''ExpireDate ASC'' THEN ExpireDate END,
		 CASE WHEN @OrderBy =''ExpireDate DESC'' THEN ExpireDate END DESC,
		 CASE WHEN @OrderBy =''LastModified ASC'' THEN LastModified END,
		 CASE WHEN @OrderBy =''LastModified DESC'' THEN LastModified END DESC,
		 CASE WHEN @OrderBy =''NumberOfComments ASC'' THEN NumberOfComments END,
		 CASE WHEN @OrderBy =''NumberOfComments DESC'' THEN NumberOfComments END DESC,
		 CASE WHEN @OrderBy =''Title ASC'' THEN Title END,
		 CASE WHEN @OrderBy =''Title DESC'' THEN Title END DESC) AS Kulike
		 FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS n WHERE ArticleID IN(
			SELECT DISTINCT na.[ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS na
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS cat ON na.ArticleID = cat.ArticleID
				INNER JOIN @UserViewCategoriesWithFilter  AS uvcwf ON uvcwf.CategoryID = cat.CategoryID
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsTagsItems] AS nt ON na.ArticleID = nt.ArticleID
			WHERE na.PortalID=@PortalID
				AND na.HasPermissions = 0
				AND na.HideDefaultLocale = 0
				AND nt.TagID = @TagID
				AND na.PublishDate <= @CurrentDate AND na.ExpireDate >= @CurrentDate
				AND ((@EditPermission = 1) OR ((@UserCanApprove = 1 OR na.Approved=1) AND (na.Active=1 OR na.UserID=@UserID)))
				AND ((@FilterAuthorOrAuthors = 1 AND na.UserID IN (SELECT UserID FROM @TempAuthorsIDList)) OR (@FilterAuthorOrAuthors = 0))
			UNION ALL
			SELECT na.[ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS na
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsArticleUserPermissions] AS aup ON na.ArticleID = aup.ArticleID 
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsTagsItems] AS nt ON na.ArticleID = nt.ArticleID
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS cat ON na.ArticleID = cat.ArticleID
				INNER JOIN @FiltredByCategories AS fbc ON fbc.CategoryID = cat.CategoryID
			WHERE na.PortalID=@PortalID
				AND na.HasPermissions = 1
				AND na.HideDefaultLocale = 0
				AND nt.TagID = @TagID
				AND na.PublishDate <= @CurrentDate AND na.ExpireDate >= @CurrentDate
				AND ((@EditPermission = 1) OR (((@UserID = -1 AND aup.UserID IS NULL) OR (aup.UserID = @UserID))
					AND aup.Show = 1 AND ((@UserCanApprove = 1) OR (na.Approved=1)) AND (na.Active=1 OR na.UserID=@UserID)
				))
				AND ((@FilterAuthorOrAuthors = 1 AND na.UserID IN (SELECT UserID FROM @TempAuthorsIDList)) OR (@FilterAuthorOrAuthors = 0))
			UNION
			SELECT DISTINCT na.[ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS na
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsArticleRolePermissions] AS arp ON na.ArticleID = arp.ArticleID
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsTagsItems] AS nt ON na.ArticleID = nt.ArticleID
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS cat ON na.ArticleID = cat.ArticleID
				INNER JOIN @FiltredByCategories AS fbc ON fbc.CategoryID = cat.CategoryID
			WHERE na.PortalID=@PortalID
				AND na.HasPermissions = 1
				AND na.HideDefaultLocale = 0
				AND nt.TagID = @TagID
				AND na.PublishDate <= @CurrentDate AND na.ExpireDate >= @CurrentDate
				AND ((@EditPermission = 1) OR (((@UserCanApprove = 1) OR (na.Approved=1))
					AND (na.Active=1 OR na.UserID=@UserID) AND arp.Show = 1 AND arp.RoleID IN (SELECT [RoleID] FROM @UserInRoles)
				))
				AND((@FilterAuthorOrAuthors = 1 AND na.UserID IN (SELECT UserID FROM @TempAuthorsIDList)) OR (@FilterAuthorOrAuthors = 0))
			)
		) AS Result WHERE Kulike BETWEEN @ItemsFrom AND @ItemsTo ORDER BY
			CASE WHEN @OrderBy =''PublishDate ASC'' THEN PublishDate END,
			CASE WHEN @OrderBy =''PublishDate DESC'' THEN PublishDate END DESC,
			CASE WHEN @OrderBy =''NumberOfViews ASC'' THEN NumberOfViews END,
			CASE WHEN @OrderBy =''NumberOfViews DESC'' THEN NumberOfViews END DESC,
			CASE WHEN @OrderBy =''RatingValue ASC'' THEN RatingValue END,
			CASE WHEN @OrderBy =''RatingValue DESC'' THEN RatingValue END DESC,
			CASE WHEN @OrderBy =''DateAdded ASC'' THEN DateAdded END,
			CASE WHEN @OrderBy =''DateAdded DESC'' THEN DateAdded END DESC,
			CASE WHEN @OrderBy =''ExpireDate ASC'' THEN ExpireDate END,
			CASE WHEN @OrderBy =''ExpireDate DESC'' THEN ExpireDate END DESC,
			CASE WHEN @OrderBy =''LastModified ASC'' THEN LastModified END,
			CASE WHEN @OrderBy =''LastModified DESC'' THEN LastModified END DESC,
			CASE WHEN @OrderBy =''NumberOfComments ASC'' THEN NumberOfComments END,
			CASE WHEN @OrderBy =''NumberOfComments DESC'' THEN NumberOfComments END DESC,
			CASE WHEN @OrderBy =''Title ASC'' THEN Title END,
			CASE WHEN @OrderBy =''Title DESC'' THEN Title END DESC;
	END
END
ELSE IF @FilterBySocialGroup = 1
BEGIN
	IF @LocaleCode <> ''''
	BEGIN
		WITH FinalArticleIDsSet (ArticleID) AS(
		SELECT TOP (@ItemsTo - @ItemsFrom + 1) ArticleID FROM (SELECT *, ROW_NUMBER() OVER (ORDER BY 
		CASE WHEN @OrderBy =''PublishDate ASC'' THEN PublishDate END,
		CASE WHEN @OrderBy =''PublishDate DESC'' THEN PublishDate END DESC,
		CASE WHEN @OrderBy =''NumberOfViews ASC'' THEN NumberOfViews END,
		CASE WHEN @OrderBy =''NumberOfViews DESC'' THEN NumberOfViews END DESC,
		CASE WHEN @OrderBy =''RatingValue ASC'' THEN RatingValue END,
		CASE WHEN @OrderBy =''RatingValue DESC'' THEN RatingValue END DESC,
		CASE WHEN @OrderBy =''DateAdded ASC'' THEN DateAdded END,
		CASE WHEN @OrderBy =''DateAdded DESC'' THEN DateAdded END DESC,
		CASE WHEN @OrderBy =''ExpireDate ASC'' THEN ExpireDate END,
		CASE WHEN @OrderBy =''ExpireDate DESC'' THEN ExpireDate END DESC,
		CASE WHEN @OrderBy =''LastModified ASC'' THEN LastModified END,
		CASE WHEN @OrderBy =''LastModified DESC'' THEN LastModified END DESC,
		CASE WHEN @OrderBy =''NumberOfComments ASC'' THEN NumberOfComments END,
		CASE WHEN @OrderBy =''NumberOfComments DESC'' THEN NumberOfComments END DESC,
		CASE WHEN @OrderBy =''Title ASC'' THEN Title END,
		CASE WHEN @OrderBy =''Title DESC'' THEN Title END DESC) AS Kulike
		FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS n WHERE ArticleID IN(
			SELECT DISTINCT na.[ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS na
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS cat ON na.ArticleID = cat.ArticleID
				INNER JOIN @UserViewCategoriesWithFilter  AS uvcwf ON uvcwf.CategoryID = cat.CategoryID
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsTagsItems] AS nt ON na.ArticleID = nt.ArticleID
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = n.ArticleID
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialGroupItems] AS sgi ON sgi.ArticleID = n.ArticleID AND sgi.RoleID = @FilterByDNNGroupID
				INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserID, @FilterByDNNGroupID) AS t ON t.seckey = nss.SecurityKey
				LEFT OUTER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsContentLocalization] AS ncl ON ncl.ArticleID = na.ArticleID
			WHERE na.PortalID=@PortalID
				AND ((@EditPermission = 1) OR ((@UserCanApprove = 1 OR na.Approved=1) AND (na.Active=1 OR na.UserID=@UserID)))
				AND na.HasPermissions = 0
				AND nt.TagID = @TagID
				AND na.PublishDate <= @CurrentDate AND na.ExpireDate >= @CurrentDate
				AND((@FilterAuthorOrAuthors = 1 AND na.UserID = @FilterByAuthor) OR (@FilterAuthorOrAuthors = 0))
				AND ((@HideUnlocalizedItems = 1 AND ncl.ArticleID IS NOT NULL AND ncl.LocaleCode = @LocaleCode) OR (@HideUnlocalizedItems = 0))
			UNION ALL
			SELECT na.[ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS na
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsArticleUserPermissions] AS aup ON na.ArticleID = aup.ArticleID 
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsTagsItems] AS nt ON na.ArticleID = nt.ArticleID
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS cat ON na.ArticleID = cat.ArticleID
				INNER JOIN @FiltredByCategories AS fbc ON fbc.CategoryID = cat.CategoryID
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = n.ArticleID
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialGroupItems] AS sgi ON sgi.ArticleID = n.ArticleID AND sgi.RoleID = @FilterByDNNGroupID
				INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserID, @FilterByDNNGroupID) AS t ON t.seckey = nss.SecurityKey
				LEFT OUTER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsContentLocalization] AS ncl ON ncl.ArticleID = na.ArticleID
			WHERE na.PortalID=@PortalID
				AND na.HasPermissions = 1
				AND nt.TagID = @TagID
				AND na.PublishDate <= @CurrentDate AND na.ExpireDate >= @CurrentDate
				AND ((@EditPermission = 1) OR (((@UserID = -1 AND aup.UserID IS NULL) OR (aup.UserID = @UserID))
					AND aup.Show = 1 AND ((@UserCanApprove = 1) OR (na.Approved=1)) AND (na.Active=1 OR na.UserID=@UserID)
				))
				AND((@FilterAuthorOrAuthors = 1 AND na.UserID = @FilterByAuthor) OR (@FilterAuthorOrAuthors = 0))
				AND ((@HideUnlocalizedItems = 1 AND ncl.ArticleID IS NOT NULL AND ncl.LocaleCode = @LocaleCode) OR (@HideUnlocalizedItems = 0))
			UNION
			SELECT DISTINCT na.[ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS na
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsArticleRolePermissions] AS arp ON na.ArticleID = arp.ArticleID
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsTagsItems] AS nt ON na.ArticleID = nt.ArticleID
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS cat ON na.ArticleID = cat.ArticleID
				INNER JOIN @FiltredByCategories AS fbc ON fbc.CategoryID = cat.CategoryID
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = n.ArticleID
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialGroupItems] AS sgi ON sgi.ArticleID = n.ArticleID AND sgi.RoleID = @FilterByDNNGroupID
				INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserID, @FilterByDNNGroupID) AS t ON t.seckey = nss.SecurityKey
				LEFT OUTER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsContentLocalization] AS ncl ON ncl.ArticleID = na.ArticleID
			WHERE na.PortalID=@PortalID
				AND na.HasPermissions = 1
				AND nt.TagID = @TagID
				AND na.PublishDate <= @CurrentDate AND na.ExpireDate >= @CurrentDate
				AND ((@EditPermission = 1) OR (((@UserCanApprove = 1) OR (na.Approved=1))
					AND (na.Active=1 OR na.UserID=@UserID) AND arp.Show = 1 AND arp.RoleID IN (SELECT [RoleID] FROM @UserInRoles)
				))
				AND((@FilterAuthorOrAuthors = 1 AND na.UserID = @FilterByAuthor) OR (@FilterAuthorOrAuthors = 0))
				AND ((@HideUnlocalizedItems = 1 AND ncl.ArticleID IS NOT NULL AND ncl.LocaleCode = @LocaleCode) OR (@HideUnlocalizedItems = 0))
			)
		) AS Result WHERE Kulike BETWEEN @ItemsFrom AND @ItemsTo ORDER BY
			CASE WHEN @OrderBy =''PublishDate ASC'' THEN PublishDate END,
			CASE WHEN @OrderBy =''PublishDate DESC'' THEN PublishDate END DESC,
			CASE WHEN @OrderBy =''NumberOfViews ASC'' THEN NumberOfViews END,
			CASE WHEN @OrderBy =''NumberOfViews DESC'' THEN NumberOfViews END DESC,
			CASE WHEN @OrderBy =''RatingValue ASC'' THEN RatingValue END,
			CASE WHEN @OrderBy =''RatingValue DESC'' THEN RatingValue END DESC,
			CASE WHEN @OrderBy =''DateAdded ASC'' THEN DateAdded END,
			CASE WHEN @OrderBy =''DateAdded DESC'' THEN DateAdded END DESC,
			CASE WHEN @OrderBy =''ExpireDate ASC'' THEN ExpireDate END,
			CASE WHEN @OrderBy =''ExpireDate DESC'' THEN ExpireDate END DESC,
			CASE WHEN @OrderBy =''LastModified ASC'' THEN LastModified END,
			CASE WHEN @OrderBy =''LastModified DESC'' THEN LastModified END DESC,
			CASE WHEN @OrderBy =''NumberOfComments ASC'' THEN NumberOfComments END,
			CASE WHEN @OrderBy =''NumberOfComments DESC'' THEN NumberOfComments END DESC,
			CASE WHEN @OrderBy =''Title ASC'' THEN Title END,
			CASE WHEN @OrderBy =''Title DESC'' THEN Title END DESC
		),
		FinalLocalizedArticleIDsSet (ArticleID,Title,SubTitle,Summary,Article,DetailTypeData,TitleLink,MetaDecription,MetaKeywords,MainImageTitle,MainImageDescription) AS(
			SELECT ArticleID,Title,SubTitle,Summary,Article,DetailTypeData,clTitleLink AS TitleLink ,MetaDecription,MetaKeywords,MainImageTitle,MainImageDescription FROM {databaseOwner}[{objectQualifier}EasyDNNNewsContentLocalization] WHERE ArticleID IN (SELECT ArticleID FROM FinalArticleIDsSet) AND LocaleCode = @LocaleCode
		)
		SELECT *,
			CASE @EditPermission 
				WHEN 0 THEN 0
				WHEN 1 THEN 1
				WHEN 2 THEN
				CASE @EditOnlyAsOwner
					WHEN 0 THEN			
						CASE WHEN EXISTS(SELECT CategoryID FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS c WHERE c.ArticleID = Result.ArticleID AND c.CategoryID IN (SELECT CategoryID FROM @UserEditCategories))
							THEN 1
							ELSE
								CASE WHEN EXISTS(SELECT [ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsArticleRolePermissions] AS arp WHERE arp.ArticleID = Result.ArticleID AND arp.Edit = 1 AND arp.RoleID IN(SELECT RoleID FROM @UserInRoles))
								THEN 1
								ELSE
									CASE WHEN EXISTS (SELECT [ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsArticleUserPermissions] AS aup WHERE aup.ArticleID = Result.ArticleID AND aup.Edit = 1 AND aup.UserID = @UserID)
										THEN 1
										ELSE 0
									END
								END
						END  			
					WHEN 1 THEN
						CASE WHEN EXISTS(SELECT CategoryID FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS c WHERE Result.UserID = @UserID AND c.ArticleID = Result.ArticleID AND c.CategoryID IN (SELECT CategoryID FROM @UserEditCategories))
							THEN 1
							ELSE
								CASE WHEN EXISTS(SELECT [ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsArticleRolePermissions] AS arp WHERE arp.ArticleID = Result.ArticleID AND arp.Edit = 1 AND arp.RoleID IN(SELECT RoleID FROM @UserInRoles))
								THEN 1
								ELSE
									CASE WHEN EXISTS (SELECT [ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsArticleUserPermissions] AS aup WHERE aup.ArticleID = Result.ArticleID AND aup.Edit = 1 AND aup.UserID = @UserID)
										THEN 1
										ELSE 0
									END
								END 
						END
				END
				WHEN 3 THEN
					CASE WHEN EXISTS(SELECT [ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsArticleRolePermissions] AS arp WHERE arp.ArticleID = Result.ArticleID AND arp.Edit = 1 AND arp.RoleID IN(SELECT RoleID FROM @UserInRoles))
						THEN 1
						ELSE
						CASE WHEN EXISTS (SELECT [ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsArticleUserPermissions] AS aup WHERE aup.ArticleID = Result.ArticleID AND aup.Edit = 1 AND aup.UserID = @UserID)
							THEN 1
							ELSE 0
							END
						END 
			END AS ''CanEdit'',
			(SELECT cat.ID, cat.Name, cat.CategoryURL FROM @LocalizedCategories AS Cat INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS c ON c.CategoryID = Cat.ID WHERE c.ArticleID = Result.ArticleID ORDER BY Position FOR XML AUTO, ROOT(''root'')) AS ''CatToShow'',
			 CASE Result.Active
				WHEN 1 THEN 0
				WHEN 0 THEN 1
			 END AS ''Published'',
			 CASE @UserCanApprove
				WHEN 0 THEN 0
				WHEN 1 THEN
					CASE Result.Approved
					 WHEN 1 THEN 0
					 WHEN 0 THEN
						 CASE Result.Active
							WHEN 1 THEN 1
							WHEN 0 THEN 0
						END
					END
			 END AS ''Approve''
			 FROM (
				SELECT n.[ArticleID],n.[UserID],n.[Title],n.[SubTitle],n.[Summary],n.[Article],n.[ArticleImage],n.[DateAdded],n.[LastModified],n.[PublishDate]
					,n.[ExpireDate],n.[Approved],n.[Featured],n.[NumberOfViews],n.[RatingValue],n.[RatingCount],n.[AllowComments],n.[Active]
					,n.[TitleLink],n.[DetailType],n.[DetailTypeData],n.[DetailsTemplate],n.[DetailsTheme],n.[GalleryPosition],n.[GalleryDisplayType]
					,n.[ShowMainImage],n.[ShowMainImageFront],n.[CommentsTheme],n.[ArticleImageFolder],n.[NumberOfComments]
					,n.[ArticleImageSet],n.[MetaDecription],n.[MetaKeywords],n.[DisplayStyle],n.[DetailTarget]
					,n.[ArticleFromRSS],n.[HasPermissions],n.[EventArticle],n.[DetailMediaType],n.[DetailMediaData],n.[AuthorAliasName],n.[ShowGallery],n.[ArticleGalleryID],n.[MainImageTitle],n.[MainImageDescription]
					FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS n WHERE ArticleID IN (SELECT ArticleID FROM FinalArticleIDsSet WHERE ArticleID NOT IN (SELECT ArticleID FROM FinalLocalizedArticleIDsSet))
				UNION ALL
				SELECT n.[ArticleID],n.[UserID],fla.[Title],fla.[SubTitle],fla.[Summary],fla.[Article],n.[ArticleImage],n.[DateAdded],n.[LastModified],n.[PublishDate]
					,n.[ExpireDate],n.[Approved],n.[Featured],n.[NumberOfViews],n.[RatingValue],n.[RatingCount],n.[AllowComments],n.[Active]
					,fla.[TitleLink],n.[DetailType],fla.[DetailTypeData],n.[DetailsTemplate],n.[DetailsTheme],n.[GalleryPosition],n.[GalleryDisplayType]
					,n.[ShowMainImage],n.[ShowMainImageFront],n.[CommentsTheme],n.[ArticleImageFolder],n.[NumberOfComments]
					,n.[ArticleImageSet],fla.[MetaDecription],fla.[MetaKeywords],n.[DisplayStyle],n.[DetailTarget]
					,n.[ArticleFromRSS],n.[HasPermissions],n.[EventArticle],n.[DetailMediaType],n.[DetailMediaData],n.[AuthorAliasName],n.[ShowGallery],n.[ArticleGalleryID],fla.[MainImageTitle],fla.[MainImageDescription]
				FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS n INNER JOIN FinalLocalizedArticleIDsSet AS fla ON fla.ArticleID = n.ArticleID) As Result
			ORDER BY
				CASE WHEN @OrderBy =''PublishDate ASC'' THEN PublishDate END,
				CASE WHEN @OrderBy =''PublishDate DESC'' THEN PublishDate END DESC,
				CASE WHEN @OrderBy =''NumberOfViews ASC'' THEN NumberOfViews END,
				CASE WHEN @OrderBy =''NumberOfViews DESC'' THEN NumberOfViews END DESC,
				CASE WHEN @OrderBy =''RatingValue ASC'' THEN RatingValue END,
				CASE WHEN @OrderBy =''RatingValue DESC'' THEN RatingValue END DESC,
				CASE WHEN @OrderBy =''DateAdded ASC'' THEN DateAdded END,
				CASE WHEN @OrderBy =''DateAdded DESC'' THEN DateAdded END DESC,
				CASE WHEN @OrderBy =''ExpireDate ASC'' THEN ExpireDate END,
				CASE WHEN @OrderBy =''ExpireDate DESC'' THEN ExpireDate END DESC,
				CASE WHEN @OrderBy =''LastModified ASC'' THEN LastModified END,
				CASE WHEN @OrderBy =''LastModified DESC'' THEN LastModified END DESC,
				CASE WHEN @OrderBy =''NumberOfComments ASC'' THEN NumberOfComments END,
				CASE WHEN @OrderBy =''NumberOfComments DESC'' THEN NumberOfComments END DESC,
				CASE WHEN @OrderBy =''Title ASC'' THEN Title END,
				CASE WHEN @OrderBy =''Title DESC'' THEN Title END DESC;
	END
	ELSE
	BEGIN
		SELECT *,
		CASE @EditPermission 
			WHEN 0 THEN 0
			WHEN 1 THEN 1
			WHEN 2 THEN
			CASE @EditOnlyAsOwner
				WHEN 0 THEN			
					CASE WHEN EXISTS(SELECT CategoryID FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS c WHERE c.ArticleID = Result.ArticleID AND c.CategoryID IN (SELECT CategoryID FROM @UserEditCategories))
						THEN 1
						ELSE
							CASE WHEN EXISTS(SELECT [ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsArticleRolePermissions] AS arp WHERE arp.ArticleID = Result.ArticleID AND arp.Edit = 1 AND arp.RoleID IN(SELECT RoleID FROM @UserInRoles))
							THEN 1
							ELSE
								CASE WHEN EXISTS (SELECT [ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsArticleUserPermissions] AS aup WHERE aup.ArticleID = Result.ArticleID AND aup.Edit = 1 AND aup.UserID = @UserID)
									THEN 1
									ELSE 0
								END
							END
					END  			
				WHEN 1 THEN
					CASE WHEN EXISTS(SELECT CategoryID FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS c WHERE Result.UserID = @UserID AND c.ArticleID = Result.ArticleID AND c.CategoryID IN (SELECT CategoryID FROM @UserEditCategories))
						THEN 1
						ELSE
							CASE WHEN EXISTS(SELECT [ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsArticleRolePermissions] AS arp WHERE arp.ArticleID = Result.ArticleID AND arp.Edit = 1 AND arp.RoleID IN(SELECT RoleID FROM @UserInRoles))
							THEN 1
							ELSE
								CASE WHEN EXISTS (SELECT [ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsArticleUserPermissions] AS aup WHERE aup.ArticleID = Result.ArticleID AND aup.Edit = 1 AND aup.UserID = @UserID)
									THEN 1
									ELSE 0
								END
							END 
					END
			END
			WHEN 3 THEN
				CASE WHEN EXISTS(SELECT [ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsArticleRolePermissions] AS arp WHERE arp.ArticleID = Result.ArticleID AND arp.Edit = 1 AND arp.RoleID IN(SELECT RoleID FROM @UserInRoles))
					THEN 1
					ELSE
					CASE WHEN EXISTS (SELECT [ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsArticleUserPermissions] AS aup WHERE aup.ArticleID = Result.ArticleID AND aup.Edit = 1 AND aup.UserID = @UserID)
						THEN 1
						ELSE 0
						END
					END 
		 END AS ''CanEdit'',
		(SELECT cat.ID, cat.Name, cat.CategoryURL FROM @LocalizedCategories AS Cat INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS c ON c.CategoryID = Cat.ID WHERE c.ArticleID = Result.ArticleID ORDER BY Position FOR XML AUTO, ROOT(''root'')) AS ''CatToShow'',
		 CASE Result.Active
			WHEN 1 THEN 0
			WHEN 0 THEN 1
		 END AS ''Published'',
		 CASE @UserCanApprove
			WHEN 0 THEN 0
			WHEN 1 THEN
				CASE Result.Approved
				 WHEN 1 THEN 0
				 WHEN 0 THEN
					 CASE Result.Active
						WHEN 1 THEN 1
						WHEN 0 THEN 0
					END
				END
		 END AS ''Approve''
		 FROM (SELECT
		   n.[ArticleID],n.[UserID],n.[Title],n.[SubTitle],n.[Summary],n.[Article],n.[ArticleImage],n.[DateAdded],n.[LastModified],n.[PublishDate]
		  ,n.[ExpireDate],n.[Approved],n.[Featured],n.[NumberOfViews],n.[RatingValue],n.[RatingCount],n.[AllowComments],n.[Active]
		  ,n.[TitleLink],n.[DetailType],n.[DetailTypeData],n.[DetailsTemplate],n.[DetailsTheme],n.[GalleryPosition],n.[GalleryDisplayType]
		  ,n.[ShowMainImage],n.[ShowMainImageFront],n.[CommentsTheme],n.[ArticleImageFolder],n.[NumberOfComments]
		  ,n.[ArticleImageSet],n.[MetaDecription],n.[MetaKeywords],n.[DisplayStyle],n.[DetailTarget]
		  ,n.[ArticleFromRSS],n.[HasPermissions],n.[EventArticle],n.[DetailMediaType],n.[DetailMediaData],n.[AuthorAliasName],n.[ShowGallery],n.[ArticleGalleryID],n.[MainImageTitle],n.[MainImageDescription], ROW_NUMBER() OVER (ORDER BY 
		 CASE WHEN @OrderBy =''PublishDate ASC'' THEN PublishDate END,
		 CASE WHEN @OrderBy =''PublishDate DESC'' THEN PublishDate END DESC,
		 CASE WHEN @OrderBy =''NumberOfViews ASC'' THEN NumberOfViews END,
		 CASE WHEN @OrderBy =''NumberOfViews DESC'' THEN NumberOfViews END DESC,
		 CASE WHEN @OrderBy =''RatingValue ASC'' THEN RatingValue END,
		 CASE WHEN @OrderBy =''RatingValue DESC'' THEN RatingValue END DESC,
		 CASE WHEN @OrderBy =''DateAdded ASC'' THEN DateAdded END,
		 CASE WHEN @OrderBy =''DateAdded DESC'' THEN DateAdded END DESC,
		 CASE WHEN @OrderBy =''ExpireDate ASC'' THEN ExpireDate END,
		 CASE WHEN @OrderBy =''ExpireDate DESC'' THEN ExpireDate END DESC,
		 CASE WHEN @OrderBy =''LastModified ASC'' THEN LastModified END,
		 CASE WHEN @OrderBy =''LastModified DESC'' THEN LastModified END DESC,
		 CASE WHEN @OrderBy =''NumberOfComments ASC'' THEN NumberOfComments END,
		 CASE WHEN @OrderBy =''NumberOfComments DESC'' THEN NumberOfComments END DESC,
		 CASE WHEN @OrderBy =''Title ASC'' THEN Title END,
		 CASE WHEN @OrderBy =''Title DESC'' THEN Title END DESC) AS Kulike
		 FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS n WHERE ArticleID IN(
			SELECT DISTINCT na.[ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS na
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS cat ON na.ArticleID = cat.ArticleID
				INNER JOIN @UserViewCategoriesWithFilter  AS uvcwf ON uvcwf.CategoryID = cat.CategoryID
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsTagsItems] AS nt ON na.ArticleID = nt.ArticleID
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = n.ArticleID
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialGroupItems] AS sgi ON sgi.ArticleID = n.ArticleID AND sgi.RoleID = @FilterByDNNGroupID
				INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserID, @FilterByDNNGroupID) AS t ON t.seckey = nss.SecurityKey
			WHERE na.PortalID=@PortalID
				AND na.HasPermissions = 0
				AND na.HideDefaultLocale = 0
				AND nt.TagID = @TagID
				AND na.PublishDate <= @CurrentDate AND na.ExpireDate >= @CurrentDate
				AND ((@EditPermission = 1) OR ((@UserCanApprove = 1 OR na.Approved=1) AND (na.Active=1 OR na.UserID=@UserID)))
				AND ((@FilterAuthorOrAuthors = 1 AND na.UserID = @FilterByAuthor) OR (@FilterAuthorOrAuthors = 0))
			UNION ALL
			SELECT na.[ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS na
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsArticleUserPermissions] AS aup ON na.ArticleID = aup.ArticleID 
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsTagsItems] AS nt ON na.ArticleID = nt.ArticleID
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS cat ON na.ArticleID = cat.ArticleID
				INNER JOIN @FiltredByCategories AS fbc ON fbc.CategoryID = cat.CategoryID
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = n.ArticleID
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialGroupItems] AS sgi ON sgi.ArticleID = n.ArticleID AND sgi.RoleID = @FilterByDNNGroupID
				INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserID, @FilterByDNNGroupID) AS t ON t.seckey = nss.SecurityKey
			WHERE na.PortalID=@PortalID
				AND na.HasPermissions = 1
				AND na.HideDefaultLocale = 0
				AND nt.TagID = @TagID
				AND na.PublishDate <= @CurrentDate AND na.ExpireDate >= @CurrentDate
				AND ((@EditPermission = 1) OR (((@UserID = -1 AND aup.UserID IS NULL) OR (aup.UserID = @UserID))
					AND aup.Show = 1 AND ((@UserCanApprove = 1) OR (na.Approved=1)) AND (na.Active=1 OR na.UserID=@UserID)
				))
				AND ((@FilterAuthorOrAuthors = 1 AND na.UserID = @FilterByAuthor) OR (@FilterAuthorOrAuthors = 0))
			UNION
			SELECT DISTINCT na.[ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS na
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsArticleRolePermissions] AS arp ON na.ArticleID = arp.ArticleID
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsTagsItems] AS nt ON na.ArticleID = nt.ArticleID
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS cat ON na.ArticleID = cat.ArticleID
				INNER JOIN @FiltredByCategories AS fbc ON fbc.CategoryID = cat.CategoryID
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = n.ArticleID
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialGroupItems] AS sgi ON sgi.ArticleID = n.ArticleID AND sgi.RoleID = @FilterByDNNGroupID
				INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserID, @FilterByDNNGroupID) AS t ON t.seckey = nss.SecurityKey
			WHERE na.PortalID=@PortalID
				AND na.HasPermissions = 1
				AND na.HideDefaultLocale = 0
				AND nt.TagID = @TagID
				AND na.PublishDate <= @CurrentDate AND na.ExpireDate >= @CurrentDate
				AND ((@EditPermission = 1) OR (((@UserCanApprove = 1) OR (na.Approved=1))
					AND (na.Active=1 OR na.UserID=@UserID) AND arp.Show = 1 AND arp.RoleID IN (SELECT [RoleID] FROM @UserInRoles)
				))
				AND ((@FilterAuthorOrAuthors = 1 AND na.UserID = @FilterByAuthor) OR (@FilterAuthorOrAuthors = 0))
			)
		) AS Result WHERE Kulike BETWEEN @ItemsFrom AND @ItemsTo ORDER BY
			CASE WHEN @OrderBy =''PublishDate ASC'' THEN PublishDate END,
			CASE WHEN @OrderBy =''PublishDate DESC'' THEN PublishDate END DESC,
			CASE WHEN @OrderBy =''NumberOfViews ASC'' THEN NumberOfViews END,
			CASE WHEN @OrderBy =''NumberOfViews DESC'' THEN NumberOfViews END DESC,
			CASE WHEN @OrderBy =''RatingValue ASC'' THEN RatingValue END,
			CASE WHEN @OrderBy =''RatingValue DESC'' THEN RatingValue END DESC,
			CASE WHEN @OrderBy =''DateAdded ASC'' THEN DateAdded END,
			CASE WHEN @OrderBy =''DateAdded DESC'' THEN DateAdded END DESC,
			CASE WHEN @OrderBy =''ExpireDate ASC'' THEN ExpireDate END,
			CASE WHEN @OrderBy =''ExpireDate DESC'' THEN ExpireDate END DESC,
			CASE WHEN @OrderBy =''LastModified ASC'' THEN LastModified END,
			CASE WHEN @OrderBy =''LastModified DESC'' THEN LastModified END DESC,
			CASE WHEN @OrderBy =''NumberOfComments ASC'' THEN NumberOfComments END,
			CASE WHEN @OrderBy =''NumberOfComments DESC'' THEN NumberOfComments END DESC,
			CASE WHEN @OrderBy =''Title ASC'' THEN Title END,
			CASE WHEN @OrderBy =''Title DESC'' THEN Title END DESC;
	END
END
ELSE IF @FilterByDNNUserID <> 0
BEGIN
	IF @LocaleCode <> ''''
	BEGIN
		WITH FinalArticleIDsSet (ArticleID) AS(
		SELECT TOP (@ItemsTo - @ItemsFrom + 1) ArticleID FROM (SELECT *, ROW_NUMBER() OVER (ORDER BY 
		CASE WHEN @OrderBy =''PublishDate ASC'' THEN PublishDate END,
		CASE WHEN @OrderBy =''PublishDate DESC'' THEN PublishDate END DESC,
		CASE WHEN @OrderBy =''NumberOfViews ASC'' THEN NumberOfViews END,
		CASE WHEN @OrderBy =''NumberOfViews DESC'' THEN NumberOfViews END DESC,
		CASE WHEN @OrderBy =''RatingValue ASC'' THEN RatingValue END,
		CASE WHEN @OrderBy =''RatingValue DESC'' THEN RatingValue END DESC,
		CASE WHEN @OrderBy =''DateAdded ASC'' THEN DateAdded END,
		CASE WHEN @OrderBy =''DateAdded DESC'' THEN DateAdded END DESC,
		CASE WHEN @OrderBy =''ExpireDate ASC'' THEN ExpireDate END,
		CASE WHEN @OrderBy =''ExpireDate DESC'' THEN ExpireDate END DESC,
		CASE WHEN @OrderBy =''LastModified ASC'' THEN LastModified END,
		CASE WHEN @OrderBy =''LastModified DESC'' THEN LastModified END DESC,
		CASE WHEN @OrderBy =''NumberOfComments ASC'' THEN NumberOfComments END,
		CASE WHEN @OrderBy =''NumberOfComments DESC'' THEN NumberOfComments END DESC,
		CASE WHEN @OrderBy =''Title ASC'' THEN Title END,
		CASE WHEN @OrderBy =''Title DESC'' THEN Title END DESC) AS Kulike
		FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS n WHERE ArticleID IN (
			SELECT DISTINCT na.[ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS na
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS cat ON na.ArticleID = cat.ArticleID
				INNER JOIN @UserViewCategoriesWithFilter  AS uvcwf ON uvcwf.CategoryID = cat.CategoryID
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsTagsItems] AS nt ON na.ArticleID = nt.ArticleID
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = n.ArticleID
				INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserID, @FilterByDNNGroupID) AS t ON t.seckey = nss.SecurityKey
				LEFT OUTER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsContentLocalization] AS ncl ON ncl.ArticleID = na.ArticleID
			WHERE na.PortalID=@PortalID
				AND na.HasPermissions = 0
				AND nt.TagID = @TagID
				AND na.PublishDate <= @CurrentDate AND na.ExpireDate >= @CurrentDate
				AND na.UserID = @FilterByDNNUserID
				AND ((@EditPermission = 1) OR ((@UserCanApprove = 1 OR na.Approved=1) AND (na.Active=1 OR na.UserID=@UserID)))
				AND ((@HideUnlocalizedItems = 1 AND ncl.ArticleID IS NOT NULL AND ncl.LocaleCode = @LocaleCode) OR (@HideUnlocalizedItems = 0))
			UNION ALL
			SELECT na.[ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS na
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsArticleUserPermissions] AS aup ON na.ArticleID = aup.ArticleID 
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsTagsItems] AS nt ON na.ArticleID = nt.ArticleID
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS cat ON na.ArticleID = cat.ArticleID
				INNER JOIN @FiltredByCategories AS fbc ON fbc.CategoryID = cat.CategoryID
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = n.ArticleID
				INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserID, @FilterByDNNGroupID) AS t ON t.seckey = nss.SecurityKey
				LEFT OUTER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsContentLocalization] AS ncl ON ncl.ArticleID = na.ArticleID
			WHERE na.PortalID=@PortalID
				AND na.HasPermissions = 1
				AND nt.TagID = @TagID
				AND na.PublishDate <= @CurrentDate AND na.ExpireDate >= @CurrentDate
				AND na.UserID = @FilterByDNNUserID
				AND ((@EditPermission = 1) OR (((@UserID = -1 AND aup.UserID IS NULL) OR (aup.UserID = @UserID))
					AND aup.Show = 1 AND ((@UserCanApprove = 1) OR (na.Approved=1)) AND (na.Active=1 OR na.UserID=@UserID)
					))
				AND ((@HideUnlocalizedItems = 1 AND ncl.ArticleID IS NOT NULL AND ncl.LocaleCode = @LocaleCode) OR (@HideUnlocalizedItems = 0))
			UNION
			SELECT DISTINCT na.[ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS na
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsArticleRolePermissions] AS arp ON na.ArticleID = arp.ArticleID
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsTagsItems] AS nt ON na.ArticleID = nt.ArticleID
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS cat ON na.ArticleID = cat.ArticleID
				INNER JOIN @FiltredByCategories AS fbc ON fbc.CategoryID = cat.CategoryID
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = n.ArticleID
				INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserID, @FilterByDNNGroupID) AS t ON t.seckey = nss.SecurityKey
				LEFT OUTER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsContentLocalization] AS ncl ON ncl.ArticleID = na.ArticleID
			WHERE na.PortalID=@PortalID
				AND na.HasPermissions = 1
				AND nt.TagID = @TagID
				AND na.PublishDate <= @CurrentDate AND na.ExpireDate >= @CurrentDate
				AND na.UserID = @FilterByDNNUserID
				AND ((@EditPermission = 1) OR (((@UserCanApprove = 1) OR (na.Approved=1))
					AND (na.Active=1 OR na.UserID=@UserID) AND arp.Show = 1 AND arp.RoleID IN (SELECT [RoleID] FROM @UserInRoles)
				))
				AND ((@HideUnlocalizedItems = 1 AND ncl.ArticleID IS NOT NULL AND ncl.LocaleCode = @LocaleCode) OR (@HideUnlocalizedItems = 0))
			)
		) AS Result WHERE Kulike BETWEEN @ItemsFrom AND @ItemsTo ORDER BY
			CASE WHEN @OrderBy =''PublishDate ASC'' THEN PublishDate END,
			CASE WHEN @OrderBy =''PublishDate DESC'' THEN PublishDate END DESC,
			CASE WHEN @OrderBy =''NumberOfViews ASC'' THEN NumberOfViews END,
			CASE WHEN @OrderBy =''NumberOfViews DESC'' THEN NumberOfViews END DESC,
			CASE WHEN @OrderBy =''RatingValue ASC'' THEN RatingValue END,
			CASE WHEN @OrderBy =''RatingValue DESC'' THEN RatingValue END DESC,
			CASE WHEN @OrderBy =''DateAdded ASC'' THEN DateAdded END,
			CASE WHEN @OrderBy =''DateAdded DESC'' THEN DateAdded END DESC,
			CASE WHEN @OrderBy =''ExpireDate ASC'' THEN ExpireDate END,
			CASE WHEN @OrderBy =''ExpireDate DESC'' THEN ExpireDate END DESC,
			CASE WHEN @OrderBy =''LastModified ASC'' THEN LastModified END,
			CASE WHEN @OrderBy =''LastModified DESC'' THEN LastModified END DESC,
			CASE WHEN @OrderBy =''NumberOfComments ASC'' THEN NumberOfComments END,
			CASE WHEN @OrderBy =''NumberOfComments DESC'' THEN NumberOfComments END DESC,
			CASE WHEN @OrderBy =''Title ASC'' THEN Title END,
			CASE WHEN @OrderBy =''Title DESC'' THEN Title END DESC
		),
		FinalLocalizedArticleIDsSet (ArticleID,Title,SubTitle,Summary,Article,DetailTypeData,TitleLink,MetaDecription,MetaKeywords,MainImageTitle,MainImageDescription) AS(
			SELECT ArticleID,Title,SubTitle,Summary,Article,DetailTypeData,clTitleLink AS TitleLink ,MetaDecription,MetaKeywords,MainImageTitle,MainImageDescription FROM {databaseOwner}[{objectQualifier}EasyDNNNewsContentLocalization] WHERE ArticleID IN (SELECT ArticleID FROM FinalArticleIDsSet) AND LocaleCode = @LocaleCode
		)
		SELECT *,
			CASE @EditPermission 
				WHEN 0 THEN 0
				WHEN 1 THEN 1
				WHEN 2 THEN
				CASE @EditOnlyAsOwner
					WHEN 0 THEN			
						CASE WHEN EXISTS(SELECT CategoryID FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS c WHERE c.ArticleID = Result.ArticleID AND c.CategoryID IN (SELECT CategoryID FROM @UserEditCategories))
							THEN 1
							ELSE
								CASE WHEN EXISTS(SELECT [ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsArticleRolePermissions] AS arp WHERE arp.ArticleID = Result.ArticleID AND arp.Edit = 1 AND arp.RoleID IN(SELECT RoleID FROM @UserInRoles))
								THEN 1
								ELSE
									CASE WHEN EXISTS (SELECT [ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsArticleUserPermissions] AS aup WHERE aup.ArticleID = Result.ArticleID AND aup.Edit = 1 AND aup.UserID = @UserID)
										THEN 1
										ELSE 0
									END
								END
						END  			
					WHEN 1 THEN
						CASE WHEN EXISTS(SELECT CategoryID FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS c WHERE Result.UserID = @UserID AND c.ArticleID = Result.ArticleID AND c.CategoryID IN (SELECT CategoryID FROM @UserEditCategories))
							THEN 1
							ELSE
								CASE WHEN EXISTS(SELECT [ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsArticleRolePermissions] AS arp WHERE arp.ArticleID = Result.ArticleID AND arp.Edit = 1 AND arp.RoleID IN(SELECT RoleID FROM @UserInRoles))
								THEN 1
								ELSE
									CASE WHEN EXISTS (SELECT [ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsArticleUserPermissions] AS aup WHERE aup.ArticleID = Result.ArticleID AND aup.Edit = 1 AND aup.UserID = @UserID)
										THEN 1
										ELSE 0
									END
								END 
						END
				END
				WHEN 3 THEN
					CASE WHEN EXISTS(SELECT [ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsArticleRolePermissions] AS arp WHERE arp.ArticleID = Result.ArticleID AND arp.Edit = 1 AND arp.RoleID IN(SELECT RoleID FROM @UserInRoles))
						THEN 1
						ELSE
						CASE WHEN EXISTS (SELECT [ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsArticleUserPermissions] AS aup WHERE aup.ArticleID = Result.ArticleID AND aup.Edit = 1 AND aup.UserID = @UserID)
							THEN 1
							ELSE 0
							END
						END 
			END AS ''CanEdit'',
			(SELECT cat.ID, cat.Name, cat.CategoryURL FROM @LocalizedCategories AS Cat INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS c ON c.CategoryID = Cat.ID WHERE c.ArticleID = Result.ArticleID ORDER BY Position FOR XML AUTO, ROOT(''root'')) AS ''CatToShow'',
			 CASE Result.Active
				WHEN 1 THEN 0
				WHEN 0 THEN 1
			 END AS ''Published'',
			 CASE @UserCanApprove
				WHEN 0 THEN 0
				WHEN 1 THEN
					CASE Result.Approved
					 WHEN 1 THEN 0
					 WHEN 0 THEN
						 CASE Result.Active
							WHEN 1 THEN 1
							WHEN 0 THEN 0
						END
					END
			 END AS ''Approve''
			 FROM (
				SELECT n.[ArticleID],n.[UserID],n.[Title],n.[SubTitle],n.[Summary],n.[Article],n.[ArticleImage],n.[DateAdded],n.[LastModified],n.[PublishDate]
					,n.[ExpireDate],n.[Approved],n.[Featured],n.[NumberOfViews],n.[RatingValue],n.[RatingCount],n.[AllowComments],n.[Active]
					,n.[TitleLink],n.[DetailType],n.[DetailTypeData],n.[DetailsTemplate],n.[DetailsTheme],n.[GalleryPosition],n.[GalleryDisplayType]
					,n.[ShowMainImage],n.[ShowMainImageFront],n.[CommentsTheme],n.[ArticleImageFolder],n.[NumberOfComments]
					,n.[ArticleImageSet],n.[MetaDecription],n.[MetaKeywords],n.[DisplayStyle],n.[DetailTarget]
					,n.[ArticleFromRSS],n.[HasPermissions],n.[EventArticle],n.[DetailMediaType],n.[DetailMediaData],n.[AuthorAliasName],n.[ShowGallery],n.[ArticleGalleryID],n.[MainImageTitle],n.[MainImageDescription]
					FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS n WHERE ArticleID IN (SELECT ArticleID FROM FinalArticleIDsSet WHERE ArticleID NOT IN (SELECT ArticleID FROM FinalLocalizedArticleIDsSet))
				UNION ALL
				SELECT n.[ArticleID],n.[UserID],fla.[Title],fla.[SubTitle],fla.[Summary],fla.[Article],n.[ArticleImage],n.[DateAdded],n.[LastModified],n.[PublishDate]
					,n.[ExpireDate],n.[Approved],n.[Featured],n.[NumberOfViews],n.[RatingValue],n.[RatingCount],n.[AllowComments],n.[Active]
					,fla.[TitleLink],n.[DetailType],fla.[DetailTypeData],n.[DetailsTemplate],n.[DetailsTheme],n.[GalleryPosition],n.[GalleryDisplayType]
					,n.[ShowMainImage],n.[ShowMainImageFront],n.[CommentsTheme],n.[ArticleImageFolder],n.[NumberOfComments]
					,n.[ArticleImageSet],fla.[MetaDecription],fla.[MetaKeywords],n.[DisplayStyle],n.[DetailTarget]
					,n.[ArticleFromRSS],n.[HasPermissions],n.[EventArticle],n.[DetailMediaType],n.[DetailMediaData],n.[AuthorAliasName],n.[ShowGallery],n.[ArticleGalleryID],fla.[MainImageTitle],fla.[MainImageDescription]
				FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS n INNER JOIN FinalLocalizedArticleIDsSet AS fla ON fla.ArticleID = n.ArticleID) As Result
		  ORDER BY
			 CASE WHEN @OrderBy =''PublishDate ASC'' THEN PublishDate END,
			 CASE WHEN @OrderBy =''PublishDate DESC'' THEN PublishDate END DESC,
			 CASE WHEN @OrderBy =''NumberOfViews ASC'' THEN NumberOfViews END,
			 CASE WHEN @OrderBy =''NumberOfViews DESC'' THEN NumberOfViews END DESC,
			 CASE WHEN @OrderBy =''RatingValue ASC'' THEN RatingValue END,
			 CASE WHEN @OrderBy =''RatingValue DESC'' THEN RatingValue END DESC,
			 CASE WHEN @OrderBy =''DateAdded ASC'' THEN DateAdded END,
			 CASE WHEN @OrderBy =''DateAdded DESC'' THEN DateAdded END DESC,
			 CASE WHEN @OrderBy =''ExpireDate ASC'' THEN ExpireDate END,
			 CASE WHEN @OrderBy =''ExpireDate DESC'' THEN ExpireDate END DESC,
			 CASE WHEN @OrderBy =''LastModified ASC'' THEN LastModified END,
			 CASE WHEN @OrderBy =''LastModified DESC'' THEN LastModified END DESC,
			 CASE WHEN @OrderBy =''NumberOfComments ASC'' THEN NumberOfComments END,
			 CASE WHEN @OrderBy =''NumberOfComments DESC'' THEN NumberOfComments END DESC,
			 CASE WHEN @OrderBy =''Title ASC'' THEN Title END,
			 CASE WHEN @OrderBy =''Title DESC'' THEN Title END DESC;
	END
	ELSE
	BEGIN
		SELECT *,
		CASE @EditPermission 
			WHEN 0 THEN 0
			WHEN 1 THEN 1
			WHEN 2 THEN
			CASE @EditOnlyAsOwner
				WHEN 0 THEN			
					CASE WHEN EXISTS(SELECT CategoryID FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS c WHERE c.ArticleID = Result.ArticleID AND c.CategoryID IN (SELECT CategoryID FROM @UserEditCategories))
						THEN 1
						ELSE
							CASE WHEN EXISTS(SELECT [ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsArticleRolePermissions] AS arp WHERE arp.ArticleID = Result.ArticleID AND arp.Edit = 1 AND arp.RoleID IN(SELECT RoleID FROM @UserInRoles))
							THEN 1
							ELSE
								CASE WHEN EXISTS (SELECT [ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsArticleUserPermissions] AS aup WHERE aup.ArticleID = Result.ArticleID AND aup.Edit = 1 AND aup.UserID = @UserID)
									THEN 1
									ELSE 0
								END
							END
					END  			
				WHEN 1 THEN
					CASE WHEN EXISTS(SELECT CategoryID FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS c WHERE Result.UserID = @UserID AND c.ArticleID = Result.ArticleID AND c.CategoryID IN (SELECT CategoryID FROM @UserEditCategories))
						THEN 1
						ELSE
							CASE WHEN EXISTS(SELECT [ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsArticleRolePermissions] AS arp WHERE arp.ArticleID = Result.ArticleID AND arp.Edit = 1 AND arp.RoleID IN(SELECT RoleID FROM @UserInRoles))
							THEN 1
							ELSE
								CASE WHEN EXISTS (SELECT [ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsArticleUserPermissions] AS aup WHERE aup.ArticleID = Result.ArticleID AND aup.Edit = 1 AND aup.UserID = @UserID)
									THEN 1
									ELSE 0
								END
							END 
					END
			END
			WHEN 3 THEN
				CASE WHEN EXISTS(SELECT [ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsArticleRolePermissions] AS arp WHERE arp.ArticleID = Result.ArticleID AND arp.Edit = 1 AND arp.RoleID IN(SELECT RoleID FROM @UserInRoles))
					THEN 1
					ELSE
					CASE WHEN EXISTS (SELECT [ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsArticleUserPermissions] AS aup WHERE aup.ArticleID = Result.ArticleID AND aup.Edit = 1 AND aup.UserID = @UserID)
						THEN 1
						ELSE 0
						END
					END 
		 END AS ''CanEdit'',
		(SELECT cat.ID, cat.Name, cat.CategoryURL FROM @LocalizedCategories AS Cat INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS c ON c.CategoryID = Cat.ID WHERE c.ArticleID = Result.ArticleID ORDER BY Position FOR XML AUTO, ROOT(''root'')) AS ''CatToShow'',
		 CASE Result.Active
			WHEN 1 THEN 0
			WHEN 0 THEN 1
		 END AS ''Published'',
		 CASE @UserCanApprove
			WHEN 0 THEN 0
			WHEN 1 THEN
				CASE Result.Approved
				 WHEN 1 THEN 0
				 WHEN 0 THEN
					 CASE Result.Active
						WHEN 1 THEN 1
						WHEN 0 THEN 0
					END
				END
		 END AS ''Approve''
		 FROM (SELECT
		  n.[ArticleID],n.[UserID],n.[Title],n.[SubTitle],n.[Summary],n.[Article],n.[ArticleImage],n.[DateAdded],n.[LastModified],n.[PublishDate]
		  ,n.[ExpireDate],n.[Approved],n.[Featured],n.[NumberOfViews],n.[RatingValue],n.[RatingCount],n.[AllowComments],n.[Active]
		  ,n.[TitleLink],n.[DetailType],n.[DetailTypeData],n.[DetailsTemplate],n.[DetailsTheme],n.[GalleryPosition],n.[GalleryDisplayType]
		  ,n.[ShowMainImage],n.[ShowMainImageFront],n.[CommentsTheme],n.[ArticleImageFolder],n.[NumberOfComments]
		  ,n.[ArticleImageSet],n.[MetaDecription],n.[MetaKeywords],n.[DisplayStyle],n.[DetailTarget]
		  ,n.[ArticleFromRSS],n.[HasPermissions],n.[EventArticle],n.[DetailMediaType],n.[DetailMediaData],n.[AuthorAliasName],n.[ShowGallery],n.[ArticleGalleryID],n.[MainImageTitle],n.[MainImageDescription], ROW_NUMBER() OVER (ORDER BY 
		 CASE WHEN @OrderBy =''PublishDate ASC'' THEN PublishDate END,
		 CASE WHEN @OrderBy =''PublishDate DESC'' THEN PublishDate END DESC,
		 CASE WHEN @OrderBy =''NumberOfViews ASC'' THEN NumberOfViews END,
		 CASE WHEN @OrderBy =''NumberOfViews DESC'' THEN NumberOfViews END DESC,
		 CASE WHEN @OrderBy =''RatingValue ASC'' THEN RatingValue END,
		 CASE WHEN @OrderBy =''RatingValue DESC'' THEN RatingValue END DESC,
		 CASE WHEN @OrderBy =''DateAdded ASC'' THEN DateAdded END,
		 CASE WHEN @OrderBy =''DateAdded DESC'' THEN DateAdded END DESC,
		 CASE WHEN @OrderBy =''ExpireDate ASC'' THEN ExpireDate END,
		 CASE WHEN @OrderBy =''ExpireDate DESC'' THEN ExpireDate END DESC,
		 CASE WHEN @OrderBy =''LastModified ASC'' THEN LastModified END,
		 CASE WHEN @OrderBy =''LastModified DESC'' THEN LastModified END DESC,
		 CASE WHEN @OrderBy =''NumberOfComments ASC'' THEN NumberOfComments END,
		 CASE WHEN @OrderBy =''NumberOfComments DESC'' THEN NumberOfComments END DESC,
		 CASE WHEN @OrderBy =''Title ASC'' THEN Title END,
		 CASE WHEN @OrderBy =''Title DESC'' THEN Title END DESC) AS Kulike
		 FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS n WHERE ArticleID IN(
			SELECT DISTINCT na.[ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS na
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS cat ON na.ArticleID = cat.ArticleID
				INNER JOIN @UserViewCategoriesWithFilter  AS uvcwf ON uvcwf.CategoryID = cat.CategoryID
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsTagsItems] AS nt ON na.ArticleID = nt.ArticleID
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = n.ArticleID
				INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserID, @FilterByDNNGroupID) AS t ON t.seckey = nss.SecurityKey
			WHERE na.PortalID=@PortalID
				AND na.HasPermissions = 0
				AND na.HideDefaultLocale = 0
				AND nt.TagID = @TagID
				AND na.PublishDate <= @CurrentDate AND na.ExpireDate >= @CurrentDate
				AND na.UserID = @FilterByDNNUserID
				AND ((@EditPermission = 1) OR ((@UserCanApprove = 1 OR na.Approved=1) AND (na.Active=1 OR na.UserID=@UserID)))
			UNION ALL
			SELECT na.[ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS na
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsArticleUserPermissions] AS aup ON na.ArticleID = aup.ArticleID 
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsTagsItems] AS nt ON na.ArticleID = nt.ArticleID
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS cat ON na.ArticleID = cat.ArticleID
				INNER JOIN @FiltredByCategories AS fbc ON fbc.CategoryID = cat.CategoryID
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = n.ArticleID
				INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserID, @FilterByDNNGroupID) AS t ON t.seckey = nss.SecurityKey
			WHERE na.PortalID=@PortalID
				AND na.HasPermissions = 1
				AND na.HideDefaultLocale = 0
				AND nt.TagID = @TagID
				AND na.PublishDate <= @CurrentDate AND na.ExpireDate >= @CurrentDate
				AND na.UserID = @FilterByDNNUserID
				AND ((@EditPermission = 1) OR (((@UserID = -1 AND aup.UserID IS NULL) OR (aup.UserID = @UserID))
					AND aup.Show = 1 AND ((@UserCanApprove = 1) OR (na.Approved=1)) AND (na.Active=1 OR na.UserID=@UserID)
				))
			UNION
			SELECT DISTINCT na.[ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS na
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsArticleRolePermissions] AS arp ON na.ArticleID = arp.ArticleID
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsTagsItems] AS nt ON na.ArticleID = nt.ArticleID
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS cat ON na.ArticleID = cat.ArticleID
				INNER JOIN @FiltredByCategories AS fbc ON fbc.CategoryID = cat.CategoryID
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = n.ArticleID
				INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserID, @FilterByDNNGroupID) AS t ON t.seckey = nss.SecurityKey
			WHERE na.PortalID=@PortalID
				AND na.HasPermissions = 1
				AND na.HideDefaultLocale = 0
				AND nt.TagID = @TagID
				AND na.PublishDate <= @CurrentDate AND na.ExpireDate >= @CurrentDate
				AND na.UserID = @FilterByDNNUserID
				AND ((@EditPermission = 1) OR (((@UserCanApprove = 1) OR (na.Approved=1))
					AND (na.Active=1 OR na.UserID=@UserID) AND arp.Show = 1 AND arp.RoleID IN (SELECT [RoleID] FROM @UserInRoles)
				))
			)
		) AS Result WHERE Kulike BETWEEN @ItemsFrom AND @ItemsTo ORDER BY
			CASE WHEN @OrderBy =''PublishDate ASC'' THEN PublishDate END,
			CASE WHEN @OrderBy =''PublishDate DESC'' THEN PublishDate END DESC,
			CASE WHEN @OrderBy =''NumberOfViews ASC'' THEN NumberOfViews END,
			CASE WHEN @OrderBy =''NumberOfViews DESC'' THEN NumberOfViews END DESC,
			CASE WHEN @OrderBy =''RatingValue ASC'' THEN RatingValue END,
			CASE WHEN @OrderBy =''RatingValue DESC'' THEN RatingValue END DESC,
			CASE WHEN @OrderBy =''DateAdded ASC'' THEN DateAdded END,
			CASE WHEN @OrderBy =''DateAdded DESC'' THEN DateAdded END DESC,
			CASE WHEN @OrderBy =''ExpireDate ASC'' THEN ExpireDate END,
			CASE WHEN @OrderBy =''ExpireDate DESC'' THEN ExpireDate END DESC,
			CASE WHEN @OrderBy =''LastModified ASC'' THEN LastModified END,
			CASE WHEN @OrderBy =''LastModified DESC'' THEN LastModified END DESC,
			CASE WHEN @OrderBy =''NumberOfComments ASC'' THEN NumberOfComments END,
			CASE WHEN @OrderBy =''NumberOfComments DESC'' THEN NumberOfComments END DESC,
			CASE WHEN @OrderBy =''Title ASC'' THEN Title END,
			CASE WHEN @OrderBy =''Title DESC'' THEN Title END DESC;
	END
END' 
END
GO
/****** Object:  StoredProcedure {databaseOwner}[{objectQualifier}EasyDNNNewsGetItemsByMonthlyArchive]    Script Date: 06/24/2013 16:39:06 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'{databaseOwner}[{objectQualifier}EasyDNNNewsGetItemsByMonthlyArchive]') AND type in (N'P', N'PC'))
BEGIN
EXEC dbo.sp_executesql @statement = N'CREATE PROCEDURE {databaseOwner}[{objectQualifier}EasyDNNNewsGetItemsByMonthlyArchive]
	@PortalID int,
	@UserID int,
	@CalendarModuleID int,
	@AdminOrSuperUser bit  = 0,
	@CurrentDate DateTime,
	@LocaleCode nvarchar(20) = '''',
	@IsSocialInstance bit = 0,
	@FilterByDNNUserID int = 0, -- filter by some UserID / not current user ID
	@FilterByDNNGroupID int = 0, -- filter by DNNGroup/RoleID / not profile GroupID
	@ShowAllAuthors bit = 1, -- filter postavka menija
	@CategoryFilterType tinyint = 0, --0 All categories, 1 - Selection, 2 - AutoAdd
	@HideUnlocalizedItems bit = 0,
	@PermissionSettingsSource tinyint = 0, -- None, 1 - portal, 2 - module
	@PermissionsModuleID int = 0, -- NewsModuleID
	@DateTimeOffset int
AS
SET NOCOUNT ON;

DECLARE @UserCanApprove bit;
SET @UserCanApprove = 0;
DECLARE @UserInRoles TABLE (RoleID int NOT NULL PRIMARY KEY);
INSERT INTO @UserInRoles SELECT DISTINCT ur.[RoleID] FROM {databaseOwner}[{objectQualifier}UserRoles] AS ur INNER JOIN {databaseOwner}[{objectQualifier}Roles] AS r ON ur.RoleID = r.RoleID WHERE ur.UserID = @UserID AND r.PortalID = @PortalID AND (ur.ExpiryDate IS NULL OR ur.ExpiryDate > GETUTCDATE()) AND (ur.EffectiveDate IS NULL OR ur.EffectiveDate < GETUTCDATE());

DECLARE @UserViewCategories TABLE (CategoryID int NOT NULL PRIMARY KEY); -- all categories which user can see based on permissions
DECLARE @UserViewCategoriesWithFilter TABLE (CategoryID int NOT NULL PRIMARY KEY); -- all categories which user can see based on permissions and Module filter
DECLARE @FiltredByCategories TABLE (CategoryID int NOT NULL PRIMARY KEY); -- all categories that are filtred by module or portal

DECLARE @SettingsSource bit; SET @SettingsSource = 1;
IF @AdminOrSuperUser = 1 OR @PermissionSettingsSource = 0
BEGIN
	INSERT INTO @UserViewCategories SELECT [CategoryID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryList] WHERE PortalID = @PortalID;
END
ELSE IF @UserID = -1
BEGIN	
	IF @PermissionSettingsSource = 1 -- by portal
	BEGIN
		IF EXISTS (SELECT ShowAllCategories FROM {databaseOwner}[{objectQualifier}EasyDNNNewsRolePremissionSettings] as rps WHERE rps.PortalID = @PortalID  AND rps.ModuleID IS NULL AND rps.RoleID IS NULL AND rps.ShowAllCategories = 1)
		BEGIN
			INSERT INTO @UserViewCategories SELECT [CategoryID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryList] WHERE PortalID = @PortalID;
		END
		ELSE
		BEGIN
			INSERT INTO @UserViewCategories
			SELECT rpsc.[CategoryID] FROM  {databaseOwner}[{objectQualifier}EasyDNNNewsRolePremissionsShowCategories] as rpsc 
			INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsRolePremissionSettings] as rps ON rps.PremissionSettingsID = rpsc.PremissionSettingsID
			WHERE rps.PortalID = @PortalID  AND rps.ModuleID IS NULL AND rps.RoleID IS NULL;
		END
	END
	ELSE -- by module
	BEGIN
		SELECT @SettingsSource = PermissionsPMSource FROM {databaseOwner}[{objectQualifier}EasyDNNNewsModuleSettings] WHERE ModuleID = @PermissionsModuleID;
		IF @SettingsSource = 1
		BEGIN
			IF EXISTS (SELECT ShowAllCategories FROM {databaseOwner}[{objectQualifier}EasyDNNNewsRolePremissionSettings] as rps WHERE rps.PortalID = @PortalID  AND rps.ModuleID IS NULL AND rps.RoleID IS NULL AND rps.ShowAllCategories = 1)
			BEGIN
				INSERT INTO @UserViewCategories SELECT [CategoryID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryList] WHERE PortalID = @PortalID;
			END
			ELSE
			BEGIN
				INSERT INTO @UserViewCategories
				SELECT rpsc.[CategoryID] FROM  {databaseOwner}[{objectQualifier}EasyDNNNewsRolePremissionsShowCategories] as rpsc 
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsRolePremissionSettings] as rps ON rps.PremissionSettingsID = rpsc.PremissionSettingsID
				WHERE rps.PortalID = @PortalID  AND rps.ModuleID IS NULL AND rps.RoleID IS NULL;
			END
		END
		ELSE
		BEGIN
			IF EXISTS (SELECT ShowAllCategories FROM {databaseOwner}[{objectQualifier}EasyDNNNewsRolePremissionSettings] as rps WHERE rps.PortalID = @PortalID AND rps.ModuleID = @PermissionsModuleID AND rps.RoleID IS NULL AND rps.ShowAllCategories = 1)
			BEGIN
				INSERT INTO @UserViewCategories SELECT [CategoryID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryList] WHERE PortalID = @PortalID;
			END
			ELSE
			BEGIN
				INSERT INTO @UserViewCategories
				SELECT rpsc.[CategoryID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsRolePremissionsShowCategories] as rpsc
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsRolePremissionSettings] as rps ON rps.PremissionSettingsID = rpsc.PremissionSettingsID
				WHERE rps.PortalID = @PortalID AND rps.ModuleID = @PermissionsModuleID AND rps.RoleID IS NULL;
			END
		END
	END
END
ELSE -- registrirani korisnik
BEGIN
	IF @PermissionSettingsSource = 1 -- by portal
	BEGIN
		IF EXISTS (
				SELECT TOP (1) ShowAllCategories FROM {databaseOwner}[{objectQualifier}EasyDNNNewsRolePremissionSettings] as rps
					INNER JOIN @UserInRoles as uir ON rps.RoleID = uir.RoleID
					WHERE rps.PortalID = @PortalID AND rps.ModuleID IS NULL AND rps.ShowAllCategories = 1
				UNION
				SELECT ShowAllCategories FROM {databaseOwner}[{objectQualifier}EasyDNNNewsUserPremissionSettings] as ups
				WHERE ups.UserID = @UserID AND ups.PortalID = @PortalID AND ups.ModuleID IS NULL AND ups.ShowAllCategories = 1
		)
		BEGIN
			INSERT INTO @UserViewCategories SELECT [CategoryID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryList] WHERE PortalID = @PortalID;
		END
		ELSE
		BEGIN
			INSERT INTO @UserViewCategories
			SELECT rpsc.[CategoryID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsRolePremissionsShowCategories] as rpsc
			INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsRolePremissionSettings] as rps ON rps.PremissionSettingsID = rpsc.PremissionSettingsID
			INNER JOIN @UserInRoles as uir ON rps.RoleID = uir.RoleID
			WHERE rps.PortalID = @PortalID AND rps.ModuleID IS NULL GROUP BY rpsc.[CategoryID]
			UNION
			SELECT upsc.[CategoryID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsUserPremissionsShowCategories] as upsc
			INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsUserPremissionSettings] as ups ON ups.PremissionSettingsID = upsc.PremissionSettingsID
			WHERE ups.UserID = @UserID AND ups.PortalID = @PortalID AND ups.ModuleID IS NULL GROUP BY upsc.[CategoryID];
		END
	END
	ELSE -- by module
	BEGIN
		SELECT @SettingsSource = PermissionsPMSource FROM {databaseOwner}[{objectQualifier}EasyDNNNewsModuleSettings] WHERE ModuleID = @PermissionsModuleID;
		IF @SettingsSource = 1
		BEGIN
			IF EXISTS (
				SELECT TOP (1) ShowAllCategories FROM {databaseOwner}[{objectQualifier}EasyDNNNewsRolePremissionSettings] as rps
					INNER JOIN @UserInRoles as uir ON rps.RoleID = uir.RoleID
					WHERE rps.PortalID = @PortalID AND rps.ModuleID IS NULL AND rps.ShowAllCategories = 1
				UNION
				SELECT ShowAllCategories FROM {databaseOwner}[{objectQualifier}EasyDNNNewsUserPremissionSettings] as ups
				WHERE ups.UserID = @UserID AND ups.PortalID = @PortalID AND ups.ModuleID IS NULL AND ups.ShowAllCategories = 1
			)
			BEGIN
				INSERT INTO @UserViewCategories SELECT [CategoryID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryList] WHERE PortalID = @PortalID;
			END
			ELSE
			BEGIN
				INSERT INTO @UserViewCategories
				SELECT rpsc.[CategoryID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsRolePremissionsShowCategories] as rpsc
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsRolePremissionSettings] as rps ON rps.PremissionSettingsID = rpsc.PremissionSettingsID
				INNER JOIN @UserInRoles as uir ON rps.RoleID = uir.RoleID
				WHERE rps.PortalID = @PortalID AND rps.ModuleID IS NULL GROUP BY rpsc.[CategoryID]
				UNION
				SELECT upsc.[CategoryID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsUserPremissionsShowCategories] as upsc
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsUserPremissionSettings] as ups ON ups.PremissionSettingsID = upsc.PremissionSettingsID
				WHERE ups.UserID = @UserID AND ups.PortalID = @PortalID AND ups.ModuleID IS NULL GROUP BY upsc.[CategoryID];
			END
		END
		ELSE
		BEGIN
			IF EXISTS (
				SELECT TOP (1) ShowAllCategories FROM {databaseOwner}[{objectQualifier}EasyDNNNewsRolePremissionSettings] as rps
					INNER JOIN @UserInRoles as uir ON rps.RoleID = uir.RoleID
					WHERE rps.PortalID = @PortalID AND rps.ModuleID = @PermissionsModuleID AND rps.ShowAllCategories = 1
				UNION
				SELECT ShowAllCategories FROM {databaseOwner}[{objectQualifier}EasyDNNNewsUserPremissionSettings] as ups
				WHERE ups.UserID = @UserID AND ups.PortalID = @PortalID AND ups.ModuleID = @PermissionsModuleID AND ups.ShowAllCategories = 1
			)
			BEGIN
				INSERT INTO @UserViewCategories SELECT [CategoryID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryList] WHERE PortalID = @PortalID;
			END
			ELSE
			BEGIN
				INSERT INTO @UserViewCategories
				SELECT rpsc.[CategoryID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsRolePremissionsShowCategories] as rpsc
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsRolePremissionSettings] as rps ON rps.PremissionSettingsID = rpsc.PremissionSettingsID
				INNER JOIN @UserInRoles as uir ON rps.RoleID = uir.RoleID
				WHERE rps.PortalID = @PortalID AND rps.ModuleID = @PermissionsModuleID GROUP BY rpsc.[CategoryID]
				UNION
				SELECT upsc.[CategoryID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsUserPremissionsShowCategories] as upsc
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsUserPremissionSettings] as ups ON ups.PremissionSettingsID = upsc.PremissionSettingsID
				WHERE ups.UserID = @UserID AND ups.PortalID = @PortalID AND ups.ModuleID = @PermissionsModuleID GROUP BY upsc.[CategoryID];
			END
		END
	END
END

IF @CategoryFilterType = 0 -- 0 All categories
BEGIN
	INSERT INTO @UserViewCategoriesWithFilter SELECT [CategoryID] FROM @UserViewCategories;
	INSERT INTO @FiltredByCategories SELECT [CategoryID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryList] WHERE PortalID = @PortalID;
END
ELSE IF @CategoryFilterType = 1 -- 1 - Selection
BEGIN
		INSERT INTO @UserViewCategoriesWithFilter 
		SELECT cl.[CategoryID] FROM @UserViewCategories as cl
		INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsModuleCategoryItems] AS mci ON mci.CategoryID = cl.CategoryID AND mci.ModuleID = @CalendarModuleID
		
		INSERT INTO @FiltredByCategories SELECT [CategoryID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsModuleCategoryItems] WHERE ModuleID = @CalendarModuleID;
END
ELSE IF @CategoryFilterType = 2 -- 2 - AutoAdd
BEGIN
	WITH hierarchy AS(
		SELECT [CategoryID], [ParentCategory]
		FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryList] AS cl
		WHERE (cl.ParentCategory IN (SELECT [CategoryID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsModuleCategoryItems] WHERE ModuleID = @CalendarModuleID) OR cl.CategoryID IN (SELECT [CategoryID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsModuleCategoryItems] WHERE ModuleID = @CalendarModuleID)) AND PortalID = @PortalID
		UNION ALL
		SELECT c.[CategoryID], c.[ParentCategory]
		FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryList] AS c INNER JOIN hierarchy AS p ON c.ParentCategory = p.CategoryID WHERE c.PortalID = @PortalID
		)
		INSERT INTO @FiltredByCategories SELECT DISTINCT CategoryID FROM hierarchy;	
		INSERT INTO @UserViewCategoriesWithFilter SELECT uvc.CategoryID FROM @FiltredByCategories as nfc INNER JOIN @UserViewCategories as uvc ON uvc.CategoryID = nfc.CategoryID;
END

DECLARE @FilterBySocialGroup bit;
SET @FilterBySocialGroup = 0;
DECLARE @FilterAuthorOrAuthors bit;
SET @FilterAuthorOrAuthors = 0;

DECLARE @TempAuthorsIDList TABLE (UserID int NOT NULL PRIMARY KEY);
IF @IsSocialInstance = 1
	BEGIN
		IF @FilterByDNNGroupID <> 0
		BEGIN	
			SET @FilterBySocialGroup = 1;
		END
	END
ELSE
BEGIN
	IF @ShowAllAuthors = 0
	BEGIN
		SET @FilterAuthorOrAuthors = 1;
		INSERT INTO @TempAuthorsIDList
		SELECT [UserID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsModuleAuthorsItems] AS mai WHERE mai.ModuleID = @CalendarModuleID
		UNION 
		SELECT [UserID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsAuthorProfile] AS ap 
			INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsAutorGroupItems] AS agi ON ap.AuthorProfileID = agi.AuthorProfileID
			INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsModuleGroupItems] AS mgi ON mgi.GroupID = agi.GroupID
			WHERE mgi.ModuleID = @CalendarModuleID
	END
END

IF @LocaleCode = ''''
BEGIN
	IF @IsSocialInstance = 0
	BEGIN
		SELECT MONTH(final.PublishDate) AS Month, YEAR(final.PublishDate) AS Year, COUNT(*) AS Count FROM (
			SELECT na.[ArticleID], DATEADD(hh, @DateTimeOffset, na.[PublishDate]) as [PublishDate] FROM {databaseOwner}[{objectQualifier}EasyDNNNews] as na
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] as cat ON na.ArticleID = cat.ArticleID
				INNER JOIN @UserViewCategoriesWithFilter as uvcwf ON uvcwf.CategoryID = cat.CategoryID
			WHERE na.PortalID=@PortalID
				AND ((@AdminOrSuperUser = 1) OR ((@UserCanApprove = 1 OR na.Approved=1) AND (na.Active=1 OR na.UserID=@UserID)))
				AND na.HasPermissions = 0
				AND na.HideDefaultLocale = 0
				AND DATEADD(hh, @DateTimeOffset, na.PublishDate) <= @CurrentDate
				AND DATEADD(hh, @DateTimeOffset, na.ExpireDate) >= @CurrentDate
				AND ((@FilterAuthorOrAuthors = 1 AND na.UserID IN (SELECT UserID FROM @TempAuthorsIDList)) OR (@FilterAuthorOrAuthors = 0))
			GROUP BY na.ArticleID, DATEADD(hh, @DateTimeOffset, na.[PublishDate])
			UNION ALL
			SELECT na.[ArticleID], DATEADD(hh, @DateTimeOffset, na.[PublishDate]) as [PublishDate] from {databaseOwner}[{objectQualifier}EasyDNNNews] as na
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsArticleUserPermissions] as aup ON na.ArticleID = aup.ArticleID
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] as cat ON na.ArticleID = cat.ArticleID
				INNER JOIN @FiltredByCategories AS fbc ON fbc.CategoryID = cat.CategoryID
			WHERE na.PortalID=@PortalID
				AND ((@AdminOrSuperUser = 1) OR (
					((@UserID = -1 AND aup.UserID IS NULL) OR (aup.UserID = @UserID))
					AND aup.Show = 1 AND ((@UserCanApprove = 1) OR (na.Approved=1)) AND (na.Active=1 OR na.UserID=@UserID))
					)
				AND na.HasPermissions = 1
				AND na.HideDefaultLocale = 0
				AND DATEADD(hh, @DateTimeOffset, na.PublishDate) <= @CurrentDate
				AND DATEADD(hh, @DateTimeOffset, na.ExpireDate) >= @CurrentDate
				AND ((@FilterAuthorOrAuthors = 1 AND na.UserID IN (SELECT UserID FROM @TempAuthorsIDList)) OR (@FilterAuthorOrAuthors = 0))
			GROUP BY na.ArticleID, DATEADD(hh, @DateTimeOffset, na.[PublishDate])
			UNION
			SELECT na.[ArticleID], DATEADD(hh, @DateTimeOffset, na.[PublishDate]) as [PublishDate] from {databaseOwner}[{objectQualifier}EasyDNNNews] as na
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsArticleRolePermissions] as arp ON na.ArticleID = arp.ArticleID
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] as cat ON na.ArticleID = cat.ArticleID
				INNER JOIN @FiltredByCategories AS fbc ON fbc.CategoryID = cat.CategoryID
			WHERE na.PortalID=@PortalID
				AND ((@AdminOrSuperUser = 1) OR (((@UserCanApprove = 1) OR (na.Approved=1))
					AND (na.Active=1 OR na.UserID=@UserID) AND arp.Show = 1 AND arp.RoleID IN (SELECT [RoleID] FROM @UserInRoles)
					))
				AND na.HasPermissions = 1
				AND na.HideDefaultLocale = 0
				AND DATEADD(hh, @DateTimeOffset, na.PublishDate) <= @CurrentDate
				AND DATEADD(hh, @DateTimeOffset, na.ExpireDate) >= @CurrentDate
				AND ((@FilterAuthorOrAuthors = 1 AND na.UserID IN (SELECT UserID FROM @TempAuthorsIDList)) OR (@FilterAuthorOrAuthors = 0))
			GROUP BY na.ArticleID, DATEADD(hh, @DateTimeOffset, na.[PublishDate])
		) as final
		GROUP BY MONTH(PublishDate), YEAR(PublishDate) ORDER BY Year DESC, Month DESC;
	END
	ELSE IF @FilterBySocialGroup = 1
	BEGIN
		SELECT MONTH(final.PublishDate) AS Month, YEAR(final.PublishDate) AS Year, COUNT(*) AS Count FROM (
			SELECT na.[ArticleID], DATEADD(hh, @DateTimeOffset, na.[PublishDate]) as [PublishDate] FROM {databaseOwner}[{objectQualifier}EasyDNNNews] as na
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] as cat ON na.ArticleID = cat.ArticleID
				INNER JOIN @UserViewCategoriesWithFilter as uvcwf ON uvcwf.CategoryID = cat.CategoryID
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = na.ArticleID
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialGroupItems] AS sgi ON sgi.ArticleID = na.ArticleID AND sgi.RoleID = @FilterByDNNGroupID
				INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserID, @FilterByDNNGroupID) as t ON t.seckey = nss.SecurityKey
			WHERE na.PortalID=@PortalID
				AND ((@AdminOrSuperUser = 1) OR ((@UserCanApprove = 1 OR na.Approved=1) AND (na.Active=1 OR na.UserID=@UserID)))
				AND na.HasPermissions = 0
				AND na.HideDefaultLocale = 0
				AND DATEADD(hh, @DateTimeOffset, na.PublishDate) <= @CurrentDate
				AND DATEADD(hh, @DateTimeOffset, na.ExpireDate) >= @CurrentDate
			GROUP BY na.ArticleID, DATEADD(hh, @DateTimeOffset, na.[PublishDate])
			UNION ALL
			SELECT na.[ArticleID], DATEADD(hh, @DateTimeOffset, na.[PublishDate]) as [PublishDate] from {databaseOwner}[{objectQualifier}EasyDNNNews] as na
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsArticleUserPermissions] as aup ON na.ArticleID = aup.ArticleID
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] as cat ON na.ArticleID = cat.ArticleID
				INNER JOIN @FiltredByCategories AS fbc ON fbc.CategoryID = cat.CategoryID
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = na.ArticleID
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialGroupItems] AS sgi ON sgi.ArticleID = na.ArticleID AND sgi.RoleID = @FilterByDNNGroupID
				INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserID, @FilterByDNNGroupID) as t ON t.seckey = nss.SecurityKey
			WHERE na.PortalID=@PortalID
				AND ((@AdminOrSuperUser = 1) OR (((@UserID = -1 AND aup.UserID IS NULL) OR (aup.UserID = @UserID))
					AND aup.Show = 1 AND ((@UserCanApprove = 1) OR (na.Approved=1)) AND (na.Active=1 OR na.UserID=@UserID)
					))
				AND na.HasPermissions = 1
				AND na.HideDefaultLocale = 0
				AND DATEADD(hh, @DateTimeOffset, na.PublishDate) <= @CurrentDate
				AND DATEADD(hh, @DateTimeOffset, na.ExpireDate) >= @CurrentDate
			GROUP BY na.ArticleID, DATEADD(hh, @DateTimeOffset, na.[PublishDate])
			UNION
			SELECT na.[ArticleID], DATEADD(hh, @DateTimeOffset, na.[PublishDate]) as [PublishDate] from {databaseOwner}[{objectQualifier}EasyDNNNews] as na
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsArticleRolePermissions] as arp ON na.ArticleID = arp.ArticleID
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] as cat ON na.ArticleID = cat.ArticleID
				INNER JOIN @FiltredByCategories AS fbc ON fbc.CategoryID = cat.CategoryID
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = na.ArticleID
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialGroupItems] AS sgi ON sgi.ArticleID = na.ArticleID AND sgi.RoleID = @FilterByDNNGroupID
				INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserID, @FilterByDNNGroupID) as t ON t.seckey = nss.SecurityKey
			WHERE na.PortalID=@PortalID
				AND ((@AdminOrSuperUser = 1) OR (((@UserCanApprove = 1) OR (na.Approved=1))
					AND (na.Active=1 OR na.UserID=@UserID) AND arp.Show = 1 AND arp.RoleID IN (SELECT [RoleID] FROM @UserInRoles)
					))
				AND na.HasPermissions = 1
				AND na.HideDefaultLocale = 0
				AND DATEADD(hh, @DateTimeOffset, na.PublishDate) <= @CurrentDate
				AND DATEADD(hh, @DateTimeOffset, na.ExpireDate) >= @CurrentDate
			GROUP BY na.ArticleID, DATEADD(hh, @DateTimeOffset, na.[PublishDate])
		) as final
		GROUP BY MONTH(PublishDate), YEAR(PublishDate) ORDER BY Year DESC, Month DESC;
	END
	ELSE IF @FilterByDNNUserID <> 0
	BEGIN
		SELECT MONTH(final.PublishDate) AS Month, YEAR(final.PublishDate) AS Year, COUNT(*) AS Count FROM (
			SELECT na.[ArticleID],DATEADD(hh, @DateTimeOffset, na.[PublishDate]) as [PublishDate] FROM {databaseOwner}[{objectQualifier}EasyDNNNews] as na
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] as cat ON na.ArticleID = cat.ArticleID
				INNER JOIN @UserViewCategoriesWithFilter as uvcwf ON uvcwf.CategoryID = cat.CategoryID
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = na.ArticleID
				INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserID, @FilterByDNNGroupID) as t ON t.seckey = nss.SecurityKey
			WHERE na.PortalID=@PortalID
				AND ((@AdminOrSuperUser = 1) OR ((@UserCanApprove = 1 OR na.Approved=1) AND (na.Active=1 OR na.UserID=@UserID)))
				AND na.HasPermissions = 0
				AND na.HideDefaultLocale = 0
				AND DATEADD(hh, @DateTimeOffset, na.PublishDate) <= @CurrentDate
				AND DATEADD(hh, @DateTimeOffset, na.ExpireDate) >= @CurrentDate
				AND na.UserID = @FilterByDNNUserID
			GROUP BY na.ArticleID, DATEADD(hh, @DateTimeOffset, na.[PublishDate])
			UNION ALL
			SELECT na.[ArticleID], DATEADD(hh, @DateTimeOffset, na.[PublishDate]) as [PublishDate] from {databaseOwner}[{objectQualifier}EasyDNNNews] as na
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsArticleUserPermissions] as aup ON na.ArticleID = aup.ArticleID
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] as cat ON na.ArticleID = cat.ArticleID
				INNER JOIN @FiltredByCategories AS fbc ON fbc.CategoryID = cat.CategoryID
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = na.ArticleID
				INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserID, @FilterByDNNGroupID) as t ON t.seckey = nss.SecurityKey
			WHERE na.PortalID=@PortalID
				AND ((@AdminOrSuperUser = 1) OR (((@UserID = -1 AND aup.UserID IS NULL) OR (aup.UserID = @UserID))
					AND aup.Show = 1 AND ((@UserCanApprove = 1) OR (na.Approved=1)) AND (na.Active=1 OR na.UserID=@UserID)
					))
				AND na.HasPermissions = 1
				AND na.HideDefaultLocale = 0
				AND DATEADD(hh, @DateTimeOffset, na.PublishDate) <= @CurrentDate
				AND DATEADD(hh, @DateTimeOffset, na.ExpireDate) >= @CurrentDate
				AND na.UserID = @FilterByDNNUserID
			GROUP BY na.ArticleID, DATEADD(hh, @DateTimeOffset, na.[PublishDate])
			UNION
			SELECT na.[ArticleID], DATEADD(hh, @DateTimeOffset, na.[PublishDate]) as [PublishDate] from {databaseOwner}[{objectQualifier}EasyDNNNews] as na
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsArticleRolePermissions] as arp ON na.ArticleID = arp.ArticleID
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] as cat ON na.ArticleID = cat.ArticleID
				INNER JOIN @FiltredByCategories AS fbc ON fbc.CategoryID = cat.CategoryID
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = na.ArticleID
				INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserID, @FilterByDNNGroupID) as t ON t.seckey = nss.SecurityKey
			WHERE na.PortalID=@PortalID
				AND ((@AdminOrSuperUser = 1) OR (((@UserCanApprove = 1) OR (na.Approved=1))
					AND (na.Active=1 OR na.UserID=@UserID) AND arp.Show = 1 AND arp.RoleID IN (SELECT [RoleID] FROM @UserInRoles)
					))
				AND na.HasPermissions = 1
				AND na.HideDefaultLocale = 0
				AND DATEADD(hh, @DateTimeOffset, na.PublishDate) <= @CurrentDate
				AND DATEADD(hh, @DateTimeOffset, na.ExpireDate) >= @CurrentDate
				AND na.UserID = @FilterByDNNUserID
			GROUP BY na.ArticleID, DATEADD(hh, @DateTimeOffset, na.[PublishDate])
		) as final
		GROUP BY MONTH(PublishDate), YEAR(PublishDate) ORDER BY Year DESC, Month DESC;
	END
END
ELSE
BEGIN
	IF @IsSocialInstance = 0
	BEGIN
		SELECT MONTH(final.PublishDate) AS Month, YEAR(final.PublishDate) AS Year, COUNT(*) AS Count FROM (
			SELECT na.[ArticleID],DATEADD(hh, @DateTimeOffset, na.[PublishDate]) as [PublishDate] FROM {databaseOwner}[{objectQualifier}EasyDNNNews] as na
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] as cat ON na.ArticleID = cat.ArticleID
				INNER JOIN @UserViewCategoriesWithFilter as uvcwf ON uvcwf.CategoryID = cat.CategoryID
				LEFT OUTER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsContentLocalization] AS ncl ON ncl.ArticleID = na.ArticleID
			WHERE na.PortalID=@PortalID
				AND ((@AdminOrSuperUser = 1) OR ((@UserCanApprove = 1 OR na.Approved=1) AND (na.Active=1 OR na.UserID=@UserID)))
				AND na.HasPermissions = 0
				AND DATEADD(hh, @DateTimeOffset, na.PublishDate) <= @CurrentDate
				AND DATEADD(hh, @DateTimeOffset, na.ExpireDate) >= @CurrentDate
				AND ((@FilterAuthorOrAuthors = 1 AND na.UserID IN (SELECT UserID FROM @TempAuthorsIDList)) OR (@FilterAuthorOrAuthors = 0))
				AND ((@HideUnlocalizedItems = 1 AND ncl.ArticleID IS NOT NULL AND ncl.LocaleCode = @LocaleCode) OR (@HideUnlocalizedItems = 0))
			GROUP BY na.ArticleID, DATEADD(hh, @DateTimeOffset, na.[PublishDate])
			UNION ALL
			SELECT na.[ArticleID], DATEADD(hh, @DateTimeOffset, na.[PublishDate]) as [PublishDate] from {databaseOwner}[{objectQualifier}EasyDNNNews] as na
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsArticleUserPermissions] as aup ON na.ArticleID = aup.ArticleID
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] as cat ON na.ArticleID = cat.ArticleID
				INNER JOIN @FiltredByCategories AS fbc ON fbc.CategoryID = cat.CategoryID
				LEFT OUTER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsContentLocalization] AS ncl ON ncl.ArticleID = na.ArticleID
			WHERE na.PortalID=@PortalID
				AND ((@AdminOrSuperUser = 1) OR (((@UserID = -1 AND aup.UserID IS NULL) OR (aup.UserID = @UserID))
					AND aup.Show = 1 AND ((@UserCanApprove = 1) OR (na.Approved=1)) AND (na.Active=1 OR na.UserID=@UserID)
					))
				AND na.HasPermissions = 1
				AND DATEADD(hh, @DateTimeOffset, na.PublishDate) <= @CurrentDate
				AND DATEADD(hh, @DateTimeOffset, na.ExpireDate) >= @CurrentDate
				AND ((@FilterAuthorOrAuthors = 1 AND na.UserID IN (SELECT UserID FROM @TempAuthorsIDList)) OR (@FilterAuthorOrAuthors = 0))
				AND ((@HideUnlocalizedItems = 1 AND ncl.ArticleID IS NOT NULL AND ncl.LocaleCode = @LocaleCode) OR (@HideUnlocalizedItems = 0))
			GROUP BY na.ArticleID, DATEADD(hh, @DateTimeOffset, na.[PublishDate])
			UNION
			SELECT na.[ArticleID], DATEADD(hh, @DateTimeOffset, na.[PublishDate]) as [PublishDate] from {databaseOwner}[{objectQualifier}EasyDNNNews] as na
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsArticleRolePermissions] as arp ON na.ArticleID = arp.ArticleID
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] as cat ON na.ArticleID = cat.ArticleID
				INNER JOIN @FiltredByCategories AS fbc ON fbc.CategoryID = cat.CategoryID
				LEFT OUTER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsContentLocalization] AS ncl ON ncl.ArticleID = na.ArticleID
			WHERE na.PortalID=@PortalID
				AND ((@AdminOrSuperUser = 1) OR (((@UserCanApprove = 1) OR (na.Approved=1))
					AND (na.Active=1 OR na.UserID=@UserID) AND arp.Show = 1 AND arp.RoleID IN (SELECT [RoleID] FROM @UserInRoles)
					))
				AND na.HasPermissions = 1
				AND DATEADD(hh, @DateTimeOffset, na.PublishDate) <= @CurrentDate
				AND DATEADD(hh, @DateTimeOffset, na.ExpireDate) >= @CurrentDate
				AND ((@FilterAuthorOrAuthors = 1 AND na.UserID IN (SELECT UserID FROM @TempAuthorsIDList)) OR (@FilterAuthorOrAuthors = 0))
				AND ((@HideUnlocalizedItems = 1 AND ncl.ArticleID IS NOT NULL AND ncl.LocaleCode = @LocaleCode) OR (@HideUnlocalizedItems = 0))
			GROUP BY na.ArticleID, DATEADD(hh, @DateTimeOffset, na.[PublishDate])
		) as final
		GROUP BY MONTH(PublishDate), YEAR(PublishDate) ORDER BY Year DESC, Month DESC;
	END
	ELSE IF @FilterBySocialGroup = 1
	BEGIN
		SELECT MONTH(final.PublishDate) AS Month, YEAR(final.PublishDate) AS Year, COUNT(*) AS Count FROM (
			SELECT na.[ArticleID],DATEADD(hh, @DateTimeOffset, na.[PublishDate]) as [PublishDate] FROM {databaseOwner}[{objectQualifier}EasyDNNNews] as na
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] as cat ON na.ArticleID = cat.ArticleID
				INNER JOIN @UserViewCategoriesWithFilter as uvcwf ON uvcwf.CategoryID = cat.CategoryID
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = na.ArticleID
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialGroupItems] AS sgi ON sgi.ArticleID = na.ArticleID AND sgi.RoleID = @FilterByDNNGroupID
				INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserID, @FilterByDNNGroupID) as t ON t.seckey = nss.SecurityKey
				LEFT OUTER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsContentLocalization] AS ncl ON ncl.ArticleID = na.ArticleID
			WHERE na.PortalID=@PortalID
				AND ((@AdminOrSuperUser = 1) OR ((@UserCanApprove = 1 OR na.Approved=1) AND (na.Active=1 OR na.UserID=@UserID)))
				AND na.HasPermissions = 0
				AND DATEADD(hh, @DateTimeOffset, na.PublishDate) <= @CurrentDate
				AND DATEADD(hh, @DateTimeOffset, na.ExpireDate) >= @CurrentDate
				AND ((@HideUnlocalizedItems = 1 AND ncl.ArticleID IS NOT NULL AND ncl.LocaleCode = @LocaleCode) OR (@HideUnlocalizedItems = 0))
			GROUP BY na.ArticleID, DATEADD(hh, @DateTimeOffset, na.[PublishDate])
			UNION ALL
			SELECT na.[ArticleID], DATEADD(hh, @DateTimeOffset, na.[PublishDate]) as [PublishDate] from {databaseOwner}[{objectQualifier}EasyDNNNews] as na
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsArticleUserPermissions] as aup ON na.ArticleID = aup.ArticleID
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] as cat ON na.ArticleID = cat.ArticleID
				INNER JOIN @FiltredByCategories AS fbc ON fbc.CategoryID = cat.CategoryID
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = na.ArticleID
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialGroupItems] AS sgi ON sgi.ArticleID = na.ArticleID AND sgi.RoleID = @FilterByDNNGroupID
				INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserID, @FilterByDNNGroupID) as t ON t.seckey = nss.SecurityKey
				LEFT OUTER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsContentLocalization] AS ncl ON ncl.ArticleID = na.ArticleID
			WHERE na.PortalID=@PortalID
				AND ((@AdminOrSuperUser = 1) OR (((@UserID = -1 AND aup.UserID IS NULL) OR (aup.UserID = @UserID))
					AND aup.Show = 1 AND ((@UserCanApprove = 1) OR (na.Approved=1)) AND (na.Active=1 OR na.UserID=@UserID)
					))
				AND na.HasPermissions = 1
				AND DATEADD(hh, @DateTimeOffset, na.PublishDate) <= @CurrentDate
				AND DATEADD(hh, @DateTimeOffset, na.ExpireDate) >= @CurrentDate
				AND ((@HideUnlocalizedItems = 1 AND ncl.ArticleID IS NOT NULL AND ncl.LocaleCode = @LocaleCode) OR (@HideUnlocalizedItems = 0))
			GROUP BY na.ArticleID, DATEADD(hh, @DateTimeOffset, na.[PublishDate])
			UNION
			SELECT na.[ArticleID], DATEADD(hh, @DateTimeOffset, na.[PublishDate]) as [PublishDate] from {databaseOwner}[{objectQualifier}EasyDNNNews] as na
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsArticleRolePermissions] as arp ON na.ArticleID = arp.ArticleID
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] as cat ON na.ArticleID = cat.ArticleID
				INNER JOIN @FiltredByCategories AS fbc ON fbc.CategoryID = cat.CategoryID
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = na.ArticleID
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialGroupItems] AS sgi ON sgi.ArticleID = na.ArticleID AND sgi.RoleID = @FilterByDNNGroupID
				INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserID, @FilterByDNNGroupID) as t ON t.seckey = nss.SecurityKey
				LEFT OUTER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsContentLocalization] AS ncl ON ncl.ArticleID = na.ArticleID
			WHERE na.PortalID=@PortalID
				AND ((@AdminOrSuperUser = 1) OR (((@UserCanApprove = 1) OR (na.Approved=1))
					AND (na.Active=1 OR na.UserID=@UserID) AND arp.Show = 1 AND arp.RoleID IN (SELECT [RoleID] FROM @UserInRoles)
					))
				AND na.HasPermissions = 1
				AND DATEADD(hh, @DateTimeOffset, na.PublishDate) <= @CurrentDate
				AND DATEADD(hh, @DateTimeOffset, na.ExpireDate) >= @CurrentDate
				AND ((@HideUnlocalizedItems = 1 AND ncl.ArticleID IS NOT NULL AND ncl.LocaleCode = @LocaleCode) OR (@HideUnlocalizedItems = 0))
			GROUP BY na.ArticleID, DATEADD(hh, @DateTimeOffset, na.[PublishDate])
		) as final
		GROUP BY MONTH(PublishDate), YEAR(PublishDate) ORDER BY Year DESC, Month DESC;
	END
	ELSE IF @FilterByDNNUserID <> 0
	BEGIN
		SELECT MONTH(final.PublishDate) AS Month, YEAR(final.PublishDate) AS Year, COUNT(*) AS Count FROM (
			SELECT na.[ArticleID],DATEADD(hh, @DateTimeOffset, na.[PublishDate]) as [PublishDate] FROM {databaseOwner}[{objectQualifier}EasyDNNNews] as na
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] as cat ON na.ArticleID = cat.ArticleID
				INNER JOIN @UserViewCategoriesWithFilter as uvcwf ON uvcwf.CategoryID = cat.CategoryID
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = na.ArticleID
				INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserID, @FilterByDNNGroupID) as t ON t.seckey = nss.SecurityKey
				LEFT OUTER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsContentLocalization] AS ncl ON ncl.ArticleID = na.ArticleID
			WHERE na.PortalID=@PortalID
				AND ((@AdminOrSuperUser = 1) OR ((@UserCanApprove = 1 OR na.Approved=1) AND (na.Active=1 OR na.UserID=@UserID)))
				AND na.HasPermissions = 0
				AND DATEADD(hh, @DateTimeOffset, na.PublishDate) <= @CurrentDate
				AND DATEADD(hh, @DateTimeOffset, na.ExpireDate) >= @CurrentDate
				AND na.UserID = @FilterByDNNUserID
				AND ((@HideUnlocalizedItems = 1 AND ncl.ArticleID IS NOT NULL AND ncl.LocaleCode = @LocaleCode) OR (@HideUnlocalizedItems = 0))
			GROUP BY na.ArticleID, DATEADD(hh, @DateTimeOffset, na.[PublishDate])
			UNION ALL
			SELECT na.[ArticleID], DATEADD(hh, @DateTimeOffset, na.[PublishDate]) as [PublishDate] from {databaseOwner}[{objectQualifier}EasyDNNNews] as na
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsArticleUserPermissions] as aup ON na.ArticleID = aup.ArticleID
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] as cat ON na.ArticleID = cat.ArticleID
				INNER JOIN @FiltredByCategories AS fbc ON fbc.CategoryID = cat.CategoryID
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = na.ArticleID
				INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserID, @FilterByDNNGroupID) as t ON t.seckey = nss.SecurityKey
				LEFT OUTER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsContentLocalization] AS ncl ON ncl.ArticleID = na.ArticleID
			WHERE na.PortalID=@PortalID
				AND ((@AdminOrSuperUser = 1) OR (((@UserID = -1 AND aup.UserID IS NULL) OR (aup.UserID = @UserID))
					AND aup.Show = 1 AND ((@UserCanApprove = 1) OR (na.Approved=1)) AND (na.Active=1 OR na.UserID=@UserID)
					))
				AND na.HasPermissions = 1
				AND DATEADD(hh, @DateTimeOffset, na.PublishDate) <= @CurrentDate
				AND DATEADD(hh, @DateTimeOffset, na.ExpireDate) >= @CurrentDate
				AND na.UserID = @FilterByDNNUserID
				AND ((@HideUnlocalizedItems = 1 AND ncl.ArticleID IS NOT NULL AND ncl.LocaleCode = @LocaleCode) OR (@HideUnlocalizedItems = 0))
			GROUP BY na.ArticleID, DATEADD(hh, @DateTimeOffset, na.[PublishDate])
			UNION
			SELECT na.[ArticleID], DATEADD(hh, @DateTimeOffset, na.[PublishDate]) as [PublishDate] from {databaseOwner}[{objectQualifier}EasyDNNNews] as na
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsArticleRolePermissions] as arp ON na.ArticleID = arp.ArticleID
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] as cat ON na.ArticleID = cat.ArticleID
				INNER JOIN @FiltredByCategories AS fbc ON fbc.CategoryID = cat.CategoryID
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = na.ArticleID
				INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserID, @FilterByDNNGroupID) as t ON t.seckey = nss.SecurityKey
				LEFT OUTER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsContentLocalization] AS ncl ON ncl.ArticleID = na.ArticleID
			WHERE na.PortalID=@PortalID
				AND ((@AdminOrSuperUser = 1) OR (((@UserCanApprove = 1) OR (na.Approved=1))
					AND (na.Active=1 OR na.UserID=@UserID) AND arp.Show = 1 AND arp.RoleID IN (SELECT [RoleID] FROM @UserInRoles)
					))
				AND na.HasPermissions = 1
				AND DATEADD(hh, @DateTimeOffset, na.PublishDate) <= @CurrentDate
				AND DATEADD(hh, @DateTimeOffset, na.ExpireDate) >= @CurrentDate
				AND na.UserID = @FilterByDNNUserID
				AND ((@HideUnlocalizedItems = 1 AND ncl.ArticleID IS NOT NULL AND ncl.LocaleCode = @LocaleCode) OR (@HideUnlocalizedItems = 0))
			GROUP BY na.ArticleID, DATEADD(hh, @DateTimeOffset, na.[PublishDate])
		) as final
		GROUP BY MONTH(PublishDate), YEAR(PublishDate) ORDER BY Year DESC, Month DESC;
	END
END
' 
END
GO
/****** Object:  StoredProcedure {databaseOwner}[{objectQualifier}EasyDNNNewsGetItemByPermission]    Script Date: 06/24/2013 16:39:06 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'{databaseOwner}[{objectQualifier}EasyDNNNewsGetItemByPermission]') AND type in (N'P', N'PC'))
BEGIN
EXEC dbo.sp_executesql @statement = N'CREATE PROCEDURE {databaseOwner}[{objectQualifier}EasyDNNNewsGetItemByPermission]
	@ViewType tinyint = 0, -- 0 - View, 1 - Editor
	@PortalID int, -- current Portal
	@ModuleID int, -- current Module, portal sharing isto sadrzi dobre kategorije, auto add i setingsi su snimljeni kod tog modula
	@UserID int,
	@CurrentDate Datetime, -- = GetUTCDate,
	@Perm_ViewAllCategores bit = 0, -- permission settings View all categories
	@Perm_EditAllCategores bit = 0, -- permission settings Edit all categories
	@AdminOrSuperUser bit = 0,
	@EditOnlyAsOwner bit = 0, -- news settings
	@UserCanApprove bit = 0, -- news settings
	@LocaleCode nvarchar(20) = '''',
	@PermissionSettingsSource bit = 1, -- 1 portal, 0 module
	@ArticleID int
AS
SET NOCOUNT ON;
DECLARE @EditPermission tinyint;
SET @EditPermission = 0;
DECLARE @UserInRoles TABLE (RoleID int NOT NULL PRIMARY KEY);
INSERT INTO @UserInRoles SELECT DISTINCT ur.[RoleID] FROM {databaseOwner}[{objectQualifier}UserRoles] AS ur INNER JOIN {databaseOwner}[{objectQualifier}Roles] AS r ON ur.RoleID = r.RoleID WHERE ur.UserID = @UserID AND r.PortalID = @PortalID AND (ur.ExpiryDate IS NULL OR ur.ExpiryDate > GETUTCDATE()) AND (ur.EffectiveDate IS NULL OR ur.EffectiveDate < GETUTCDATE());

DECLARE @UserViewCategories TABLE (CategoryID int NOT NULL PRIMARY KEY); -- all categories which user can see based on permissions
DECLARE @UserEditCategories TABLE (CategoryID int NOT NULL PRIMARY KEY); -- all categories which user can edit based on permissions

IF @AdminOrSuperUser = 1 OR @Perm_ViewAllCategores = 1
BEGIN
	INSERT INTO @UserViewCategories SELECT [CategoryID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryList] WHERE PortalID = @PortalID;
END
ELSE IF @UserID = -1
BEGIN	
	IF @PermissionSettingsSource = 1 -- by portal
	BEGIN
		INSERT INTO @UserViewCategories
		SELECT rpsc.[CategoryID] FROM  {databaseOwner}[{objectQualifier}EasyDNNNewsRolePremissionsShowCategories] as rpsc 
		INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsRolePremissionSettings] as rps ON rps.PremissionSettingsID = rpsc.PremissionSettingsID
		WHERE rps.PortalID = @PortalID  AND rps.ModuleID IS NULL AND rps.RoleID IS NULL;
	END
	ELSE -- by module
	BEGIN
	INSERT INTO @UserViewCategories
		SELECT rpsc.[CategoryID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsRolePremissionsShowCategories] as rpsc
		INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsRolePremissionSettings] as rps ON rps.PremissionSettingsID = rpsc.PremissionSettingsID
		WHERE rps.PortalID = @PortalID AND rps.ModuleID = @ModuleID AND rps.RoleID IS NULL;
	END
END
ELSE -- registrirani korisnik
BEGIN
	IF @PermissionSettingsSource = 1 -- by portal
	BEGIN
		INSERT INTO @UserViewCategories
		SELECT rpsc.[CategoryID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsRolePremissionsShowCategories] as rpsc
		INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsRolePremissionSettings] as rps ON rps.PremissionSettingsID = rpsc.PremissionSettingsID
		INNER JOIN @UserInRoles as uir ON rps.RoleID = uir.RoleID
		WHERE rps.PortalID = @PortalID AND rps.ModuleID IS NULL GROUP BY rpsc.[CategoryID]
		UNION
		SELECT upsc.[CategoryID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsUserPremissionsShowCategories] as upsc
		INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsUserPremissionSettings] as ups ON ups.PremissionSettingsID = upsc.PremissionSettingsID
		WHERE ups.UserID = @UserID AND ups.PortalID = @PortalID AND ups.ModuleID IS NULL GROUP BY upsc.[CategoryID];
	END
	ELSE -- by module
	BEGIN
		INSERT INTO @UserViewCategories
		SELECT rpsc.[CategoryID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsRolePremissionsShowCategories] as rpsc
		INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsRolePremissionSettings] as rps ON rps.PremissionSettingsID = rpsc.PremissionSettingsID
		INNER JOIN @UserInRoles as uir ON rps.RoleID = uir.RoleID
		WHERE rps.PortalID = @PortalID AND rps.ModuleID = @ModuleID GROUP BY rpsc.[CategoryID]
		UNION
		SELECT upsc.[CategoryID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsUserPremissionsShowCategories] as upsc
		INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsUserPremissionSettings] as ups ON ups.PremissionSettingsID = upsc.PremissionSettingsID
		WHERE ups.UserID = @UserID AND ups.PortalID = @PortalID AND ups.ModuleID = @ModuleID GROUP BY upsc.[CategoryID];
	END
END



DECLARE @FilterBySocialGroup bit;
SET @FilterBySocialGroup = 0;
DECLARE @FilterAuthorOrAuthors bit;
SET @FilterAuthorOrAuthors = 0;

-- kategorije sa edit pravima
IF @AdminOrSuperUser = 1 OR @Perm_EditAllCategores = 1
BEGIN	
	INSERT INTO @UserEditCategories SELECT CategoryID FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryList] WHERE PortalID = @PortalID;
	SET @EditPermission = 1;
END
ELSE
BEGIN
	IF @UserID = -1
	BEGIN
		IF @PermissionSettingsSource = 1 -- by portal
		BEGIN
			INSERT INTO @UserEditCategories
			SELECT rpatc.[CategoryID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsRolePremissionsAddToCategories] as rpatc
			INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsRolePremissionSettings] as rps ON rps.PremissionSettingsID = rpatc.PremissionSettingsID
			WHERE rps.PortalID = @PortalID AND rps.ModuleID IS NULL AND rps.RoleID IS NULL;
		END
		ELSE -- by module
		BEGIN
		INSERT INTO @UserEditCategories
			SELECT rpatc.[CategoryID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsRolePremissionsAddToCategories] as rpatc
			INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsRolePremissionSettings] as rps ON rps.PremissionSettingsID = rpatc.PremissionSettingsID
			WHERE rps.RoleID IS NULL AND rps.PortalID = @PortalID AND rps.ModuleID = @ModuleID;
		END
	END
	ELSE -- registrirani korisnik
	BEGIN
		IF @PermissionSettingsSource = 1 -- by portal
		BEGIN
			INSERT INTO @UserEditCategories
			SELECT rpatc.[CategoryID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsRolePremissionsAddToCategories] as rpatc
			INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsRolePremissionSettings] as rps ON rps.PremissionSettingsID = rpatc.PremissionSettingsID
			INNER JOIN @UserInRoles as uir ON rps.RoleID = uir.RoleID
			WHERE rps.PortalID = @PortalID AND rps.ModuleID IS NULL GROUP BY rpatc.[CategoryID]
			UNION
			SELECT upatc.[CategoryID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsUserPremissionsAddToCategories] as upatc
			INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsUserPremissionSettings] as ups ON ups.PremissionSettingsID = upatc.PremissionSettingsID
			WHERE ups.UserID = @UserID AND ups.PortalID = @PortalID AND ups.ModuleID IS NULL GROUP BY upatc.[CategoryID];
		END
		ELSE -- by module
		BEGIN
			INSERT INTO @UserEditCategories
			SELECT rpatc.[CategoryID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsRolePremissionsAddToCategories] as rpatc
			INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsRolePremissionSettings] as rps ON rps.PremissionSettingsID = rpatc.PremissionSettingsID
			INNER JOIN @UserInRoles as uir ON rps.RoleID = uir.RoleID
			WHERE rps.PortalID = @PortalID AND rps.ModuleID = @ModuleID GROUP BY rpatc.[CategoryID]
			UNION
			SELECT upatc.[CategoryID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsUserPremissionsAddToCategories] as upatc
			INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsUserPremissionSettings] as ups ON ups.PremissionSettingsID = upatc.PremissionSettingsID
			WHERE ups.UserID = @UserID AND ups.PortalID = @PortalID AND ups.ModuleID = @ModuleID GROUP BY upatc.[CategoryID];
		END	
	END
	IF EXISTS(SELECT * FROM @UserEditCategories) BEGIN SET @EditPermission = 2; END
END


DECLARE @CanView bit;
SET @CanView = 0;

IF EXISTS (SELECT n.ArticleID FROM {databaseOwner}[{objectQualifier}EasyDNNNews] as n
	INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] as c ON n.ArticleID = c.ArticleID
	INNER JOIN @UserViewCategories as uvc ON uvc.CategoryID = c.CategoryID
	WHERE n.ArticleID=@ArticleID
		AND n.HasPermissions = 0
		AND ((@EditPermission = 1) -- ako si superuser ili admin
		 OR (n.Approved=1 AND n.Active=1) -- ako je izdan i odobrrn
		 OR ((@UserCanApprove = 1 OR n.Approved=1) AND (n.Active=1 OR n.UserID=@UserID)) -- ako imas pravo na approve i item je published
		 OR (n.Active=0 AND n.UserID=@UserID)) -- item nije published moze ga vidjeti samo autor
		AND ((@AdminOrSuperUser = 1) OR (n.UserID = @UserID) OR ((n.PublishDate<=@CurrentDate) AND (n.ExpireDate>=@CurrentDate)))
		)
BEGIN
	SET @CanView = 1;
END
ELSE
BEGIN
	IF @UserID = -1 -- neregistirani korisnik ne moze biti u roli
	BEGIN
		IF EXISTS (SELECT n.ArticleID FROM {databaseOwner}[{objectQualifier}EasyDNNNews] as n 
			INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsArticleUserPermissions] as aup ON n.ArticleID = aup.ArticleID
			WHERE aup.ArticleID = @ArticleID AND aup.UserID IS NULL AND n.HasPermissions = 1
				AND ((@UserCanApprove = 1) OR (n.Approved=1))
				AND (n.Active=1 OR n.UserID=@UserID)
				AND ((@AdminOrSuperUser = 1) OR (n.UserID = @UserID) OR ((n.PublishDate<=@CurrentDate) AND (n.ExpireDate>=@CurrentDate))))
		BEGIN
			SET @CanView = 1;
		END
	END
	ELSE
	BEGIN
		IF EXISTS (SELECT n.ArticleID FROM {databaseOwner}[{objectQualifier}EasyDNNNews] as n 
			INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsArticleUserPermissions] as aup ON n.ArticleID = aup.ArticleID
			WHERE aup.ArticleID = @ArticleID AND n.HasPermissions = 1
				AND ((@EditPermission = 1) OR (
					aup.UserID = @UserID
					AND aup.Show = 1 
					AND ((@UserCanApprove = 1) OR (n.Approved=1))
					AND (n.Active=1 OR n.UserID=@UserID)
				))
				AND ((@AdminOrSuperUser = 1) OR (n.UserID = @UserID) OR ((n.PublishDate<=@CurrentDate) AND (n.ExpireDate>=@CurrentDate))))
		BEGIN
			SET @CanView = 1;
		END
		ELSE
		BEGIN 
			IF EXISTS (SELECT n.ArticleID FROM {databaseOwner}[{objectQualifier}EasyDNNNews] as n 
			INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsArticleRolePermissions] as arp ON n.ArticleID = arp.ArticleID
				WHERE arp.ArticleID = @ArticleID AND n.HasPermissions = 1
					AND ((@EditPermission = 1) OR (
						((@UserCanApprove = 1) OR (n.Approved=1))
						AND (n.Active=1 OR n.UserID=@UserID)
						AND arp.Show = 1
						AND arp.RoleID IN (SELECT [RoleID] FROM @UserInRoles)
					))
				AND ((@AdminOrSuperUser = 1) OR (n.UserID = @UserID) OR ((n.PublishDate<=@CurrentDate) AND (n.ExpireDate>=@CurrentDate))))
			BEGIN
				SET @CanView = 1;
			END
		END
	 END
END
-- ovo se odnosi za lokalizaciju tablice kategorija u posebnu tablicu koja se direktno spaja
DECLARE @localize bit;
SET @localize = 0;
DECLARE @LocalizedCategories TABLE (ID int NOT NULL PRIMARY KEY, Name nvarchar(200), Position int, CategoryURL nvarchar(1500));
IF @LocaleCode <> ''''
BEGIN
	IF EXISTS (SELECT ArticleID FROM {databaseOwner}[{objectQualifier}EasyDNNNewsContentLocalization] WHERE ArticleID = @ArticleID AND LocaleCode = @LocaleCode)
	BEGIN
		SET @localize = 1;
	END;

	WITH LocCategories(ID, Name, Position, CategoryURL) AS (
			SELECT Cat.CategoryID AS ID, cl.Title AS Name, Cat.Position, Cat.CategoryURL FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryList] AS Cat INNER JOIN @UserViewCategories AS uvc ON uvc.CategoryID = Cat.CategoryID INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryLocalization] AS cl ON uvc.CategoryID = cl.CategoryID WHERE Cat.PortalID = @PortalID AND cl.LocaleCode = @LocaleCode
		),
		NotLocCategories(ID, Name, Position, CategoryURL) AS (
			SELECT Cat.CategoryID AS ID, Cat.CategoryName AS Name, Cat.Position, Cat.CategoryURL FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryList] AS Cat INNER JOIN @UserViewCategories AS uvc ON uvc.CategoryID = Cat.CategoryID WHERE Cat.PortalID = @PortalID AND Cat.CategoryID NOT IN (SELECT ID FROM LocCategories)
		)
		INSERT INTO @LocalizedCategories SELECT ID, Name, Position, CategoryURL FROM (SELECT ID, Name, Position, CategoryURL FROM LocCategories UNION ALL SELECT ID, Name, Position, CategoryURL FROM NotLocCategories) AS ArticleCategories
	END
	
ELSE
BEGIN
	INSERT INTO @LocalizedCategories SELECT Cat.CategoryID AS ID, Cat.CategoryName AS Name, Cat.Position, Cat.CategoryURL FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryList] AS Cat INNER JOIN @UserViewCategories AS uvc ON uvc.CategoryID = cat.CategoryID WHERE Cat.PortalID = @PortalID
END
--
IF @CanView = 1
BEGIN
IF @localize = 1
BEGIN
SELECT *,
	CASE @EditPermission 
		WHEN 0 THEN 0
		WHEN 1 THEN 1
		WHEN 2 THEN
		CASE @EditOnlyAsOwner
			WHEN 0 THEN			
				CASE WHEN EXISTS(SELECT CategoryID FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] as c WHERE c.ArticleID = @ArticleID AND c.CategoryID IN (SELECT CategoryID FROM @UserEditCategories))
					THEN 1
					ELSE
						CASE WHEN EXISTS(SELECT [ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsArticleRolePermissions] as arp WHERE arp.ArticleID = @ArticleID AND arp.Edit = 1 AND arp.RoleID IN(SELECT [RoleID] FROM @UserInRoles))
						THEN 1
						ELSE
							CASE WHEN EXISTS (SELECT [ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsArticleUserPermissions] AS aup WHERE aup.ArticleID = @ArticleID AND aup.Edit = 1 AND aup.UserID = @UserID)
								THEN 1
								ELSE 0
							END
						END
				END  			
			WHEN 1 THEN
				CASE WHEN EXISTS(SELECT CategoryID FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] as c WHERE Article.UserID = @UserID AND c.ArticleID = @ArticleID AND c.CategoryID IN (SELECT CategoryID FROM @UserEditCategories))
					THEN 1
					ELSE
						CASE WHEN EXISTS(SELECT [ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsArticleRolePermissions] as arp WHERE arp.ArticleID = @ArticleID AND arp.Edit = 1 AND arp.RoleID IN(SELECT [RoleID] FROM @UserInRoles))
						THEN 1
						ELSE
							CASE WHEN EXISTS (SELECT [ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsArticleUserPermissions] AS aup WHERE aup.ArticleID = @ArticleID AND aup.Edit = 1 AND aup.UserID = @UserID)
								THEN 1
								ELSE 0
							END
						END 
				END
		END 
	END AS ''CanEdit'',
	(SELECT cat.ID, cat.Name, cat.CategoryURL FROM @LocalizedCategories AS Cat INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS c ON c.CategoryID = Cat.ID WHERE c.ArticleID = @ArticleID ORDER BY Position FOR XML AUTO, ROOT(''root'')) AS ''CatToShow'',
	 CASE Article.Active
		WHEN 1 THEN 0
		WHEN 0 THEN 1
	 END AS  ''Published'',
	 CASE @UserCanApprove
		WHEN 0 THEN 0
		WHEN 1 THEN
			CASE Article.Approved
			 WHEN 1 THEN 0
			 WHEN 0 THEN
				 CASE Article.Active
					WHEN 1 THEN 1
					WHEN 0 THEN 0
				END
			END
	 END AS ''Approve''
	 FROM (
	  SELECT ln.[ArticleID],ln.[PortalID],ln.[UserID],fla.[Title],fla.[SubTitle],fla.[Summary],fla.[Article],ln.[ArticleImage],ln.[DateAdded],ln.[LastModified],ln.[PublishDate]
		  ,ln.[ExpireDate],ln.[Approved],ln.[Featured],ln.[NumberOfViews],ln.[RatingValue],ln.[RatingCount],ln.[AllowComments],ln.[Active]
		  ,fla.[clTitleLink] AS TitleLink,ln.[DetailType],fla.[DetailTypeData],ln.[DetailsTemplate],ln.[DetailsTheme],ln.[GalleryPosition],ln.[GalleryDisplayType]
		  ,ln.[ShowMainImage],ln.[ShowMainImageFront],ln.[CommentsTheme],ln.[ArticleImageFolder],ln.[NumberOfComments]
		  ,ln.[ArticleImageSet],fla.[MetaDecription],fla.[MetaKeywords],ln.[DisplayStyle],ln.[DetailTarget]
		  ,ln.[ArticleFromRSS],ln.[HasPermissions],ln.[EventArticle],ln.[DetailMediaType],ln.[DetailMediaData],ln.[AuthorAliasName],ln.[ShowGallery],ln.[ArticleGalleryID],fla.[MainImageTitle],fla.[MainImageDescription]
		FROM {databaseOwner}[{objectQualifier}EasyDNNNews] as ln INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsContentLocalization] as fla ON fla.ArticleID = ln.ArticleID AND fla.LocaleCode = @LocaleCode WHERE ln.ArticleID = @ArticleID
	 ) AS Article;
END
ELSE
BEGIN
SELECT *,
	CASE @EditPermission 
		WHEN 0 THEN 0
		WHEN 1 THEN 1
		WHEN 2 THEN
		CASE @EditOnlyAsOwner
			WHEN 0 THEN			
				CASE WHEN EXISTS(SELECT CategoryID FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] as c WHERE c.ArticleID = @ArticleID AND c.CategoryID IN (SELECT CategoryID FROM @UserEditCategories))
					THEN 1
					ELSE
						CASE WHEN EXISTS(SELECT [ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsArticleRolePermissions] as arp WHERE arp.ArticleID = @ArticleID AND arp.Edit = 1 AND arp.RoleID IN(SELECT [RoleID] FROM @UserInRoles))
						THEN 1
						ELSE
							CASE WHEN EXISTS (SELECT [ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsArticleUserPermissions] AS aup WHERE aup.ArticleID = @ArticleID AND aup.Edit = 1 AND aup.UserID = @UserID)
								THEN 1
								ELSE 0
							END
						END
				END  			
			WHEN 1 THEN
				CASE WHEN EXISTS(SELECT CategoryID FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] as c WHERE Article.UserID = @UserID AND c.ArticleID = @ArticleID AND c.CategoryID IN (SELECT CategoryID FROM @UserEditCategories))
					THEN 1
					ELSE
						CASE WHEN EXISTS(SELECT [ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsArticleRolePermissions] as arp WHERE arp.ArticleID = @ArticleID AND arp.Edit = 1 AND arp.RoleID IN(SELECT [RoleID] FROM @UserInRoles))
						THEN 1
						ELSE
							CASE WHEN EXISTS (SELECT [ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsArticleUserPermissions] AS aup WHERE aup.ArticleID = @ArticleID AND aup.Edit = 1 AND aup.UserID = @UserID)
								THEN 1
								ELSE 0
							END
						END 
				END
		END 
	END AS ''CanEdit'',
	(SELECT cat.ID, cat.Name, cat.CategoryURL FROM @LocalizedCategories AS Cat INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS c ON c.CategoryID = Cat.ID WHERE c.ArticleID = @ArticleID ORDER BY Position FOR XML AUTO, ROOT(''root'')) AS ''CatToShow'',
	 CASE Article.Active
		WHEN 1 THEN 0
		WHEN 0 THEN 1
	 END AS  ''Published'',
	 CASE @UserCanApprove
		WHEN 0 THEN 0
		WHEN 1 THEN
			CASE Article.Approved
			 WHEN 1 THEN 0
			 WHEN 0 THEN
				 CASE Article.Active
					WHEN 1 THEN 1
					WHEN 0 THEN 0
				END
			END
	 END AS ''Approve''
	 FROM (
	  SELECT n.[ArticleID],n.[PortalID],n.[UserID],n.[Title],n.[SubTitle],n.[Summary],n.[Article],n.[ArticleImage],n.[DateAdded],n.[LastModified],n.[PublishDate]
		  ,n.[ExpireDate],n.[Approved],n.[Featured],n.[NumberOfViews],n.[RatingValue],n.[RatingCount],n.[AllowComments],n.[Active]
		  ,n.TitleLink,n.[DetailType],n.[DetailTypeData],n.[DetailsTemplate],n.[DetailsTheme],n.[GalleryPosition],n.[GalleryDisplayType]
		  ,n.[ShowMainImage],n.[ShowMainImageFront],n.[CommentsTheme],n.[ArticleImageFolder],n.[NumberOfComments]
		  ,n.[ArticleImageSet],n.[MetaDecription],n.[MetaKeywords],n.[DisplayStyle],n.[DetailTarget]
		  ,n.[ArticleFromRSS],n.[HasPermissions],n.[EventArticle],n.[DetailMediaType],n.[DetailMediaData],n.[AuthorAliasName],n.[ShowGallery],n.[ArticleGalleryID],n.[MainImageTitle],n.[MainImageDescription]
		 FROM {databaseOwner}[{objectQualifier}EasyDNNNews] as n WHERE ArticleID = @ArticleID) AS Article;	 
END
END' 
END
GO
/****** Object:  StoredProcedure {databaseOwner}[{objectQualifier}EasyDNNNewsAddEditCategoriesByPermissions]    Script Date: 06/24/2013 16:39:06 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'{databaseOwner}[{objectQualifier}EasyDNNNewsAddEditCategoriesByPermissions]') AND type in (N'P', N'PC'))
BEGIN
EXEC dbo.sp_executesql @statement = N'CREATE PROCEDURE {databaseOwner}[{objectQualifier}EasyDNNNewsAddEditCategoriesByPermissions]
    @UserID int,
    @PortalID int,
    @ModuleID int
AS 
SET NOCOUNT ON;
DECLARE @CheckModuleID bit;
IF @ModuleID IS NULL
BEGIN
	SET @CheckModuleID = 1;
END
ELSE
BEGIN
	SET @CheckModuleID = 0;
END
IF @UserID = -1
BEGIN
	SELECT DISTINCT cat.CategoryID, cat.CategoryName
	 FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryList] as cat INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsRolePremissionsAddToCategories] AS rpac ON cat.CategoryID = rpac.CategoryID
	  INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsRolePremissionSettings] AS rps ON rpac.PremissionSettingsID = rps.PremissionSettingsID
		WHERE rps.RoleID IS NULL AND ((@CheckModuleID = 1 AND (rps.ModuleID IS NULL)) OR (@CheckModuleID = 0 AND (rps.ModuleID = @ModuleID))) AND rps.PortalID = @PortalID
END
ELSE
BEGIN
	SELECT DISTINCT cat.CategoryID, cat.CategoryName
	 FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryList] as cat INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsRolePremissionsAddToCategories] AS rpac ON cat.CategoryID = rpac.CategoryID
	  INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsRolePremissionSettings] AS rps ON rpac.PremissionSettingsID = rps.PremissionSettingsID
	   INNER JOIN {databaseOwner}[{objectQualifier}UserRoles] AS ur ON ur.RoleID = rps.RoleID
		WHERE ur.UserID = @UserID AND (ur.ExpiryDate IS NULL OR ur.ExpiryDate > GETUTCDATE()) AND (ur.EffectiveDate IS NULL OR ur.EffectiveDate < GETUTCDATE()) AND ((@CheckModuleID = 1 AND (rps.ModuleID IS NULL)) OR (@CheckModuleID = 0 AND (rps.ModuleID = @ModuleID))) AND rps.PortalID = @PortalID
	UNION
	SELECT cat.CategoryID, cat.CategoryName
	 FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryList] as cat INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsUserPremissionsAddToCategories] AS upac ON cat.CategoryID = upac.CategoryID
	  INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsUserPremissionSettings] AS ups ON upac.PremissionSettingsID = ups.PremissionSettingsID
	   WHERE ups.UserID = @UserID AND ((@CheckModuleID = 1 AND (ups.ModuleID IS NULL)) OR (@CheckModuleID = 0 AND (ups.ModuleID = @ModuleID))) AND ups.PortalID = @PortalID   
END' 
END
