<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="btnCloseResource1.Text" xml:space="preserve">
    <value>Close</value>
  </data>
  <data name="btnSaveSettingsResource1.Text" xml:space="preserve">
    <value>Save settings</value>
  </data>
  <data name="lbDocMoveDownResource1.Text" xml:space="preserve">
    <value>Down</value>
  </data>
  <data name="lbDocMoveUpResource1.Text" xml:space="preserve">
    <value>Up</value>
  </data>
  <data name="lblArticlehistoryResource1.Text" xml:space="preserve">
    <value>Article history</value>
  </data>
  <data name="lblIncludeJqueryResource1.Text" xml:space="preserve">
    <value>Include jQuery:</value>
  </data>
  <data name="lbljQueryConfigResource1.Text" xml:space="preserve">
    <value>Jquery Configuration</value>
  </data>
  <data name="lbljQueryNoConflictResource1.Text" xml:space="preserve">
    <value>Run jQuery in no confilct mode:</value>
  </data>
  <data name="lblJqueryWarning0Resource1.Text" xml:space="preserve">
    <value>Please do NOT turn on this option if you are using DotNetNuke version 6 and above.</value>
  </data>
  <data name="lblJqueryWarningResource1.Text" xml:space="preserve">
    <value>Please do NOT turn on this option if you are using DotNetNuke version 6 and above.</value>
  </data>
  <data name="lblPageTitleConfigTitleResource1.Text" xml:space="preserve">
    <value>Page title configuration</value>
  </data>
  <data name="rfvArticleHistoryVersionResource1.ErrorMessage" xml:space="preserve">
    <value>This filed is required.</value>
  </data>
  <data name="Item.HeaderText" xml:space="preserve">
    <value>Item</value>
  </data>
  <data name="Visible.HeaderText" xml:space="preserve">
    <value>Visible</value>
  </data>
  <data name="Position.HeaderText" xml:space="preserve">
    <value>Position</value>
  </data>
  <data name="GeneralSettingsTitle.Text" xml:space="preserve">
    <value>General Settings</value>
  </data>
  <data name="lblArticleHistoryArchive.HelpText" xml:space="preserve">
    <value>Set how many article history versions should be in archive:</value>
  </data>
  <data name="lblArticleHistoryArchive.Text" xml:space="preserve">
    <value>Number of article history versions:</value>
  </data>
  <data name="lblAuthorList.HelpText" xml:space="preserve">
    <value>Page title preview when listing articles by author:</value>
  </data>
  <data name="lblAuthorList.Text" xml:space="preserve">
    <value>Page title preview when listing articles by author:</value>
  </data>
  <data name="lblCatList.HelpText" xml:space="preserve">
    <value>Page title preview when listing categories:</value>
  </data>
  <data name="lblCatList.Text" xml:space="preserve">
    <value>Page title preview when listing categories:</value>
  </data>
  <data name="lblItemSeparator.HelpText" xml:space="preserve">
    <value>Title item separator:</value>
  </data>
  <data name="lblItemSeparator.Text" xml:space="preserve">
    <value>Title item separator:</value>
  </data>
  <data name="lblPageTitleConfig.HelpText" xml:space="preserve">
    <value>Here you can configure the article page title. Select the items which you want in the title and set their position. Examples below will show you how the title will look like.</value>
  </data>
  <data name="lblPageTitleConfig.Text" xml:space="preserve">
    <value>Here you can configure the article page title. Select the items which you want in the title and set their position. Examples below show you how the title will look like.</value>
  </data>
  <data name="lblPreview.HelpText" xml:space="preserve">
    <value>Page title preview when article is open:</value>
  </data>
  <data name="lblPreview.Text" xml:space="preserve">
    <value>Page title preview when article is open:</value>
  </data>
  <data name="lblTagList.HelpText" xml:space="preserve">
    <value>Page title preview when listing tags:</value>
  </data>
  <data name="lblTagList.Text" xml:space="preserve">
    <value>Page title preview when listing tags:</value>
  </data>
  <data name="SettingsSaved.Text" xml:space="preserve">
    <value>Settings saved.</value>
  </data>
  <data name="lblCustomRoles.Help" xml:space="preserve">
    <value>Possibility to manually select which Security roles will be available in Settings &gt; 1. Permissions. After adding or deleting a role it is necessary to save the settings.</value>
  </data>
  <data name="lblCustomRoles.Text" xml:space="preserve">
    <value>Manually select available Security Roles</value>
  </data>
  <data name="lblNotSelectedRolesTitle.Text" xml:space="preserve">
    <value>Available Security Roles:</value>
  </data>
  <data name="lblPortalRoles.Text" xml:space="preserve">
    <value>Manually select available Security Roles</value>
  </data>
  <data name="lblRoleInfo.Text" xml:space="preserve">
    <value> and Unauthenticated Users are automatically added.</value>
  </data>
  <data name="lblSelectedRoles.Text" xml:space="preserve">
    <value>Selected Security Roles:</value>
  </data>
</root>