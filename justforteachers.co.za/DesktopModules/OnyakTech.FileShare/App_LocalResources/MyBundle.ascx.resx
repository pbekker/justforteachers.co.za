<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System" name="System, Version=1.0.5000.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" />
  <data name="$this.DefaultModifiers" type="System.CodeDom.MemberAttributes, System">
    <value>Private</value>
  </data>
  <assembly alias="mscorlib" name="mscorlib, Version=1.0.5000.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" />
  <data name="$this.TrayLargeIcon" type="System.Boolean, mscorlib">
    <value>False</value>
  </data>
  <data name="$this.TrayAutoArrange" type="System.Boolean, mscorlib">
    <value>True</value>
  </data>
  <data name="NoProductCode.Text" xml:space="preserve">
    <value>Product Code is not valid.  Please contact support to have the produce code setup in the module settings.</value>
  </data>
  <data name="lnkRemoveSelected.Text" xml:space="preserve">
    <value>Remove Selected Files</value>
  </data>
  <data name="lblMySelectedFiles.Text" xml:space="preserve">
    <value>&lt;h1&gt;My File Bundle&lt;/h1&gt;</value>
  </data>
  <data name="lblDoneChoose.Text" xml:space="preserve">
    <value>Done? Choose your Delivery Method Below</value>
  </data>
  <data name="lnkContinueShopping.Text" xml:space="preserve">
    <value>Continue Shopping</value>
  </data>
  <data name="lnkResetDefaultView.Text" xml:space="preserve">
    <value>Reset Display Mode Module Setting to Standard</value>
  </data>
  <data name="Instructions.Text" xml:space="preserve">
    <value />
  </data>
  <data name="MustAccept.Text" xml:space="preserve">
    <value>You must accept the terms listed below by checking "I Accept".</value>
  </data>
  <data name="BrdCrumb.Text" xml:space="preserve">
    <value>     Search Results For: </value>
  </data>
  <data name="CouldNotCreateOrder.Text" xml:space="preserve">
    <value>Sorry, but a File Bunde for you doesn't exist.  Please try again.</value>
  </data>
  <data name="CityRequired.Text" xml:space="preserve">
    <value>&lt;br&gt;City Is Required.</value>
  </data>
  <data name="CountryRequired.Text" xml:space="preserve">
    <value>&lt;br&gt;Country Is Required.</value>
  </data>
  <data name="plCity.Help" xml:space="preserve">
    <value>Enter the City</value>
  </data>
  <data name="plCity.Text" xml:space="preserve">
    <value>City:</value>
  </data>
  <data name="plCountry.Help" xml:space="preserve">
    <value>Enter the Country</value>
  </data>
  <data name="plCountry.Text" xml:space="preserve">
    <value>Country:</value>
  </data>
  <data name="plPostal.Help" xml:space="preserve">
    <value>Enter the Postal Code</value>
  </data>
  <data name="plPostal.Text" xml:space="preserve">
    <value>Postal Code:</value>
  </data>
  <data name="plProvince.Help" xml:space="preserve">
    <value>Select the province from the list</value>
  </data>
  <data name="plProvince.Text" xml:space="preserve">
    <value>Province:</value>
  </data>
  <data name="plRegion.Help" xml:space="preserve">
    <value>Enter the Region</value>
  </data>
  <data name="plRegion.Text" xml:space="preserve">
    <value>Region:</value>
  </data>
  <data name="plState.Help" xml:space="preserve">
    <value>Select the state from the list</value>
  </data>
  <data name="plState.Text" xml:space="preserve">
    <value>State:</value>
  </data>
  <data name="plStreet.Help" xml:space="preserve">
    <value>Enter the Street part of your Address (eg 1 Main Street)</value>
  </data>
  <data name="plStreet.Text" xml:space="preserve">
    <value>Street:</value>
  </data>
  <data name="plUnit.Help" xml:space="preserve">
    <value>Enter the Unit # or Apartment #</value>
  </data>
  <data name="plUnit.Text" xml:space="preserve">
    <value>Unit #:</value>
  </data>
  <data name="plZip.Help" xml:space="preserve">
    <value>Enter the ZIP Code</value>
  </data>
  <data name="plZip.Text" xml:space="preserve">
    <value>ZIP Code:</value>
  </data>
  <data name="PostalRequired.Text" xml:space="preserve">
    <value>&lt;br&gt;Postal Code Is Required.</value>
  </data>
  <data name="ProvinceRequired.Text" xml:space="preserve">
    <value>&lt;br&gt;Province Is Required.</value>
  </data>
  <data name="RegionRequired.Text" xml:space="preserve">
    <value>&lt;br&gt;Region Is Required.</value>
  </data>
  <data name="StateRequired.Text" xml:space="preserve">
    <value>&lt;br&gt;State Is Required.</value>
  </data>
  <data name="StreetRequired.Text" xml:space="preserve">
    <value>&lt;br&gt;Street Is Required.</value>
  </data>
  <data name="TelephoneRequired.Text" xml:space="preserve">
    <value>&lt;br&gt;Telephone Number Is Required.</value>
  </data>
  <data name="Delete.Text" xml:space="preserve">
    <value>Remove</value>
  </data>
  <data name="MissingFilesNotice.Text" xml:space="preserve">
    <value>One or more of the files you selected are missing.  Support was notified, please check back later for an update.  You may continue to download/email the other files.</value>
  </data>
  <data name="NoRecords.Text" xml:space="preserve">
    <value>You have not selected any files to be added to your File Bundle yet</value>
  </data>
  <data name="MustLogIn.Text" xml:space="preserve">
    <value>Please log-in to download your selected files</value>
  </data>
  <data name="lnkCancelText.Text" xml:space="preserve">
    <value>Browse Files</value>
  </data>
  <data name="lnkDownloadAllFiles" xml:space="preserve">
    <value>Download All Files</value>
  </data>
  <data name="lnkEmailFiles.Text" xml:space="preserve">
    <value>Email All Files</value>
  </data>
  <data name="lnkDownloadAllFiles.Text" xml:space="preserve">
    <value>Download All Files</value>
  </data>
  <data name="Of.Text" xml:space="preserve">
    <value> of </value>
  </data>
  <data name="Page.Text" xml:space="preserve">
    <value>Page: </value>
  </data>
  <data name="YourFilesReady.Text" xml:space="preserve">
    <value>Your File Bundle Is Ready For Download</value>
  </data>
</root>