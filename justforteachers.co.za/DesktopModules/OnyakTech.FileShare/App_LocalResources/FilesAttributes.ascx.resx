<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System" name="System, Version=1.0.5000.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" />
  <data name="$this.DefaultModifiers" type="System.CodeDom.MemberAttributes, System">
    <value>Private</value>
  </data>
  <assembly alias="mscorlib" name="mscorlib, Version=1.0.5000.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" />
  <data name="$this.TrayLargeIcon" type="System.Boolean, mscorlib">
    <value>False</value>
  </data>
  <data name="$this.TrayAutoArrange" type="System.Boolean, mscorlib">
    <value>True</value>
  </data>
  <data name="NoAccess.Text" xml:space="preserve">
    <value>You do not have access to edit this files attributes</value>
  </data>
  <data name="CantUseSelected.Text" xml:space="preserve">
    <value>**The selected Category Can Not Be Used**</value>
  </data>
  <data name="chkPremium.Text" xml:space="preserve">
    <value>Priority Listing</value>
  </data>
  <data name="DeleteFile.Text" xml:space="preserve">
    <value>Are you sure you want to delete this File</value>
  </data>
  <data name="DownloadFile.Text" xml:space="preserve">
    <value>Download Attached File</value>
  </data>
  <data name="lblAddUsersSection.Help" xml:space="preserve">
    <value>Leave empty to allow all users (except where you have indicated Roles to secure this group by) or type a user name to add that user to the right to download from this file group</value>
  </data>
  <data name="lblAddUsersSection.Text" xml:space="preserve">
    <value>Authorized Users</value>
  </data>
  <data name="lblArchiveDate.Help" xml:space="preserve">
    <value>Set the date you want this File to expire.</value>
  </data>
  <data name="lblArchiveDate.Text" xml:space="preserve">
    <value>Archive Date</value>
  </data>
  <data name="lblAuthorizedUsers.Text" xml:space="preserve">
    <value>Type User Name to Authorize User</value>
  </data>
  <data name="lblBody.Help" xml:space="preserve">
    <value>Enter the full description of the File</value>
  </data>
  <data name="lblBody.Text" xml:space="preserve">
    <value>File Details</value>
  </data>
  <data name="lblCategories.Help" xml:space="preserve">
    <value>Select the category this file will belong in</value>
  </data>
  <data name="lblCategories.Text" xml:space="preserve">
    <value>Categories</value>
  </data>
  <data name="lblKeyWords.Help" xml:space="preserve">
    <value>Enter key words for this File seperated by a comma.  Example:  Module,OnyakTech,News,</value>
  </data>
  <data name="lblKeyWords.Text" xml:space="preserve">
    <value>Key Words</value>
  </data>
  <data name="lblPortals.Text" xml:space="preserve">
    <value>Portal Specific</value>
  </data>
  <data name="lblPublishedDate.Help" xml:space="preserve">
    <value>Use this value to set the date this file will become visible to people</value>
  </data>
  <data name="lblPublishedDate.Text" xml:space="preserve">
    <value>Published Date</value>
  </data>
  <data name="lblRoles.Help" xml:space="preserve">
    <value>If you want this File to be visible only to specific roles, select the roles from this list.</value>
  </data>
  <data name="lblRoles.Text" xml:space="preserve">
    <value>Role Specific</value>
  </data>
  <data name="lblSecureRoles.Text" xml:space="preserve">
    <value>Security Roles - Leave All Unchecked to Allow All Access</value>
  </data>
  <data name="lblSummary.Help" xml:space="preserve">
    <value>Enter a summary for your file</value>
  </data>
  <data name="lblSummary.Text" xml:space="preserve">
    <value>Summary</value>
  </data>
  <data name="lblTitle.Help" xml:space="preserve">
    <value>Enter the title for your files</value>
  </data>
  <data name="lblTitle.Text" xml:space="preserve">
    <value>Title</value>
  </data>
  <data name="lnkAddUser.Text" xml:space="preserve">
    <value>Add User</value>
  </data>
  <data name="lnkApprove.Text" xml:space="preserve">
    <value>Approve &amp; Publish</value>
  </data>
  <data name="lnkCancel.Text" xml:space="preserve">
    <value>Go Back to File Group Details</value>
  </data>
  <data name="lnkClearUsers.Text" xml:space="preserve">
    <value>Clear Users - Allow All</value>
  </data>
  <data name="lnkDelete.Text" xml:space="preserve">
    <value>Delete</value>
  </data>
  <data name="lnkSubmitFile.Text" xml:space="preserve">
    <value>Submit</value>
  </data>
  <data name="lnkUpdate.Text" xml:space="preserve">
    <value>Update File</value>
  </data>
  <data name="MustAddCats.Text" xml:space="preserve">
    <value>You must add categories before you can upload files.  Click on "Edit Categories" in the module menu.</value>
  </data>
  <data name="MustEnterUserName.Text" xml:space="preserve">
    <value>You must enter the user name of the person you want to give access .</value>
  </data>
  <data name="PortalRoles.Text" xml:space="preserve">
    <value>Roles</value>
  </data>
  <data name="Portals.Text" xml:space="preserve">
    <value>Portals</value>
  </data>
  <data name="RemoveFile.Text" xml:space="preserve">
    <value> </value>
  </data>
  <data name="TopCategory.Text" xml:space="preserve">
    <value>Categories</value>
  </data>
  <data name="TryAgain.Text" xml:space="preserve">
    <value>Could not upload file.  Please try again.</value>
  </data>
  <data name="Updated.Text" xml:space="preserve">
    <value>File Updated Successfully</value>
  </data>
  <data name="Upload.Text" xml:space="preserve">
    <value>Attach File</value>
  </data>
  <data name="UserAdded.Text" xml:space="preserve">
    <value>User has been authorized to this File</value>
  </data>
  <data name="UserNotFound.Text" xml:space="preserve">
    <value>User was not found, please try again.</value>
  </data>
  <data name="UsersCleared.Text" xml:space="preserve">
    <value>Users for this file have been cleared. All users may now access this file unless secured by Roles you have selected.</value>
  </data>
  <data name="FileName.Text" xml:space="preserve">
    <value>File Attributes For: </value>
  </data>
</root>