-- make sure sql rolls back automatically in case of error.
SET XACT_ABORT ON

BEGIN TRANSACTION SexyContentUpdate;


EXEC ('
-- Create Table [ToSIC_EAV_Dimensions]
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON

CREATE TABLE [dbo].[ToSIC_EAV_Dimensions](
	[DimensionID] [int] IDENTITY(1,1) NOT NULL,
	[Parent] [int] NULL,
	[Name] [nvarchar](100) NOT NULL,
	[SystemKey] [nvarchar](100) NULL,
	[ExternalKey] [nvarchar](100) NULL,
 CONSTRAINT [PK_ToSIC_EAV_Dimensions] PRIMARY KEY CLUSTERED 
(
	[DimensionID] ASC
) ON [PRIMARY]
) ON [PRIMARY]



-- Create Table [ToSIC_EAV_ValuesDimensions]
CREATE TABLE [dbo].[ToSIC_EAV_ValuesDimensions](
	[ValueID] [int] NOT NULL,
	[DimensionID] [int] NOT NULL,
 CONSTRAINT [PK_ToSIC_EAV_ValuesDimensions] PRIMARY KEY CLUSTERED 
(
	[ValueID] ASC,
	[DimensionID] ASC
) ON [PRIMARY]
) ON [PRIMARY]



-- Create CONSTRAINTs
ALTER TABLE [dbo].[ToSIC_EAV_ValuesDimensions]  WITH CHECK ADD  CONSTRAINT [FK_ToSIC_EAV_ValuesDimensions_ToSIC_EAV_Dimensions] FOREIGN KEY([DimensionID])
REFERENCES [dbo].[ToSIC_EAV_Dimensions] ([DimensionID])');


EXEC ('ALTER TABLE [dbo].[ToSIC_EAV_ValuesDimensions] CHECK CONSTRAINT [FK_ToSIC_EAV_ValuesDimensions_ToSIC_EAV_Dimensions]');

EXEC ('ALTER TABLE [dbo].[ToSIC_EAV_ValuesDimensions]  WITH CHECK ADD  CONSTRAINT [FK_ToSIC_EAV_ValuesDimensions_ToSIC_EAV_Values] FOREIGN KEY([ValueID])
REFERENCES [dbo].[ToSIC_EAV_Values] ([ValueID])');

EXEC('ALTER TABLE [dbo].[ToSIC_EAV_ValuesDimensions] CHECK CONSTRAINT [FK_ToSIC_EAV_ValuesDimensions_ToSIC_EAV_Values]');


EXEC('
ALTER TABLE dbo.ToSIC_EAV_Dimensions ADD CONSTRAINT
	FK_ToSIC_EAV_Dimensions_ToSIC_EAV_Dimensions1 FOREIGN KEY
	(
	Parent
	) REFERENCES dbo.ToSIC_EAV_Dimensions
	(
	DimensionID
	) ON UPDATE  NO ACTION 
	 ON DELETE  NO ACTION 


-- Delete old Values
DELETE FROM ToSIC_EAV_Values WHERE IsCurrent = 0


-- Remove Column IsCurrent
ALTER TABLE dbo.ToSIC_EAV_Values
	DROP CONSTRAINT DF_ToSIC_EAV_Values_IsCurrent
ALTER TABLE dbo.ToSIC_EAV_Values
	DROP COLUMN IsCurrent


-- Populate Table Dimensions with Cultures
SET IDENTITY_INSERT ToSIC_EAV_Dimensions ON
INSERT INTO ToSIC_EAV_Dimensions (DimensionID, Name, SystemKey) VALUES (1, ''Culture Root'', ''Culture'')
SET IDENTITY_INSERT ToSIC_EAV_Dimensions OFF

-- Extend ValuesDimensions with ReadOnly
ALTER TABLE dbo.ToSIC_EAV_ValuesDimensions ADD
	[ReadOnly] bit NOT NULL CONSTRAINT DF_ToSIC_EAV_ValuesDimensions_ReadOnly DEFAULT 0');


EXEC('ALTER TABLE dbo.ToSIC_EAV_ValuesDimensions SET (LOCK_ESCALATION = TABLE)


-- Add Colum ChangeLogModified
ALTER TABLE dbo.ToSIC_EAV_Values ADD
	ChangeLogModified int NULL');


EXEC('ALTER TABLE dbo.ToSIC_EAV_Values ADD CONSTRAINT
FK_ToSIC_EAV_Values_ToSIC_EAV_ChangeLogModified FOREIGN KEY
(
	ChangeLogModified
) REFERENCES dbo.ToSIC_EAV_ChangeLog
(
	ChangeID
) ON UPDATE  NO ACTION 
	ON DELETE  NO ACTION 


-- Add Column Active
ALTER TABLE dbo.ToSIC_EAV_Dimensions ADD
	Active bit NOT NULL CONSTRAINT DF_ToSIC_EAV_Dimensions_Active DEFAULT 1




-- Apps and Zones -----------------------------------------------------------------

SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON

-- Create Table [ToSIC_EAV_Apps]

CREATE TABLE [dbo].[ToSIC_EAV_Apps](
	[AppID] [int] IDENTITY(1,1) NOT NULL,
	[ZoneID] [int] NOT NULL,
	[Name] [nvarchar](255) NOT NULL,
 CONSTRAINT [PK_ToSIC_EAV_Apps] PRIMARY KEY CLUSTERED 
(
	[AppID] ASC
) ON [PRIMARY]
) ON [PRIMARY]


-- Create Table [ToSIC_EAV_Zones]
CREATE TABLE [dbo].[ToSIC_EAV_Zones](
	[ZoneID] [int] IDENTITY(1,1) NOT NULL,
	[Name] [nvarchar](255) NOT NULL,
 CONSTRAINT [PK_ToSIC_EAV_Zones] PRIMARY KEY CLUSTERED 
(
	[ZoneID] ASC
) ON [PRIMARY]
) ON [PRIMARY]


-- Add AppID to AttributeSets
ALTER TABLE dbo.ToSIC_EAV_AttributeSets ADD
	AppID int NULL

-- Add ZoneID to Dimensions
ALTER TABLE dbo.ToSIC_EAV_Dimensions ADD
	ZoneID int NULL


-- Create CONSTRAINTs
ALTER TABLE [dbo].[ToSIC_EAV_Apps]  WITH CHECK ADD  CONSTRAINT [FK_ToSIC_EAV_Apps_ToSIC_EAV_Zones] FOREIGN KEY([ZoneID])
REFERENCES [dbo].[ToSIC_EAV_Zones] ([ZoneID])


ALTER TABLE [dbo].[ToSIC_EAV_Apps] CHECK CONSTRAINT [FK_ToSIC_EAV_Apps_ToSIC_EAV_Zones]


ALTER TABLE dbo.ToSIC_EAV_AttributeSets ADD CONSTRAINT
	FK_ToSIC_EAV_AttributeSets_ToSIC_EAV_Apps FOREIGN KEY
	(
	AppID
	) REFERENCES dbo.ToSIC_EAV_Apps
	(
	AppID
	) ON UPDATE  NO ACTION 
	 ON DELETE  NO ACTION 


ALTER TABLE dbo.ToSIC_EAV_Dimensions ADD CONSTRAINT
	FK_ToSIC_EAV_Dimensions_ToSIC_EAV_Zones FOREIGN KEY
	(
	ZoneID
	) REFERENCES dbo.ToSIC_EAV_Zones
	(
	ZoneID
	) ON UPDATE  NO ACTION 
	 ON DELETE  NO ACTION 


-- Create Default Zone
SET IDENTITY_INSERT [ToSIC_EAV_Zones] ON
INSERT INTO [dbo].[ToSIC_EAV_Zones] ([ZoneID], [Name]) VALUES (1, ''Default'')
SET IDENTITY_INSERT [ToSIC_EAV_Zones] OFF

-- Create Default App
SET IDENTITY_INSERT [ToSIC_EAV_Apps] ON
INSERT INTO [dbo].[ToSIC_EAV_Apps] ([AppID], [ZoneID], [Name]) VALUES (1, 1, ''Default'')
SET IDENTITY_INSERT [ToSIC_EAV_Apps] OFF');

EXEC('
-- Assign all AttributeSets the Default App
UPDATE ToSIC_EAV_AttributeSets SET AppID = 1 WHERE AppID IS NULL

-- Make AppID required
ALTER TABLE ToSIC_EAV_AttributeSets
	ALTER COLUMN AppID int NOT NULL

-- Assign all Dimensions the Default Zone
UPDATE ToSIC_EAV_Dimensions SET ZoneID = 1 WHERE ZoneID IS NULL

-- Make ZoneID required
ALTER TABLE ToSIC_EAV_Dimensions
	ALTER COLUMN ZoneID int NOT NULL



-- Assign all existing portals using 2sexycontent to Zone 1
-- Select all Portals using 2SexyContent
INSERT INTO PortalSettings (PortalID, SettingName, SettingValue, CreatedByUserID, CreatedOnDate, LastModifiedByUserID, LastModifiedOnDate, CultureCode)
SELECT DISTINCT Portals.PortalID, ''ToSIC_SexyContent_ZoneID'', ''1'', -1, GETDATE(), -1, GETDATE(), ''en-us''
FROM            Modules INNER JOIN
                         TabModules ON Modules.ModuleID = TabModules.ModuleID INNER JOIN
                         ModuleDefinitions INNER JOIN
                         DesktopModules ON ModuleDefinitions.DesktopModuleID = DesktopModules.DesktopModuleID ON 
                         Modules.ModuleDefID = ModuleDefinitions.ModuleDefID INNER JOIN
                         Tabs ON TabModules.TabID = Tabs.TabID INNER JOIN
                         Portals ON Tabs.PortalID = Portals.PortalID
WHERE        (DesktopModules.ModuleName = N''2SexyContent'') AND
                             ((SELECT COUNT(*) FROM PortalSettings
							 WHERE (SettingName = N''ToSIC_SexyContent_ZoneID'') AND (PortalID = Portals.PortalID)) = 0)');


--SELECT * FROM PortalSettings WHERE SettingName = N''ToSIC_SexyContent_ZoneID'';');

-- Commit the transaction
COMMIT TRANSACTION SexyContentUpdate;