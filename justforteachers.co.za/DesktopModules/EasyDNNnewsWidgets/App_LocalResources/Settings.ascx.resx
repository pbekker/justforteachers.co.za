<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="lblIsSocialInstance.Help" xml:space="preserve">
    <value>Displays user's and group's articles on the Activity feed. The articles are filtered by the UserID or GroupID querystring. If this option is enabled and the querystring UserID or GroupID is missing, then the articles won't show up.</value>
  </data>
  <data name="lblIsSocialInstance.Text" xml:space="preserve">
    <value>Community mode:</value>
  </data>
  <data name="lblPermissionSource.Help" xml:space="preserve">
    <value>Category menu will inherite permission from selected value. Only allowed categories will show in menu.</value>
  </data>
  <data name="lblPermissionSource.Text" xml:space="preserve">
    <value>Select permission source:</value>
  </data>
  <data name="lblSelectViewControl.Help" xml:space="preserve">
    <value>Select advanced control for viewing news module items.</value>
  </data>
  <data name="lblSelectViewControl.Text" xml:space="preserve">
    <value>Select widget:</value>
  </data>
  <data name="liTreeview.Text" xml:space="preserve">
    <value>Tree view menu</value>
  </data>
  <data name="SettingsTitle.Text" xml:space="preserve">
    <value>Widgets settings</value>
  </data>
  <data name="cvThemeSelect.ErrorMessage" xml:space="preserve">
    <value>Please select theme</value>
  </data>
  <data name="lblDisplayHeader.Help" xml:space="preserve">
    <value>Display header.</value>
  </data>
  <data name="lblDisplayHeader.Text" xml:space="preserve">
    <value>Display header:</value>
  </data>
  <data name="lblExpandAllCategories.Help" xml:space="preserve">
    <value>Expand (open) all items.</value>
  </data>
  <data name="lblExpandAllCategories.Text" xml:space="preserve">
    <value>Expand all:</value>
  </data>
  <data name="lblnodeExpandToLevel.Help" xml:space="preserve">
    <value>Expand (open) nodes to some level.</value>
  </data>
  <data name="lblnodeExpandToLevel.Text" xml:space="preserve">
    <value>Expand to level:</value>
  </data>
  <data name="lblPassAuthorUserID.Help" xml:space="preserve">
    <value>Pass author userid in query string.</value>
  </data>
  <data name="lblPassAuthorUserID.Text" xml:space="preserve">
    <value>Pass author userid in query string:</value>
  </data>
  <data name="lblPortalSharing.Help" xml:space="preserve">
    <value>Select data source portal.</value>
  </data>
  <data name="lblPortalSharing.Text" xml:space="preserve">
    <value>Select portal:</value>
  </data>
  <data name="lblSelectModule.Help" xml:space="preserve">
    <value>Select news module instance to open articles.</value>
  </data>
  <data name="lblSelectModule.Text" xml:space="preserve">
    <value>Select module to display results:</value>
  </data>
  <data name="lblShowArticles.Help" xml:space="preserve">
    <value>Show articles under category.</value>
  </data>
  <data name="lblShowArticles.Text" xml:space="preserve">
    <value>Show articles:</value>
  </data>
  <data name="lblTheme.Help" xml:space="preserve">
    <value>Select theme.</value>
  </data>
  <data name="lblTheme.Text" xml:space="preserve">
    <value>Theme:</value>
  </data>
  <data name="lblThemeStyle.Help" xml:space="preserve">
    <value>Select display style.</value>
  </data>
  <data name="lblThemeStyle.Text" xml:space="preserve">
    <value>Theme style:</value>
  </data>
  <data name="liCurrentportal.Text" xml:space="preserve">
    <value>Current portal</value>
  </data>
  <data name="liModule.Text" xml:space="preserve">
    <value>Module</value>
  </data>
  <data name="liNone.Text" xml:space="preserve">
    <value>None</value>
  </data>
  <data name="liPortal.Text" xml:space="preserve">
    <value>Portal</value>
  </data>
  <data name="Menuspecificoptions.Text" xml:space="preserve">
    <value>Menu specific options</value>
  </data>
  <data name="Permissions.Text" xml:space="preserve">
    <value>Permissions:</value>
  </data>
  <data name="Portalsharing.Text" xml:space="preserve">
    <value>Portal sharing:</value>
  </data>
  <data name="Theme.Text" xml:space="preserve">
    <value>Theme:</value>
  </data>
  <data name="btnCancel.Text" xml:space="preserve">
    <value>Close</value>
  </data>
  <data name="btnSaveClose.Text" xml:space="preserve">
    <value>Save &amp; Close</value>
  </data>
  <data name="btnSaveSettings.Text" xml:space="preserve">
    <value>Save</value>
  </data>
  <data name="cbAutoAddCatChilds.Text" xml:space="preserve">
    <value>Auto select all child categories.</value>
  </data>
  <data name="cbdisplayallcats.Text" xml:space="preserve">
    <value>Display all categories and subcategories</value>
  </data>
  <data name="cvAuthorsTreeview.ErrorMessage" xml:space="preserve">
    <value>Please select at least one author.</value>
  </data>
  <data name="cvCategoriesTreeview.ErrorMessage" xml:space="preserve">
    <value>Please select at least one category.</value>
  </data>
  <data name="Filter.Text" xml:space="preserve">
    <value>Filter:</value>
  </data>
  <data name="lblAuthorFilter.Help" xml:space="preserve">
    <value>Filter by author.</value>
  </data>
  <data name="lblAuthorFilter.Text" xml:space="preserve">
    <value>All Authors:</value>
  </data>
  <data name="lblCelectCats.Help" xml:space="preserve">
    <value>Show all categories or make category selection in the tree view selection list.</value>
  </data>
  <data name="lblCelectCats.Text" xml:space="preserve">
    <value>Select categories to display:</value>
  </data>
  <data name="lblHideUnlocalizedItems.Help" xml:space="preserve">
    <value>Articles that do not have content for selected language won't be shown. For example on the sites with three different languages: English (default), German and Italian. Article is localized to Italian language. When selecting German language article won’t be visible because there is no localization. Article will only be shown on Italian and English language which is default. 
Hint: You can also turn off displaying languages on the default language. For articles that you do not want to show on the default language you need to go to Edit article &gt; Content localization and Turn on option “Do not show articles on the default language”.</value>
  </data>
  <data name="lblHideUnlocalizedItems.Text" xml:space="preserve">
    <value>Do not show articles if they do not have content for selected language:</value>
  </data>
  <data name="LocalizationText.Text" xml:space="preserve">
    <value>Localization:</value>
  </data>
  <data name="liFiltering.Text" xml:space="preserve">
    <value>Filter menu</value>
  </data>
</root>